Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    BOOLE
    COMILLAS
    ENDIF
    FALSE
    IGUAL_IGUAL
    INTEGER_TXT
    NEGACION
    POTENCIA
    START
    TRUE

Grammar

Rule 0     S' -> Start
Rule 1     Start -> COMMENT cuerpo
Rule 2     cuerpo -> variable
Rule 3     cuerpo -> procedimiento
Rule 4     cuerpo -> main
Rule 5     cuerpo -> COMMENT cuerpo
Rule 6     cuerpo -> Put
Rule 7     cuerpo -> Put2
Rule 8     cuerpo2 -> variablexd
Rule 9     cuerpo2 -> COMMENT cuerpo2
Rule 10    cuerpo2 -> expresion
Rule 11    cuerpo2 -> llamadoproc
Rule 12    cuerpo2 -> empty
Rule 13    cuerpo2 -> Put2
Rule 14    cuerpo2 -> Put
Rule 15    cuerpo3 -> variablexdd
Rule 16    cuerpo3 -> COMMENT cuerpo3
Rule 17    cuerpo3 -> expresion
Rule 18    cuerpo3 -> funcion
Rule 19    cuerpo3 -> empty
Rule 20    cuerpo3 -> Put
Rule 21    cuerpo3 -> Put2
Rule 22    id -> ID
Rule 23    procedimiento -> PARA id BRACKET1 empty BRACKET2 cuerpo2 FIN cuerpo
Rule 24    procedimiento -> PARA id BRACKET1 parametro BRACKET2 cuerpo2 FIN cuerpo
Rule 25    llamadoproc -> PARA id BRACKET1 parametro BRACKET2 PUNTOCOMA
Rule 26    main -> MAIN BRACKET1 BRACKET2 cuerpo3 FIN cuerpo
Rule 27    variable -> variable1 cuerpo
Rule 28    variable -> variable2 cuerpo
Rule 29    variable -> empty empty
Rule 30    variablexd -> variable1 cuerpo2
Rule 31    variablexd -> variable2 cuerpo2
Rule 32    variablexd -> empty empty
Rule 33    variablexdd -> variable1 cuerpo3
Rule 34    variablexdd -> variable2 cuerpo3
Rule 35    variablexdd -> empty empty
Rule 36    variable1 -> DEF VAR PUNTOCOMA
Rule 37    variable2 -> DEF VAR IGUAL NUMERO PUNTOCOMA
Rule 38    expresion -> funcion expresion
Rule 39    expresion -> expresion_alge1 expresion
Rule 40    expresion -> expresion_alge2 expresion
Rule 41    expresion -> Sum expresion
Rule 42    expresion -> Substr expresion
Rule 43    expresion -> Mult expresion
Rule 44    expresion -> Div expresion
Rule 45    expresion -> funcion empty
Rule 46    expresion -> expresion_alge1 empty
Rule 47    expresion -> expresion_alge2 empty
Rule 48    expresion -> Sum empty
Rule 49    expresion -> Substr empty
Rule 50    expresion -> Mult empty
Rule 51    expresion -> Div empty
Rule 52    expresion -> empty empty
Rule 53    ordenes -> Beginning empty
Rule 54    ordenes -> ContinueUp empty
Rule 55    ordenes -> ContinueDown empty
Rule 56    ordenes -> ContinueRight empty
Rule 57    ordenes -> ContinueLeft empty
Rule 58    ordenes -> Up empty
Rule 59    ordenes -> Down empty
Rule 60    ordenes -> Speed empty
Rule 61    ordenes -> Pos empty
Rule 62    ordenes -> PosX empty
Rule 63    ordenes -> PosY empty
Rule 64    ordenes -> UseColor empty
Rule 65    ordenes -> PUNTOCOMA ordenes
Rule 66    ordenes -> empty empty
Rule 67    funcion -> Random empty
Rule 68    funcion -> Run empty
Rule 69    funcion -> If empty
Rule 70    funcion -> IfElse empty
Rule 71    funcion -> Repeat empty
Rule 72    funcion -> Until empty
Rule 73    funcion -> While empty
Rule 74    funcion -> PrintLine empty
Rule 75    funcion -> And empty
Rule 76    funcion -> Or empty
Rule 77    funcion -> Add empty
Rule 78    funcion -> Put2 empty
Rule 79    funcion -> Put empty
Rule 80    funcion -> PUNTOCOMA funcion
Rule 81    funcion -> empty empty
Rule 82    Put -> PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA
Rule 83    Put2 -> PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
Rule 84    Put2 -> PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
Rule 85    Put2 -> PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
Rule 86    Put2 -> PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA
Rule 87    condicion -> Equal
Rule 88    condicion -> Greater
Rule 89    condicion -> Smaller
Rule 90    expresion_alge1 -> NUMERO SUMA NUMERO
Rule 91    expresion_alge1 -> NUMERO RESTA NUMERO
Rule 92    expresion_alge1 -> NUMERO MULTI NUMERO
Rule 93    expresion_alge1 -> NUMERO DIVISION NUMERO
Rule 94    expresion_alge1 -> NUMERO EXPONENTE NUMERO
Rule 95    expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
Rule 96    expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
Rule 97    expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
Rule 98    expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
Rule 99    expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P EXPONENTE ABRE_P expresion_alge1 CIERRA_P
Rule 100   Sum -> SUM ABRE_P NUMERO COMA NUMERO CIERRA_P
Rule 101   Sum -> SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
Rule 102   Sum -> SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
Rule 103   Sum -> SUM ABRE_P NUMERO COMA Var CIERRA_P
Rule 104   Sum -> SUM ABRE_P Var COMA NUMERO CIERRA_P
Rule 105   Sum -> SUM ABRE_P Var COMA Var CIERRA_P
Rule 106   Sum -> SUM ABRE_P expresion_alge1 COMA Var CIERRA_P
Rule 107   Sum -> SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
Rule 108   Sum -> SUM ABRE_P Var COMA expresion_alge1 CIERRA_P
Rule 109   Substr -> SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P
Rule 110   Substr -> SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
Rule 111   Substr -> SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
Rule 112   Substr -> SUBSTR ABRE_P NUMERO COMA Var CIERRA_P
Rule 113   Substr -> SUBSTR ABRE_P Var COMA NUMERO CIERRA_P
Rule 114   Substr -> SUBSTR ABRE_P Var COMA Var CIERRA_P
Rule 115   Substr -> SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P
Rule 116   Substr -> SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
Rule 117   Substr -> SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P
Rule 118   Mult -> MULTI ABRE_P NUMERO COMA NUMERO CIERRA_P
Rule 119   Mult -> MULTI ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
Rule 120   Mult -> MULTI ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
Rule 121   Mult -> MULTI ABRE_P NUMERO COMA Var CIERRA_P
Rule 122   Mult -> MULTI ABRE_P Var COMA NUMERO CIERRA_P
Rule 123   Mult -> MULTI ABRE_P Var COMA Var CIERRA_P
Rule 124   Mult -> MULTI ABRE_P expresion_alge1 COMA Var CIERRA_P
Rule 125   Mult -> MULTI ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
Rule 126   Mult -> MULTI ABRE_P Var COMA expresion_alge1 CIERRA_P
Rule 127   Div -> DIV ABRE_P NUMERO COMA NUMERO CIERRA_P
Rule 128   Div -> DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
Rule 129   Div -> DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
Rule 130   Div -> DIV ABRE_P NUMERO COMA Var CIERRA_P
Rule 131   Div -> DIV ABRE_P Var COMA NUMERO CIERRA_P
Rule 132   Div -> DIV ABRE_P Var COMA Var CIERRA_P
Rule 133   Div -> DIV ABRE_P expresion_alge1 COMA Var CIERRA_P
Rule 134   Div -> DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
Rule 135   Div -> DIV ABRE_P Var COMA expresion_alge1 CIERRA_P
Rule 136   Var -> VAR
Rule 137   Equal -> EQUAL ABRE_P NUMERO COMA NUMERO CIERRA_P PUNTOCOMA
Rule 138   Equal -> EQUAL ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA
Rule 139   Equal -> EQUAL ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA
Rule 140   Equal -> EQUAL ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
Rule 141   Equal -> EQUAL ABRE_P NUMERO COMA Var CIERRA_P PUNTOCOMA
Rule 142   Equal -> EQUAL ABRE_P expresion_alge2 COMA Var CIERRA_P PUNTOCOMA
Rule 143   Equal -> EQUAL ABRE_P expresion_alge1 COMA Var CIERRA_P PUNTOCOMA
Rule 144   Equal -> EQUAL ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
Rule 145   Equal -> EQUAL ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
Rule 146   Equal -> EQUAL ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA
Rule 147   Equal -> EQUAL ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA
Rule 148   Equal -> EQUAL ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA
Rule 149   Equal -> EQUAL ABRE_P expresion_alge1 COMA NUMERO CIERRA_P PUNTOCOMA
Rule 150   Equal -> EQUAL ABRE_P expresion_alge2 COMA NUMERO CIERRA_P PUNTOCOMA
Rule 151   Equal -> EQUAL ABRE_P NUMERO COMA expresion_alge1 CIERRA_P PUNTOCOMA
Rule 152   Equal -> EQUAL ABRE_P NUMERO COMA expresion_alge2 CIERRA_P PUNTOCOMA
Rule 153   Greater -> GREATER ABRE_P NUMERO COMA NUMERO CIERRA_P PUNTOCOMA
Rule 154   Greater -> GREATER ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA
Rule 155   Greater -> GREATER ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA
Rule 156   Greater -> GREATER ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
Rule 157   Greater -> GREATER ABRE_P NUMERO COMA Var CIERRA_P PUNTOCOMA
Rule 158   Greater -> GREATER ABRE_P expresion_alge2 COMA Var CIERRA_P PUNTOCOMA
Rule 159   Greater -> GREATER ABRE_P expresion_alge1 COMA Var CIERRA_P PUNTOCOMA
Rule 160   Greater -> GREATER ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
Rule 161   Greater -> GREATER ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
Rule 162   Greater -> GREATER ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA
Rule 163   Greater -> GREATER ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA
Rule 164   Greater -> GREATER ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA
Rule 165   Greater -> GREATER ABRE_P expresion_alge1 COMA NUMERO CIERRA_P PUNTOCOMA
Rule 166   Greater -> GREATER ABRE_P expresion_alge2 COMA NUMERO CIERRA_P PUNTOCOMA
Rule 167   Greater -> GREATER ABRE_P NUMERO COMA expresion_alge1 CIERRA_P PUNTOCOMA
Rule 168   Greater -> GREATER ABRE_P NUMERO COMA expresion_alge2 CIERRA_P PUNTOCOMA
Rule 169   Smaller -> SMALLER ABRE_P NUMERO COMA NUMERO CIERRA_P PUNTOCOMA
Rule 170   Smaller -> SMALLER ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA
Rule 171   Smaller -> SMALLER ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA
Rule 172   Smaller -> SMALLER ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
Rule 173   Smaller -> SMALLER ABRE_P NUMERO COMA Var CIERRA_P PUNTOCOMA
Rule 174   Smaller -> SMALLER ABRE_P expresion_alge2 COMA Var CIERRA_P PUNTOCOMA
Rule 175   Smaller -> SMALLER ABRE_P expresion_alge1 COMA Var CIERRA_P PUNTOCOMA
Rule 176   Smaller -> SMALLER ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
Rule 177   Smaller -> SMALLER ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
Rule 178   Smaller -> SMALLER ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA
Rule 179   Smaller -> SMALLER ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA
Rule 180   Smaller -> SMALLER ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA
Rule 181   Smaller -> SMALLER ABRE_P expresion_alge1 COMA NUMERO CIERRA_P PUNTOCOMA
Rule 182   Smaller -> SMALLER ABRE_P expresion_alge2 COMA NUMERO CIERRA_P PUNTOCOMA
Rule 183   Smaller -> SMALLER ABRE_P NUMERO COMA expresion_alge1 CIERRA_P PUNTOCOMA
Rule 184   Smaller -> SMALLER ABRE_P NUMERO COMA expresion_alge2 CIERRA_P PUNTOCOMA
Rule 185   And -> AND ABRE_P expresion COMA expresion CIERRA_P PUNTOCOMA
Rule 186   Or -> OR ABRE_P expresion COMA expresion CIERRA_P PUNTOCOMA
Rule 187   If -> IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2
Rule 188   IfElse -> IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2
Rule 189   While -> WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2
Rule 190   Repeat -> REPEAT NUMERO BRACKET1 ordenes BRACKET2
Rule 191   Until -> UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2
Rule 192   Add -> ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA
Rule 193   Add -> ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
Rule 194   Add -> ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
Rule 195   Add -> ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
Rule 196   Add -> ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA
Rule 197   parametro -> Var COMA parametro
Rule 198   parametro -> Var empty empty
Rule 199   parametro -> empty empty empty
Rule 200   Beginning -> BEGINNING PUNTOCOMA
Rule 201   Random -> RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA
Rule 202   ContinueUp -> CONTINUEUP NUMERO PUNTOCOMA
Rule 203   ContinueUp -> CONTINUEUP expresion_alge1 PUNTOCOMA
Rule 204   ContinueUp -> CONTINUEUP expresion_alge2 PUNTOCOMA
Rule 205   ContinueUp -> CONTINUEUP Var PUNTOCOMA
Rule 206   ContinueDown -> CONTINUEDOWN NUMERO PUNTOCOMA
Rule 207   ContinueDown -> CONTINUEDOWN expresion_alge1 PUNTOCOMA
Rule 208   ContinueDown -> CONTINUEDOWN expresion_alge2 PUNTOCOMA
Rule 209   ContinueDown -> CONTINUEDOWN Var PUNTOCOMA
Rule 210   ContinueRight -> CONTINUERIGHT NUMERO PUNTOCOMA
Rule 211   ContinueRight -> CONTINUERIGHT expresion_alge1 PUNTOCOMA
Rule 212   ContinueRight -> CONTINUERIGHT expresion_alge2 PUNTOCOMA
Rule 213   ContinueRight -> CONTINUERIGHT Var PUNTOCOMA
Rule 214   ContinueLeft -> CONTINUELEFT NUMERO PUNTOCOMA
Rule 215   ContinueLeft -> CONTINUELEFT expresion_alge1 PUNTOCOMA
Rule 216   ContinueLeft -> CONTINUELEFT expresion_alge2 PUNTOCOMA
Rule 217   ContinueLeft -> CONTINUELEFT Var PUNTOCOMA
Rule 218   Up -> UP PUNTOCOMA
Rule 219   Down -> DOWN PUNTOCOMA
Rule 220   Speed -> SPEED NUMERO PUNTOCOMA
Rule 221   Pos -> POS ABRE_P NUMERO COMA NUMERO CIERRA_P PUNTOCOMA
Rule 222   Pos -> POS ABRE_P expresion_alge1 COMA NUMERO CIERRA_P PUNTOCOMA
Rule 223   Pos -> POS ABRE_P NUMERO COMA expresion_alge1 CIERRA_P PUNTOCOMA
Rule 224   Pos -> POS ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA
Rule 225   Pos -> POS ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
Rule 226   Pos -> POS ABRE_P NUMERO COMA Var CIERRA_P PUNTOCOMA
Rule 227   Pos -> POS ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
Rule 228   Pos -> POS ABRE_P expresion_alge1 COMA Var CIERRA_P PUNTOCOMA
Rule 229   Pos -> POS ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
Rule 230   PosX -> POSX NUMERO PUNTOCOMA
Rule 231   PosX -> POSX expresion_alge1 PUNTOCOMA
Rule 232   PosX -> POSX expresion_alge2 PUNTOCOMA
Rule 233   PosX -> POSX Var PUNTOCOMA
Rule 234   PosY -> POSY NUMERO PUNTOCOMA
Rule 235   PosY -> POSY expresion_alge1 PUNTOCOMA
Rule 236   PosY -> POSY expresion_alge2 PUNTOCOMA
Rule 237   PosY -> POSY Var PUNTOCOMA
Rule 238   UseColor -> USECOLOR NUMERO PUNTOCOMA
Rule 239   UseColor -> USECOLOR Var PUNTOCOMA
Rule 240   UseColor -> USECOLOR empty PUNTOCOMA
Rule 241   Run -> RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA
Rule 242   exp -> NUMERO COMA exp
Rule 243   exp -> STRING COMA exp
Rule 244   exp -> Var COMA exp
Rule 245   exp -> NUMERO empty empty
Rule 246   exp -> STRING empty empty
Rule 247   exp -> Var empty empty
Rule 248   PrintLine -> PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA
Rule 249   empty -> <empty>

Terminals, with rules where they appear

ABRE_P               : 82 83 84 85 86 95 95 96 96 97 97 98 98 99 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 192 193 194 195 196 201 221 222 223 224 225 226 227 228 229 248
ADD                  : 192 193 194 195 196
AND                  : 185
BEGINNING            : 200
BOOLE                : 
BRACKET1             : 23 24 25 26 187 188 188 189 189 190 191 191 241
BRACKET2             : 23 24 25 26 187 188 188 189 189 190 191 191 241
CIERRA_P             : 82 83 84 85 86 95 95 96 96 97 97 98 98 99 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 192 193 194 195 196 201 221 222 223 224 225 226 227 228 229 248
COMA                 : 82 83 84 85 86 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 193 194 195 196 197 221 222 223 224 225 226 227 228 229 242 243 244
COMILLAS             : 
COMMENT              : 1 5 9 16
CONTINUEDOWN         : 206 207 208 209
CONTINUELEFT         : 214 215 216 217
CONTINUERIGHT        : 210 211 212 213
CONTINUEUP           : 202 203 204 205
DEF                  : 36 37
DIV                  : 98 127 128 129 130 131 132 133 134 135
DIVISION             : 93
DOWN                 : 219
ENDIF                : 
EQUAL                : 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152
EXPONENTE            : 94 99
FALSE                : 
FIN                  : 23 24 26
GREATER              : 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168
ID                   : 22
IF                   : 187
IFELSE               : 188
IGUAL                : 37
IGUAL_IGUAL          : 
INTEGER_TXT          : 
MAIN                 : 26
MULT                 : 97
MULTI                : 92 118 119 120 121 122 123 124 125 126
NEGACION             : 
NUMERO               : 37 83 90 90 91 91 92 92 93 93 94 94 100 100 101 103 104 107 109 109 110 112 113 116 118 118 119 121 122 125 127 127 128 130 131 134 137 137 141 144 149 150 151 152 153 153 157 160 165 166 167 168 169 169 173 176 181 182 183 184 190 193 201 202 206 210 214 220 221 221 222 223 225 226 230 234 238 242 245
OR                   : 186
PARA                 : 23 24 25
POS                  : 221 222 223 224 225 226 227 228 229
POSX                 : 230 231 232 233
POSY                 : 234 235 236 237
POTENCIA             : 
PRINTLINE            : 248
PUNTOCOMA            : 25 36 37 65 80 82 83 84 85 86 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 192 193 194 195 196 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 248
PUT                  : 82 83 84 85 86
RANDOM               : 201
REPEAT               : 190
RESTA                : 91 96
RUN                  : 241
SMALLER              : 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184
SPEED                : 220
START                : 
STRING               : 243 246
SUBSTR               : 109 110 111 112 113 114 115 116 117
SUM                  : 100 101 102 103 104 105 106 107 108
SUMA                 : 90 95
TRUE                 : 
UNTIL                : 191
UP                   : 218
USECOLOR             : 238 239 240
VAR                  : 36 37 82 82 83 84 85 86 136
WHILE                : 189
error                : 

Nonterminals, with rules where they appear

Add                  : 77
And                  : 75
Beginning            : 53
ContinueDown         : 55
ContinueLeft         : 57
ContinueRight        : 56
ContinueUp           : 54
Div                  : 44 51
Down                 : 59
Equal                : 87
Greater              : 88
If                   : 69
IfElse               : 70
Mult                 : 43 50
Or                   : 76
Pos                  : 61
PosX                 : 62
PosY                 : 63
PrintLine            : 74
Put                  : 6 14 20 79
Put2                 : 7 13 21 78
Random               : 67
Repeat               : 71
Run                  : 68
Smaller              : 89
Speed                : 60
Start                : 0
Substr               : 42 49
Sum                  : 41 48
Until                : 72
Up                   : 58
UseColor             : 64
Var                  : 103 104 105 105 106 108 112 113 114 114 115 117 121 122 123 123 124 126 130 131 132 132 133 135 140 140 141 142 143 144 145 146 156 156 157 158 159 160 161 162 172 172 173 174 175 176 177 178 192 193 194 195 195 196 197 198 205 209 213 217 225 226 227 227 228 229 233 237 239 244 247
While                : 73
condicion            : 187 188 189 191
cuerpo               : 1 5 23 24 26 27 28
cuerpo2              : 9 23 24 30 31
cuerpo3              : 16 26 33 34
empty                : 12 19 23 29 29 32 32 35 35 45 46 47 48 49 50 51 52 52 53 54 55 56 57 58 59 60 61 62 63 64 66 66 67 68 69 70 71 72 73 74 75 76 77 78 79 81 81 192 192 198 198 199 199 199 240 245 245 246 246 247 247
exp                  : 242 243 244 248
expresion            : 10 17 38 39 40 41 42 43 44 185 185 186 186
expresion_alge1      : 39 46 84 95 95 96 96 97 97 98 98 99 99 101 102 102 106 107 108 110 111 111 115 116 117 119 120 120 124 125 126 128 129 129 133 134 135 138 138 143 145 147 148 149 151 154 154 159 161 163 164 165 167 170 170 175 177 179 180 181 183 194 203 207 211 215 222 223 224 224 228 229 231 235
expresion_alge2      : 40 47 85 139 139 142 146 147 148 150 152 155 155 158 162 163 164 166 168 171 171 174 178 179 180 182 184 196 204 208 212 216 232 236
funcion              : 18 38 45 80 86 187 188 188 189 191
id                   : 23 24 25
llamadoproc          : 11
main                 : 4
ordenes              : 65 190 241
parametro            : 24 25 197
procedimiento        : 3
variable             : 2
variable1            : 27 30 33
variable2            : 28 31 34
variablexd           : 8
variablexdd          : 15

Parsing method: LALR

state 0

    (0) S' -> . Start
    (1) Start -> . COMMENT cuerpo

    COMMENT         shift and go to state 2

    Start                          shift and go to state 1

state 1

    (0) S' -> Start .



state 2

    (1) Start -> COMMENT . cuerpo
    (2) cuerpo -> . variable
    (3) cuerpo -> . procedimiento
    (4) cuerpo -> . main
    (5) cuerpo -> . COMMENT cuerpo
    (6) cuerpo -> . Put
    (7) cuerpo -> . Put2
    (27) variable -> . variable1 cuerpo
    (28) variable -> . variable2 cuerpo
    (29) variable -> . empty empty
    (23) procedimiento -> . PARA id BRACKET1 empty BRACKET2 cuerpo2 FIN cuerpo
    (24) procedimiento -> . PARA id BRACKET1 parametro BRACKET2 cuerpo2 FIN cuerpo
    (26) main -> . MAIN BRACKET1 BRACKET2 cuerpo3 FIN cuerpo
    (82) Put -> . PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA
    (83) Put2 -> . PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (84) Put2 -> . PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (85) Put2 -> . PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (86) Put2 -> . PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA
    (36) variable1 -> . DEF VAR PUNTOCOMA
    (37) variable2 -> . DEF VAR IGUAL NUMERO PUNTOCOMA
    (249) empty -> .

    COMMENT         shift and go to state 3
    PARA            shift and go to state 13
    MAIN            shift and go to state 14
    PUT             shift and go to state 15
    DEF             shift and go to state 16
    $end            reduce using rule 249 (empty -> .)

    cuerpo                         shift and go to state 4
    variable                       shift and go to state 5
    procedimiento                  shift and go to state 6
    main                           shift and go to state 7
    Put                            shift and go to state 8
    Put2                           shift and go to state 9
    variable1                      shift and go to state 10
    variable2                      shift and go to state 11
    empty                          shift and go to state 12

state 3

    (5) cuerpo -> COMMENT . cuerpo
    (2) cuerpo -> . variable
    (3) cuerpo -> . procedimiento
    (4) cuerpo -> . main
    (5) cuerpo -> . COMMENT cuerpo
    (6) cuerpo -> . Put
    (7) cuerpo -> . Put2
    (27) variable -> . variable1 cuerpo
    (28) variable -> . variable2 cuerpo
    (29) variable -> . empty empty
    (23) procedimiento -> . PARA id BRACKET1 empty BRACKET2 cuerpo2 FIN cuerpo
    (24) procedimiento -> . PARA id BRACKET1 parametro BRACKET2 cuerpo2 FIN cuerpo
    (26) main -> . MAIN BRACKET1 BRACKET2 cuerpo3 FIN cuerpo
    (82) Put -> . PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA
    (83) Put2 -> . PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (84) Put2 -> . PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (85) Put2 -> . PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (86) Put2 -> . PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA
    (36) variable1 -> . DEF VAR PUNTOCOMA
    (37) variable2 -> . DEF VAR IGUAL NUMERO PUNTOCOMA
    (249) empty -> .

    COMMENT         shift and go to state 3
    PARA            shift and go to state 13
    MAIN            shift and go to state 14
    PUT             shift and go to state 15
    DEF             shift and go to state 16
    $end            reduce using rule 249 (empty -> .)

    cuerpo                         shift and go to state 17
    variable                       shift and go to state 5
    procedimiento                  shift and go to state 6
    main                           shift and go to state 7
    Put                            shift and go to state 8
    Put2                           shift and go to state 9
    variable1                      shift and go to state 10
    variable2                      shift and go to state 11
    empty                          shift and go to state 12

state 4

    (1) Start -> COMMENT cuerpo .

    $end            reduce using rule 1 (Start -> COMMENT cuerpo .)


state 5

    (2) cuerpo -> variable .

    $end            reduce using rule 2 (cuerpo -> variable .)


state 6

    (3) cuerpo -> procedimiento .

    $end            reduce using rule 3 (cuerpo -> procedimiento .)


state 7

    (4) cuerpo -> main .

    $end            reduce using rule 4 (cuerpo -> main .)


state 8

    (6) cuerpo -> Put .

    $end            reduce using rule 6 (cuerpo -> Put .)


state 9

    (7) cuerpo -> Put2 .

    $end            reduce using rule 7 (cuerpo -> Put2 .)


state 10

    (27) variable -> variable1 . cuerpo
    (2) cuerpo -> . variable
    (3) cuerpo -> . procedimiento
    (4) cuerpo -> . main
    (5) cuerpo -> . COMMENT cuerpo
    (6) cuerpo -> . Put
    (7) cuerpo -> . Put2
    (27) variable -> . variable1 cuerpo
    (28) variable -> . variable2 cuerpo
    (29) variable -> . empty empty
    (23) procedimiento -> . PARA id BRACKET1 empty BRACKET2 cuerpo2 FIN cuerpo
    (24) procedimiento -> . PARA id BRACKET1 parametro BRACKET2 cuerpo2 FIN cuerpo
    (26) main -> . MAIN BRACKET1 BRACKET2 cuerpo3 FIN cuerpo
    (82) Put -> . PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA
    (83) Put2 -> . PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (84) Put2 -> . PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (85) Put2 -> . PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (86) Put2 -> . PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA
    (36) variable1 -> . DEF VAR PUNTOCOMA
    (37) variable2 -> . DEF VAR IGUAL NUMERO PUNTOCOMA
    (249) empty -> .

    COMMENT         shift and go to state 3
    PARA            shift and go to state 13
    MAIN            shift and go to state 14
    PUT             shift and go to state 15
    DEF             shift and go to state 16
    $end            reduce using rule 249 (empty -> .)

    variable1                      shift and go to state 10
    cuerpo                         shift and go to state 18
    variable                       shift and go to state 5
    procedimiento                  shift and go to state 6
    main                           shift and go to state 7
    Put                            shift and go to state 8
    Put2                           shift and go to state 9
    variable2                      shift and go to state 11
    empty                          shift and go to state 12

state 11

    (28) variable -> variable2 . cuerpo
    (2) cuerpo -> . variable
    (3) cuerpo -> . procedimiento
    (4) cuerpo -> . main
    (5) cuerpo -> . COMMENT cuerpo
    (6) cuerpo -> . Put
    (7) cuerpo -> . Put2
    (27) variable -> . variable1 cuerpo
    (28) variable -> . variable2 cuerpo
    (29) variable -> . empty empty
    (23) procedimiento -> . PARA id BRACKET1 empty BRACKET2 cuerpo2 FIN cuerpo
    (24) procedimiento -> . PARA id BRACKET1 parametro BRACKET2 cuerpo2 FIN cuerpo
    (26) main -> . MAIN BRACKET1 BRACKET2 cuerpo3 FIN cuerpo
    (82) Put -> . PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA
    (83) Put2 -> . PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (84) Put2 -> . PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (85) Put2 -> . PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (86) Put2 -> . PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA
    (36) variable1 -> . DEF VAR PUNTOCOMA
    (37) variable2 -> . DEF VAR IGUAL NUMERO PUNTOCOMA
    (249) empty -> .

    COMMENT         shift and go to state 3
    PARA            shift and go to state 13
    MAIN            shift and go to state 14
    PUT             shift and go to state 15
    DEF             shift and go to state 16
    $end            reduce using rule 249 (empty -> .)

    variable2                      shift and go to state 11
    cuerpo                         shift and go to state 19
    variable                       shift and go to state 5
    procedimiento                  shift and go to state 6
    main                           shift and go to state 7
    Put                            shift and go to state 8
    Put2                           shift and go to state 9
    variable1                      shift and go to state 10
    empty                          shift and go to state 12

state 12

    (29) variable -> empty . empty
    (249) empty -> .

    $end            reduce using rule 249 (empty -> .)

    empty                          shift and go to state 20

state 13

    (23) procedimiento -> PARA . id BRACKET1 empty BRACKET2 cuerpo2 FIN cuerpo
    (24) procedimiento -> PARA . id BRACKET1 parametro BRACKET2 cuerpo2 FIN cuerpo
    (22) id -> . ID

    ID              shift and go to state 22

    id                             shift and go to state 21

state 14

    (26) main -> MAIN . BRACKET1 BRACKET2 cuerpo3 FIN cuerpo

    BRACKET1        shift and go to state 23


state 15

    (82) Put -> PUT . ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA
    (83) Put2 -> PUT . ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (84) Put2 -> PUT . ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (85) Put2 -> PUT . ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (86) Put2 -> PUT . ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA

    ABRE_P          shift and go to state 24


state 16

    (36) variable1 -> DEF . VAR PUNTOCOMA
    (37) variable2 -> DEF . VAR IGUAL NUMERO PUNTOCOMA

    VAR             shift and go to state 25


state 17

    (5) cuerpo -> COMMENT cuerpo .

    $end            reduce using rule 5 (cuerpo -> COMMENT cuerpo .)


state 18

    (27) variable -> variable1 cuerpo .

    $end            reduce using rule 27 (variable -> variable1 cuerpo .)


state 19

    (28) variable -> variable2 cuerpo .

    $end            reduce using rule 28 (variable -> variable2 cuerpo .)


state 20

    (29) variable -> empty empty .

    $end            reduce using rule 29 (variable -> empty empty .)


state 21

    (23) procedimiento -> PARA id . BRACKET1 empty BRACKET2 cuerpo2 FIN cuerpo
    (24) procedimiento -> PARA id . BRACKET1 parametro BRACKET2 cuerpo2 FIN cuerpo

    BRACKET1        shift and go to state 26


state 22

    (22) id -> ID .

    BRACKET1        reduce using rule 22 (id -> ID .)


state 23

    (26) main -> MAIN BRACKET1 . BRACKET2 cuerpo3 FIN cuerpo

    BRACKET2        shift and go to state 27


state 24

    (82) Put -> PUT ABRE_P . VAR COMA VAR CIERRA_P PUNTOCOMA
    (83) Put2 -> PUT ABRE_P . VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (84) Put2 -> PUT ABRE_P . VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (85) Put2 -> PUT ABRE_P . VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (86) Put2 -> PUT ABRE_P . VAR COMA funcion CIERRA_P PUNTOCOMA

    VAR             shift and go to state 28


state 25

    (36) variable1 -> DEF VAR . PUNTOCOMA
    (37) variable2 -> DEF VAR . IGUAL NUMERO PUNTOCOMA

    PUNTOCOMA       shift and go to state 29
    IGUAL           shift and go to state 30


state 26

    (23) procedimiento -> PARA id BRACKET1 . empty BRACKET2 cuerpo2 FIN cuerpo
    (24) procedimiento -> PARA id BRACKET1 . parametro BRACKET2 cuerpo2 FIN cuerpo
    (249) empty -> .
    (197) parametro -> . Var COMA parametro
    (198) parametro -> . Var empty empty
    (199) parametro -> . empty empty empty
    (136) Var -> . VAR

    BRACKET2        reduce using rule 249 (empty -> .)
    VAR             shift and go to state 34

    empty                          shift and go to state 31
    parametro                      shift and go to state 32
    Var                            shift and go to state 33

state 27

    (26) main -> MAIN BRACKET1 BRACKET2 . cuerpo3 FIN cuerpo
    (15) cuerpo3 -> . variablexdd
    (16) cuerpo3 -> . COMMENT cuerpo3
    (17) cuerpo3 -> . expresion
    (18) cuerpo3 -> . funcion
    (19) cuerpo3 -> . empty
    (20) cuerpo3 -> . Put
    (21) cuerpo3 -> . Put2
    (33) variablexdd -> . variable1 cuerpo3
    (34) variablexdd -> . variable2 cuerpo3
    (35) variablexdd -> . empty empty
    (38) expresion -> . funcion expresion
    (39) expresion -> . expresion_alge1 expresion
    (40) expresion -> . expresion_alge2 expresion
    (41) expresion -> . Sum expresion
    (42) expresion -> . Substr expresion
    (43) expresion -> . Mult expresion
    (44) expresion -> . Div expresion
    (45) expresion -> . funcion empty
    (46) expresion -> . expresion_alge1 empty
    (47) expresion -> . expresion_alge2 empty
    (48) expresion -> . Sum empty
    (49) expresion -> . Substr empty
    (50) expresion -> . Mult empty
    (51) expresion -> . Div empty
    (52) expresion -> . empty empty
    (67) funcion -> . Random empty
    (68) funcion -> . Run empty
    (69) funcion -> . If empty
    (70) funcion -> . IfElse empty
    (71) funcion -> . Repeat empty
    (72) funcion -> . Until empty
    (73) funcion -> . While empty
    (74) funcion -> . PrintLine empty
    (75) funcion -> . And empty
    (76) funcion -> . Or empty
    (77) funcion -> . Add empty
    (78) funcion -> . Put2 empty
    (79) funcion -> . Put empty
    (80) funcion -> . PUNTOCOMA funcion
    (81) funcion -> . empty empty
    (249) empty -> .
    (82) Put -> . PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA
    (83) Put2 -> . PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (84) Put2 -> . PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (85) Put2 -> . PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (86) Put2 -> . PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA
    (36) variable1 -> . DEF VAR PUNTOCOMA
    (37) variable2 -> . DEF VAR IGUAL NUMERO PUNTOCOMA
    (90) expresion_alge1 -> . NUMERO SUMA NUMERO
    (91) expresion_alge1 -> . NUMERO RESTA NUMERO
    (92) expresion_alge1 -> . NUMERO MULTI NUMERO
    (93) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (94) expresion_alge1 -> . NUMERO EXPONENTE NUMERO
    (95) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (96) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (97) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (98) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (99) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P EXPONENTE ABRE_P expresion_alge1 CIERRA_P
    (100) Sum -> . SUM ABRE_P NUMERO COMA NUMERO CIERRA_P
    (101) Sum -> . SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (102) Sum -> . SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (103) Sum -> . SUM ABRE_P NUMERO COMA Var CIERRA_P
    (104) Sum -> . SUM ABRE_P Var COMA NUMERO CIERRA_P
    (105) Sum -> . SUM ABRE_P Var COMA Var CIERRA_P
    (106) Sum -> . SUM ABRE_P expresion_alge1 COMA Var CIERRA_P
    (107) Sum -> . SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (108) Sum -> . SUM ABRE_P Var COMA expresion_alge1 CIERRA_P
    (109) Substr -> . SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P
    (110) Substr -> . SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (111) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (112) Substr -> . SUBSTR ABRE_P NUMERO COMA Var CIERRA_P
    (113) Substr -> . SUBSTR ABRE_P Var COMA NUMERO CIERRA_P
    (114) Substr -> . SUBSTR ABRE_P Var COMA Var CIERRA_P
    (115) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P
    (116) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (117) Substr -> . SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P
    (118) Mult -> . MULTI ABRE_P NUMERO COMA NUMERO CIERRA_P
    (119) Mult -> . MULTI ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (120) Mult -> . MULTI ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (121) Mult -> . MULTI ABRE_P NUMERO COMA Var CIERRA_P
    (122) Mult -> . MULTI ABRE_P Var COMA NUMERO CIERRA_P
    (123) Mult -> . MULTI ABRE_P Var COMA Var CIERRA_P
    (124) Mult -> . MULTI ABRE_P expresion_alge1 COMA Var CIERRA_P
    (125) Mult -> . MULTI ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (126) Mult -> . MULTI ABRE_P Var COMA expresion_alge1 CIERRA_P
    (127) Div -> . DIV ABRE_P NUMERO COMA NUMERO CIERRA_P
    (128) Div -> . DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (129) Div -> . DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (130) Div -> . DIV ABRE_P NUMERO COMA Var CIERRA_P
    (131) Div -> . DIV ABRE_P Var COMA NUMERO CIERRA_P
    (132) Div -> . DIV ABRE_P Var COMA Var CIERRA_P
    (133) Div -> . DIV ABRE_P expresion_alge1 COMA Var CIERRA_P
    (134) Div -> . DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (135) Div -> . DIV ABRE_P Var COMA expresion_alge1 CIERRA_P
    (201) Random -> . RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA
    (241) Run -> . RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA
    (187) If -> . IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2
    (188) IfElse -> . IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2
    (190) Repeat -> . REPEAT NUMERO BRACKET1 ordenes BRACKET2
    (191) Until -> . UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2
    (189) While -> . WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2
    (248) PrintLine -> . PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA
    (185) And -> . AND ABRE_P expresion COMA expresion CIERRA_P PUNTOCOMA
    (186) Or -> . OR ABRE_P expresion COMA expresion CIERRA_P PUNTOCOMA
    (192) Add -> . ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA
    (193) Add -> . ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (194) Add -> . ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (195) Add -> . ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (196) Add -> . ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA

  ! shift/reduce conflict for PUNTOCOMA resolved as shift
  ! shift/reduce conflict for PUT resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for ABRE_P resolved as shift
  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for SUBSTR resolved as shift
  ! shift/reduce conflict for MULTI resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for RANDOM resolved as shift
  ! shift/reduce conflict for RUN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for IFELSE resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for PRINTLINE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
    COMMENT         shift and go to state 37
    PUNTOCOMA       shift and go to state 62
    FIN             reduce using rule 249 (empty -> .)
    PUT             shift and go to state 15
    DEF             shift and go to state 16
    NUMERO          shift and go to state 64
    ABRE_P          shift and go to state 63
    SUM             shift and go to state 67
    SUBSTR          shift and go to state 68
    MULTI           shift and go to state 65
    DIV             shift and go to state 66
    RANDOM          shift and go to state 69
    RUN             shift and go to state 70
    IF              shift and go to state 71
    IFELSE          shift and go to state 72
    REPEAT          shift and go to state 73
    UNTIL           shift and go to state 74
    WHILE           shift and go to state 75
    PRINTLINE       shift and go to state 76
    AND             shift and go to state 77
    OR              shift and go to state 78
    ADD             shift and go to state 79

  ! PUNTOCOMA       [ reduce using rule 249 (empty -> .) ]
  ! NUMERO          [ reduce using rule 249 (empty -> .) ]
  ! ABRE_P          [ reduce using rule 249 (empty -> .) ]
  ! SUM             [ reduce using rule 249 (empty -> .) ]
  ! SUBSTR          [ reduce using rule 249 (empty -> .) ]
  ! MULTI           [ reduce using rule 249 (empty -> .) ]
  ! DIV             [ reduce using rule 249 (empty -> .) ]
  ! RANDOM          [ reduce using rule 249 (empty -> .) ]
  ! RUN             [ reduce using rule 249 (empty -> .) ]
  ! IF              [ reduce using rule 249 (empty -> .) ]
  ! IFELSE          [ reduce using rule 249 (empty -> .) ]
  ! REPEAT          [ reduce using rule 249 (empty -> .) ]
  ! UNTIL           [ reduce using rule 249 (empty -> .) ]
  ! WHILE           [ reduce using rule 249 (empty -> .) ]
  ! PRINTLINE       [ reduce using rule 249 (empty -> .) ]
  ! AND             [ reduce using rule 249 (empty -> .) ]
  ! OR              [ reduce using rule 249 (empty -> .) ]
  ! ADD             [ reduce using rule 249 (empty -> .) ]
  ! PUT             [ reduce using rule 249 (empty -> .) ]

    cuerpo3                        shift and go to state 35
    variablexdd                    shift and go to state 36
    expresion                      shift and go to state 38
    funcion                        shift and go to state 39
    empty                          shift and go to state 40
    Put                            shift and go to state 41
    Put2                           shift and go to state 42
    variable1                      shift and go to state 43
    variable2                      shift and go to state 44
    expresion_alge1                shift and go to state 45
    expresion_alge2                shift and go to state 46
    Sum                            shift and go to state 47
    Substr                         shift and go to state 48
    Mult                           shift and go to state 49
    Div                            shift and go to state 50
    Random                         shift and go to state 51
    Run                            shift and go to state 52
    If                             shift and go to state 53
    IfElse                         shift and go to state 54
    Repeat                         shift and go to state 55
    Until                          shift and go to state 56
    While                          shift and go to state 57
    PrintLine                      shift and go to state 58
    And                            shift and go to state 59
    Or                             shift and go to state 60
    Add                            shift and go to state 61

state 28

    (82) Put -> PUT ABRE_P VAR . COMA VAR CIERRA_P PUNTOCOMA
    (83) Put2 -> PUT ABRE_P VAR . COMA NUMERO CIERRA_P PUNTOCOMA
    (84) Put2 -> PUT ABRE_P VAR . COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (85) Put2 -> PUT ABRE_P VAR . COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (86) Put2 -> PUT ABRE_P VAR . COMA funcion CIERRA_P PUNTOCOMA

    COMA            shift and go to state 80


state 29

    (36) variable1 -> DEF VAR PUNTOCOMA .

    COMMENT         reduce using rule 36 (variable1 -> DEF VAR PUNTOCOMA .)
    PARA            reduce using rule 36 (variable1 -> DEF VAR PUNTOCOMA .)
    MAIN            reduce using rule 36 (variable1 -> DEF VAR PUNTOCOMA .)
    PUT             reduce using rule 36 (variable1 -> DEF VAR PUNTOCOMA .)
    DEF             reduce using rule 36 (variable1 -> DEF VAR PUNTOCOMA .)
    $end            reduce using rule 36 (variable1 -> DEF VAR PUNTOCOMA .)
    PUNTOCOMA       reduce using rule 36 (variable1 -> DEF VAR PUNTOCOMA .)
    NUMERO          reduce using rule 36 (variable1 -> DEF VAR PUNTOCOMA .)
    ABRE_P          reduce using rule 36 (variable1 -> DEF VAR PUNTOCOMA .)
    SUM             reduce using rule 36 (variable1 -> DEF VAR PUNTOCOMA .)
    SUBSTR          reduce using rule 36 (variable1 -> DEF VAR PUNTOCOMA .)
    MULTI           reduce using rule 36 (variable1 -> DEF VAR PUNTOCOMA .)
    DIV             reduce using rule 36 (variable1 -> DEF VAR PUNTOCOMA .)
    RANDOM          reduce using rule 36 (variable1 -> DEF VAR PUNTOCOMA .)
    RUN             reduce using rule 36 (variable1 -> DEF VAR PUNTOCOMA .)
    IF              reduce using rule 36 (variable1 -> DEF VAR PUNTOCOMA .)
    IFELSE          reduce using rule 36 (variable1 -> DEF VAR PUNTOCOMA .)
    REPEAT          reduce using rule 36 (variable1 -> DEF VAR PUNTOCOMA .)
    UNTIL           reduce using rule 36 (variable1 -> DEF VAR PUNTOCOMA .)
    WHILE           reduce using rule 36 (variable1 -> DEF VAR PUNTOCOMA .)
    PRINTLINE       reduce using rule 36 (variable1 -> DEF VAR PUNTOCOMA .)
    AND             reduce using rule 36 (variable1 -> DEF VAR PUNTOCOMA .)
    OR              reduce using rule 36 (variable1 -> DEF VAR PUNTOCOMA .)
    ADD             reduce using rule 36 (variable1 -> DEF VAR PUNTOCOMA .)
    FIN             reduce using rule 36 (variable1 -> DEF VAR PUNTOCOMA .)


state 30

    (37) variable2 -> DEF VAR IGUAL . NUMERO PUNTOCOMA

    NUMERO          shift and go to state 81


state 31

    (23) procedimiento -> PARA id BRACKET1 empty . BRACKET2 cuerpo2 FIN cuerpo
    (199) parametro -> empty . empty empty
    (249) empty -> .

  ! shift/reduce conflict for BRACKET2 resolved as shift
    BRACKET2        shift and go to state 83

  ! BRACKET2        [ reduce using rule 249 (empty -> .) ]

    empty                          shift and go to state 82

state 32

    (24) procedimiento -> PARA id BRACKET1 parametro . BRACKET2 cuerpo2 FIN cuerpo

    BRACKET2        shift and go to state 84


state 33

    (197) parametro -> Var . COMA parametro
    (198) parametro -> Var . empty empty
    (249) empty -> .

    COMA            shift and go to state 85
    BRACKET2        reduce using rule 249 (empty -> .)

    empty                          shift and go to state 86

state 34

    (136) Var -> VAR .

    COMA            reduce using rule 136 (Var -> VAR .)
    BRACKET2        reduce using rule 136 (Var -> VAR .)
    CIERRA_P        reduce using rule 136 (Var -> VAR .)
    PUNTOCOMA       reduce using rule 136 (Var -> VAR .)


state 35

    (26) main -> MAIN BRACKET1 BRACKET2 cuerpo3 . FIN cuerpo

    FIN             shift and go to state 87


state 36

    (15) cuerpo3 -> variablexdd .

    FIN             reduce using rule 15 (cuerpo3 -> variablexdd .)


state 37

    (16) cuerpo3 -> COMMENT . cuerpo3
    (15) cuerpo3 -> . variablexdd
    (16) cuerpo3 -> . COMMENT cuerpo3
    (17) cuerpo3 -> . expresion
    (18) cuerpo3 -> . funcion
    (19) cuerpo3 -> . empty
    (20) cuerpo3 -> . Put
    (21) cuerpo3 -> . Put2
    (33) variablexdd -> . variable1 cuerpo3
    (34) variablexdd -> . variable2 cuerpo3
    (35) variablexdd -> . empty empty
    (38) expresion -> . funcion expresion
    (39) expresion -> . expresion_alge1 expresion
    (40) expresion -> . expresion_alge2 expresion
    (41) expresion -> . Sum expresion
    (42) expresion -> . Substr expresion
    (43) expresion -> . Mult expresion
    (44) expresion -> . Div expresion
    (45) expresion -> . funcion empty
    (46) expresion -> . expresion_alge1 empty
    (47) expresion -> . expresion_alge2 empty
    (48) expresion -> . Sum empty
    (49) expresion -> . Substr empty
    (50) expresion -> . Mult empty
    (51) expresion -> . Div empty
    (52) expresion -> . empty empty
    (67) funcion -> . Random empty
    (68) funcion -> . Run empty
    (69) funcion -> . If empty
    (70) funcion -> . IfElse empty
    (71) funcion -> . Repeat empty
    (72) funcion -> . Until empty
    (73) funcion -> . While empty
    (74) funcion -> . PrintLine empty
    (75) funcion -> . And empty
    (76) funcion -> . Or empty
    (77) funcion -> . Add empty
    (78) funcion -> . Put2 empty
    (79) funcion -> . Put empty
    (80) funcion -> . PUNTOCOMA funcion
    (81) funcion -> . empty empty
    (249) empty -> .
    (82) Put -> . PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA
    (83) Put2 -> . PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (84) Put2 -> . PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (85) Put2 -> . PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (86) Put2 -> . PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA
    (36) variable1 -> . DEF VAR PUNTOCOMA
    (37) variable2 -> . DEF VAR IGUAL NUMERO PUNTOCOMA
    (90) expresion_alge1 -> . NUMERO SUMA NUMERO
    (91) expresion_alge1 -> . NUMERO RESTA NUMERO
    (92) expresion_alge1 -> . NUMERO MULTI NUMERO
    (93) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (94) expresion_alge1 -> . NUMERO EXPONENTE NUMERO
    (95) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (96) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (97) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (98) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (99) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P EXPONENTE ABRE_P expresion_alge1 CIERRA_P
    (100) Sum -> . SUM ABRE_P NUMERO COMA NUMERO CIERRA_P
    (101) Sum -> . SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (102) Sum -> . SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (103) Sum -> . SUM ABRE_P NUMERO COMA Var CIERRA_P
    (104) Sum -> . SUM ABRE_P Var COMA NUMERO CIERRA_P
    (105) Sum -> . SUM ABRE_P Var COMA Var CIERRA_P
    (106) Sum -> . SUM ABRE_P expresion_alge1 COMA Var CIERRA_P
    (107) Sum -> . SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (108) Sum -> . SUM ABRE_P Var COMA expresion_alge1 CIERRA_P
    (109) Substr -> . SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P
    (110) Substr -> . SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (111) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (112) Substr -> . SUBSTR ABRE_P NUMERO COMA Var CIERRA_P
    (113) Substr -> . SUBSTR ABRE_P Var COMA NUMERO CIERRA_P
    (114) Substr -> . SUBSTR ABRE_P Var COMA Var CIERRA_P
    (115) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P
    (116) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (117) Substr -> . SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P
    (118) Mult -> . MULTI ABRE_P NUMERO COMA NUMERO CIERRA_P
    (119) Mult -> . MULTI ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (120) Mult -> . MULTI ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (121) Mult -> . MULTI ABRE_P NUMERO COMA Var CIERRA_P
    (122) Mult -> . MULTI ABRE_P Var COMA NUMERO CIERRA_P
    (123) Mult -> . MULTI ABRE_P Var COMA Var CIERRA_P
    (124) Mult -> . MULTI ABRE_P expresion_alge1 COMA Var CIERRA_P
    (125) Mult -> . MULTI ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (126) Mult -> . MULTI ABRE_P Var COMA expresion_alge1 CIERRA_P
    (127) Div -> . DIV ABRE_P NUMERO COMA NUMERO CIERRA_P
    (128) Div -> . DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (129) Div -> . DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (130) Div -> . DIV ABRE_P NUMERO COMA Var CIERRA_P
    (131) Div -> . DIV ABRE_P Var COMA NUMERO CIERRA_P
    (132) Div -> . DIV ABRE_P Var COMA Var CIERRA_P
    (133) Div -> . DIV ABRE_P expresion_alge1 COMA Var CIERRA_P
    (134) Div -> . DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (135) Div -> . DIV ABRE_P Var COMA expresion_alge1 CIERRA_P
    (201) Random -> . RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA
    (241) Run -> . RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA
    (187) If -> . IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2
    (188) IfElse -> . IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2
    (190) Repeat -> . REPEAT NUMERO BRACKET1 ordenes BRACKET2
    (191) Until -> . UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2
    (189) While -> . WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2
    (248) PrintLine -> . PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA
    (185) And -> . AND ABRE_P expresion COMA expresion CIERRA_P PUNTOCOMA
    (186) Or -> . OR ABRE_P expresion COMA expresion CIERRA_P PUNTOCOMA
    (192) Add -> . ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA
    (193) Add -> . ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (194) Add -> . ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (195) Add -> . ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (196) Add -> . ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA

  ! shift/reduce conflict for PUNTOCOMA resolved as shift
  ! shift/reduce conflict for PUT resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for ABRE_P resolved as shift
  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for SUBSTR resolved as shift
  ! shift/reduce conflict for MULTI resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for RANDOM resolved as shift
  ! shift/reduce conflict for RUN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for IFELSE resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for PRINTLINE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
    COMMENT         shift and go to state 37
    PUNTOCOMA       shift and go to state 62
    FIN             reduce using rule 249 (empty -> .)
    PUT             shift and go to state 15
    DEF             shift and go to state 16
    NUMERO          shift and go to state 64
    ABRE_P          shift and go to state 63
    SUM             shift and go to state 67
    SUBSTR          shift and go to state 68
    MULTI           shift and go to state 65
    DIV             shift and go to state 66
    RANDOM          shift and go to state 69
    RUN             shift and go to state 70
    IF              shift and go to state 71
    IFELSE          shift and go to state 72
    REPEAT          shift and go to state 73
    UNTIL           shift and go to state 74
    WHILE           shift and go to state 75
    PRINTLINE       shift and go to state 76
    AND             shift and go to state 77
    OR              shift and go to state 78
    ADD             shift and go to state 79

  ! PUNTOCOMA       [ reduce using rule 249 (empty -> .) ]
  ! NUMERO          [ reduce using rule 249 (empty -> .) ]
  ! ABRE_P          [ reduce using rule 249 (empty -> .) ]
  ! SUM             [ reduce using rule 249 (empty -> .) ]
  ! SUBSTR          [ reduce using rule 249 (empty -> .) ]
  ! MULTI           [ reduce using rule 249 (empty -> .) ]
  ! DIV             [ reduce using rule 249 (empty -> .) ]
  ! RANDOM          [ reduce using rule 249 (empty -> .) ]
  ! RUN             [ reduce using rule 249 (empty -> .) ]
  ! IF              [ reduce using rule 249 (empty -> .) ]
  ! IFELSE          [ reduce using rule 249 (empty -> .) ]
  ! REPEAT          [ reduce using rule 249 (empty -> .) ]
  ! UNTIL           [ reduce using rule 249 (empty -> .) ]
  ! WHILE           [ reduce using rule 249 (empty -> .) ]
  ! PRINTLINE       [ reduce using rule 249 (empty -> .) ]
  ! AND             [ reduce using rule 249 (empty -> .) ]
  ! OR              [ reduce using rule 249 (empty -> .) ]
  ! ADD             [ reduce using rule 249 (empty -> .) ]
  ! PUT             [ reduce using rule 249 (empty -> .) ]

    cuerpo3                        shift and go to state 88
    variablexdd                    shift and go to state 36
    expresion                      shift and go to state 38
    funcion                        shift and go to state 39
    empty                          shift and go to state 40
    Put                            shift and go to state 41
    Put2                           shift and go to state 42
    variable1                      shift and go to state 43
    variable2                      shift and go to state 44
    expresion_alge1                shift and go to state 45
    expresion_alge2                shift and go to state 46
    Sum                            shift and go to state 47
    Substr                         shift and go to state 48
    Mult                           shift and go to state 49
    Div                            shift and go to state 50
    Random                         shift and go to state 51
    Run                            shift and go to state 52
    If                             shift and go to state 53
    IfElse                         shift and go to state 54
    Repeat                         shift and go to state 55
    Until                          shift and go to state 56
    While                          shift and go to state 57
    PrintLine                      shift and go to state 58
    And                            shift and go to state 59
    Or                             shift and go to state 60
    Add                            shift and go to state 61

state 38

    (17) cuerpo3 -> expresion .

    FIN             reduce using rule 17 (cuerpo3 -> expresion .)


state 39

    (18) cuerpo3 -> funcion .
    (38) expresion -> funcion . expresion
    (45) expresion -> funcion . empty
    (38) expresion -> . funcion expresion
    (39) expresion -> . expresion_alge1 expresion
    (40) expresion -> . expresion_alge2 expresion
    (41) expresion -> . Sum expresion
    (42) expresion -> . Substr expresion
    (43) expresion -> . Mult expresion
    (44) expresion -> . Div expresion
    (45) expresion -> . funcion empty
    (46) expresion -> . expresion_alge1 empty
    (47) expresion -> . expresion_alge2 empty
    (48) expresion -> . Sum empty
    (49) expresion -> . Substr empty
    (50) expresion -> . Mult empty
    (51) expresion -> . Div empty
    (52) expresion -> . empty empty
    (249) empty -> .
    (67) funcion -> . Random empty
    (68) funcion -> . Run empty
    (69) funcion -> . If empty
    (70) funcion -> . IfElse empty
    (71) funcion -> . Repeat empty
    (72) funcion -> . Until empty
    (73) funcion -> . While empty
    (74) funcion -> . PrintLine empty
    (75) funcion -> . And empty
    (76) funcion -> . Or empty
    (77) funcion -> . Add empty
    (78) funcion -> . Put2 empty
    (79) funcion -> . Put empty
    (80) funcion -> . PUNTOCOMA funcion
    (81) funcion -> . empty empty
    (90) expresion_alge1 -> . NUMERO SUMA NUMERO
    (91) expresion_alge1 -> . NUMERO RESTA NUMERO
    (92) expresion_alge1 -> . NUMERO MULTI NUMERO
    (93) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (94) expresion_alge1 -> . NUMERO EXPONENTE NUMERO
    (95) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (96) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (97) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (98) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (99) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P EXPONENTE ABRE_P expresion_alge1 CIERRA_P
    (100) Sum -> . SUM ABRE_P NUMERO COMA NUMERO CIERRA_P
    (101) Sum -> . SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (102) Sum -> . SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (103) Sum -> . SUM ABRE_P NUMERO COMA Var CIERRA_P
    (104) Sum -> . SUM ABRE_P Var COMA NUMERO CIERRA_P
    (105) Sum -> . SUM ABRE_P Var COMA Var CIERRA_P
    (106) Sum -> . SUM ABRE_P expresion_alge1 COMA Var CIERRA_P
    (107) Sum -> . SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (108) Sum -> . SUM ABRE_P Var COMA expresion_alge1 CIERRA_P
    (109) Substr -> . SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P
    (110) Substr -> . SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (111) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (112) Substr -> . SUBSTR ABRE_P NUMERO COMA Var CIERRA_P
    (113) Substr -> . SUBSTR ABRE_P Var COMA NUMERO CIERRA_P
    (114) Substr -> . SUBSTR ABRE_P Var COMA Var CIERRA_P
    (115) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P
    (116) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (117) Substr -> . SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P
    (118) Mult -> . MULTI ABRE_P NUMERO COMA NUMERO CIERRA_P
    (119) Mult -> . MULTI ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (120) Mult -> . MULTI ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (121) Mult -> . MULTI ABRE_P NUMERO COMA Var CIERRA_P
    (122) Mult -> . MULTI ABRE_P Var COMA NUMERO CIERRA_P
    (123) Mult -> . MULTI ABRE_P Var COMA Var CIERRA_P
    (124) Mult -> . MULTI ABRE_P expresion_alge1 COMA Var CIERRA_P
    (125) Mult -> . MULTI ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (126) Mult -> . MULTI ABRE_P Var COMA expresion_alge1 CIERRA_P
    (127) Div -> . DIV ABRE_P NUMERO COMA NUMERO CIERRA_P
    (128) Div -> . DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (129) Div -> . DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (130) Div -> . DIV ABRE_P NUMERO COMA Var CIERRA_P
    (131) Div -> . DIV ABRE_P Var COMA NUMERO CIERRA_P
    (132) Div -> . DIV ABRE_P Var COMA Var CIERRA_P
    (133) Div -> . DIV ABRE_P expresion_alge1 COMA Var CIERRA_P
    (134) Div -> . DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (135) Div -> . DIV ABRE_P Var COMA expresion_alge1 CIERRA_P
    (201) Random -> . RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA
    (241) Run -> . RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA
    (187) If -> . IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2
    (188) IfElse -> . IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2
    (190) Repeat -> . REPEAT NUMERO BRACKET1 ordenes BRACKET2
    (191) Until -> . UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2
    (189) While -> . WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2
    (248) PrintLine -> . PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA
    (185) And -> . AND ABRE_P expresion COMA expresion CIERRA_P PUNTOCOMA
    (186) Or -> . OR ABRE_P expresion COMA expresion CIERRA_P PUNTOCOMA
    (192) Add -> . ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA
    (193) Add -> . ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (194) Add -> . ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (195) Add -> . ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (196) Add -> . ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (83) Put2 -> . PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (84) Put2 -> . PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (85) Put2 -> . PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (86) Put2 -> . PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA
    (82) Put -> . PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA

  ! reduce/reduce conflict for FIN resolved using rule 18 (cuerpo3 -> funcion .)
  ! shift/reduce conflict for PUNTOCOMA resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for ABRE_P resolved as shift
  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for SUBSTR resolved as shift
  ! shift/reduce conflict for MULTI resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for RANDOM resolved as shift
  ! shift/reduce conflict for RUN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for IFELSE resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for PRINTLINE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for PUT resolved as shift
    FIN             reduce using rule 18 (cuerpo3 -> funcion .)
    PUNTOCOMA       shift and go to state 62
    NUMERO          shift and go to state 64
    ABRE_P          shift and go to state 63
    SUM             shift and go to state 67
    SUBSTR          shift and go to state 68
    MULTI           shift and go to state 65
    DIV             shift and go to state 66
    RANDOM          shift and go to state 69
    RUN             shift and go to state 70
    IF              shift and go to state 71
    IFELSE          shift and go to state 72
    REPEAT          shift and go to state 73
    UNTIL           shift and go to state 74
    WHILE           shift and go to state 75
    PRINTLINE       shift and go to state 76
    AND             shift and go to state 77
    OR              shift and go to state 78
    ADD             shift and go to state 79
    PUT             shift and go to state 94

  ! FIN             [ reduce using rule 249 (empty -> .) ]
  ! PUNTOCOMA       [ reduce using rule 249 (empty -> .) ]
  ! NUMERO          [ reduce using rule 249 (empty -> .) ]
  ! ABRE_P          [ reduce using rule 249 (empty -> .) ]
  ! SUM             [ reduce using rule 249 (empty -> .) ]
  ! SUBSTR          [ reduce using rule 249 (empty -> .) ]
  ! MULTI           [ reduce using rule 249 (empty -> .) ]
  ! DIV             [ reduce using rule 249 (empty -> .) ]
  ! RANDOM          [ reduce using rule 249 (empty -> .) ]
  ! RUN             [ reduce using rule 249 (empty -> .) ]
  ! IF              [ reduce using rule 249 (empty -> .) ]
  ! IFELSE          [ reduce using rule 249 (empty -> .) ]
  ! REPEAT          [ reduce using rule 249 (empty -> .) ]
  ! UNTIL           [ reduce using rule 249 (empty -> .) ]
  ! WHILE           [ reduce using rule 249 (empty -> .) ]
  ! PRINTLINE       [ reduce using rule 249 (empty -> .) ]
  ! AND             [ reduce using rule 249 (empty -> .) ]
  ! OR              [ reduce using rule 249 (empty -> .) ]
  ! ADD             [ reduce using rule 249 (empty -> .) ]
  ! PUT             [ reduce using rule 249 (empty -> .) ]

    funcion                        shift and go to state 89
    expresion                      shift and go to state 90
    empty                          shift and go to state 91
    expresion_alge1                shift and go to state 45
    expresion_alge2                shift and go to state 46
    Sum                            shift and go to state 47
    Substr                         shift and go to state 48
    Mult                           shift and go to state 49
    Div                            shift and go to state 50
    Random                         shift and go to state 51
    Run                            shift and go to state 52
    If                             shift and go to state 53
    IfElse                         shift and go to state 54
    Repeat                         shift and go to state 55
    Until                          shift and go to state 56
    While                          shift and go to state 57
    PrintLine                      shift and go to state 58
    And                            shift and go to state 59
    Or                             shift and go to state 60
    Add                            shift and go to state 61
    Put2                           shift and go to state 92
    Put                            shift and go to state 93

state 40

    (19) cuerpo3 -> empty .
    (35) variablexdd -> empty . empty
    (52) expresion -> empty . empty
    (81) funcion -> empty . empty
    (249) empty -> .

  ! reduce/reduce conflict for FIN resolved using rule 19 (cuerpo3 -> empty .)
    FIN             reduce using rule 19 (cuerpo3 -> empty .)
    PUNTOCOMA       reduce using rule 249 (empty -> .)
    NUMERO          reduce using rule 249 (empty -> .)
    ABRE_P          reduce using rule 249 (empty -> .)
    SUM             reduce using rule 249 (empty -> .)
    SUBSTR          reduce using rule 249 (empty -> .)
    MULTI           reduce using rule 249 (empty -> .)
    DIV             reduce using rule 249 (empty -> .)
    RANDOM          reduce using rule 249 (empty -> .)
    RUN             reduce using rule 249 (empty -> .)
    IF              reduce using rule 249 (empty -> .)
    IFELSE          reduce using rule 249 (empty -> .)
    REPEAT          reduce using rule 249 (empty -> .)
    UNTIL           reduce using rule 249 (empty -> .)
    WHILE           reduce using rule 249 (empty -> .)
    PRINTLINE       reduce using rule 249 (empty -> .)
    AND             reduce using rule 249 (empty -> .)
    OR              reduce using rule 249 (empty -> .)
    ADD             reduce using rule 249 (empty -> .)
    PUT             reduce using rule 249 (empty -> .)

  ! FIN             [ reduce using rule 249 (empty -> .) ]

    empty                          shift and go to state 95

state 41

    (20) cuerpo3 -> Put .
    (79) funcion -> Put . empty
    (249) empty -> .

  ! reduce/reduce conflict for FIN resolved using rule 20 (cuerpo3 -> Put .)
    FIN             reduce using rule 20 (cuerpo3 -> Put .)
    PUNTOCOMA       reduce using rule 249 (empty -> .)
    NUMERO          reduce using rule 249 (empty -> .)
    ABRE_P          reduce using rule 249 (empty -> .)
    SUM             reduce using rule 249 (empty -> .)
    SUBSTR          reduce using rule 249 (empty -> .)
    MULTI           reduce using rule 249 (empty -> .)
    DIV             reduce using rule 249 (empty -> .)
    RANDOM          reduce using rule 249 (empty -> .)
    RUN             reduce using rule 249 (empty -> .)
    IF              reduce using rule 249 (empty -> .)
    IFELSE          reduce using rule 249 (empty -> .)
    REPEAT          reduce using rule 249 (empty -> .)
    UNTIL           reduce using rule 249 (empty -> .)
    WHILE           reduce using rule 249 (empty -> .)
    PRINTLINE       reduce using rule 249 (empty -> .)
    AND             reduce using rule 249 (empty -> .)
    OR              reduce using rule 249 (empty -> .)
    ADD             reduce using rule 249 (empty -> .)
    PUT             reduce using rule 249 (empty -> .)

  ! FIN             [ reduce using rule 249 (empty -> .) ]

    empty                          shift and go to state 96

state 42

    (21) cuerpo3 -> Put2 .
    (78) funcion -> Put2 . empty
    (249) empty -> .

  ! reduce/reduce conflict for FIN resolved using rule 21 (cuerpo3 -> Put2 .)
    FIN             reduce using rule 21 (cuerpo3 -> Put2 .)
    PUNTOCOMA       reduce using rule 249 (empty -> .)
    NUMERO          reduce using rule 249 (empty -> .)
    ABRE_P          reduce using rule 249 (empty -> .)
    SUM             reduce using rule 249 (empty -> .)
    SUBSTR          reduce using rule 249 (empty -> .)
    MULTI           reduce using rule 249 (empty -> .)
    DIV             reduce using rule 249 (empty -> .)
    RANDOM          reduce using rule 249 (empty -> .)
    RUN             reduce using rule 249 (empty -> .)
    IF              reduce using rule 249 (empty -> .)
    IFELSE          reduce using rule 249 (empty -> .)
    REPEAT          reduce using rule 249 (empty -> .)
    UNTIL           reduce using rule 249 (empty -> .)
    WHILE           reduce using rule 249 (empty -> .)
    PRINTLINE       reduce using rule 249 (empty -> .)
    AND             reduce using rule 249 (empty -> .)
    OR              reduce using rule 249 (empty -> .)
    ADD             reduce using rule 249 (empty -> .)
    PUT             reduce using rule 249 (empty -> .)

  ! FIN             [ reduce using rule 249 (empty -> .) ]

    empty                          shift and go to state 97

state 43

    (33) variablexdd -> variable1 . cuerpo3
    (15) cuerpo3 -> . variablexdd
    (16) cuerpo3 -> . COMMENT cuerpo3
    (17) cuerpo3 -> . expresion
    (18) cuerpo3 -> . funcion
    (19) cuerpo3 -> . empty
    (20) cuerpo3 -> . Put
    (21) cuerpo3 -> . Put2
    (33) variablexdd -> . variable1 cuerpo3
    (34) variablexdd -> . variable2 cuerpo3
    (35) variablexdd -> . empty empty
    (38) expresion -> . funcion expresion
    (39) expresion -> . expresion_alge1 expresion
    (40) expresion -> . expresion_alge2 expresion
    (41) expresion -> . Sum expresion
    (42) expresion -> . Substr expresion
    (43) expresion -> . Mult expresion
    (44) expresion -> . Div expresion
    (45) expresion -> . funcion empty
    (46) expresion -> . expresion_alge1 empty
    (47) expresion -> . expresion_alge2 empty
    (48) expresion -> . Sum empty
    (49) expresion -> . Substr empty
    (50) expresion -> . Mult empty
    (51) expresion -> . Div empty
    (52) expresion -> . empty empty
    (67) funcion -> . Random empty
    (68) funcion -> . Run empty
    (69) funcion -> . If empty
    (70) funcion -> . IfElse empty
    (71) funcion -> . Repeat empty
    (72) funcion -> . Until empty
    (73) funcion -> . While empty
    (74) funcion -> . PrintLine empty
    (75) funcion -> . And empty
    (76) funcion -> . Or empty
    (77) funcion -> . Add empty
    (78) funcion -> . Put2 empty
    (79) funcion -> . Put empty
    (80) funcion -> . PUNTOCOMA funcion
    (81) funcion -> . empty empty
    (249) empty -> .
    (82) Put -> . PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA
    (83) Put2 -> . PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (84) Put2 -> . PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (85) Put2 -> . PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (86) Put2 -> . PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA
    (36) variable1 -> . DEF VAR PUNTOCOMA
    (37) variable2 -> . DEF VAR IGUAL NUMERO PUNTOCOMA
    (90) expresion_alge1 -> . NUMERO SUMA NUMERO
    (91) expresion_alge1 -> . NUMERO RESTA NUMERO
    (92) expresion_alge1 -> . NUMERO MULTI NUMERO
    (93) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (94) expresion_alge1 -> . NUMERO EXPONENTE NUMERO
    (95) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (96) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (97) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (98) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (99) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P EXPONENTE ABRE_P expresion_alge1 CIERRA_P
    (100) Sum -> . SUM ABRE_P NUMERO COMA NUMERO CIERRA_P
    (101) Sum -> . SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (102) Sum -> . SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (103) Sum -> . SUM ABRE_P NUMERO COMA Var CIERRA_P
    (104) Sum -> . SUM ABRE_P Var COMA NUMERO CIERRA_P
    (105) Sum -> . SUM ABRE_P Var COMA Var CIERRA_P
    (106) Sum -> . SUM ABRE_P expresion_alge1 COMA Var CIERRA_P
    (107) Sum -> . SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (108) Sum -> . SUM ABRE_P Var COMA expresion_alge1 CIERRA_P
    (109) Substr -> . SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P
    (110) Substr -> . SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (111) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (112) Substr -> . SUBSTR ABRE_P NUMERO COMA Var CIERRA_P
    (113) Substr -> . SUBSTR ABRE_P Var COMA NUMERO CIERRA_P
    (114) Substr -> . SUBSTR ABRE_P Var COMA Var CIERRA_P
    (115) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P
    (116) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (117) Substr -> . SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P
    (118) Mult -> . MULTI ABRE_P NUMERO COMA NUMERO CIERRA_P
    (119) Mult -> . MULTI ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (120) Mult -> . MULTI ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (121) Mult -> . MULTI ABRE_P NUMERO COMA Var CIERRA_P
    (122) Mult -> . MULTI ABRE_P Var COMA NUMERO CIERRA_P
    (123) Mult -> . MULTI ABRE_P Var COMA Var CIERRA_P
    (124) Mult -> . MULTI ABRE_P expresion_alge1 COMA Var CIERRA_P
    (125) Mult -> . MULTI ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (126) Mult -> . MULTI ABRE_P Var COMA expresion_alge1 CIERRA_P
    (127) Div -> . DIV ABRE_P NUMERO COMA NUMERO CIERRA_P
    (128) Div -> . DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (129) Div -> . DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (130) Div -> . DIV ABRE_P NUMERO COMA Var CIERRA_P
    (131) Div -> . DIV ABRE_P Var COMA NUMERO CIERRA_P
    (132) Div -> . DIV ABRE_P Var COMA Var CIERRA_P
    (133) Div -> . DIV ABRE_P expresion_alge1 COMA Var CIERRA_P
    (134) Div -> . DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (135) Div -> . DIV ABRE_P Var COMA expresion_alge1 CIERRA_P
    (201) Random -> . RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA
    (241) Run -> . RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA
    (187) If -> . IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2
    (188) IfElse -> . IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2
    (190) Repeat -> . REPEAT NUMERO BRACKET1 ordenes BRACKET2
    (191) Until -> . UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2
    (189) While -> . WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2
    (248) PrintLine -> . PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA
    (185) And -> . AND ABRE_P expresion COMA expresion CIERRA_P PUNTOCOMA
    (186) Or -> . OR ABRE_P expresion COMA expresion CIERRA_P PUNTOCOMA
    (192) Add -> . ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA
    (193) Add -> . ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (194) Add -> . ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (195) Add -> . ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (196) Add -> . ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA

  ! shift/reduce conflict for PUNTOCOMA resolved as shift
  ! shift/reduce conflict for PUT resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for ABRE_P resolved as shift
  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for SUBSTR resolved as shift
  ! shift/reduce conflict for MULTI resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for RANDOM resolved as shift
  ! shift/reduce conflict for RUN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for IFELSE resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for PRINTLINE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
    COMMENT         shift and go to state 37
    PUNTOCOMA       shift and go to state 62
    FIN             reduce using rule 249 (empty -> .)
    PUT             shift and go to state 15
    DEF             shift and go to state 16
    NUMERO          shift and go to state 64
    ABRE_P          shift and go to state 63
    SUM             shift and go to state 67
    SUBSTR          shift and go to state 68
    MULTI           shift and go to state 65
    DIV             shift and go to state 66
    RANDOM          shift and go to state 69
    RUN             shift and go to state 70
    IF              shift and go to state 71
    IFELSE          shift and go to state 72
    REPEAT          shift and go to state 73
    UNTIL           shift and go to state 74
    WHILE           shift and go to state 75
    PRINTLINE       shift and go to state 76
    AND             shift and go to state 77
    OR              shift and go to state 78
    ADD             shift and go to state 79

  ! PUNTOCOMA       [ reduce using rule 249 (empty -> .) ]
  ! NUMERO          [ reduce using rule 249 (empty -> .) ]
  ! ABRE_P          [ reduce using rule 249 (empty -> .) ]
  ! SUM             [ reduce using rule 249 (empty -> .) ]
  ! SUBSTR          [ reduce using rule 249 (empty -> .) ]
  ! MULTI           [ reduce using rule 249 (empty -> .) ]
  ! DIV             [ reduce using rule 249 (empty -> .) ]
  ! RANDOM          [ reduce using rule 249 (empty -> .) ]
  ! RUN             [ reduce using rule 249 (empty -> .) ]
  ! IF              [ reduce using rule 249 (empty -> .) ]
  ! IFELSE          [ reduce using rule 249 (empty -> .) ]
  ! REPEAT          [ reduce using rule 249 (empty -> .) ]
  ! UNTIL           [ reduce using rule 249 (empty -> .) ]
  ! WHILE           [ reduce using rule 249 (empty -> .) ]
  ! PRINTLINE       [ reduce using rule 249 (empty -> .) ]
  ! AND             [ reduce using rule 249 (empty -> .) ]
  ! OR              [ reduce using rule 249 (empty -> .) ]
  ! ADD             [ reduce using rule 249 (empty -> .) ]
  ! PUT             [ reduce using rule 249 (empty -> .) ]

    variable1                      shift and go to state 43
    cuerpo3                        shift and go to state 98
    variablexdd                    shift and go to state 36
    expresion                      shift and go to state 38
    funcion                        shift and go to state 39
    empty                          shift and go to state 40
    Put                            shift and go to state 41
    Put2                           shift and go to state 42
    variable2                      shift and go to state 44
    expresion_alge1                shift and go to state 45
    expresion_alge2                shift and go to state 46
    Sum                            shift and go to state 47
    Substr                         shift and go to state 48
    Mult                           shift and go to state 49
    Div                            shift and go to state 50
    Random                         shift and go to state 51
    Run                            shift and go to state 52
    If                             shift and go to state 53
    IfElse                         shift and go to state 54
    Repeat                         shift and go to state 55
    Until                          shift and go to state 56
    While                          shift and go to state 57
    PrintLine                      shift and go to state 58
    And                            shift and go to state 59
    Or                             shift and go to state 60
    Add                            shift and go to state 61

state 44

    (34) variablexdd -> variable2 . cuerpo3
    (15) cuerpo3 -> . variablexdd
    (16) cuerpo3 -> . COMMENT cuerpo3
    (17) cuerpo3 -> . expresion
    (18) cuerpo3 -> . funcion
    (19) cuerpo3 -> . empty
    (20) cuerpo3 -> . Put
    (21) cuerpo3 -> . Put2
    (33) variablexdd -> . variable1 cuerpo3
    (34) variablexdd -> . variable2 cuerpo3
    (35) variablexdd -> . empty empty
    (38) expresion -> . funcion expresion
    (39) expresion -> . expresion_alge1 expresion
    (40) expresion -> . expresion_alge2 expresion
    (41) expresion -> . Sum expresion
    (42) expresion -> . Substr expresion
    (43) expresion -> . Mult expresion
    (44) expresion -> . Div expresion
    (45) expresion -> . funcion empty
    (46) expresion -> . expresion_alge1 empty
    (47) expresion -> . expresion_alge2 empty
    (48) expresion -> . Sum empty
    (49) expresion -> . Substr empty
    (50) expresion -> . Mult empty
    (51) expresion -> . Div empty
    (52) expresion -> . empty empty
    (67) funcion -> . Random empty
    (68) funcion -> . Run empty
    (69) funcion -> . If empty
    (70) funcion -> . IfElse empty
    (71) funcion -> . Repeat empty
    (72) funcion -> . Until empty
    (73) funcion -> . While empty
    (74) funcion -> . PrintLine empty
    (75) funcion -> . And empty
    (76) funcion -> . Or empty
    (77) funcion -> . Add empty
    (78) funcion -> . Put2 empty
    (79) funcion -> . Put empty
    (80) funcion -> . PUNTOCOMA funcion
    (81) funcion -> . empty empty
    (249) empty -> .
    (82) Put -> . PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA
    (83) Put2 -> . PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (84) Put2 -> . PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (85) Put2 -> . PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (86) Put2 -> . PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA
    (36) variable1 -> . DEF VAR PUNTOCOMA
    (37) variable2 -> . DEF VAR IGUAL NUMERO PUNTOCOMA
    (90) expresion_alge1 -> . NUMERO SUMA NUMERO
    (91) expresion_alge1 -> . NUMERO RESTA NUMERO
    (92) expresion_alge1 -> . NUMERO MULTI NUMERO
    (93) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (94) expresion_alge1 -> . NUMERO EXPONENTE NUMERO
    (95) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (96) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (97) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (98) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (99) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P EXPONENTE ABRE_P expresion_alge1 CIERRA_P
    (100) Sum -> . SUM ABRE_P NUMERO COMA NUMERO CIERRA_P
    (101) Sum -> . SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (102) Sum -> . SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (103) Sum -> . SUM ABRE_P NUMERO COMA Var CIERRA_P
    (104) Sum -> . SUM ABRE_P Var COMA NUMERO CIERRA_P
    (105) Sum -> . SUM ABRE_P Var COMA Var CIERRA_P
    (106) Sum -> . SUM ABRE_P expresion_alge1 COMA Var CIERRA_P
    (107) Sum -> . SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (108) Sum -> . SUM ABRE_P Var COMA expresion_alge1 CIERRA_P
    (109) Substr -> . SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P
    (110) Substr -> . SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (111) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (112) Substr -> . SUBSTR ABRE_P NUMERO COMA Var CIERRA_P
    (113) Substr -> . SUBSTR ABRE_P Var COMA NUMERO CIERRA_P
    (114) Substr -> . SUBSTR ABRE_P Var COMA Var CIERRA_P
    (115) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P
    (116) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (117) Substr -> . SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P
    (118) Mult -> . MULTI ABRE_P NUMERO COMA NUMERO CIERRA_P
    (119) Mult -> . MULTI ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (120) Mult -> . MULTI ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (121) Mult -> . MULTI ABRE_P NUMERO COMA Var CIERRA_P
    (122) Mult -> . MULTI ABRE_P Var COMA NUMERO CIERRA_P
    (123) Mult -> . MULTI ABRE_P Var COMA Var CIERRA_P
    (124) Mult -> . MULTI ABRE_P expresion_alge1 COMA Var CIERRA_P
    (125) Mult -> . MULTI ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (126) Mult -> . MULTI ABRE_P Var COMA expresion_alge1 CIERRA_P
    (127) Div -> . DIV ABRE_P NUMERO COMA NUMERO CIERRA_P
    (128) Div -> . DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (129) Div -> . DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (130) Div -> . DIV ABRE_P NUMERO COMA Var CIERRA_P
    (131) Div -> . DIV ABRE_P Var COMA NUMERO CIERRA_P
    (132) Div -> . DIV ABRE_P Var COMA Var CIERRA_P
    (133) Div -> . DIV ABRE_P expresion_alge1 COMA Var CIERRA_P
    (134) Div -> . DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (135) Div -> . DIV ABRE_P Var COMA expresion_alge1 CIERRA_P
    (201) Random -> . RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA
    (241) Run -> . RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA
    (187) If -> . IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2
    (188) IfElse -> . IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2
    (190) Repeat -> . REPEAT NUMERO BRACKET1 ordenes BRACKET2
    (191) Until -> . UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2
    (189) While -> . WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2
    (248) PrintLine -> . PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA
    (185) And -> . AND ABRE_P expresion COMA expresion CIERRA_P PUNTOCOMA
    (186) Or -> . OR ABRE_P expresion COMA expresion CIERRA_P PUNTOCOMA
    (192) Add -> . ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA
    (193) Add -> . ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (194) Add -> . ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (195) Add -> . ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (196) Add -> . ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA

  ! shift/reduce conflict for PUNTOCOMA resolved as shift
  ! shift/reduce conflict for PUT resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for ABRE_P resolved as shift
  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for SUBSTR resolved as shift
  ! shift/reduce conflict for MULTI resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for RANDOM resolved as shift
  ! shift/reduce conflict for RUN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for IFELSE resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for PRINTLINE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
    COMMENT         shift and go to state 37
    PUNTOCOMA       shift and go to state 62
    FIN             reduce using rule 249 (empty -> .)
    PUT             shift and go to state 15
    DEF             shift and go to state 16
    NUMERO          shift and go to state 64
    ABRE_P          shift and go to state 63
    SUM             shift and go to state 67
    SUBSTR          shift and go to state 68
    MULTI           shift and go to state 65
    DIV             shift and go to state 66
    RANDOM          shift and go to state 69
    RUN             shift and go to state 70
    IF              shift and go to state 71
    IFELSE          shift and go to state 72
    REPEAT          shift and go to state 73
    UNTIL           shift and go to state 74
    WHILE           shift and go to state 75
    PRINTLINE       shift and go to state 76
    AND             shift and go to state 77
    OR              shift and go to state 78
    ADD             shift and go to state 79

  ! PUNTOCOMA       [ reduce using rule 249 (empty -> .) ]
  ! NUMERO          [ reduce using rule 249 (empty -> .) ]
  ! ABRE_P          [ reduce using rule 249 (empty -> .) ]
  ! SUM             [ reduce using rule 249 (empty -> .) ]
  ! SUBSTR          [ reduce using rule 249 (empty -> .) ]
  ! MULTI           [ reduce using rule 249 (empty -> .) ]
  ! DIV             [ reduce using rule 249 (empty -> .) ]
  ! RANDOM          [ reduce using rule 249 (empty -> .) ]
  ! RUN             [ reduce using rule 249 (empty -> .) ]
  ! IF              [ reduce using rule 249 (empty -> .) ]
  ! IFELSE          [ reduce using rule 249 (empty -> .) ]
  ! REPEAT          [ reduce using rule 249 (empty -> .) ]
  ! UNTIL           [ reduce using rule 249 (empty -> .) ]
  ! WHILE           [ reduce using rule 249 (empty -> .) ]
  ! PRINTLINE       [ reduce using rule 249 (empty -> .) ]
  ! AND             [ reduce using rule 249 (empty -> .) ]
  ! OR              [ reduce using rule 249 (empty -> .) ]
  ! ADD             [ reduce using rule 249 (empty -> .) ]
  ! PUT             [ reduce using rule 249 (empty -> .) ]

    variable2                      shift and go to state 44
    cuerpo3                        shift and go to state 99
    variablexdd                    shift and go to state 36
    expresion                      shift and go to state 38
    funcion                        shift and go to state 39
    empty                          shift and go to state 40
    Put                            shift and go to state 41
    Put2                           shift and go to state 42
    variable1                      shift and go to state 43
    expresion_alge1                shift and go to state 45
    expresion_alge2                shift and go to state 46
    Sum                            shift and go to state 47
    Substr                         shift and go to state 48
    Mult                           shift and go to state 49
    Div                            shift and go to state 50
    Random                         shift and go to state 51
    Run                            shift and go to state 52
    If                             shift and go to state 53
    IfElse                         shift and go to state 54
    Repeat                         shift and go to state 55
    Until                          shift and go to state 56
    While                          shift and go to state 57
    PrintLine                      shift and go to state 58
    And                            shift and go to state 59
    Or                             shift and go to state 60
    Add                            shift and go to state 61

state 45

    (39) expresion -> expresion_alge1 . expresion
    (46) expresion -> expresion_alge1 . empty
    (38) expresion -> . funcion expresion
    (39) expresion -> . expresion_alge1 expresion
    (40) expresion -> . expresion_alge2 expresion
    (41) expresion -> . Sum expresion
    (42) expresion -> . Substr expresion
    (43) expresion -> . Mult expresion
    (44) expresion -> . Div expresion
    (45) expresion -> . funcion empty
    (46) expresion -> . expresion_alge1 empty
    (47) expresion -> . expresion_alge2 empty
    (48) expresion -> . Sum empty
    (49) expresion -> . Substr empty
    (50) expresion -> . Mult empty
    (51) expresion -> . Div empty
    (52) expresion -> . empty empty
    (249) empty -> .
    (67) funcion -> . Random empty
    (68) funcion -> . Run empty
    (69) funcion -> . If empty
    (70) funcion -> . IfElse empty
    (71) funcion -> . Repeat empty
    (72) funcion -> . Until empty
    (73) funcion -> . While empty
    (74) funcion -> . PrintLine empty
    (75) funcion -> . And empty
    (76) funcion -> . Or empty
    (77) funcion -> . Add empty
    (78) funcion -> . Put2 empty
    (79) funcion -> . Put empty
    (80) funcion -> . PUNTOCOMA funcion
    (81) funcion -> . empty empty
    (90) expresion_alge1 -> . NUMERO SUMA NUMERO
    (91) expresion_alge1 -> . NUMERO RESTA NUMERO
    (92) expresion_alge1 -> . NUMERO MULTI NUMERO
    (93) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (94) expresion_alge1 -> . NUMERO EXPONENTE NUMERO
    (95) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (96) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (97) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (98) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (99) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P EXPONENTE ABRE_P expresion_alge1 CIERRA_P
    (100) Sum -> . SUM ABRE_P NUMERO COMA NUMERO CIERRA_P
    (101) Sum -> . SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (102) Sum -> . SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (103) Sum -> . SUM ABRE_P NUMERO COMA Var CIERRA_P
    (104) Sum -> . SUM ABRE_P Var COMA NUMERO CIERRA_P
    (105) Sum -> . SUM ABRE_P Var COMA Var CIERRA_P
    (106) Sum -> . SUM ABRE_P expresion_alge1 COMA Var CIERRA_P
    (107) Sum -> . SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (108) Sum -> . SUM ABRE_P Var COMA expresion_alge1 CIERRA_P
    (109) Substr -> . SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P
    (110) Substr -> . SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (111) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (112) Substr -> . SUBSTR ABRE_P NUMERO COMA Var CIERRA_P
    (113) Substr -> . SUBSTR ABRE_P Var COMA NUMERO CIERRA_P
    (114) Substr -> . SUBSTR ABRE_P Var COMA Var CIERRA_P
    (115) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P
    (116) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (117) Substr -> . SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P
    (118) Mult -> . MULTI ABRE_P NUMERO COMA NUMERO CIERRA_P
    (119) Mult -> . MULTI ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (120) Mult -> . MULTI ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (121) Mult -> . MULTI ABRE_P NUMERO COMA Var CIERRA_P
    (122) Mult -> . MULTI ABRE_P Var COMA NUMERO CIERRA_P
    (123) Mult -> . MULTI ABRE_P Var COMA Var CIERRA_P
    (124) Mult -> . MULTI ABRE_P expresion_alge1 COMA Var CIERRA_P
    (125) Mult -> . MULTI ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (126) Mult -> . MULTI ABRE_P Var COMA expresion_alge1 CIERRA_P
    (127) Div -> . DIV ABRE_P NUMERO COMA NUMERO CIERRA_P
    (128) Div -> . DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (129) Div -> . DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (130) Div -> . DIV ABRE_P NUMERO COMA Var CIERRA_P
    (131) Div -> . DIV ABRE_P Var COMA NUMERO CIERRA_P
    (132) Div -> . DIV ABRE_P Var COMA Var CIERRA_P
    (133) Div -> . DIV ABRE_P expresion_alge1 COMA Var CIERRA_P
    (134) Div -> . DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (135) Div -> . DIV ABRE_P Var COMA expresion_alge1 CIERRA_P
    (201) Random -> . RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA
    (241) Run -> . RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA
    (187) If -> . IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2
    (188) IfElse -> . IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2
    (190) Repeat -> . REPEAT NUMERO BRACKET1 ordenes BRACKET2
    (191) Until -> . UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2
    (189) While -> . WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2
    (248) PrintLine -> . PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA
    (185) And -> . AND ABRE_P expresion COMA expresion CIERRA_P PUNTOCOMA
    (186) Or -> . OR ABRE_P expresion COMA expresion CIERRA_P PUNTOCOMA
    (192) Add -> . ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA
    (193) Add -> . ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (194) Add -> . ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (195) Add -> . ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (196) Add -> . ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (83) Put2 -> . PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (84) Put2 -> . PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (85) Put2 -> . PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (86) Put2 -> . PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA
    (82) Put -> . PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA

  ! shift/reduce conflict for PUNTOCOMA resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for ABRE_P resolved as shift
  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for SUBSTR resolved as shift
  ! shift/reduce conflict for MULTI resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for RANDOM resolved as shift
  ! shift/reduce conflict for RUN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for IFELSE resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for PRINTLINE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for PUT resolved as shift
    FIN             reduce using rule 249 (empty -> .)
    COMA            reduce using rule 249 (empty -> .)
    CIERRA_P        reduce using rule 249 (empty -> .)
    PUNTOCOMA       shift and go to state 62
    NUMERO          shift and go to state 64
    ABRE_P          shift and go to state 63
    SUM             shift and go to state 67
    SUBSTR          shift and go to state 68
    MULTI           shift and go to state 65
    DIV             shift and go to state 66
    RANDOM          shift and go to state 69
    RUN             shift and go to state 70
    IF              shift and go to state 71
    IFELSE          shift and go to state 72
    REPEAT          shift and go to state 73
    UNTIL           shift and go to state 74
    WHILE           shift and go to state 75
    PRINTLINE       shift and go to state 76
    AND             shift and go to state 77
    OR              shift and go to state 78
    ADD             shift and go to state 79
    PUT             shift and go to state 94

  ! PUNTOCOMA       [ reduce using rule 249 (empty -> .) ]
  ! NUMERO          [ reduce using rule 249 (empty -> .) ]
  ! ABRE_P          [ reduce using rule 249 (empty -> .) ]
  ! SUM             [ reduce using rule 249 (empty -> .) ]
  ! SUBSTR          [ reduce using rule 249 (empty -> .) ]
  ! MULTI           [ reduce using rule 249 (empty -> .) ]
  ! DIV             [ reduce using rule 249 (empty -> .) ]
  ! RANDOM          [ reduce using rule 249 (empty -> .) ]
  ! RUN             [ reduce using rule 249 (empty -> .) ]
  ! IF              [ reduce using rule 249 (empty -> .) ]
  ! IFELSE          [ reduce using rule 249 (empty -> .) ]
  ! REPEAT          [ reduce using rule 249 (empty -> .) ]
  ! UNTIL           [ reduce using rule 249 (empty -> .) ]
  ! WHILE           [ reduce using rule 249 (empty -> .) ]
  ! PRINTLINE       [ reduce using rule 249 (empty -> .) ]
  ! AND             [ reduce using rule 249 (empty -> .) ]
  ! OR              [ reduce using rule 249 (empty -> .) ]
  ! ADD             [ reduce using rule 249 (empty -> .) ]
  ! PUT             [ reduce using rule 249 (empty -> .) ]

    expresion_alge1                shift and go to state 45
    expresion                      shift and go to state 100
    empty                          shift and go to state 101
    funcion                        shift and go to state 89
    expresion_alge2                shift and go to state 46
    Sum                            shift and go to state 47
    Substr                         shift and go to state 48
    Mult                           shift and go to state 49
    Div                            shift and go to state 50
    Random                         shift and go to state 51
    Run                            shift and go to state 52
    If                             shift and go to state 53
    IfElse                         shift and go to state 54
    Repeat                         shift and go to state 55
    Until                          shift and go to state 56
    While                          shift and go to state 57
    PrintLine                      shift and go to state 58
    And                            shift and go to state 59
    Or                             shift and go to state 60
    Add                            shift and go to state 61
    Put2                           shift and go to state 92
    Put                            shift and go to state 93

state 46

    (40) expresion -> expresion_alge2 . expresion
    (47) expresion -> expresion_alge2 . empty
    (38) expresion -> . funcion expresion
    (39) expresion -> . expresion_alge1 expresion
    (40) expresion -> . expresion_alge2 expresion
    (41) expresion -> . Sum expresion
    (42) expresion -> . Substr expresion
    (43) expresion -> . Mult expresion
    (44) expresion -> . Div expresion
    (45) expresion -> . funcion empty
    (46) expresion -> . expresion_alge1 empty
    (47) expresion -> . expresion_alge2 empty
    (48) expresion -> . Sum empty
    (49) expresion -> . Substr empty
    (50) expresion -> . Mult empty
    (51) expresion -> . Div empty
    (52) expresion -> . empty empty
    (249) empty -> .
    (67) funcion -> . Random empty
    (68) funcion -> . Run empty
    (69) funcion -> . If empty
    (70) funcion -> . IfElse empty
    (71) funcion -> . Repeat empty
    (72) funcion -> . Until empty
    (73) funcion -> . While empty
    (74) funcion -> . PrintLine empty
    (75) funcion -> . And empty
    (76) funcion -> . Or empty
    (77) funcion -> . Add empty
    (78) funcion -> . Put2 empty
    (79) funcion -> . Put empty
    (80) funcion -> . PUNTOCOMA funcion
    (81) funcion -> . empty empty
    (90) expresion_alge1 -> . NUMERO SUMA NUMERO
    (91) expresion_alge1 -> . NUMERO RESTA NUMERO
    (92) expresion_alge1 -> . NUMERO MULTI NUMERO
    (93) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (94) expresion_alge1 -> . NUMERO EXPONENTE NUMERO
    (95) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (96) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (97) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (98) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (99) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P EXPONENTE ABRE_P expresion_alge1 CIERRA_P
    (100) Sum -> . SUM ABRE_P NUMERO COMA NUMERO CIERRA_P
    (101) Sum -> . SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (102) Sum -> . SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (103) Sum -> . SUM ABRE_P NUMERO COMA Var CIERRA_P
    (104) Sum -> . SUM ABRE_P Var COMA NUMERO CIERRA_P
    (105) Sum -> . SUM ABRE_P Var COMA Var CIERRA_P
    (106) Sum -> . SUM ABRE_P expresion_alge1 COMA Var CIERRA_P
    (107) Sum -> . SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (108) Sum -> . SUM ABRE_P Var COMA expresion_alge1 CIERRA_P
    (109) Substr -> . SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P
    (110) Substr -> . SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (111) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (112) Substr -> . SUBSTR ABRE_P NUMERO COMA Var CIERRA_P
    (113) Substr -> . SUBSTR ABRE_P Var COMA NUMERO CIERRA_P
    (114) Substr -> . SUBSTR ABRE_P Var COMA Var CIERRA_P
    (115) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P
    (116) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (117) Substr -> . SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P
    (118) Mult -> . MULTI ABRE_P NUMERO COMA NUMERO CIERRA_P
    (119) Mult -> . MULTI ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (120) Mult -> . MULTI ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (121) Mult -> . MULTI ABRE_P NUMERO COMA Var CIERRA_P
    (122) Mult -> . MULTI ABRE_P Var COMA NUMERO CIERRA_P
    (123) Mult -> . MULTI ABRE_P Var COMA Var CIERRA_P
    (124) Mult -> . MULTI ABRE_P expresion_alge1 COMA Var CIERRA_P
    (125) Mult -> . MULTI ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (126) Mult -> . MULTI ABRE_P Var COMA expresion_alge1 CIERRA_P
    (127) Div -> . DIV ABRE_P NUMERO COMA NUMERO CIERRA_P
    (128) Div -> . DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (129) Div -> . DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (130) Div -> . DIV ABRE_P NUMERO COMA Var CIERRA_P
    (131) Div -> . DIV ABRE_P Var COMA NUMERO CIERRA_P
    (132) Div -> . DIV ABRE_P Var COMA Var CIERRA_P
    (133) Div -> . DIV ABRE_P expresion_alge1 COMA Var CIERRA_P
    (134) Div -> . DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (135) Div -> . DIV ABRE_P Var COMA expresion_alge1 CIERRA_P
    (201) Random -> . RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA
    (241) Run -> . RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA
    (187) If -> . IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2
    (188) IfElse -> . IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2
    (190) Repeat -> . REPEAT NUMERO BRACKET1 ordenes BRACKET2
    (191) Until -> . UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2
    (189) While -> . WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2
    (248) PrintLine -> . PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA
    (185) And -> . AND ABRE_P expresion COMA expresion CIERRA_P PUNTOCOMA
    (186) Or -> . OR ABRE_P expresion COMA expresion CIERRA_P PUNTOCOMA
    (192) Add -> . ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA
    (193) Add -> . ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (194) Add -> . ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (195) Add -> . ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (196) Add -> . ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (83) Put2 -> . PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (84) Put2 -> . PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (85) Put2 -> . PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (86) Put2 -> . PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA
    (82) Put -> . PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA

  ! shift/reduce conflict for PUNTOCOMA resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for ABRE_P resolved as shift
  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for SUBSTR resolved as shift
  ! shift/reduce conflict for MULTI resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for RANDOM resolved as shift
  ! shift/reduce conflict for RUN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for IFELSE resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for PRINTLINE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for PUT resolved as shift
    FIN             reduce using rule 249 (empty -> .)
    COMA            reduce using rule 249 (empty -> .)
    CIERRA_P        reduce using rule 249 (empty -> .)
    PUNTOCOMA       shift and go to state 62
    NUMERO          shift and go to state 64
    ABRE_P          shift and go to state 63
    SUM             shift and go to state 67
    SUBSTR          shift and go to state 68
    MULTI           shift and go to state 65
    DIV             shift and go to state 66
    RANDOM          shift and go to state 69
    RUN             shift and go to state 70
    IF              shift and go to state 71
    IFELSE          shift and go to state 72
    REPEAT          shift and go to state 73
    UNTIL           shift and go to state 74
    WHILE           shift and go to state 75
    PRINTLINE       shift and go to state 76
    AND             shift and go to state 77
    OR              shift and go to state 78
    ADD             shift and go to state 79
    PUT             shift and go to state 94

  ! PUNTOCOMA       [ reduce using rule 249 (empty -> .) ]
  ! NUMERO          [ reduce using rule 249 (empty -> .) ]
  ! ABRE_P          [ reduce using rule 249 (empty -> .) ]
  ! SUM             [ reduce using rule 249 (empty -> .) ]
  ! SUBSTR          [ reduce using rule 249 (empty -> .) ]
  ! MULTI           [ reduce using rule 249 (empty -> .) ]
  ! DIV             [ reduce using rule 249 (empty -> .) ]
  ! RANDOM          [ reduce using rule 249 (empty -> .) ]
  ! RUN             [ reduce using rule 249 (empty -> .) ]
  ! IF              [ reduce using rule 249 (empty -> .) ]
  ! IFELSE          [ reduce using rule 249 (empty -> .) ]
  ! REPEAT          [ reduce using rule 249 (empty -> .) ]
  ! UNTIL           [ reduce using rule 249 (empty -> .) ]
  ! WHILE           [ reduce using rule 249 (empty -> .) ]
  ! PRINTLINE       [ reduce using rule 249 (empty -> .) ]
  ! AND             [ reduce using rule 249 (empty -> .) ]
  ! OR              [ reduce using rule 249 (empty -> .) ]
  ! ADD             [ reduce using rule 249 (empty -> .) ]
  ! PUT             [ reduce using rule 249 (empty -> .) ]

    expresion_alge2                shift and go to state 46
    expresion                      shift and go to state 102
    empty                          shift and go to state 103
    funcion                        shift and go to state 89
    expresion_alge1                shift and go to state 45
    Sum                            shift and go to state 47
    Substr                         shift and go to state 48
    Mult                           shift and go to state 49
    Div                            shift and go to state 50
    Random                         shift and go to state 51
    Run                            shift and go to state 52
    If                             shift and go to state 53
    IfElse                         shift and go to state 54
    Repeat                         shift and go to state 55
    Until                          shift and go to state 56
    While                          shift and go to state 57
    PrintLine                      shift and go to state 58
    And                            shift and go to state 59
    Or                             shift and go to state 60
    Add                            shift and go to state 61
    Put2                           shift and go to state 92
    Put                            shift and go to state 93

state 47

    (41) expresion -> Sum . expresion
    (48) expresion -> Sum . empty
    (38) expresion -> . funcion expresion
    (39) expresion -> . expresion_alge1 expresion
    (40) expresion -> . expresion_alge2 expresion
    (41) expresion -> . Sum expresion
    (42) expresion -> . Substr expresion
    (43) expresion -> . Mult expresion
    (44) expresion -> . Div expresion
    (45) expresion -> . funcion empty
    (46) expresion -> . expresion_alge1 empty
    (47) expresion -> . expresion_alge2 empty
    (48) expresion -> . Sum empty
    (49) expresion -> . Substr empty
    (50) expresion -> . Mult empty
    (51) expresion -> . Div empty
    (52) expresion -> . empty empty
    (249) empty -> .
    (67) funcion -> . Random empty
    (68) funcion -> . Run empty
    (69) funcion -> . If empty
    (70) funcion -> . IfElse empty
    (71) funcion -> . Repeat empty
    (72) funcion -> . Until empty
    (73) funcion -> . While empty
    (74) funcion -> . PrintLine empty
    (75) funcion -> . And empty
    (76) funcion -> . Or empty
    (77) funcion -> . Add empty
    (78) funcion -> . Put2 empty
    (79) funcion -> . Put empty
    (80) funcion -> . PUNTOCOMA funcion
    (81) funcion -> . empty empty
    (90) expresion_alge1 -> . NUMERO SUMA NUMERO
    (91) expresion_alge1 -> . NUMERO RESTA NUMERO
    (92) expresion_alge1 -> . NUMERO MULTI NUMERO
    (93) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (94) expresion_alge1 -> . NUMERO EXPONENTE NUMERO
    (95) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (96) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (97) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (98) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (99) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P EXPONENTE ABRE_P expresion_alge1 CIERRA_P
    (100) Sum -> . SUM ABRE_P NUMERO COMA NUMERO CIERRA_P
    (101) Sum -> . SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (102) Sum -> . SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (103) Sum -> . SUM ABRE_P NUMERO COMA Var CIERRA_P
    (104) Sum -> . SUM ABRE_P Var COMA NUMERO CIERRA_P
    (105) Sum -> . SUM ABRE_P Var COMA Var CIERRA_P
    (106) Sum -> . SUM ABRE_P expresion_alge1 COMA Var CIERRA_P
    (107) Sum -> . SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (108) Sum -> . SUM ABRE_P Var COMA expresion_alge1 CIERRA_P
    (109) Substr -> . SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P
    (110) Substr -> . SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (111) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (112) Substr -> . SUBSTR ABRE_P NUMERO COMA Var CIERRA_P
    (113) Substr -> . SUBSTR ABRE_P Var COMA NUMERO CIERRA_P
    (114) Substr -> . SUBSTR ABRE_P Var COMA Var CIERRA_P
    (115) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P
    (116) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (117) Substr -> . SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P
    (118) Mult -> . MULTI ABRE_P NUMERO COMA NUMERO CIERRA_P
    (119) Mult -> . MULTI ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (120) Mult -> . MULTI ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (121) Mult -> . MULTI ABRE_P NUMERO COMA Var CIERRA_P
    (122) Mult -> . MULTI ABRE_P Var COMA NUMERO CIERRA_P
    (123) Mult -> . MULTI ABRE_P Var COMA Var CIERRA_P
    (124) Mult -> . MULTI ABRE_P expresion_alge1 COMA Var CIERRA_P
    (125) Mult -> . MULTI ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (126) Mult -> . MULTI ABRE_P Var COMA expresion_alge1 CIERRA_P
    (127) Div -> . DIV ABRE_P NUMERO COMA NUMERO CIERRA_P
    (128) Div -> . DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (129) Div -> . DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (130) Div -> . DIV ABRE_P NUMERO COMA Var CIERRA_P
    (131) Div -> . DIV ABRE_P Var COMA NUMERO CIERRA_P
    (132) Div -> . DIV ABRE_P Var COMA Var CIERRA_P
    (133) Div -> . DIV ABRE_P expresion_alge1 COMA Var CIERRA_P
    (134) Div -> . DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (135) Div -> . DIV ABRE_P Var COMA expresion_alge1 CIERRA_P
    (201) Random -> . RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA
    (241) Run -> . RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA
    (187) If -> . IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2
    (188) IfElse -> . IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2
    (190) Repeat -> . REPEAT NUMERO BRACKET1 ordenes BRACKET2
    (191) Until -> . UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2
    (189) While -> . WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2
    (248) PrintLine -> . PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA
    (185) And -> . AND ABRE_P expresion COMA expresion CIERRA_P PUNTOCOMA
    (186) Or -> . OR ABRE_P expresion COMA expresion CIERRA_P PUNTOCOMA
    (192) Add -> . ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA
    (193) Add -> . ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (194) Add -> . ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (195) Add -> . ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (196) Add -> . ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (83) Put2 -> . PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (84) Put2 -> . PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (85) Put2 -> . PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (86) Put2 -> . PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA
    (82) Put -> . PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA

  ! shift/reduce conflict for PUNTOCOMA resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for ABRE_P resolved as shift
  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for SUBSTR resolved as shift
  ! shift/reduce conflict for MULTI resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for RANDOM resolved as shift
  ! shift/reduce conflict for RUN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for IFELSE resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for PRINTLINE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for PUT resolved as shift
    FIN             reduce using rule 249 (empty -> .)
    COMA            reduce using rule 249 (empty -> .)
    CIERRA_P        reduce using rule 249 (empty -> .)
    PUNTOCOMA       shift and go to state 62
    NUMERO          shift and go to state 64
    ABRE_P          shift and go to state 63
    SUM             shift and go to state 67
    SUBSTR          shift and go to state 68
    MULTI           shift and go to state 65
    DIV             shift and go to state 66
    RANDOM          shift and go to state 69
    RUN             shift and go to state 70
    IF              shift and go to state 71
    IFELSE          shift and go to state 72
    REPEAT          shift and go to state 73
    UNTIL           shift and go to state 74
    WHILE           shift and go to state 75
    PRINTLINE       shift and go to state 76
    AND             shift and go to state 77
    OR              shift and go to state 78
    ADD             shift and go to state 79
    PUT             shift and go to state 94

  ! PUNTOCOMA       [ reduce using rule 249 (empty -> .) ]
  ! NUMERO          [ reduce using rule 249 (empty -> .) ]
  ! ABRE_P          [ reduce using rule 249 (empty -> .) ]
  ! SUM             [ reduce using rule 249 (empty -> .) ]
  ! SUBSTR          [ reduce using rule 249 (empty -> .) ]
  ! MULTI           [ reduce using rule 249 (empty -> .) ]
  ! DIV             [ reduce using rule 249 (empty -> .) ]
  ! RANDOM          [ reduce using rule 249 (empty -> .) ]
  ! RUN             [ reduce using rule 249 (empty -> .) ]
  ! IF              [ reduce using rule 249 (empty -> .) ]
  ! IFELSE          [ reduce using rule 249 (empty -> .) ]
  ! REPEAT          [ reduce using rule 249 (empty -> .) ]
  ! UNTIL           [ reduce using rule 249 (empty -> .) ]
  ! WHILE           [ reduce using rule 249 (empty -> .) ]
  ! PRINTLINE       [ reduce using rule 249 (empty -> .) ]
  ! AND             [ reduce using rule 249 (empty -> .) ]
  ! OR              [ reduce using rule 249 (empty -> .) ]
  ! ADD             [ reduce using rule 249 (empty -> .) ]
  ! PUT             [ reduce using rule 249 (empty -> .) ]

    Sum                            shift and go to state 47
    expresion                      shift and go to state 104
    empty                          shift and go to state 105
    funcion                        shift and go to state 89
    expresion_alge1                shift and go to state 45
    expresion_alge2                shift and go to state 46
    Substr                         shift and go to state 48
    Mult                           shift and go to state 49
    Div                            shift and go to state 50
    Random                         shift and go to state 51
    Run                            shift and go to state 52
    If                             shift and go to state 53
    IfElse                         shift and go to state 54
    Repeat                         shift and go to state 55
    Until                          shift and go to state 56
    While                          shift and go to state 57
    PrintLine                      shift and go to state 58
    And                            shift and go to state 59
    Or                             shift and go to state 60
    Add                            shift and go to state 61
    Put2                           shift and go to state 92
    Put                            shift and go to state 93

state 48

    (42) expresion -> Substr . expresion
    (49) expresion -> Substr . empty
    (38) expresion -> . funcion expresion
    (39) expresion -> . expresion_alge1 expresion
    (40) expresion -> . expresion_alge2 expresion
    (41) expresion -> . Sum expresion
    (42) expresion -> . Substr expresion
    (43) expresion -> . Mult expresion
    (44) expresion -> . Div expresion
    (45) expresion -> . funcion empty
    (46) expresion -> . expresion_alge1 empty
    (47) expresion -> . expresion_alge2 empty
    (48) expresion -> . Sum empty
    (49) expresion -> . Substr empty
    (50) expresion -> . Mult empty
    (51) expresion -> . Div empty
    (52) expresion -> . empty empty
    (249) empty -> .
    (67) funcion -> . Random empty
    (68) funcion -> . Run empty
    (69) funcion -> . If empty
    (70) funcion -> . IfElse empty
    (71) funcion -> . Repeat empty
    (72) funcion -> . Until empty
    (73) funcion -> . While empty
    (74) funcion -> . PrintLine empty
    (75) funcion -> . And empty
    (76) funcion -> . Or empty
    (77) funcion -> . Add empty
    (78) funcion -> . Put2 empty
    (79) funcion -> . Put empty
    (80) funcion -> . PUNTOCOMA funcion
    (81) funcion -> . empty empty
    (90) expresion_alge1 -> . NUMERO SUMA NUMERO
    (91) expresion_alge1 -> . NUMERO RESTA NUMERO
    (92) expresion_alge1 -> . NUMERO MULTI NUMERO
    (93) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (94) expresion_alge1 -> . NUMERO EXPONENTE NUMERO
    (95) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (96) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (97) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (98) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (99) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P EXPONENTE ABRE_P expresion_alge1 CIERRA_P
    (100) Sum -> . SUM ABRE_P NUMERO COMA NUMERO CIERRA_P
    (101) Sum -> . SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (102) Sum -> . SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (103) Sum -> . SUM ABRE_P NUMERO COMA Var CIERRA_P
    (104) Sum -> . SUM ABRE_P Var COMA NUMERO CIERRA_P
    (105) Sum -> . SUM ABRE_P Var COMA Var CIERRA_P
    (106) Sum -> . SUM ABRE_P expresion_alge1 COMA Var CIERRA_P
    (107) Sum -> . SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (108) Sum -> . SUM ABRE_P Var COMA expresion_alge1 CIERRA_P
    (109) Substr -> . SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P
    (110) Substr -> . SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (111) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (112) Substr -> . SUBSTR ABRE_P NUMERO COMA Var CIERRA_P
    (113) Substr -> . SUBSTR ABRE_P Var COMA NUMERO CIERRA_P
    (114) Substr -> . SUBSTR ABRE_P Var COMA Var CIERRA_P
    (115) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P
    (116) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (117) Substr -> . SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P
    (118) Mult -> . MULTI ABRE_P NUMERO COMA NUMERO CIERRA_P
    (119) Mult -> . MULTI ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (120) Mult -> . MULTI ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (121) Mult -> . MULTI ABRE_P NUMERO COMA Var CIERRA_P
    (122) Mult -> . MULTI ABRE_P Var COMA NUMERO CIERRA_P
    (123) Mult -> . MULTI ABRE_P Var COMA Var CIERRA_P
    (124) Mult -> . MULTI ABRE_P expresion_alge1 COMA Var CIERRA_P
    (125) Mult -> . MULTI ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (126) Mult -> . MULTI ABRE_P Var COMA expresion_alge1 CIERRA_P
    (127) Div -> . DIV ABRE_P NUMERO COMA NUMERO CIERRA_P
    (128) Div -> . DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (129) Div -> . DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (130) Div -> . DIV ABRE_P NUMERO COMA Var CIERRA_P
    (131) Div -> . DIV ABRE_P Var COMA NUMERO CIERRA_P
    (132) Div -> . DIV ABRE_P Var COMA Var CIERRA_P
    (133) Div -> . DIV ABRE_P expresion_alge1 COMA Var CIERRA_P
    (134) Div -> . DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (135) Div -> . DIV ABRE_P Var COMA expresion_alge1 CIERRA_P
    (201) Random -> . RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA
    (241) Run -> . RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA
    (187) If -> . IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2
    (188) IfElse -> . IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2
    (190) Repeat -> . REPEAT NUMERO BRACKET1 ordenes BRACKET2
    (191) Until -> . UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2
    (189) While -> . WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2
    (248) PrintLine -> . PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA
    (185) And -> . AND ABRE_P expresion COMA expresion CIERRA_P PUNTOCOMA
    (186) Or -> . OR ABRE_P expresion COMA expresion CIERRA_P PUNTOCOMA
    (192) Add -> . ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA
    (193) Add -> . ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (194) Add -> . ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (195) Add -> . ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (196) Add -> . ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (83) Put2 -> . PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (84) Put2 -> . PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (85) Put2 -> . PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (86) Put2 -> . PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA
    (82) Put -> . PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA

  ! shift/reduce conflict for PUNTOCOMA resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for ABRE_P resolved as shift
  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for SUBSTR resolved as shift
  ! shift/reduce conflict for MULTI resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for RANDOM resolved as shift
  ! shift/reduce conflict for RUN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for IFELSE resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for PRINTLINE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for PUT resolved as shift
    FIN             reduce using rule 249 (empty -> .)
    COMA            reduce using rule 249 (empty -> .)
    CIERRA_P        reduce using rule 249 (empty -> .)
    PUNTOCOMA       shift and go to state 62
    NUMERO          shift and go to state 64
    ABRE_P          shift and go to state 63
    SUM             shift and go to state 67
    SUBSTR          shift and go to state 68
    MULTI           shift and go to state 65
    DIV             shift and go to state 66
    RANDOM          shift and go to state 69
    RUN             shift and go to state 70
    IF              shift and go to state 71
    IFELSE          shift and go to state 72
    REPEAT          shift and go to state 73
    UNTIL           shift and go to state 74
    WHILE           shift and go to state 75
    PRINTLINE       shift and go to state 76
    AND             shift and go to state 77
    OR              shift and go to state 78
    ADD             shift and go to state 79
    PUT             shift and go to state 94

  ! PUNTOCOMA       [ reduce using rule 249 (empty -> .) ]
  ! NUMERO          [ reduce using rule 249 (empty -> .) ]
  ! ABRE_P          [ reduce using rule 249 (empty -> .) ]
  ! SUM             [ reduce using rule 249 (empty -> .) ]
  ! SUBSTR          [ reduce using rule 249 (empty -> .) ]
  ! MULTI           [ reduce using rule 249 (empty -> .) ]
  ! DIV             [ reduce using rule 249 (empty -> .) ]
  ! RANDOM          [ reduce using rule 249 (empty -> .) ]
  ! RUN             [ reduce using rule 249 (empty -> .) ]
  ! IF              [ reduce using rule 249 (empty -> .) ]
  ! IFELSE          [ reduce using rule 249 (empty -> .) ]
  ! REPEAT          [ reduce using rule 249 (empty -> .) ]
  ! UNTIL           [ reduce using rule 249 (empty -> .) ]
  ! WHILE           [ reduce using rule 249 (empty -> .) ]
  ! PRINTLINE       [ reduce using rule 249 (empty -> .) ]
  ! AND             [ reduce using rule 249 (empty -> .) ]
  ! OR              [ reduce using rule 249 (empty -> .) ]
  ! ADD             [ reduce using rule 249 (empty -> .) ]
  ! PUT             [ reduce using rule 249 (empty -> .) ]

    Substr                         shift and go to state 48
    expresion                      shift and go to state 106
    empty                          shift and go to state 107
    funcion                        shift and go to state 89
    expresion_alge1                shift and go to state 45
    expresion_alge2                shift and go to state 46
    Sum                            shift and go to state 47
    Mult                           shift and go to state 49
    Div                            shift and go to state 50
    Random                         shift and go to state 51
    Run                            shift and go to state 52
    If                             shift and go to state 53
    IfElse                         shift and go to state 54
    Repeat                         shift and go to state 55
    Until                          shift and go to state 56
    While                          shift and go to state 57
    PrintLine                      shift and go to state 58
    And                            shift and go to state 59
    Or                             shift and go to state 60
    Add                            shift and go to state 61
    Put2                           shift and go to state 92
    Put                            shift and go to state 93

state 49

    (43) expresion -> Mult . expresion
    (50) expresion -> Mult . empty
    (38) expresion -> . funcion expresion
    (39) expresion -> . expresion_alge1 expresion
    (40) expresion -> . expresion_alge2 expresion
    (41) expresion -> . Sum expresion
    (42) expresion -> . Substr expresion
    (43) expresion -> . Mult expresion
    (44) expresion -> . Div expresion
    (45) expresion -> . funcion empty
    (46) expresion -> . expresion_alge1 empty
    (47) expresion -> . expresion_alge2 empty
    (48) expresion -> . Sum empty
    (49) expresion -> . Substr empty
    (50) expresion -> . Mult empty
    (51) expresion -> . Div empty
    (52) expresion -> . empty empty
    (249) empty -> .
    (67) funcion -> . Random empty
    (68) funcion -> . Run empty
    (69) funcion -> . If empty
    (70) funcion -> . IfElse empty
    (71) funcion -> . Repeat empty
    (72) funcion -> . Until empty
    (73) funcion -> . While empty
    (74) funcion -> . PrintLine empty
    (75) funcion -> . And empty
    (76) funcion -> . Or empty
    (77) funcion -> . Add empty
    (78) funcion -> . Put2 empty
    (79) funcion -> . Put empty
    (80) funcion -> . PUNTOCOMA funcion
    (81) funcion -> . empty empty
    (90) expresion_alge1 -> . NUMERO SUMA NUMERO
    (91) expresion_alge1 -> . NUMERO RESTA NUMERO
    (92) expresion_alge1 -> . NUMERO MULTI NUMERO
    (93) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (94) expresion_alge1 -> . NUMERO EXPONENTE NUMERO
    (95) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (96) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (97) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (98) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (99) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P EXPONENTE ABRE_P expresion_alge1 CIERRA_P
    (100) Sum -> . SUM ABRE_P NUMERO COMA NUMERO CIERRA_P
    (101) Sum -> . SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (102) Sum -> . SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (103) Sum -> . SUM ABRE_P NUMERO COMA Var CIERRA_P
    (104) Sum -> . SUM ABRE_P Var COMA NUMERO CIERRA_P
    (105) Sum -> . SUM ABRE_P Var COMA Var CIERRA_P
    (106) Sum -> . SUM ABRE_P expresion_alge1 COMA Var CIERRA_P
    (107) Sum -> . SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (108) Sum -> . SUM ABRE_P Var COMA expresion_alge1 CIERRA_P
    (109) Substr -> . SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P
    (110) Substr -> . SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (111) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (112) Substr -> . SUBSTR ABRE_P NUMERO COMA Var CIERRA_P
    (113) Substr -> . SUBSTR ABRE_P Var COMA NUMERO CIERRA_P
    (114) Substr -> . SUBSTR ABRE_P Var COMA Var CIERRA_P
    (115) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P
    (116) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (117) Substr -> . SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P
    (118) Mult -> . MULTI ABRE_P NUMERO COMA NUMERO CIERRA_P
    (119) Mult -> . MULTI ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (120) Mult -> . MULTI ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (121) Mult -> . MULTI ABRE_P NUMERO COMA Var CIERRA_P
    (122) Mult -> . MULTI ABRE_P Var COMA NUMERO CIERRA_P
    (123) Mult -> . MULTI ABRE_P Var COMA Var CIERRA_P
    (124) Mult -> . MULTI ABRE_P expresion_alge1 COMA Var CIERRA_P
    (125) Mult -> . MULTI ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (126) Mult -> . MULTI ABRE_P Var COMA expresion_alge1 CIERRA_P
    (127) Div -> . DIV ABRE_P NUMERO COMA NUMERO CIERRA_P
    (128) Div -> . DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (129) Div -> . DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (130) Div -> . DIV ABRE_P NUMERO COMA Var CIERRA_P
    (131) Div -> . DIV ABRE_P Var COMA NUMERO CIERRA_P
    (132) Div -> . DIV ABRE_P Var COMA Var CIERRA_P
    (133) Div -> . DIV ABRE_P expresion_alge1 COMA Var CIERRA_P
    (134) Div -> . DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (135) Div -> . DIV ABRE_P Var COMA expresion_alge1 CIERRA_P
    (201) Random -> . RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA
    (241) Run -> . RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA
    (187) If -> . IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2
    (188) IfElse -> . IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2
    (190) Repeat -> . REPEAT NUMERO BRACKET1 ordenes BRACKET2
    (191) Until -> . UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2
    (189) While -> . WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2
    (248) PrintLine -> . PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA
    (185) And -> . AND ABRE_P expresion COMA expresion CIERRA_P PUNTOCOMA
    (186) Or -> . OR ABRE_P expresion COMA expresion CIERRA_P PUNTOCOMA
    (192) Add -> . ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA
    (193) Add -> . ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (194) Add -> . ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (195) Add -> . ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (196) Add -> . ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (83) Put2 -> . PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (84) Put2 -> . PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (85) Put2 -> . PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (86) Put2 -> . PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA
    (82) Put -> . PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA

  ! shift/reduce conflict for PUNTOCOMA resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for ABRE_P resolved as shift
  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for SUBSTR resolved as shift
  ! shift/reduce conflict for MULTI resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for RANDOM resolved as shift
  ! shift/reduce conflict for RUN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for IFELSE resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for PRINTLINE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for PUT resolved as shift
    FIN             reduce using rule 249 (empty -> .)
    COMA            reduce using rule 249 (empty -> .)
    CIERRA_P        reduce using rule 249 (empty -> .)
    PUNTOCOMA       shift and go to state 62
    NUMERO          shift and go to state 64
    ABRE_P          shift and go to state 63
    SUM             shift and go to state 67
    SUBSTR          shift and go to state 68
    MULTI           shift and go to state 65
    DIV             shift and go to state 66
    RANDOM          shift and go to state 69
    RUN             shift and go to state 70
    IF              shift and go to state 71
    IFELSE          shift and go to state 72
    REPEAT          shift and go to state 73
    UNTIL           shift and go to state 74
    WHILE           shift and go to state 75
    PRINTLINE       shift and go to state 76
    AND             shift and go to state 77
    OR              shift and go to state 78
    ADD             shift and go to state 79
    PUT             shift and go to state 94

  ! PUNTOCOMA       [ reduce using rule 249 (empty -> .) ]
  ! NUMERO          [ reduce using rule 249 (empty -> .) ]
  ! ABRE_P          [ reduce using rule 249 (empty -> .) ]
  ! SUM             [ reduce using rule 249 (empty -> .) ]
  ! SUBSTR          [ reduce using rule 249 (empty -> .) ]
  ! MULTI           [ reduce using rule 249 (empty -> .) ]
  ! DIV             [ reduce using rule 249 (empty -> .) ]
  ! RANDOM          [ reduce using rule 249 (empty -> .) ]
  ! RUN             [ reduce using rule 249 (empty -> .) ]
  ! IF              [ reduce using rule 249 (empty -> .) ]
  ! IFELSE          [ reduce using rule 249 (empty -> .) ]
  ! REPEAT          [ reduce using rule 249 (empty -> .) ]
  ! UNTIL           [ reduce using rule 249 (empty -> .) ]
  ! WHILE           [ reduce using rule 249 (empty -> .) ]
  ! PRINTLINE       [ reduce using rule 249 (empty -> .) ]
  ! AND             [ reduce using rule 249 (empty -> .) ]
  ! OR              [ reduce using rule 249 (empty -> .) ]
  ! ADD             [ reduce using rule 249 (empty -> .) ]
  ! PUT             [ reduce using rule 249 (empty -> .) ]

    Mult                           shift and go to state 49
    expresion                      shift and go to state 108
    empty                          shift and go to state 109
    funcion                        shift and go to state 89
    expresion_alge1                shift and go to state 45
    expresion_alge2                shift and go to state 46
    Sum                            shift and go to state 47
    Substr                         shift and go to state 48
    Div                            shift and go to state 50
    Random                         shift and go to state 51
    Run                            shift and go to state 52
    If                             shift and go to state 53
    IfElse                         shift and go to state 54
    Repeat                         shift and go to state 55
    Until                          shift and go to state 56
    While                          shift and go to state 57
    PrintLine                      shift and go to state 58
    And                            shift and go to state 59
    Or                             shift and go to state 60
    Add                            shift and go to state 61
    Put2                           shift and go to state 92
    Put                            shift and go to state 93

state 50

    (44) expresion -> Div . expresion
    (51) expresion -> Div . empty
    (38) expresion -> . funcion expresion
    (39) expresion -> . expresion_alge1 expresion
    (40) expresion -> . expresion_alge2 expresion
    (41) expresion -> . Sum expresion
    (42) expresion -> . Substr expresion
    (43) expresion -> . Mult expresion
    (44) expresion -> . Div expresion
    (45) expresion -> . funcion empty
    (46) expresion -> . expresion_alge1 empty
    (47) expresion -> . expresion_alge2 empty
    (48) expresion -> . Sum empty
    (49) expresion -> . Substr empty
    (50) expresion -> . Mult empty
    (51) expresion -> . Div empty
    (52) expresion -> . empty empty
    (249) empty -> .
    (67) funcion -> . Random empty
    (68) funcion -> . Run empty
    (69) funcion -> . If empty
    (70) funcion -> . IfElse empty
    (71) funcion -> . Repeat empty
    (72) funcion -> . Until empty
    (73) funcion -> . While empty
    (74) funcion -> . PrintLine empty
    (75) funcion -> . And empty
    (76) funcion -> . Or empty
    (77) funcion -> . Add empty
    (78) funcion -> . Put2 empty
    (79) funcion -> . Put empty
    (80) funcion -> . PUNTOCOMA funcion
    (81) funcion -> . empty empty
    (90) expresion_alge1 -> . NUMERO SUMA NUMERO
    (91) expresion_alge1 -> . NUMERO RESTA NUMERO
    (92) expresion_alge1 -> . NUMERO MULTI NUMERO
    (93) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (94) expresion_alge1 -> . NUMERO EXPONENTE NUMERO
    (95) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (96) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (97) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (98) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (99) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P EXPONENTE ABRE_P expresion_alge1 CIERRA_P
    (100) Sum -> . SUM ABRE_P NUMERO COMA NUMERO CIERRA_P
    (101) Sum -> . SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (102) Sum -> . SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (103) Sum -> . SUM ABRE_P NUMERO COMA Var CIERRA_P
    (104) Sum -> . SUM ABRE_P Var COMA NUMERO CIERRA_P
    (105) Sum -> . SUM ABRE_P Var COMA Var CIERRA_P
    (106) Sum -> . SUM ABRE_P expresion_alge1 COMA Var CIERRA_P
    (107) Sum -> . SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (108) Sum -> . SUM ABRE_P Var COMA expresion_alge1 CIERRA_P
    (109) Substr -> . SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P
    (110) Substr -> . SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (111) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (112) Substr -> . SUBSTR ABRE_P NUMERO COMA Var CIERRA_P
    (113) Substr -> . SUBSTR ABRE_P Var COMA NUMERO CIERRA_P
    (114) Substr -> . SUBSTR ABRE_P Var COMA Var CIERRA_P
    (115) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P
    (116) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (117) Substr -> . SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P
    (118) Mult -> . MULTI ABRE_P NUMERO COMA NUMERO CIERRA_P
    (119) Mult -> . MULTI ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (120) Mult -> . MULTI ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (121) Mult -> . MULTI ABRE_P NUMERO COMA Var CIERRA_P
    (122) Mult -> . MULTI ABRE_P Var COMA NUMERO CIERRA_P
    (123) Mult -> . MULTI ABRE_P Var COMA Var CIERRA_P
    (124) Mult -> . MULTI ABRE_P expresion_alge1 COMA Var CIERRA_P
    (125) Mult -> . MULTI ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (126) Mult -> . MULTI ABRE_P Var COMA expresion_alge1 CIERRA_P
    (127) Div -> . DIV ABRE_P NUMERO COMA NUMERO CIERRA_P
    (128) Div -> . DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (129) Div -> . DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (130) Div -> . DIV ABRE_P NUMERO COMA Var CIERRA_P
    (131) Div -> . DIV ABRE_P Var COMA NUMERO CIERRA_P
    (132) Div -> . DIV ABRE_P Var COMA Var CIERRA_P
    (133) Div -> . DIV ABRE_P expresion_alge1 COMA Var CIERRA_P
    (134) Div -> . DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (135) Div -> . DIV ABRE_P Var COMA expresion_alge1 CIERRA_P
    (201) Random -> . RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA
    (241) Run -> . RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA
    (187) If -> . IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2
    (188) IfElse -> . IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2
    (190) Repeat -> . REPEAT NUMERO BRACKET1 ordenes BRACKET2
    (191) Until -> . UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2
    (189) While -> . WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2
    (248) PrintLine -> . PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA
    (185) And -> . AND ABRE_P expresion COMA expresion CIERRA_P PUNTOCOMA
    (186) Or -> . OR ABRE_P expresion COMA expresion CIERRA_P PUNTOCOMA
    (192) Add -> . ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA
    (193) Add -> . ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (194) Add -> . ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (195) Add -> . ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (196) Add -> . ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (83) Put2 -> . PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (84) Put2 -> . PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (85) Put2 -> . PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (86) Put2 -> . PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA
    (82) Put -> . PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA

  ! shift/reduce conflict for PUNTOCOMA resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for ABRE_P resolved as shift
  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for SUBSTR resolved as shift
  ! shift/reduce conflict for MULTI resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for RANDOM resolved as shift
  ! shift/reduce conflict for RUN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for IFELSE resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for PRINTLINE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for PUT resolved as shift
    FIN             reduce using rule 249 (empty -> .)
    COMA            reduce using rule 249 (empty -> .)
    CIERRA_P        reduce using rule 249 (empty -> .)
    PUNTOCOMA       shift and go to state 62
    NUMERO          shift and go to state 64
    ABRE_P          shift and go to state 63
    SUM             shift and go to state 67
    SUBSTR          shift and go to state 68
    MULTI           shift and go to state 65
    DIV             shift and go to state 66
    RANDOM          shift and go to state 69
    RUN             shift and go to state 70
    IF              shift and go to state 71
    IFELSE          shift and go to state 72
    REPEAT          shift and go to state 73
    UNTIL           shift and go to state 74
    WHILE           shift and go to state 75
    PRINTLINE       shift and go to state 76
    AND             shift and go to state 77
    OR              shift and go to state 78
    ADD             shift and go to state 79
    PUT             shift and go to state 94

  ! PUNTOCOMA       [ reduce using rule 249 (empty -> .) ]
  ! NUMERO          [ reduce using rule 249 (empty -> .) ]
  ! ABRE_P          [ reduce using rule 249 (empty -> .) ]
  ! SUM             [ reduce using rule 249 (empty -> .) ]
  ! SUBSTR          [ reduce using rule 249 (empty -> .) ]
  ! MULTI           [ reduce using rule 249 (empty -> .) ]
  ! DIV             [ reduce using rule 249 (empty -> .) ]
  ! RANDOM          [ reduce using rule 249 (empty -> .) ]
  ! RUN             [ reduce using rule 249 (empty -> .) ]
  ! IF              [ reduce using rule 249 (empty -> .) ]
  ! IFELSE          [ reduce using rule 249 (empty -> .) ]
  ! REPEAT          [ reduce using rule 249 (empty -> .) ]
  ! UNTIL           [ reduce using rule 249 (empty -> .) ]
  ! WHILE           [ reduce using rule 249 (empty -> .) ]
  ! PRINTLINE       [ reduce using rule 249 (empty -> .) ]
  ! AND             [ reduce using rule 249 (empty -> .) ]
  ! OR              [ reduce using rule 249 (empty -> .) ]
  ! ADD             [ reduce using rule 249 (empty -> .) ]
  ! PUT             [ reduce using rule 249 (empty -> .) ]

    Div                            shift and go to state 50
    expresion                      shift and go to state 110
    empty                          shift and go to state 111
    funcion                        shift and go to state 89
    expresion_alge1                shift and go to state 45
    expresion_alge2                shift and go to state 46
    Sum                            shift and go to state 47
    Substr                         shift and go to state 48
    Mult                           shift and go to state 49
    Random                         shift and go to state 51
    Run                            shift and go to state 52
    If                             shift and go to state 53
    IfElse                         shift and go to state 54
    Repeat                         shift and go to state 55
    Until                          shift and go to state 56
    While                          shift and go to state 57
    PrintLine                      shift and go to state 58
    And                            shift and go to state 59
    Or                             shift and go to state 60
    Add                            shift and go to state 61
    Put2                           shift and go to state 92
    Put                            shift and go to state 93

state 51

    (67) funcion -> Random . empty
    (249) empty -> .

    PUNTOCOMA       reduce using rule 249 (empty -> .)
    NUMERO          reduce using rule 249 (empty -> .)
    ABRE_P          reduce using rule 249 (empty -> .)
    SUM             reduce using rule 249 (empty -> .)
    SUBSTR          reduce using rule 249 (empty -> .)
    MULTI           reduce using rule 249 (empty -> .)
    DIV             reduce using rule 249 (empty -> .)
    RANDOM          reduce using rule 249 (empty -> .)
    RUN             reduce using rule 249 (empty -> .)
    IF              reduce using rule 249 (empty -> .)
    IFELSE          reduce using rule 249 (empty -> .)
    REPEAT          reduce using rule 249 (empty -> .)
    UNTIL           reduce using rule 249 (empty -> .)
    WHILE           reduce using rule 249 (empty -> .)
    PRINTLINE       reduce using rule 249 (empty -> .)
    AND             reduce using rule 249 (empty -> .)
    OR              reduce using rule 249 (empty -> .)
    ADD             reduce using rule 249 (empty -> .)
    PUT             reduce using rule 249 (empty -> .)
    FIN             reduce using rule 249 (empty -> .)
    COMA            reduce using rule 249 (empty -> .)
    CIERRA_P        reduce using rule 249 (empty -> .)
    BRACKET2        reduce using rule 249 (empty -> .)

    empty                          shift and go to state 112

state 52

    (68) funcion -> Run . empty
    (249) empty -> .

    PUNTOCOMA       reduce using rule 249 (empty -> .)
    NUMERO          reduce using rule 249 (empty -> .)
    ABRE_P          reduce using rule 249 (empty -> .)
    SUM             reduce using rule 249 (empty -> .)
    SUBSTR          reduce using rule 249 (empty -> .)
    MULTI           reduce using rule 249 (empty -> .)
    DIV             reduce using rule 249 (empty -> .)
    RANDOM          reduce using rule 249 (empty -> .)
    RUN             reduce using rule 249 (empty -> .)
    IF              reduce using rule 249 (empty -> .)
    IFELSE          reduce using rule 249 (empty -> .)
    REPEAT          reduce using rule 249 (empty -> .)
    UNTIL           reduce using rule 249 (empty -> .)
    WHILE           reduce using rule 249 (empty -> .)
    PRINTLINE       reduce using rule 249 (empty -> .)
    AND             reduce using rule 249 (empty -> .)
    OR              reduce using rule 249 (empty -> .)
    ADD             reduce using rule 249 (empty -> .)
    PUT             reduce using rule 249 (empty -> .)
    FIN             reduce using rule 249 (empty -> .)
    COMA            reduce using rule 249 (empty -> .)
    CIERRA_P        reduce using rule 249 (empty -> .)
    BRACKET2        reduce using rule 249 (empty -> .)

    empty                          shift and go to state 113

state 53

    (69) funcion -> If . empty
    (249) empty -> .

    PUNTOCOMA       reduce using rule 249 (empty -> .)
    NUMERO          reduce using rule 249 (empty -> .)
    ABRE_P          reduce using rule 249 (empty -> .)
    SUM             reduce using rule 249 (empty -> .)
    SUBSTR          reduce using rule 249 (empty -> .)
    MULTI           reduce using rule 249 (empty -> .)
    DIV             reduce using rule 249 (empty -> .)
    RANDOM          reduce using rule 249 (empty -> .)
    RUN             reduce using rule 249 (empty -> .)
    IF              reduce using rule 249 (empty -> .)
    IFELSE          reduce using rule 249 (empty -> .)
    REPEAT          reduce using rule 249 (empty -> .)
    UNTIL           reduce using rule 249 (empty -> .)
    WHILE           reduce using rule 249 (empty -> .)
    PRINTLINE       reduce using rule 249 (empty -> .)
    AND             reduce using rule 249 (empty -> .)
    OR              reduce using rule 249 (empty -> .)
    ADD             reduce using rule 249 (empty -> .)
    PUT             reduce using rule 249 (empty -> .)
    FIN             reduce using rule 249 (empty -> .)
    COMA            reduce using rule 249 (empty -> .)
    CIERRA_P        reduce using rule 249 (empty -> .)
    BRACKET2        reduce using rule 249 (empty -> .)

    empty                          shift and go to state 114

state 54

    (70) funcion -> IfElse . empty
    (249) empty -> .

    PUNTOCOMA       reduce using rule 249 (empty -> .)
    NUMERO          reduce using rule 249 (empty -> .)
    ABRE_P          reduce using rule 249 (empty -> .)
    SUM             reduce using rule 249 (empty -> .)
    SUBSTR          reduce using rule 249 (empty -> .)
    MULTI           reduce using rule 249 (empty -> .)
    DIV             reduce using rule 249 (empty -> .)
    RANDOM          reduce using rule 249 (empty -> .)
    RUN             reduce using rule 249 (empty -> .)
    IF              reduce using rule 249 (empty -> .)
    IFELSE          reduce using rule 249 (empty -> .)
    REPEAT          reduce using rule 249 (empty -> .)
    UNTIL           reduce using rule 249 (empty -> .)
    WHILE           reduce using rule 249 (empty -> .)
    PRINTLINE       reduce using rule 249 (empty -> .)
    AND             reduce using rule 249 (empty -> .)
    OR              reduce using rule 249 (empty -> .)
    ADD             reduce using rule 249 (empty -> .)
    PUT             reduce using rule 249 (empty -> .)
    FIN             reduce using rule 249 (empty -> .)
    COMA            reduce using rule 249 (empty -> .)
    CIERRA_P        reduce using rule 249 (empty -> .)
    BRACKET2        reduce using rule 249 (empty -> .)

    empty                          shift and go to state 115

state 55

    (71) funcion -> Repeat . empty
    (249) empty -> .

    PUNTOCOMA       reduce using rule 249 (empty -> .)
    NUMERO          reduce using rule 249 (empty -> .)
    ABRE_P          reduce using rule 249 (empty -> .)
    SUM             reduce using rule 249 (empty -> .)
    SUBSTR          reduce using rule 249 (empty -> .)
    MULTI           reduce using rule 249 (empty -> .)
    DIV             reduce using rule 249 (empty -> .)
    RANDOM          reduce using rule 249 (empty -> .)
    RUN             reduce using rule 249 (empty -> .)
    IF              reduce using rule 249 (empty -> .)
    IFELSE          reduce using rule 249 (empty -> .)
    REPEAT          reduce using rule 249 (empty -> .)
    UNTIL           reduce using rule 249 (empty -> .)
    WHILE           reduce using rule 249 (empty -> .)
    PRINTLINE       reduce using rule 249 (empty -> .)
    AND             reduce using rule 249 (empty -> .)
    OR              reduce using rule 249 (empty -> .)
    ADD             reduce using rule 249 (empty -> .)
    PUT             reduce using rule 249 (empty -> .)
    FIN             reduce using rule 249 (empty -> .)
    COMA            reduce using rule 249 (empty -> .)
    CIERRA_P        reduce using rule 249 (empty -> .)
    BRACKET2        reduce using rule 249 (empty -> .)

    empty                          shift and go to state 116

state 56

    (72) funcion -> Until . empty
    (249) empty -> .

    PUNTOCOMA       reduce using rule 249 (empty -> .)
    NUMERO          reduce using rule 249 (empty -> .)
    ABRE_P          reduce using rule 249 (empty -> .)
    SUM             reduce using rule 249 (empty -> .)
    SUBSTR          reduce using rule 249 (empty -> .)
    MULTI           reduce using rule 249 (empty -> .)
    DIV             reduce using rule 249 (empty -> .)
    RANDOM          reduce using rule 249 (empty -> .)
    RUN             reduce using rule 249 (empty -> .)
    IF              reduce using rule 249 (empty -> .)
    IFELSE          reduce using rule 249 (empty -> .)
    REPEAT          reduce using rule 249 (empty -> .)
    UNTIL           reduce using rule 249 (empty -> .)
    WHILE           reduce using rule 249 (empty -> .)
    PRINTLINE       reduce using rule 249 (empty -> .)
    AND             reduce using rule 249 (empty -> .)
    OR              reduce using rule 249 (empty -> .)
    ADD             reduce using rule 249 (empty -> .)
    PUT             reduce using rule 249 (empty -> .)
    FIN             reduce using rule 249 (empty -> .)
    COMA            reduce using rule 249 (empty -> .)
    CIERRA_P        reduce using rule 249 (empty -> .)
    BRACKET2        reduce using rule 249 (empty -> .)

    empty                          shift and go to state 117

state 57

    (73) funcion -> While . empty
    (249) empty -> .

    PUNTOCOMA       reduce using rule 249 (empty -> .)
    NUMERO          reduce using rule 249 (empty -> .)
    ABRE_P          reduce using rule 249 (empty -> .)
    SUM             reduce using rule 249 (empty -> .)
    SUBSTR          reduce using rule 249 (empty -> .)
    MULTI           reduce using rule 249 (empty -> .)
    DIV             reduce using rule 249 (empty -> .)
    RANDOM          reduce using rule 249 (empty -> .)
    RUN             reduce using rule 249 (empty -> .)
    IF              reduce using rule 249 (empty -> .)
    IFELSE          reduce using rule 249 (empty -> .)
    REPEAT          reduce using rule 249 (empty -> .)
    UNTIL           reduce using rule 249 (empty -> .)
    WHILE           reduce using rule 249 (empty -> .)
    PRINTLINE       reduce using rule 249 (empty -> .)
    AND             reduce using rule 249 (empty -> .)
    OR              reduce using rule 249 (empty -> .)
    ADD             reduce using rule 249 (empty -> .)
    PUT             reduce using rule 249 (empty -> .)
    FIN             reduce using rule 249 (empty -> .)
    COMA            reduce using rule 249 (empty -> .)
    CIERRA_P        reduce using rule 249 (empty -> .)
    BRACKET2        reduce using rule 249 (empty -> .)

    empty                          shift and go to state 118

state 58

    (74) funcion -> PrintLine . empty
    (249) empty -> .

    PUNTOCOMA       reduce using rule 249 (empty -> .)
    NUMERO          reduce using rule 249 (empty -> .)
    ABRE_P          reduce using rule 249 (empty -> .)
    SUM             reduce using rule 249 (empty -> .)
    SUBSTR          reduce using rule 249 (empty -> .)
    MULTI           reduce using rule 249 (empty -> .)
    DIV             reduce using rule 249 (empty -> .)
    RANDOM          reduce using rule 249 (empty -> .)
    RUN             reduce using rule 249 (empty -> .)
    IF              reduce using rule 249 (empty -> .)
    IFELSE          reduce using rule 249 (empty -> .)
    REPEAT          reduce using rule 249 (empty -> .)
    UNTIL           reduce using rule 249 (empty -> .)
    WHILE           reduce using rule 249 (empty -> .)
    PRINTLINE       reduce using rule 249 (empty -> .)
    AND             reduce using rule 249 (empty -> .)
    OR              reduce using rule 249 (empty -> .)
    ADD             reduce using rule 249 (empty -> .)
    PUT             reduce using rule 249 (empty -> .)
    FIN             reduce using rule 249 (empty -> .)
    COMA            reduce using rule 249 (empty -> .)
    CIERRA_P        reduce using rule 249 (empty -> .)
    BRACKET2        reduce using rule 249 (empty -> .)

    empty                          shift and go to state 119

state 59

    (75) funcion -> And . empty
    (249) empty -> .

    PUNTOCOMA       reduce using rule 249 (empty -> .)
    NUMERO          reduce using rule 249 (empty -> .)
    ABRE_P          reduce using rule 249 (empty -> .)
    SUM             reduce using rule 249 (empty -> .)
    SUBSTR          reduce using rule 249 (empty -> .)
    MULTI           reduce using rule 249 (empty -> .)
    DIV             reduce using rule 249 (empty -> .)
    RANDOM          reduce using rule 249 (empty -> .)
    RUN             reduce using rule 249 (empty -> .)
    IF              reduce using rule 249 (empty -> .)
    IFELSE          reduce using rule 249 (empty -> .)
    REPEAT          reduce using rule 249 (empty -> .)
    UNTIL           reduce using rule 249 (empty -> .)
    WHILE           reduce using rule 249 (empty -> .)
    PRINTLINE       reduce using rule 249 (empty -> .)
    AND             reduce using rule 249 (empty -> .)
    OR              reduce using rule 249 (empty -> .)
    ADD             reduce using rule 249 (empty -> .)
    PUT             reduce using rule 249 (empty -> .)
    FIN             reduce using rule 249 (empty -> .)
    COMA            reduce using rule 249 (empty -> .)
    CIERRA_P        reduce using rule 249 (empty -> .)
    BRACKET2        reduce using rule 249 (empty -> .)

    empty                          shift and go to state 120

state 60

    (76) funcion -> Or . empty
    (249) empty -> .

    PUNTOCOMA       reduce using rule 249 (empty -> .)
    NUMERO          reduce using rule 249 (empty -> .)
    ABRE_P          reduce using rule 249 (empty -> .)
    SUM             reduce using rule 249 (empty -> .)
    SUBSTR          reduce using rule 249 (empty -> .)
    MULTI           reduce using rule 249 (empty -> .)
    DIV             reduce using rule 249 (empty -> .)
    RANDOM          reduce using rule 249 (empty -> .)
    RUN             reduce using rule 249 (empty -> .)
    IF              reduce using rule 249 (empty -> .)
    IFELSE          reduce using rule 249 (empty -> .)
    REPEAT          reduce using rule 249 (empty -> .)
    UNTIL           reduce using rule 249 (empty -> .)
    WHILE           reduce using rule 249 (empty -> .)
    PRINTLINE       reduce using rule 249 (empty -> .)
    AND             reduce using rule 249 (empty -> .)
    OR              reduce using rule 249 (empty -> .)
    ADD             reduce using rule 249 (empty -> .)
    PUT             reduce using rule 249 (empty -> .)
    FIN             reduce using rule 249 (empty -> .)
    COMA            reduce using rule 249 (empty -> .)
    CIERRA_P        reduce using rule 249 (empty -> .)
    BRACKET2        reduce using rule 249 (empty -> .)

    empty                          shift and go to state 121

state 61

    (77) funcion -> Add . empty
    (249) empty -> .

    PUNTOCOMA       reduce using rule 249 (empty -> .)
    NUMERO          reduce using rule 249 (empty -> .)
    ABRE_P          reduce using rule 249 (empty -> .)
    SUM             reduce using rule 249 (empty -> .)
    SUBSTR          reduce using rule 249 (empty -> .)
    MULTI           reduce using rule 249 (empty -> .)
    DIV             reduce using rule 249 (empty -> .)
    RANDOM          reduce using rule 249 (empty -> .)
    RUN             reduce using rule 249 (empty -> .)
    IF              reduce using rule 249 (empty -> .)
    IFELSE          reduce using rule 249 (empty -> .)
    REPEAT          reduce using rule 249 (empty -> .)
    UNTIL           reduce using rule 249 (empty -> .)
    WHILE           reduce using rule 249 (empty -> .)
    PRINTLINE       reduce using rule 249 (empty -> .)
    AND             reduce using rule 249 (empty -> .)
    OR              reduce using rule 249 (empty -> .)
    ADD             reduce using rule 249 (empty -> .)
    PUT             reduce using rule 249 (empty -> .)
    FIN             reduce using rule 249 (empty -> .)
    COMA            reduce using rule 249 (empty -> .)
    CIERRA_P        reduce using rule 249 (empty -> .)
    BRACKET2        reduce using rule 249 (empty -> .)

    empty                          shift and go to state 122

state 62

    (80) funcion -> PUNTOCOMA . funcion
    (67) funcion -> . Random empty
    (68) funcion -> . Run empty
    (69) funcion -> . If empty
    (70) funcion -> . IfElse empty
    (71) funcion -> . Repeat empty
    (72) funcion -> . Until empty
    (73) funcion -> . While empty
    (74) funcion -> . PrintLine empty
    (75) funcion -> . And empty
    (76) funcion -> . Or empty
    (77) funcion -> . Add empty
    (78) funcion -> . Put2 empty
    (79) funcion -> . Put empty
    (80) funcion -> . PUNTOCOMA funcion
    (81) funcion -> . empty empty
    (201) Random -> . RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA
    (241) Run -> . RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA
    (187) If -> . IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2
    (188) IfElse -> . IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2
    (190) Repeat -> . REPEAT NUMERO BRACKET1 ordenes BRACKET2
    (191) Until -> . UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2
    (189) While -> . WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2
    (248) PrintLine -> . PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA
    (185) And -> . AND ABRE_P expresion COMA expresion CIERRA_P PUNTOCOMA
    (186) Or -> . OR ABRE_P expresion COMA expresion CIERRA_P PUNTOCOMA
    (192) Add -> . ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA
    (193) Add -> . ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (194) Add -> . ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (195) Add -> . ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (196) Add -> . ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (83) Put2 -> . PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (84) Put2 -> . PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (85) Put2 -> . PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (86) Put2 -> . PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA
    (82) Put -> . PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA
    (249) empty -> .

  ! shift/reduce conflict for PUNTOCOMA resolved as shift
  ! shift/reduce conflict for RANDOM resolved as shift
  ! shift/reduce conflict for RUN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for IFELSE resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for PRINTLINE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for PUT resolved as shift
    PUNTOCOMA       shift and go to state 62
    RANDOM          shift and go to state 69
    RUN             shift and go to state 70
    IF              shift and go to state 71
    IFELSE          shift and go to state 72
    REPEAT          shift and go to state 73
    UNTIL           shift and go to state 74
    WHILE           shift and go to state 75
    PRINTLINE       shift and go to state 76
    AND             shift and go to state 77
    OR              shift and go to state 78
    ADD             shift and go to state 79
    PUT             shift and go to state 94
    NUMERO          reduce using rule 249 (empty -> .)
    ABRE_P          reduce using rule 249 (empty -> .)
    SUM             reduce using rule 249 (empty -> .)
    SUBSTR          reduce using rule 249 (empty -> .)
    MULTI           reduce using rule 249 (empty -> .)
    DIV             reduce using rule 249 (empty -> .)
    FIN             reduce using rule 249 (empty -> .)
    COMA            reduce using rule 249 (empty -> .)
    CIERRA_P        reduce using rule 249 (empty -> .)
    BRACKET2        reduce using rule 249 (empty -> .)

  ! PUNTOCOMA       [ reduce using rule 249 (empty -> .) ]
  ! RANDOM          [ reduce using rule 249 (empty -> .) ]
  ! RUN             [ reduce using rule 249 (empty -> .) ]
  ! IF              [ reduce using rule 249 (empty -> .) ]
  ! IFELSE          [ reduce using rule 249 (empty -> .) ]
  ! REPEAT          [ reduce using rule 249 (empty -> .) ]
  ! UNTIL           [ reduce using rule 249 (empty -> .) ]
  ! WHILE           [ reduce using rule 249 (empty -> .) ]
  ! PRINTLINE       [ reduce using rule 249 (empty -> .) ]
  ! AND             [ reduce using rule 249 (empty -> .) ]
  ! OR              [ reduce using rule 249 (empty -> .) ]
  ! ADD             [ reduce using rule 249 (empty -> .) ]
  ! PUT             [ reduce using rule 249 (empty -> .) ]

    funcion                        shift and go to state 123
    Random                         shift and go to state 51
    empty                          shift and go to state 124
    Run                            shift and go to state 52
    If                             shift and go to state 53
    IfElse                         shift and go to state 54
    Repeat                         shift and go to state 55
    Until                          shift and go to state 56
    While                          shift and go to state 57
    PrintLine                      shift and go to state 58
    And                            shift and go to state 59
    Or                             shift and go to state 60
    Add                            shift and go to state 61
    Put2                           shift and go to state 92
    Put                            shift and go to state 93

state 63

    (95) expresion_alge2 -> ABRE_P . expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (96) expresion_alge2 -> ABRE_P . expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (97) expresion_alge2 -> ABRE_P . expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (98) expresion_alge2 -> ABRE_P . expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (99) expresion_alge2 -> ABRE_P . expresion_alge1 CIERRA_P EXPONENTE ABRE_P expresion_alge1 CIERRA_P
    (90) expresion_alge1 -> . NUMERO SUMA NUMERO
    (91) expresion_alge1 -> . NUMERO RESTA NUMERO
    (92) expresion_alge1 -> . NUMERO MULTI NUMERO
    (93) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (94) expresion_alge1 -> . NUMERO EXPONENTE NUMERO

    NUMERO          shift and go to state 64

    expresion_alge1                shift and go to state 125

state 64

    (90) expresion_alge1 -> NUMERO . SUMA NUMERO
    (91) expresion_alge1 -> NUMERO . RESTA NUMERO
    (92) expresion_alge1 -> NUMERO . MULTI NUMERO
    (93) expresion_alge1 -> NUMERO . DIVISION NUMERO
    (94) expresion_alge1 -> NUMERO . EXPONENTE NUMERO

    SUMA            shift and go to state 126
    RESTA           shift and go to state 127
    MULTI           shift and go to state 128
    DIVISION        shift and go to state 129
    EXPONENTE       shift and go to state 130


state 65

    (118) Mult -> MULTI . ABRE_P NUMERO COMA NUMERO CIERRA_P
    (119) Mult -> MULTI . ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (120) Mult -> MULTI . ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (121) Mult -> MULTI . ABRE_P NUMERO COMA Var CIERRA_P
    (122) Mult -> MULTI . ABRE_P Var COMA NUMERO CIERRA_P
    (123) Mult -> MULTI . ABRE_P Var COMA Var CIERRA_P
    (124) Mult -> MULTI . ABRE_P expresion_alge1 COMA Var CIERRA_P
    (125) Mult -> MULTI . ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (126) Mult -> MULTI . ABRE_P Var COMA expresion_alge1 CIERRA_P

    ABRE_P          shift and go to state 131


state 66

    (127) Div -> DIV . ABRE_P NUMERO COMA NUMERO CIERRA_P
    (128) Div -> DIV . ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (129) Div -> DIV . ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (130) Div -> DIV . ABRE_P NUMERO COMA Var CIERRA_P
    (131) Div -> DIV . ABRE_P Var COMA NUMERO CIERRA_P
    (132) Div -> DIV . ABRE_P Var COMA Var CIERRA_P
    (133) Div -> DIV . ABRE_P expresion_alge1 COMA Var CIERRA_P
    (134) Div -> DIV . ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (135) Div -> DIV . ABRE_P Var COMA expresion_alge1 CIERRA_P

    ABRE_P          shift and go to state 132


state 67

    (100) Sum -> SUM . ABRE_P NUMERO COMA NUMERO CIERRA_P
    (101) Sum -> SUM . ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (102) Sum -> SUM . ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (103) Sum -> SUM . ABRE_P NUMERO COMA Var CIERRA_P
    (104) Sum -> SUM . ABRE_P Var COMA NUMERO CIERRA_P
    (105) Sum -> SUM . ABRE_P Var COMA Var CIERRA_P
    (106) Sum -> SUM . ABRE_P expresion_alge1 COMA Var CIERRA_P
    (107) Sum -> SUM . ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (108) Sum -> SUM . ABRE_P Var COMA expresion_alge1 CIERRA_P

    ABRE_P          shift and go to state 133


state 68

    (109) Substr -> SUBSTR . ABRE_P NUMERO COMA NUMERO CIERRA_P
    (110) Substr -> SUBSTR . ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (111) Substr -> SUBSTR . ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (112) Substr -> SUBSTR . ABRE_P NUMERO COMA Var CIERRA_P
    (113) Substr -> SUBSTR . ABRE_P Var COMA NUMERO CIERRA_P
    (114) Substr -> SUBSTR . ABRE_P Var COMA Var CIERRA_P
    (115) Substr -> SUBSTR . ABRE_P expresion_alge1 COMA Var CIERRA_P
    (116) Substr -> SUBSTR . ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (117) Substr -> SUBSTR . ABRE_P Var COMA expresion_alge1 CIERRA_P

    ABRE_P          shift and go to state 134


state 69

    (201) Random -> RANDOM . ABRE_P NUMERO CIERRA_P PUNTOCOMA

    ABRE_P          shift and go to state 135


state 70

    (241) Run -> RUN . BRACKET1 ordenes BRACKET2 PUNTOCOMA

    BRACKET1        shift and go to state 136


state 71

    (187) If -> IF . ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2

    ABRE_P          shift and go to state 137


state 72

    (188) IfElse -> IFELSE . ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2

    ABRE_P          shift and go to state 138


state 73

    (190) Repeat -> REPEAT . NUMERO BRACKET1 ordenes BRACKET2

    NUMERO          shift and go to state 139


state 74

    (191) Until -> UNTIL . BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2

    BRACKET1        shift and go to state 140


state 75

    (189) While -> WHILE . BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2

    BRACKET1        shift and go to state 141


state 76

    (248) PrintLine -> PRINTLINE . ABRE_P exp CIERRA_P PUNTOCOMA

    ABRE_P          shift and go to state 142


state 77

    (185) And -> AND . ABRE_P expresion COMA expresion CIERRA_P PUNTOCOMA

    ABRE_P          shift and go to state 143


state 78

    (186) Or -> OR . ABRE_P expresion COMA expresion CIERRA_P PUNTOCOMA

    ABRE_P          shift and go to state 144


state 79

    (192) Add -> ADD . ABRE_P Var empty empty CIERRA_P PUNTOCOMA
    (193) Add -> ADD . ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (194) Add -> ADD . ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (195) Add -> ADD . ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (196) Add -> ADD . ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA

    ABRE_P          shift and go to state 145


state 80

    (82) Put -> PUT ABRE_P VAR COMA . VAR CIERRA_P PUNTOCOMA
    (83) Put2 -> PUT ABRE_P VAR COMA . NUMERO CIERRA_P PUNTOCOMA
    (84) Put2 -> PUT ABRE_P VAR COMA . expresion_alge1 CIERRA_P PUNTOCOMA
    (85) Put2 -> PUT ABRE_P VAR COMA . expresion_alge2 CIERRA_P PUNTOCOMA
    (86) Put2 -> PUT ABRE_P VAR COMA . funcion CIERRA_P PUNTOCOMA
    (90) expresion_alge1 -> . NUMERO SUMA NUMERO
    (91) expresion_alge1 -> . NUMERO RESTA NUMERO
    (92) expresion_alge1 -> . NUMERO MULTI NUMERO
    (93) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (94) expresion_alge1 -> . NUMERO EXPONENTE NUMERO
    (95) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (96) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (97) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (98) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (99) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P EXPONENTE ABRE_P expresion_alge1 CIERRA_P
    (67) funcion -> . Random empty
    (68) funcion -> . Run empty
    (69) funcion -> . If empty
    (70) funcion -> . IfElse empty
    (71) funcion -> . Repeat empty
    (72) funcion -> . Until empty
    (73) funcion -> . While empty
    (74) funcion -> . PrintLine empty
    (75) funcion -> . And empty
    (76) funcion -> . Or empty
    (77) funcion -> . Add empty
    (78) funcion -> . Put2 empty
    (79) funcion -> . Put empty
    (80) funcion -> . PUNTOCOMA funcion
    (81) funcion -> . empty empty
    (201) Random -> . RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA
    (241) Run -> . RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA
    (187) If -> . IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2
    (188) IfElse -> . IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2
    (190) Repeat -> . REPEAT NUMERO BRACKET1 ordenes BRACKET2
    (191) Until -> . UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2
    (189) While -> . WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2
    (248) PrintLine -> . PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA
    (185) And -> . AND ABRE_P expresion COMA expresion CIERRA_P PUNTOCOMA
    (186) Or -> . OR ABRE_P expresion COMA expresion CIERRA_P PUNTOCOMA
    (192) Add -> . ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA
    (193) Add -> . ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (194) Add -> . ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (195) Add -> . ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (196) Add -> . ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (83) Put2 -> . PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (84) Put2 -> . PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (85) Put2 -> . PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (86) Put2 -> . PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA
    (82) Put -> . PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA
    (249) empty -> .

    VAR             shift and go to state 146
    NUMERO          shift and go to state 147
    ABRE_P          shift and go to state 63
    PUNTOCOMA       shift and go to state 62
    RANDOM          shift and go to state 69
    RUN             shift and go to state 70
    IF              shift and go to state 71
    IFELSE          shift and go to state 72
    REPEAT          shift and go to state 73
    UNTIL           shift and go to state 74
    WHILE           shift and go to state 75
    PRINTLINE       shift and go to state 76
    AND             shift and go to state 77
    OR              shift and go to state 78
    ADD             shift and go to state 79
    PUT             shift and go to state 94
    CIERRA_P        reduce using rule 249 (empty -> .)

    expresion_alge1                shift and go to state 148
    expresion_alge2                shift and go to state 149
    funcion                        shift and go to state 150
    Random                         shift and go to state 51
    empty                          shift and go to state 124
    Run                            shift and go to state 52
    If                             shift and go to state 53
    IfElse                         shift and go to state 54
    Repeat                         shift and go to state 55
    Until                          shift and go to state 56
    While                          shift and go to state 57
    PrintLine                      shift and go to state 58
    And                            shift and go to state 59
    Or                             shift and go to state 60
    Add                            shift and go to state 61
    Put2                           shift and go to state 92
    Put                            shift and go to state 93

state 81

    (37) variable2 -> DEF VAR IGUAL NUMERO . PUNTOCOMA

    PUNTOCOMA       shift and go to state 151


state 82

    (199) parametro -> empty empty . empty
    (249) empty -> .

    BRACKET2        reduce using rule 249 (empty -> .)

    empty                          shift and go to state 152

state 83

    (23) procedimiento -> PARA id BRACKET1 empty BRACKET2 . cuerpo2 FIN cuerpo
    (8) cuerpo2 -> . variablexd
    (9) cuerpo2 -> . COMMENT cuerpo2
    (10) cuerpo2 -> . expresion
    (11) cuerpo2 -> . llamadoproc
    (12) cuerpo2 -> . empty
    (13) cuerpo2 -> . Put2
    (14) cuerpo2 -> . Put
    (30) variablexd -> . variable1 cuerpo2
    (31) variablexd -> . variable2 cuerpo2
    (32) variablexd -> . empty empty
    (38) expresion -> . funcion expresion
    (39) expresion -> . expresion_alge1 expresion
    (40) expresion -> . expresion_alge2 expresion
    (41) expresion -> . Sum expresion
    (42) expresion -> . Substr expresion
    (43) expresion -> . Mult expresion
    (44) expresion -> . Div expresion
    (45) expresion -> . funcion empty
    (46) expresion -> . expresion_alge1 empty
    (47) expresion -> . expresion_alge2 empty
    (48) expresion -> . Sum empty
    (49) expresion -> . Substr empty
    (50) expresion -> . Mult empty
    (51) expresion -> . Div empty
    (52) expresion -> . empty empty
    (25) llamadoproc -> . PARA id BRACKET1 parametro BRACKET2 PUNTOCOMA
    (249) empty -> .
    (83) Put2 -> . PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (84) Put2 -> . PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (85) Put2 -> . PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (86) Put2 -> . PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA
    (82) Put -> . PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA
    (36) variable1 -> . DEF VAR PUNTOCOMA
    (37) variable2 -> . DEF VAR IGUAL NUMERO PUNTOCOMA
    (67) funcion -> . Random empty
    (68) funcion -> . Run empty
    (69) funcion -> . If empty
    (70) funcion -> . IfElse empty
    (71) funcion -> . Repeat empty
    (72) funcion -> . Until empty
    (73) funcion -> . While empty
    (74) funcion -> . PrintLine empty
    (75) funcion -> . And empty
    (76) funcion -> . Or empty
    (77) funcion -> . Add empty
    (78) funcion -> . Put2 empty
    (79) funcion -> . Put empty
    (80) funcion -> . PUNTOCOMA funcion
    (81) funcion -> . empty empty
    (90) expresion_alge1 -> . NUMERO SUMA NUMERO
    (91) expresion_alge1 -> . NUMERO RESTA NUMERO
    (92) expresion_alge1 -> . NUMERO MULTI NUMERO
    (93) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (94) expresion_alge1 -> . NUMERO EXPONENTE NUMERO
    (95) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (96) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (97) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (98) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (99) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P EXPONENTE ABRE_P expresion_alge1 CIERRA_P
    (100) Sum -> . SUM ABRE_P NUMERO COMA NUMERO CIERRA_P
    (101) Sum -> . SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (102) Sum -> . SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (103) Sum -> . SUM ABRE_P NUMERO COMA Var CIERRA_P
    (104) Sum -> . SUM ABRE_P Var COMA NUMERO CIERRA_P
    (105) Sum -> . SUM ABRE_P Var COMA Var CIERRA_P
    (106) Sum -> . SUM ABRE_P expresion_alge1 COMA Var CIERRA_P
    (107) Sum -> . SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (108) Sum -> . SUM ABRE_P Var COMA expresion_alge1 CIERRA_P
    (109) Substr -> . SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P
    (110) Substr -> . SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (111) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (112) Substr -> . SUBSTR ABRE_P NUMERO COMA Var CIERRA_P
    (113) Substr -> . SUBSTR ABRE_P Var COMA NUMERO CIERRA_P
    (114) Substr -> . SUBSTR ABRE_P Var COMA Var CIERRA_P
    (115) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P
    (116) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (117) Substr -> . SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P
    (118) Mult -> . MULTI ABRE_P NUMERO COMA NUMERO CIERRA_P
    (119) Mult -> . MULTI ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (120) Mult -> . MULTI ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (121) Mult -> . MULTI ABRE_P NUMERO COMA Var CIERRA_P
    (122) Mult -> . MULTI ABRE_P Var COMA NUMERO CIERRA_P
    (123) Mult -> . MULTI ABRE_P Var COMA Var CIERRA_P
    (124) Mult -> . MULTI ABRE_P expresion_alge1 COMA Var CIERRA_P
    (125) Mult -> . MULTI ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (126) Mult -> . MULTI ABRE_P Var COMA expresion_alge1 CIERRA_P
    (127) Div -> . DIV ABRE_P NUMERO COMA NUMERO CIERRA_P
    (128) Div -> . DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (129) Div -> . DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (130) Div -> . DIV ABRE_P NUMERO COMA Var CIERRA_P
    (131) Div -> . DIV ABRE_P Var COMA NUMERO CIERRA_P
    (132) Div -> . DIV ABRE_P Var COMA Var CIERRA_P
    (133) Div -> . DIV ABRE_P expresion_alge1 COMA Var CIERRA_P
    (134) Div -> . DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (135) Div -> . DIV ABRE_P Var COMA expresion_alge1 CIERRA_P
    (201) Random -> . RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA
    (241) Run -> . RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA
    (187) If -> . IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2
    (188) IfElse -> . IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2
    (190) Repeat -> . REPEAT NUMERO BRACKET1 ordenes BRACKET2
    (191) Until -> . UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2
    (189) While -> . WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2
    (248) PrintLine -> . PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA
    (185) And -> . AND ABRE_P expresion COMA expresion CIERRA_P PUNTOCOMA
    (186) Or -> . OR ABRE_P expresion COMA expresion CIERRA_P PUNTOCOMA
    (192) Add -> . ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA
    (193) Add -> . ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (194) Add -> . ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (195) Add -> . ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (196) Add -> . ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA

  ! shift/reduce conflict for PUT resolved as shift
  ! shift/reduce conflict for PUNTOCOMA resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for ABRE_P resolved as shift
  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for SUBSTR resolved as shift
  ! shift/reduce conflict for MULTI resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for RANDOM resolved as shift
  ! shift/reduce conflict for RUN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for IFELSE resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for PRINTLINE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
    COMMENT         shift and go to state 157
    PARA            shift and go to state 153
    FIN             reduce using rule 249 (empty -> .)
    PUT             shift and go to state 94
    DEF             shift and go to state 16
    PUNTOCOMA       shift and go to state 62
    NUMERO          shift and go to state 64
    ABRE_P          shift and go to state 63
    SUM             shift and go to state 67
    SUBSTR          shift and go to state 68
    MULTI           shift and go to state 65
    DIV             shift and go to state 66
    RANDOM          shift and go to state 69
    RUN             shift and go to state 70
    IF              shift and go to state 71
    IFELSE          shift and go to state 72
    REPEAT          shift and go to state 73
    UNTIL           shift and go to state 74
    WHILE           shift and go to state 75
    PRINTLINE       shift and go to state 76
    AND             shift and go to state 77
    OR              shift and go to state 78
    ADD             shift and go to state 79

  ! PUNTOCOMA       [ reduce using rule 249 (empty -> .) ]
  ! NUMERO          [ reduce using rule 249 (empty -> .) ]
  ! ABRE_P          [ reduce using rule 249 (empty -> .) ]
  ! SUM             [ reduce using rule 249 (empty -> .) ]
  ! SUBSTR          [ reduce using rule 249 (empty -> .) ]
  ! MULTI           [ reduce using rule 249 (empty -> .) ]
  ! DIV             [ reduce using rule 249 (empty -> .) ]
  ! RANDOM          [ reduce using rule 249 (empty -> .) ]
  ! RUN             [ reduce using rule 249 (empty -> .) ]
  ! IF              [ reduce using rule 249 (empty -> .) ]
  ! IFELSE          [ reduce using rule 249 (empty -> .) ]
  ! REPEAT          [ reduce using rule 249 (empty -> .) ]
  ! UNTIL           [ reduce using rule 249 (empty -> .) ]
  ! WHILE           [ reduce using rule 249 (empty -> .) ]
  ! PRINTLINE       [ reduce using rule 249 (empty -> .) ]
  ! AND             [ reduce using rule 249 (empty -> .) ]
  ! OR              [ reduce using rule 249 (empty -> .) ]
  ! ADD             [ reduce using rule 249 (empty -> .) ]
  ! PUT             [ reduce using rule 249 (empty -> .) ]

    empty                          shift and go to state 154
    cuerpo2                        shift and go to state 155
    variablexd                     shift and go to state 156
    expresion                      shift and go to state 158
    llamadoproc                    shift and go to state 159
    Put2                           shift and go to state 160
    Put                            shift and go to state 161
    variable1                      shift and go to state 162
    variable2                      shift and go to state 163
    funcion                        shift and go to state 89
    expresion_alge1                shift and go to state 45
    expresion_alge2                shift and go to state 46
    Sum                            shift and go to state 47
    Substr                         shift and go to state 48
    Mult                           shift and go to state 49
    Div                            shift and go to state 50
    Random                         shift and go to state 51
    Run                            shift and go to state 52
    If                             shift and go to state 53
    IfElse                         shift and go to state 54
    Repeat                         shift and go to state 55
    Until                          shift and go to state 56
    While                          shift and go to state 57
    PrintLine                      shift and go to state 58
    And                            shift and go to state 59
    Or                             shift and go to state 60
    Add                            shift and go to state 61

state 84

    (24) procedimiento -> PARA id BRACKET1 parametro BRACKET2 . cuerpo2 FIN cuerpo
    (8) cuerpo2 -> . variablexd
    (9) cuerpo2 -> . COMMENT cuerpo2
    (10) cuerpo2 -> . expresion
    (11) cuerpo2 -> . llamadoproc
    (12) cuerpo2 -> . empty
    (13) cuerpo2 -> . Put2
    (14) cuerpo2 -> . Put
    (30) variablexd -> . variable1 cuerpo2
    (31) variablexd -> . variable2 cuerpo2
    (32) variablexd -> . empty empty
    (38) expresion -> . funcion expresion
    (39) expresion -> . expresion_alge1 expresion
    (40) expresion -> . expresion_alge2 expresion
    (41) expresion -> . Sum expresion
    (42) expresion -> . Substr expresion
    (43) expresion -> . Mult expresion
    (44) expresion -> . Div expresion
    (45) expresion -> . funcion empty
    (46) expresion -> . expresion_alge1 empty
    (47) expresion -> . expresion_alge2 empty
    (48) expresion -> . Sum empty
    (49) expresion -> . Substr empty
    (50) expresion -> . Mult empty
    (51) expresion -> . Div empty
    (52) expresion -> . empty empty
    (25) llamadoproc -> . PARA id BRACKET1 parametro BRACKET2 PUNTOCOMA
    (249) empty -> .
    (83) Put2 -> . PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (84) Put2 -> . PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (85) Put2 -> . PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (86) Put2 -> . PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA
    (82) Put -> . PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA
    (36) variable1 -> . DEF VAR PUNTOCOMA
    (37) variable2 -> . DEF VAR IGUAL NUMERO PUNTOCOMA
    (67) funcion -> . Random empty
    (68) funcion -> . Run empty
    (69) funcion -> . If empty
    (70) funcion -> . IfElse empty
    (71) funcion -> . Repeat empty
    (72) funcion -> . Until empty
    (73) funcion -> . While empty
    (74) funcion -> . PrintLine empty
    (75) funcion -> . And empty
    (76) funcion -> . Or empty
    (77) funcion -> . Add empty
    (78) funcion -> . Put2 empty
    (79) funcion -> . Put empty
    (80) funcion -> . PUNTOCOMA funcion
    (81) funcion -> . empty empty
    (90) expresion_alge1 -> . NUMERO SUMA NUMERO
    (91) expresion_alge1 -> . NUMERO RESTA NUMERO
    (92) expresion_alge1 -> . NUMERO MULTI NUMERO
    (93) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (94) expresion_alge1 -> . NUMERO EXPONENTE NUMERO
    (95) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (96) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (97) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (98) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (99) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P EXPONENTE ABRE_P expresion_alge1 CIERRA_P
    (100) Sum -> . SUM ABRE_P NUMERO COMA NUMERO CIERRA_P
    (101) Sum -> . SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (102) Sum -> . SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (103) Sum -> . SUM ABRE_P NUMERO COMA Var CIERRA_P
    (104) Sum -> . SUM ABRE_P Var COMA NUMERO CIERRA_P
    (105) Sum -> . SUM ABRE_P Var COMA Var CIERRA_P
    (106) Sum -> . SUM ABRE_P expresion_alge1 COMA Var CIERRA_P
    (107) Sum -> . SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (108) Sum -> . SUM ABRE_P Var COMA expresion_alge1 CIERRA_P
    (109) Substr -> . SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P
    (110) Substr -> . SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (111) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (112) Substr -> . SUBSTR ABRE_P NUMERO COMA Var CIERRA_P
    (113) Substr -> . SUBSTR ABRE_P Var COMA NUMERO CIERRA_P
    (114) Substr -> . SUBSTR ABRE_P Var COMA Var CIERRA_P
    (115) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P
    (116) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (117) Substr -> . SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P
    (118) Mult -> . MULTI ABRE_P NUMERO COMA NUMERO CIERRA_P
    (119) Mult -> . MULTI ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (120) Mult -> . MULTI ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (121) Mult -> . MULTI ABRE_P NUMERO COMA Var CIERRA_P
    (122) Mult -> . MULTI ABRE_P Var COMA NUMERO CIERRA_P
    (123) Mult -> . MULTI ABRE_P Var COMA Var CIERRA_P
    (124) Mult -> . MULTI ABRE_P expresion_alge1 COMA Var CIERRA_P
    (125) Mult -> . MULTI ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (126) Mult -> . MULTI ABRE_P Var COMA expresion_alge1 CIERRA_P
    (127) Div -> . DIV ABRE_P NUMERO COMA NUMERO CIERRA_P
    (128) Div -> . DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (129) Div -> . DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (130) Div -> . DIV ABRE_P NUMERO COMA Var CIERRA_P
    (131) Div -> . DIV ABRE_P Var COMA NUMERO CIERRA_P
    (132) Div -> . DIV ABRE_P Var COMA Var CIERRA_P
    (133) Div -> . DIV ABRE_P expresion_alge1 COMA Var CIERRA_P
    (134) Div -> . DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (135) Div -> . DIV ABRE_P Var COMA expresion_alge1 CIERRA_P
    (201) Random -> . RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA
    (241) Run -> . RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA
    (187) If -> . IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2
    (188) IfElse -> . IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2
    (190) Repeat -> . REPEAT NUMERO BRACKET1 ordenes BRACKET2
    (191) Until -> . UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2
    (189) While -> . WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2
    (248) PrintLine -> . PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA
    (185) And -> . AND ABRE_P expresion COMA expresion CIERRA_P PUNTOCOMA
    (186) Or -> . OR ABRE_P expresion COMA expresion CIERRA_P PUNTOCOMA
    (192) Add -> . ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA
    (193) Add -> . ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (194) Add -> . ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (195) Add -> . ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (196) Add -> . ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA

  ! shift/reduce conflict for PUT resolved as shift
  ! shift/reduce conflict for PUNTOCOMA resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for ABRE_P resolved as shift
  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for SUBSTR resolved as shift
  ! shift/reduce conflict for MULTI resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for RANDOM resolved as shift
  ! shift/reduce conflict for RUN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for IFELSE resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for PRINTLINE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
    COMMENT         shift and go to state 157
    PARA            shift and go to state 153
    FIN             reduce using rule 249 (empty -> .)
    PUT             shift and go to state 94
    DEF             shift and go to state 16
    PUNTOCOMA       shift and go to state 62
    NUMERO          shift and go to state 64
    ABRE_P          shift and go to state 63
    SUM             shift and go to state 67
    SUBSTR          shift and go to state 68
    MULTI           shift and go to state 65
    DIV             shift and go to state 66
    RANDOM          shift and go to state 69
    RUN             shift and go to state 70
    IF              shift and go to state 71
    IFELSE          shift and go to state 72
    REPEAT          shift and go to state 73
    UNTIL           shift and go to state 74
    WHILE           shift and go to state 75
    PRINTLINE       shift and go to state 76
    AND             shift and go to state 77
    OR              shift and go to state 78
    ADD             shift and go to state 79

  ! PUNTOCOMA       [ reduce using rule 249 (empty -> .) ]
  ! NUMERO          [ reduce using rule 249 (empty -> .) ]
  ! ABRE_P          [ reduce using rule 249 (empty -> .) ]
  ! SUM             [ reduce using rule 249 (empty -> .) ]
  ! SUBSTR          [ reduce using rule 249 (empty -> .) ]
  ! MULTI           [ reduce using rule 249 (empty -> .) ]
  ! DIV             [ reduce using rule 249 (empty -> .) ]
  ! RANDOM          [ reduce using rule 249 (empty -> .) ]
  ! RUN             [ reduce using rule 249 (empty -> .) ]
  ! IF              [ reduce using rule 249 (empty -> .) ]
  ! IFELSE          [ reduce using rule 249 (empty -> .) ]
  ! REPEAT          [ reduce using rule 249 (empty -> .) ]
  ! UNTIL           [ reduce using rule 249 (empty -> .) ]
  ! WHILE           [ reduce using rule 249 (empty -> .) ]
  ! PRINTLINE       [ reduce using rule 249 (empty -> .) ]
  ! AND             [ reduce using rule 249 (empty -> .) ]
  ! OR              [ reduce using rule 249 (empty -> .) ]
  ! ADD             [ reduce using rule 249 (empty -> .) ]
  ! PUT             [ reduce using rule 249 (empty -> .) ]

    cuerpo2                        shift and go to state 164
    variablexd                     shift and go to state 156
    expresion                      shift and go to state 158
    llamadoproc                    shift and go to state 159
    empty                          shift and go to state 154
    Put2                           shift and go to state 160
    Put                            shift and go to state 161
    variable1                      shift and go to state 162
    variable2                      shift and go to state 163
    funcion                        shift and go to state 89
    expresion_alge1                shift and go to state 45
    expresion_alge2                shift and go to state 46
    Sum                            shift and go to state 47
    Substr                         shift and go to state 48
    Mult                           shift and go to state 49
    Div                            shift and go to state 50
    Random                         shift and go to state 51
    Run                            shift and go to state 52
    If                             shift and go to state 53
    IfElse                         shift and go to state 54
    Repeat                         shift and go to state 55
    Until                          shift and go to state 56
    While                          shift and go to state 57
    PrintLine                      shift and go to state 58
    And                            shift and go to state 59
    Or                             shift and go to state 60
    Add                            shift and go to state 61

state 85

    (197) parametro -> Var COMA . parametro
    (197) parametro -> . Var COMA parametro
    (198) parametro -> . Var empty empty
    (199) parametro -> . empty empty empty
    (136) Var -> . VAR
    (249) empty -> .

    VAR             shift and go to state 34
    BRACKET2        reduce using rule 249 (empty -> .)

    Var                            shift and go to state 33
    parametro                      shift and go to state 165
    empty                          shift and go to state 166

state 86

    (198) parametro -> Var empty . empty
    (249) empty -> .

    BRACKET2        reduce using rule 249 (empty -> .)

    empty                          shift and go to state 167

state 87

    (26) main -> MAIN BRACKET1 BRACKET2 cuerpo3 FIN . cuerpo
    (2) cuerpo -> . variable
    (3) cuerpo -> . procedimiento
    (4) cuerpo -> . main
    (5) cuerpo -> . COMMENT cuerpo
    (6) cuerpo -> . Put
    (7) cuerpo -> . Put2
    (27) variable -> . variable1 cuerpo
    (28) variable -> . variable2 cuerpo
    (29) variable -> . empty empty
    (23) procedimiento -> . PARA id BRACKET1 empty BRACKET2 cuerpo2 FIN cuerpo
    (24) procedimiento -> . PARA id BRACKET1 parametro BRACKET2 cuerpo2 FIN cuerpo
    (26) main -> . MAIN BRACKET1 BRACKET2 cuerpo3 FIN cuerpo
    (82) Put -> . PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA
    (83) Put2 -> . PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (84) Put2 -> . PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (85) Put2 -> . PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (86) Put2 -> . PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA
    (36) variable1 -> . DEF VAR PUNTOCOMA
    (37) variable2 -> . DEF VAR IGUAL NUMERO PUNTOCOMA
    (249) empty -> .

    COMMENT         shift and go to state 3
    PARA            shift and go to state 13
    MAIN            shift and go to state 14
    PUT             shift and go to state 15
    DEF             shift and go to state 16
    $end            reduce using rule 249 (empty -> .)

    cuerpo                         shift and go to state 168
    variable                       shift and go to state 5
    procedimiento                  shift and go to state 6
    main                           shift and go to state 7
    Put                            shift and go to state 8
    Put2                           shift and go to state 9
    variable1                      shift and go to state 10
    variable2                      shift and go to state 11
    empty                          shift and go to state 12

state 88

    (16) cuerpo3 -> COMMENT cuerpo3 .

    FIN             reduce using rule 16 (cuerpo3 -> COMMENT cuerpo3 .)


state 89

    (38) expresion -> funcion . expresion
    (45) expresion -> funcion . empty
    (38) expresion -> . funcion expresion
    (39) expresion -> . expresion_alge1 expresion
    (40) expresion -> . expresion_alge2 expresion
    (41) expresion -> . Sum expresion
    (42) expresion -> . Substr expresion
    (43) expresion -> . Mult expresion
    (44) expresion -> . Div expresion
    (45) expresion -> . funcion empty
    (46) expresion -> . expresion_alge1 empty
    (47) expresion -> . expresion_alge2 empty
    (48) expresion -> . Sum empty
    (49) expresion -> . Substr empty
    (50) expresion -> . Mult empty
    (51) expresion -> . Div empty
    (52) expresion -> . empty empty
    (249) empty -> .
    (67) funcion -> . Random empty
    (68) funcion -> . Run empty
    (69) funcion -> . If empty
    (70) funcion -> . IfElse empty
    (71) funcion -> . Repeat empty
    (72) funcion -> . Until empty
    (73) funcion -> . While empty
    (74) funcion -> . PrintLine empty
    (75) funcion -> . And empty
    (76) funcion -> . Or empty
    (77) funcion -> . Add empty
    (78) funcion -> . Put2 empty
    (79) funcion -> . Put empty
    (80) funcion -> . PUNTOCOMA funcion
    (81) funcion -> . empty empty
    (90) expresion_alge1 -> . NUMERO SUMA NUMERO
    (91) expresion_alge1 -> . NUMERO RESTA NUMERO
    (92) expresion_alge1 -> . NUMERO MULTI NUMERO
    (93) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (94) expresion_alge1 -> . NUMERO EXPONENTE NUMERO
    (95) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (96) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (97) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (98) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (99) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P EXPONENTE ABRE_P expresion_alge1 CIERRA_P
    (100) Sum -> . SUM ABRE_P NUMERO COMA NUMERO CIERRA_P
    (101) Sum -> . SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (102) Sum -> . SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (103) Sum -> . SUM ABRE_P NUMERO COMA Var CIERRA_P
    (104) Sum -> . SUM ABRE_P Var COMA NUMERO CIERRA_P
    (105) Sum -> . SUM ABRE_P Var COMA Var CIERRA_P
    (106) Sum -> . SUM ABRE_P expresion_alge1 COMA Var CIERRA_P
    (107) Sum -> . SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (108) Sum -> . SUM ABRE_P Var COMA expresion_alge1 CIERRA_P
    (109) Substr -> . SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P
    (110) Substr -> . SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (111) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (112) Substr -> . SUBSTR ABRE_P NUMERO COMA Var CIERRA_P
    (113) Substr -> . SUBSTR ABRE_P Var COMA NUMERO CIERRA_P
    (114) Substr -> . SUBSTR ABRE_P Var COMA Var CIERRA_P
    (115) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P
    (116) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (117) Substr -> . SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P
    (118) Mult -> . MULTI ABRE_P NUMERO COMA NUMERO CIERRA_P
    (119) Mult -> . MULTI ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (120) Mult -> . MULTI ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (121) Mult -> . MULTI ABRE_P NUMERO COMA Var CIERRA_P
    (122) Mult -> . MULTI ABRE_P Var COMA NUMERO CIERRA_P
    (123) Mult -> . MULTI ABRE_P Var COMA Var CIERRA_P
    (124) Mult -> . MULTI ABRE_P expresion_alge1 COMA Var CIERRA_P
    (125) Mult -> . MULTI ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (126) Mult -> . MULTI ABRE_P Var COMA expresion_alge1 CIERRA_P
    (127) Div -> . DIV ABRE_P NUMERO COMA NUMERO CIERRA_P
    (128) Div -> . DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (129) Div -> . DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (130) Div -> . DIV ABRE_P NUMERO COMA Var CIERRA_P
    (131) Div -> . DIV ABRE_P Var COMA NUMERO CIERRA_P
    (132) Div -> . DIV ABRE_P Var COMA Var CIERRA_P
    (133) Div -> . DIV ABRE_P expresion_alge1 COMA Var CIERRA_P
    (134) Div -> . DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (135) Div -> . DIV ABRE_P Var COMA expresion_alge1 CIERRA_P
    (201) Random -> . RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA
    (241) Run -> . RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA
    (187) If -> . IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2
    (188) IfElse -> . IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2
    (190) Repeat -> . REPEAT NUMERO BRACKET1 ordenes BRACKET2
    (191) Until -> . UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2
    (189) While -> . WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2
    (248) PrintLine -> . PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA
    (185) And -> . AND ABRE_P expresion COMA expresion CIERRA_P PUNTOCOMA
    (186) Or -> . OR ABRE_P expresion COMA expresion CIERRA_P PUNTOCOMA
    (192) Add -> . ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA
    (193) Add -> . ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (194) Add -> . ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (195) Add -> . ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (196) Add -> . ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (83) Put2 -> . PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (84) Put2 -> . PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (85) Put2 -> . PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (86) Put2 -> . PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA
    (82) Put -> . PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA

  ! shift/reduce conflict for PUNTOCOMA resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for ABRE_P resolved as shift
  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for SUBSTR resolved as shift
  ! shift/reduce conflict for MULTI resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for RANDOM resolved as shift
  ! shift/reduce conflict for RUN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for IFELSE resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for PRINTLINE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for PUT resolved as shift
    FIN             reduce using rule 249 (empty -> .)
    COMA            reduce using rule 249 (empty -> .)
    CIERRA_P        reduce using rule 249 (empty -> .)
    PUNTOCOMA       shift and go to state 62
    NUMERO          shift and go to state 64
    ABRE_P          shift and go to state 63
    SUM             shift and go to state 67
    SUBSTR          shift and go to state 68
    MULTI           shift and go to state 65
    DIV             shift and go to state 66
    RANDOM          shift and go to state 69
    RUN             shift and go to state 70
    IF              shift and go to state 71
    IFELSE          shift and go to state 72
    REPEAT          shift and go to state 73
    UNTIL           shift and go to state 74
    WHILE           shift and go to state 75
    PRINTLINE       shift and go to state 76
    AND             shift and go to state 77
    OR              shift and go to state 78
    ADD             shift and go to state 79
    PUT             shift and go to state 94

  ! PUNTOCOMA       [ reduce using rule 249 (empty -> .) ]
  ! NUMERO          [ reduce using rule 249 (empty -> .) ]
  ! ABRE_P          [ reduce using rule 249 (empty -> .) ]
  ! SUM             [ reduce using rule 249 (empty -> .) ]
  ! SUBSTR          [ reduce using rule 249 (empty -> .) ]
  ! MULTI           [ reduce using rule 249 (empty -> .) ]
  ! DIV             [ reduce using rule 249 (empty -> .) ]
  ! RANDOM          [ reduce using rule 249 (empty -> .) ]
  ! RUN             [ reduce using rule 249 (empty -> .) ]
  ! IF              [ reduce using rule 249 (empty -> .) ]
  ! IFELSE          [ reduce using rule 249 (empty -> .) ]
  ! REPEAT          [ reduce using rule 249 (empty -> .) ]
  ! UNTIL           [ reduce using rule 249 (empty -> .) ]
  ! WHILE           [ reduce using rule 249 (empty -> .) ]
  ! PRINTLINE       [ reduce using rule 249 (empty -> .) ]
  ! AND             [ reduce using rule 249 (empty -> .) ]
  ! OR              [ reduce using rule 249 (empty -> .) ]
  ! ADD             [ reduce using rule 249 (empty -> .) ]
  ! PUT             [ reduce using rule 249 (empty -> .) ]

    funcion                        shift and go to state 89
    expresion                      shift and go to state 90
    empty                          shift and go to state 91
    expresion_alge1                shift and go to state 45
    expresion_alge2                shift and go to state 46
    Sum                            shift and go to state 47
    Substr                         shift and go to state 48
    Mult                           shift and go to state 49
    Div                            shift and go to state 50
    Random                         shift and go to state 51
    Run                            shift and go to state 52
    If                             shift and go to state 53
    IfElse                         shift and go to state 54
    Repeat                         shift and go to state 55
    Until                          shift and go to state 56
    While                          shift and go to state 57
    PrintLine                      shift and go to state 58
    And                            shift and go to state 59
    Or                             shift and go to state 60
    Add                            shift and go to state 61
    Put2                           shift and go to state 92
    Put                            shift and go to state 93

state 90

    (38) expresion -> funcion expresion .

    FIN             reduce using rule 38 (expresion -> funcion expresion .)
    COMA            reduce using rule 38 (expresion -> funcion expresion .)
    CIERRA_P        reduce using rule 38 (expresion -> funcion expresion .)


state 91

    (45) expresion -> funcion empty .
    (52) expresion -> empty . empty
    (81) funcion -> empty . empty
    (249) empty -> .

  ! reduce/reduce conflict for FIN resolved using rule 45 (expresion -> funcion empty .)
  ! reduce/reduce conflict for COMA resolved using rule 45 (expresion -> funcion empty .)
  ! reduce/reduce conflict for CIERRA_P resolved using rule 45 (expresion -> funcion empty .)
    FIN             reduce using rule 45 (expresion -> funcion empty .)
    COMA            reduce using rule 45 (expresion -> funcion empty .)
    CIERRA_P        reduce using rule 45 (expresion -> funcion empty .)
    PUNTOCOMA       reduce using rule 249 (empty -> .)
    NUMERO          reduce using rule 249 (empty -> .)
    ABRE_P          reduce using rule 249 (empty -> .)
    SUM             reduce using rule 249 (empty -> .)
    SUBSTR          reduce using rule 249 (empty -> .)
    MULTI           reduce using rule 249 (empty -> .)
    DIV             reduce using rule 249 (empty -> .)
    RANDOM          reduce using rule 249 (empty -> .)
    RUN             reduce using rule 249 (empty -> .)
    IF              reduce using rule 249 (empty -> .)
    IFELSE          reduce using rule 249 (empty -> .)
    REPEAT          reduce using rule 249 (empty -> .)
    UNTIL           reduce using rule 249 (empty -> .)
    WHILE           reduce using rule 249 (empty -> .)
    PRINTLINE       reduce using rule 249 (empty -> .)
    AND             reduce using rule 249 (empty -> .)
    OR              reduce using rule 249 (empty -> .)
    ADD             reduce using rule 249 (empty -> .)
    PUT             reduce using rule 249 (empty -> .)

  ! FIN             [ reduce using rule 249 (empty -> .) ]
  ! COMA            [ reduce using rule 249 (empty -> .) ]
  ! CIERRA_P        [ reduce using rule 249 (empty -> .) ]

    empty                          shift and go to state 169

state 92

    (78) funcion -> Put2 . empty
    (249) empty -> .

    PUNTOCOMA       reduce using rule 249 (empty -> .)
    NUMERO          reduce using rule 249 (empty -> .)
    ABRE_P          reduce using rule 249 (empty -> .)
    SUM             reduce using rule 249 (empty -> .)
    SUBSTR          reduce using rule 249 (empty -> .)
    MULTI           reduce using rule 249 (empty -> .)
    DIV             reduce using rule 249 (empty -> .)
    RANDOM          reduce using rule 249 (empty -> .)
    RUN             reduce using rule 249 (empty -> .)
    IF              reduce using rule 249 (empty -> .)
    IFELSE          reduce using rule 249 (empty -> .)
    REPEAT          reduce using rule 249 (empty -> .)
    UNTIL           reduce using rule 249 (empty -> .)
    WHILE           reduce using rule 249 (empty -> .)
    PRINTLINE       reduce using rule 249 (empty -> .)
    AND             reduce using rule 249 (empty -> .)
    OR              reduce using rule 249 (empty -> .)
    ADD             reduce using rule 249 (empty -> .)
    PUT             reduce using rule 249 (empty -> .)
    FIN             reduce using rule 249 (empty -> .)
    COMA            reduce using rule 249 (empty -> .)
    CIERRA_P        reduce using rule 249 (empty -> .)
    BRACKET2        reduce using rule 249 (empty -> .)

    empty                          shift and go to state 97

state 93

    (79) funcion -> Put . empty
    (249) empty -> .

    PUNTOCOMA       reduce using rule 249 (empty -> .)
    NUMERO          reduce using rule 249 (empty -> .)
    ABRE_P          reduce using rule 249 (empty -> .)
    SUM             reduce using rule 249 (empty -> .)
    SUBSTR          reduce using rule 249 (empty -> .)
    MULTI           reduce using rule 249 (empty -> .)
    DIV             reduce using rule 249 (empty -> .)
    RANDOM          reduce using rule 249 (empty -> .)
    RUN             reduce using rule 249 (empty -> .)
    IF              reduce using rule 249 (empty -> .)
    IFELSE          reduce using rule 249 (empty -> .)
    REPEAT          reduce using rule 249 (empty -> .)
    UNTIL           reduce using rule 249 (empty -> .)
    WHILE           reduce using rule 249 (empty -> .)
    PRINTLINE       reduce using rule 249 (empty -> .)
    AND             reduce using rule 249 (empty -> .)
    OR              reduce using rule 249 (empty -> .)
    ADD             reduce using rule 249 (empty -> .)
    PUT             reduce using rule 249 (empty -> .)
    FIN             reduce using rule 249 (empty -> .)
    COMA            reduce using rule 249 (empty -> .)
    CIERRA_P        reduce using rule 249 (empty -> .)
    BRACKET2        reduce using rule 249 (empty -> .)

    empty                          shift and go to state 96

state 94

    (83) Put2 -> PUT . ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (84) Put2 -> PUT . ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (85) Put2 -> PUT . ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (86) Put2 -> PUT . ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA
    (82) Put -> PUT . ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA

    ABRE_P          shift and go to state 170


state 95

    (35) variablexdd -> empty empty .
    (52) expresion -> empty empty .
    (81) funcion -> empty empty .

  ! reduce/reduce conflict for FIN resolved using rule 35 (variablexdd -> empty empty .)
  ! reduce/reduce conflict for FIN resolved using rule 35 (variablexdd -> empty empty .)
    FIN             reduce using rule 35 (variablexdd -> empty empty .)
    PUNTOCOMA       reduce using rule 81 (funcion -> empty empty .)
    NUMERO          reduce using rule 81 (funcion -> empty empty .)
    ABRE_P          reduce using rule 81 (funcion -> empty empty .)
    SUM             reduce using rule 81 (funcion -> empty empty .)
    SUBSTR          reduce using rule 81 (funcion -> empty empty .)
    MULTI           reduce using rule 81 (funcion -> empty empty .)
    DIV             reduce using rule 81 (funcion -> empty empty .)
    RANDOM          reduce using rule 81 (funcion -> empty empty .)
    RUN             reduce using rule 81 (funcion -> empty empty .)
    IF              reduce using rule 81 (funcion -> empty empty .)
    IFELSE          reduce using rule 81 (funcion -> empty empty .)
    REPEAT          reduce using rule 81 (funcion -> empty empty .)
    UNTIL           reduce using rule 81 (funcion -> empty empty .)
    WHILE           reduce using rule 81 (funcion -> empty empty .)
    PRINTLINE       reduce using rule 81 (funcion -> empty empty .)
    AND             reduce using rule 81 (funcion -> empty empty .)
    OR              reduce using rule 81 (funcion -> empty empty .)
    ADD             reduce using rule 81 (funcion -> empty empty .)
    PUT             reduce using rule 81 (funcion -> empty empty .)

  ! FIN             [ reduce using rule 52 (expresion -> empty empty .) ]
  ! FIN             [ reduce using rule 81 (funcion -> empty empty .) ]


state 96

    (79) funcion -> Put empty .

    PUNTOCOMA       reduce using rule 79 (funcion -> Put empty .)
    NUMERO          reduce using rule 79 (funcion -> Put empty .)
    ABRE_P          reduce using rule 79 (funcion -> Put empty .)
    SUM             reduce using rule 79 (funcion -> Put empty .)
    SUBSTR          reduce using rule 79 (funcion -> Put empty .)
    MULTI           reduce using rule 79 (funcion -> Put empty .)
    DIV             reduce using rule 79 (funcion -> Put empty .)
    RANDOM          reduce using rule 79 (funcion -> Put empty .)
    RUN             reduce using rule 79 (funcion -> Put empty .)
    IF              reduce using rule 79 (funcion -> Put empty .)
    IFELSE          reduce using rule 79 (funcion -> Put empty .)
    REPEAT          reduce using rule 79 (funcion -> Put empty .)
    UNTIL           reduce using rule 79 (funcion -> Put empty .)
    WHILE           reduce using rule 79 (funcion -> Put empty .)
    PRINTLINE       reduce using rule 79 (funcion -> Put empty .)
    AND             reduce using rule 79 (funcion -> Put empty .)
    OR              reduce using rule 79 (funcion -> Put empty .)
    ADD             reduce using rule 79 (funcion -> Put empty .)
    PUT             reduce using rule 79 (funcion -> Put empty .)
    FIN             reduce using rule 79 (funcion -> Put empty .)
    COMA            reduce using rule 79 (funcion -> Put empty .)
    CIERRA_P        reduce using rule 79 (funcion -> Put empty .)
    BRACKET2        reduce using rule 79 (funcion -> Put empty .)


state 97

    (78) funcion -> Put2 empty .

    PUNTOCOMA       reduce using rule 78 (funcion -> Put2 empty .)
    NUMERO          reduce using rule 78 (funcion -> Put2 empty .)
    ABRE_P          reduce using rule 78 (funcion -> Put2 empty .)
    SUM             reduce using rule 78 (funcion -> Put2 empty .)
    SUBSTR          reduce using rule 78 (funcion -> Put2 empty .)
    MULTI           reduce using rule 78 (funcion -> Put2 empty .)
    DIV             reduce using rule 78 (funcion -> Put2 empty .)
    RANDOM          reduce using rule 78 (funcion -> Put2 empty .)
    RUN             reduce using rule 78 (funcion -> Put2 empty .)
    IF              reduce using rule 78 (funcion -> Put2 empty .)
    IFELSE          reduce using rule 78 (funcion -> Put2 empty .)
    REPEAT          reduce using rule 78 (funcion -> Put2 empty .)
    UNTIL           reduce using rule 78 (funcion -> Put2 empty .)
    WHILE           reduce using rule 78 (funcion -> Put2 empty .)
    PRINTLINE       reduce using rule 78 (funcion -> Put2 empty .)
    AND             reduce using rule 78 (funcion -> Put2 empty .)
    OR              reduce using rule 78 (funcion -> Put2 empty .)
    ADD             reduce using rule 78 (funcion -> Put2 empty .)
    PUT             reduce using rule 78 (funcion -> Put2 empty .)
    FIN             reduce using rule 78 (funcion -> Put2 empty .)
    COMA            reduce using rule 78 (funcion -> Put2 empty .)
    CIERRA_P        reduce using rule 78 (funcion -> Put2 empty .)
    BRACKET2        reduce using rule 78 (funcion -> Put2 empty .)


state 98

    (33) variablexdd -> variable1 cuerpo3 .

    FIN             reduce using rule 33 (variablexdd -> variable1 cuerpo3 .)


state 99

    (34) variablexdd -> variable2 cuerpo3 .

    FIN             reduce using rule 34 (variablexdd -> variable2 cuerpo3 .)


state 100

    (39) expresion -> expresion_alge1 expresion .

    FIN             reduce using rule 39 (expresion -> expresion_alge1 expresion .)
    COMA            reduce using rule 39 (expresion -> expresion_alge1 expresion .)
    CIERRA_P        reduce using rule 39 (expresion -> expresion_alge1 expresion .)


state 101

    (46) expresion -> expresion_alge1 empty .
    (52) expresion -> empty . empty
    (81) funcion -> empty . empty
    (249) empty -> .

  ! reduce/reduce conflict for FIN resolved using rule 46 (expresion -> expresion_alge1 empty .)
  ! reduce/reduce conflict for COMA resolved using rule 46 (expresion -> expresion_alge1 empty .)
  ! reduce/reduce conflict for CIERRA_P resolved using rule 46 (expresion -> expresion_alge1 empty .)
    FIN             reduce using rule 46 (expresion -> expresion_alge1 empty .)
    COMA            reduce using rule 46 (expresion -> expresion_alge1 empty .)
    CIERRA_P        reduce using rule 46 (expresion -> expresion_alge1 empty .)
    PUNTOCOMA       reduce using rule 249 (empty -> .)
    NUMERO          reduce using rule 249 (empty -> .)
    ABRE_P          reduce using rule 249 (empty -> .)
    SUM             reduce using rule 249 (empty -> .)
    SUBSTR          reduce using rule 249 (empty -> .)
    MULTI           reduce using rule 249 (empty -> .)
    DIV             reduce using rule 249 (empty -> .)
    RANDOM          reduce using rule 249 (empty -> .)
    RUN             reduce using rule 249 (empty -> .)
    IF              reduce using rule 249 (empty -> .)
    IFELSE          reduce using rule 249 (empty -> .)
    REPEAT          reduce using rule 249 (empty -> .)
    UNTIL           reduce using rule 249 (empty -> .)
    WHILE           reduce using rule 249 (empty -> .)
    PRINTLINE       reduce using rule 249 (empty -> .)
    AND             reduce using rule 249 (empty -> .)
    OR              reduce using rule 249 (empty -> .)
    ADD             reduce using rule 249 (empty -> .)
    PUT             reduce using rule 249 (empty -> .)

  ! FIN             [ reduce using rule 249 (empty -> .) ]
  ! COMA            [ reduce using rule 249 (empty -> .) ]
  ! CIERRA_P        [ reduce using rule 249 (empty -> .) ]

    empty                          shift and go to state 169

state 102

    (40) expresion -> expresion_alge2 expresion .

    FIN             reduce using rule 40 (expresion -> expresion_alge2 expresion .)
    COMA            reduce using rule 40 (expresion -> expresion_alge2 expresion .)
    CIERRA_P        reduce using rule 40 (expresion -> expresion_alge2 expresion .)


state 103

    (47) expresion -> expresion_alge2 empty .
    (52) expresion -> empty . empty
    (81) funcion -> empty . empty
    (249) empty -> .

  ! reduce/reduce conflict for FIN resolved using rule 47 (expresion -> expresion_alge2 empty .)
  ! reduce/reduce conflict for COMA resolved using rule 47 (expresion -> expresion_alge2 empty .)
  ! reduce/reduce conflict for CIERRA_P resolved using rule 47 (expresion -> expresion_alge2 empty .)
    FIN             reduce using rule 47 (expresion -> expresion_alge2 empty .)
    COMA            reduce using rule 47 (expresion -> expresion_alge2 empty .)
    CIERRA_P        reduce using rule 47 (expresion -> expresion_alge2 empty .)
    PUNTOCOMA       reduce using rule 249 (empty -> .)
    NUMERO          reduce using rule 249 (empty -> .)
    ABRE_P          reduce using rule 249 (empty -> .)
    SUM             reduce using rule 249 (empty -> .)
    SUBSTR          reduce using rule 249 (empty -> .)
    MULTI           reduce using rule 249 (empty -> .)
    DIV             reduce using rule 249 (empty -> .)
    RANDOM          reduce using rule 249 (empty -> .)
    RUN             reduce using rule 249 (empty -> .)
    IF              reduce using rule 249 (empty -> .)
    IFELSE          reduce using rule 249 (empty -> .)
    REPEAT          reduce using rule 249 (empty -> .)
    UNTIL           reduce using rule 249 (empty -> .)
    WHILE           reduce using rule 249 (empty -> .)
    PRINTLINE       reduce using rule 249 (empty -> .)
    AND             reduce using rule 249 (empty -> .)
    OR              reduce using rule 249 (empty -> .)
    ADD             reduce using rule 249 (empty -> .)
    PUT             reduce using rule 249 (empty -> .)

  ! FIN             [ reduce using rule 249 (empty -> .) ]
  ! COMA            [ reduce using rule 249 (empty -> .) ]
  ! CIERRA_P        [ reduce using rule 249 (empty -> .) ]

    empty                          shift and go to state 169

state 104

    (41) expresion -> Sum expresion .

    FIN             reduce using rule 41 (expresion -> Sum expresion .)
    COMA            reduce using rule 41 (expresion -> Sum expresion .)
    CIERRA_P        reduce using rule 41 (expresion -> Sum expresion .)


state 105

    (48) expresion -> Sum empty .
    (52) expresion -> empty . empty
    (81) funcion -> empty . empty
    (249) empty -> .

  ! reduce/reduce conflict for FIN resolved using rule 48 (expresion -> Sum empty .)
  ! reduce/reduce conflict for COMA resolved using rule 48 (expresion -> Sum empty .)
  ! reduce/reduce conflict for CIERRA_P resolved using rule 48 (expresion -> Sum empty .)
    FIN             reduce using rule 48 (expresion -> Sum empty .)
    COMA            reduce using rule 48 (expresion -> Sum empty .)
    CIERRA_P        reduce using rule 48 (expresion -> Sum empty .)
    PUNTOCOMA       reduce using rule 249 (empty -> .)
    NUMERO          reduce using rule 249 (empty -> .)
    ABRE_P          reduce using rule 249 (empty -> .)
    SUM             reduce using rule 249 (empty -> .)
    SUBSTR          reduce using rule 249 (empty -> .)
    MULTI           reduce using rule 249 (empty -> .)
    DIV             reduce using rule 249 (empty -> .)
    RANDOM          reduce using rule 249 (empty -> .)
    RUN             reduce using rule 249 (empty -> .)
    IF              reduce using rule 249 (empty -> .)
    IFELSE          reduce using rule 249 (empty -> .)
    REPEAT          reduce using rule 249 (empty -> .)
    UNTIL           reduce using rule 249 (empty -> .)
    WHILE           reduce using rule 249 (empty -> .)
    PRINTLINE       reduce using rule 249 (empty -> .)
    AND             reduce using rule 249 (empty -> .)
    OR              reduce using rule 249 (empty -> .)
    ADD             reduce using rule 249 (empty -> .)
    PUT             reduce using rule 249 (empty -> .)

  ! FIN             [ reduce using rule 249 (empty -> .) ]
  ! COMA            [ reduce using rule 249 (empty -> .) ]
  ! CIERRA_P        [ reduce using rule 249 (empty -> .) ]

    empty                          shift and go to state 169

state 106

    (42) expresion -> Substr expresion .

    FIN             reduce using rule 42 (expresion -> Substr expresion .)
    COMA            reduce using rule 42 (expresion -> Substr expresion .)
    CIERRA_P        reduce using rule 42 (expresion -> Substr expresion .)


state 107

    (49) expresion -> Substr empty .
    (52) expresion -> empty . empty
    (81) funcion -> empty . empty
    (249) empty -> .

  ! reduce/reduce conflict for FIN resolved using rule 49 (expresion -> Substr empty .)
  ! reduce/reduce conflict for COMA resolved using rule 49 (expresion -> Substr empty .)
  ! reduce/reduce conflict for CIERRA_P resolved using rule 49 (expresion -> Substr empty .)
    FIN             reduce using rule 49 (expresion -> Substr empty .)
    COMA            reduce using rule 49 (expresion -> Substr empty .)
    CIERRA_P        reduce using rule 49 (expresion -> Substr empty .)
    PUNTOCOMA       reduce using rule 249 (empty -> .)
    NUMERO          reduce using rule 249 (empty -> .)
    ABRE_P          reduce using rule 249 (empty -> .)
    SUM             reduce using rule 249 (empty -> .)
    SUBSTR          reduce using rule 249 (empty -> .)
    MULTI           reduce using rule 249 (empty -> .)
    DIV             reduce using rule 249 (empty -> .)
    RANDOM          reduce using rule 249 (empty -> .)
    RUN             reduce using rule 249 (empty -> .)
    IF              reduce using rule 249 (empty -> .)
    IFELSE          reduce using rule 249 (empty -> .)
    REPEAT          reduce using rule 249 (empty -> .)
    UNTIL           reduce using rule 249 (empty -> .)
    WHILE           reduce using rule 249 (empty -> .)
    PRINTLINE       reduce using rule 249 (empty -> .)
    AND             reduce using rule 249 (empty -> .)
    OR              reduce using rule 249 (empty -> .)
    ADD             reduce using rule 249 (empty -> .)
    PUT             reduce using rule 249 (empty -> .)

  ! FIN             [ reduce using rule 249 (empty -> .) ]
  ! COMA            [ reduce using rule 249 (empty -> .) ]
  ! CIERRA_P        [ reduce using rule 249 (empty -> .) ]

    empty                          shift and go to state 169

state 108

    (43) expresion -> Mult expresion .

    FIN             reduce using rule 43 (expresion -> Mult expresion .)
    COMA            reduce using rule 43 (expresion -> Mult expresion .)
    CIERRA_P        reduce using rule 43 (expresion -> Mult expresion .)


state 109

    (50) expresion -> Mult empty .
    (52) expresion -> empty . empty
    (81) funcion -> empty . empty
    (249) empty -> .

  ! reduce/reduce conflict for FIN resolved using rule 50 (expresion -> Mult empty .)
  ! reduce/reduce conflict for COMA resolved using rule 50 (expresion -> Mult empty .)
  ! reduce/reduce conflict for CIERRA_P resolved using rule 50 (expresion -> Mult empty .)
    FIN             reduce using rule 50 (expresion -> Mult empty .)
    COMA            reduce using rule 50 (expresion -> Mult empty .)
    CIERRA_P        reduce using rule 50 (expresion -> Mult empty .)
    PUNTOCOMA       reduce using rule 249 (empty -> .)
    NUMERO          reduce using rule 249 (empty -> .)
    ABRE_P          reduce using rule 249 (empty -> .)
    SUM             reduce using rule 249 (empty -> .)
    SUBSTR          reduce using rule 249 (empty -> .)
    MULTI           reduce using rule 249 (empty -> .)
    DIV             reduce using rule 249 (empty -> .)
    RANDOM          reduce using rule 249 (empty -> .)
    RUN             reduce using rule 249 (empty -> .)
    IF              reduce using rule 249 (empty -> .)
    IFELSE          reduce using rule 249 (empty -> .)
    REPEAT          reduce using rule 249 (empty -> .)
    UNTIL           reduce using rule 249 (empty -> .)
    WHILE           reduce using rule 249 (empty -> .)
    PRINTLINE       reduce using rule 249 (empty -> .)
    AND             reduce using rule 249 (empty -> .)
    OR              reduce using rule 249 (empty -> .)
    ADD             reduce using rule 249 (empty -> .)
    PUT             reduce using rule 249 (empty -> .)

  ! FIN             [ reduce using rule 249 (empty -> .) ]
  ! COMA            [ reduce using rule 249 (empty -> .) ]
  ! CIERRA_P        [ reduce using rule 249 (empty -> .) ]

    empty                          shift and go to state 169

state 110

    (44) expresion -> Div expresion .

    FIN             reduce using rule 44 (expresion -> Div expresion .)
    COMA            reduce using rule 44 (expresion -> Div expresion .)
    CIERRA_P        reduce using rule 44 (expresion -> Div expresion .)


state 111

    (51) expresion -> Div empty .
    (52) expresion -> empty . empty
    (81) funcion -> empty . empty
    (249) empty -> .

  ! reduce/reduce conflict for FIN resolved using rule 51 (expresion -> Div empty .)
  ! reduce/reduce conflict for COMA resolved using rule 51 (expresion -> Div empty .)
  ! reduce/reduce conflict for CIERRA_P resolved using rule 51 (expresion -> Div empty .)
    FIN             reduce using rule 51 (expresion -> Div empty .)
    COMA            reduce using rule 51 (expresion -> Div empty .)
    CIERRA_P        reduce using rule 51 (expresion -> Div empty .)
    PUNTOCOMA       reduce using rule 249 (empty -> .)
    NUMERO          reduce using rule 249 (empty -> .)
    ABRE_P          reduce using rule 249 (empty -> .)
    SUM             reduce using rule 249 (empty -> .)
    SUBSTR          reduce using rule 249 (empty -> .)
    MULTI           reduce using rule 249 (empty -> .)
    DIV             reduce using rule 249 (empty -> .)
    RANDOM          reduce using rule 249 (empty -> .)
    RUN             reduce using rule 249 (empty -> .)
    IF              reduce using rule 249 (empty -> .)
    IFELSE          reduce using rule 249 (empty -> .)
    REPEAT          reduce using rule 249 (empty -> .)
    UNTIL           reduce using rule 249 (empty -> .)
    WHILE           reduce using rule 249 (empty -> .)
    PRINTLINE       reduce using rule 249 (empty -> .)
    AND             reduce using rule 249 (empty -> .)
    OR              reduce using rule 249 (empty -> .)
    ADD             reduce using rule 249 (empty -> .)
    PUT             reduce using rule 249 (empty -> .)

  ! FIN             [ reduce using rule 249 (empty -> .) ]
  ! COMA            [ reduce using rule 249 (empty -> .) ]
  ! CIERRA_P        [ reduce using rule 249 (empty -> .) ]

    empty                          shift and go to state 169

state 112

    (67) funcion -> Random empty .

    PUNTOCOMA       reduce using rule 67 (funcion -> Random empty .)
    NUMERO          reduce using rule 67 (funcion -> Random empty .)
    ABRE_P          reduce using rule 67 (funcion -> Random empty .)
    SUM             reduce using rule 67 (funcion -> Random empty .)
    SUBSTR          reduce using rule 67 (funcion -> Random empty .)
    MULTI           reduce using rule 67 (funcion -> Random empty .)
    DIV             reduce using rule 67 (funcion -> Random empty .)
    RANDOM          reduce using rule 67 (funcion -> Random empty .)
    RUN             reduce using rule 67 (funcion -> Random empty .)
    IF              reduce using rule 67 (funcion -> Random empty .)
    IFELSE          reduce using rule 67 (funcion -> Random empty .)
    REPEAT          reduce using rule 67 (funcion -> Random empty .)
    UNTIL           reduce using rule 67 (funcion -> Random empty .)
    WHILE           reduce using rule 67 (funcion -> Random empty .)
    PRINTLINE       reduce using rule 67 (funcion -> Random empty .)
    AND             reduce using rule 67 (funcion -> Random empty .)
    OR              reduce using rule 67 (funcion -> Random empty .)
    ADD             reduce using rule 67 (funcion -> Random empty .)
    PUT             reduce using rule 67 (funcion -> Random empty .)
    FIN             reduce using rule 67 (funcion -> Random empty .)
    COMA            reduce using rule 67 (funcion -> Random empty .)
    CIERRA_P        reduce using rule 67 (funcion -> Random empty .)
    BRACKET2        reduce using rule 67 (funcion -> Random empty .)


state 113

    (68) funcion -> Run empty .

    PUNTOCOMA       reduce using rule 68 (funcion -> Run empty .)
    NUMERO          reduce using rule 68 (funcion -> Run empty .)
    ABRE_P          reduce using rule 68 (funcion -> Run empty .)
    SUM             reduce using rule 68 (funcion -> Run empty .)
    SUBSTR          reduce using rule 68 (funcion -> Run empty .)
    MULTI           reduce using rule 68 (funcion -> Run empty .)
    DIV             reduce using rule 68 (funcion -> Run empty .)
    RANDOM          reduce using rule 68 (funcion -> Run empty .)
    RUN             reduce using rule 68 (funcion -> Run empty .)
    IF              reduce using rule 68 (funcion -> Run empty .)
    IFELSE          reduce using rule 68 (funcion -> Run empty .)
    REPEAT          reduce using rule 68 (funcion -> Run empty .)
    UNTIL           reduce using rule 68 (funcion -> Run empty .)
    WHILE           reduce using rule 68 (funcion -> Run empty .)
    PRINTLINE       reduce using rule 68 (funcion -> Run empty .)
    AND             reduce using rule 68 (funcion -> Run empty .)
    OR              reduce using rule 68 (funcion -> Run empty .)
    ADD             reduce using rule 68 (funcion -> Run empty .)
    PUT             reduce using rule 68 (funcion -> Run empty .)
    FIN             reduce using rule 68 (funcion -> Run empty .)
    COMA            reduce using rule 68 (funcion -> Run empty .)
    CIERRA_P        reduce using rule 68 (funcion -> Run empty .)
    BRACKET2        reduce using rule 68 (funcion -> Run empty .)


state 114

    (69) funcion -> If empty .

    PUNTOCOMA       reduce using rule 69 (funcion -> If empty .)
    NUMERO          reduce using rule 69 (funcion -> If empty .)
    ABRE_P          reduce using rule 69 (funcion -> If empty .)
    SUM             reduce using rule 69 (funcion -> If empty .)
    SUBSTR          reduce using rule 69 (funcion -> If empty .)
    MULTI           reduce using rule 69 (funcion -> If empty .)
    DIV             reduce using rule 69 (funcion -> If empty .)
    RANDOM          reduce using rule 69 (funcion -> If empty .)
    RUN             reduce using rule 69 (funcion -> If empty .)
    IF              reduce using rule 69 (funcion -> If empty .)
    IFELSE          reduce using rule 69 (funcion -> If empty .)
    REPEAT          reduce using rule 69 (funcion -> If empty .)
    UNTIL           reduce using rule 69 (funcion -> If empty .)
    WHILE           reduce using rule 69 (funcion -> If empty .)
    PRINTLINE       reduce using rule 69 (funcion -> If empty .)
    AND             reduce using rule 69 (funcion -> If empty .)
    OR              reduce using rule 69 (funcion -> If empty .)
    ADD             reduce using rule 69 (funcion -> If empty .)
    PUT             reduce using rule 69 (funcion -> If empty .)
    FIN             reduce using rule 69 (funcion -> If empty .)
    COMA            reduce using rule 69 (funcion -> If empty .)
    CIERRA_P        reduce using rule 69 (funcion -> If empty .)
    BRACKET2        reduce using rule 69 (funcion -> If empty .)


state 115

    (70) funcion -> IfElse empty .

    PUNTOCOMA       reduce using rule 70 (funcion -> IfElse empty .)
    NUMERO          reduce using rule 70 (funcion -> IfElse empty .)
    ABRE_P          reduce using rule 70 (funcion -> IfElse empty .)
    SUM             reduce using rule 70 (funcion -> IfElse empty .)
    SUBSTR          reduce using rule 70 (funcion -> IfElse empty .)
    MULTI           reduce using rule 70 (funcion -> IfElse empty .)
    DIV             reduce using rule 70 (funcion -> IfElse empty .)
    RANDOM          reduce using rule 70 (funcion -> IfElse empty .)
    RUN             reduce using rule 70 (funcion -> IfElse empty .)
    IF              reduce using rule 70 (funcion -> IfElse empty .)
    IFELSE          reduce using rule 70 (funcion -> IfElse empty .)
    REPEAT          reduce using rule 70 (funcion -> IfElse empty .)
    UNTIL           reduce using rule 70 (funcion -> IfElse empty .)
    WHILE           reduce using rule 70 (funcion -> IfElse empty .)
    PRINTLINE       reduce using rule 70 (funcion -> IfElse empty .)
    AND             reduce using rule 70 (funcion -> IfElse empty .)
    OR              reduce using rule 70 (funcion -> IfElse empty .)
    ADD             reduce using rule 70 (funcion -> IfElse empty .)
    PUT             reduce using rule 70 (funcion -> IfElse empty .)
    FIN             reduce using rule 70 (funcion -> IfElse empty .)
    COMA            reduce using rule 70 (funcion -> IfElse empty .)
    CIERRA_P        reduce using rule 70 (funcion -> IfElse empty .)
    BRACKET2        reduce using rule 70 (funcion -> IfElse empty .)


state 116

    (71) funcion -> Repeat empty .

    PUNTOCOMA       reduce using rule 71 (funcion -> Repeat empty .)
    NUMERO          reduce using rule 71 (funcion -> Repeat empty .)
    ABRE_P          reduce using rule 71 (funcion -> Repeat empty .)
    SUM             reduce using rule 71 (funcion -> Repeat empty .)
    SUBSTR          reduce using rule 71 (funcion -> Repeat empty .)
    MULTI           reduce using rule 71 (funcion -> Repeat empty .)
    DIV             reduce using rule 71 (funcion -> Repeat empty .)
    RANDOM          reduce using rule 71 (funcion -> Repeat empty .)
    RUN             reduce using rule 71 (funcion -> Repeat empty .)
    IF              reduce using rule 71 (funcion -> Repeat empty .)
    IFELSE          reduce using rule 71 (funcion -> Repeat empty .)
    REPEAT          reduce using rule 71 (funcion -> Repeat empty .)
    UNTIL           reduce using rule 71 (funcion -> Repeat empty .)
    WHILE           reduce using rule 71 (funcion -> Repeat empty .)
    PRINTLINE       reduce using rule 71 (funcion -> Repeat empty .)
    AND             reduce using rule 71 (funcion -> Repeat empty .)
    OR              reduce using rule 71 (funcion -> Repeat empty .)
    ADD             reduce using rule 71 (funcion -> Repeat empty .)
    PUT             reduce using rule 71 (funcion -> Repeat empty .)
    FIN             reduce using rule 71 (funcion -> Repeat empty .)
    COMA            reduce using rule 71 (funcion -> Repeat empty .)
    CIERRA_P        reduce using rule 71 (funcion -> Repeat empty .)
    BRACKET2        reduce using rule 71 (funcion -> Repeat empty .)


state 117

    (72) funcion -> Until empty .

    PUNTOCOMA       reduce using rule 72 (funcion -> Until empty .)
    NUMERO          reduce using rule 72 (funcion -> Until empty .)
    ABRE_P          reduce using rule 72 (funcion -> Until empty .)
    SUM             reduce using rule 72 (funcion -> Until empty .)
    SUBSTR          reduce using rule 72 (funcion -> Until empty .)
    MULTI           reduce using rule 72 (funcion -> Until empty .)
    DIV             reduce using rule 72 (funcion -> Until empty .)
    RANDOM          reduce using rule 72 (funcion -> Until empty .)
    RUN             reduce using rule 72 (funcion -> Until empty .)
    IF              reduce using rule 72 (funcion -> Until empty .)
    IFELSE          reduce using rule 72 (funcion -> Until empty .)
    REPEAT          reduce using rule 72 (funcion -> Until empty .)
    UNTIL           reduce using rule 72 (funcion -> Until empty .)
    WHILE           reduce using rule 72 (funcion -> Until empty .)
    PRINTLINE       reduce using rule 72 (funcion -> Until empty .)
    AND             reduce using rule 72 (funcion -> Until empty .)
    OR              reduce using rule 72 (funcion -> Until empty .)
    ADD             reduce using rule 72 (funcion -> Until empty .)
    PUT             reduce using rule 72 (funcion -> Until empty .)
    FIN             reduce using rule 72 (funcion -> Until empty .)
    COMA            reduce using rule 72 (funcion -> Until empty .)
    CIERRA_P        reduce using rule 72 (funcion -> Until empty .)
    BRACKET2        reduce using rule 72 (funcion -> Until empty .)


state 118

    (73) funcion -> While empty .

    PUNTOCOMA       reduce using rule 73 (funcion -> While empty .)
    NUMERO          reduce using rule 73 (funcion -> While empty .)
    ABRE_P          reduce using rule 73 (funcion -> While empty .)
    SUM             reduce using rule 73 (funcion -> While empty .)
    SUBSTR          reduce using rule 73 (funcion -> While empty .)
    MULTI           reduce using rule 73 (funcion -> While empty .)
    DIV             reduce using rule 73 (funcion -> While empty .)
    RANDOM          reduce using rule 73 (funcion -> While empty .)
    RUN             reduce using rule 73 (funcion -> While empty .)
    IF              reduce using rule 73 (funcion -> While empty .)
    IFELSE          reduce using rule 73 (funcion -> While empty .)
    REPEAT          reduce using rule 73 (funcion -> While empty .)
    UNTIL           reduce using rule 73 (funcion -> While empty .)
    WHILE           reduce using rule 73 (funcion -> While empty .)
    PRINTLINE       reduce using rule 73 (funcion -> While empty .)
    AND             reduce using rule 73 (funcion -> While empty .)
    OR              reduce using rule 73 (funcion -> While empty .)
    ADD             reduce using rule 73 (funcion -> While empty .)
    PUT             reduce using rule 73 (funcion -> While empty .)
    FIN             reduce using rule 73 (funcion -> While empty .)
    COMA            reduce using rule 73 (funcion -> While empty .)
    CIERRA_P        reduce using rule 73 (funcion -> While empty .)
    BRACKET2        reduce using rule 73 (funcion -> While empty .)


state 119

    (74) funcion -> PrintLine empty .

    PUNTOCOMA       reduce using rule 74 (funcion -> PrintLine empty .)
    NUMERO          reduce using rule 74 (funcion -> PrintLine empty .)
    ABRE_P          reduce using rule 74 (funcion -> PrintLine empty .)
    SUM             reduce using rule 74 (funcion -> PrintLine empty .)
    SUBSTR          reduce using rule 74 (funcion -> PrintLine empty .)
    MULTI           reduce using rule 74 (funcion -> PrintLine empty .)
    DIV             reduce using rule 74 (funcion -> PrintLine empty .)
    RANDOM          reduce using rule 74 (funcion -> PrintLine empty .)
    RUN             reduce using rule 74 (funcion -> PrintLine empty .)
    IF              reduce using rule 74 (funcion -> PrintLine empty .)
    IFELSE          reduce using rule 74 (funcion -> PrintLine empty .)
    REPEAT          reduce using rule 74 (funcion -> PrintLine empty .)
    UNTIL           reduce using rule 74 (funcion -> PrintLine empty .)
    WHILE           reduce using rule 74 (funcion -> PrintLine empty .)
    PRINTLINE       reduce using rule 74 (funcion -> PrintLine empty .)
    AND             reduce using rule 74 (funcion -> PrintLine empty .)
    OR              reduce using rule 74 (funcion -> PrintLine empty .)
    ADD             reduce using rule 74 (funcion -> PrintLine empty .)
    PUT             reduce using rule 74 (funcion -> PrintLine empty .)
    FIN             reduce using rule 74 (funcion -> PrintLine empty .)
    COMA            reduce using rule 74 (funcion -> PrintLine empty .)
    CIERRA_P        reduce using rule 74 (funcion -> PrintLine empty .)
    BRACKET2        reduce using rule 74 (funcion -> PrintLine empty .)


state 120

    (75) funcion -> And empty .

    PUNTOCOMA       reduce using rule 75 (funcion -> And empty .)
    NUMERO          reduce using rule 75 (funcion -> And empty .)
    ABRE_P          reduce using rule 75 (funcion -> And empty .)
    SUM             reduce using rule 75 (funcion -> And empty .)
    SUBSTR          reduce using rule 75 (funcion -> And empty .)
    MULTI           reduce using rule 75 (funcion -> And empty .)
    DIV             reduce using rule 75 (funcion -> And empty .)
    RANDOM          reduce using rule 75 (funcion -> And empty .)
    RUN             reduce using rule 75 (funcion -> And empty .)
    IF              reduce using rule 75 (funcion -> And empty .)
    IFELSE          reduce using rule 75 (funcion -> And empty .)
    REPEAT          reduce using rule 75 (funcion -> And empty .)
    UNTIL           reduce using rule 75 (funcion -> And empty .)
    WHILE           reduce using rule 75 (funcion -> And empty .)
    PRINTLINE       reduce using rule 75 (funcion -> And empty .)
    AND             reduce using rule 75 (funcion -> And empty .)
    OR              reduce using rule 75 (funcion -> And empty .)
    ADD             reduce using rule 75 (funcion -> And empty .)
    PUT             reduce using rule 75 (funcion -> And empty .)
    FIN             reduce using rule 75 (funcion -> And empty .)
    COMA            reduce using rule 75 (funcion -> And empty .)
    CIERRA_P        reduce using rule 75 (funcion -> And empty .)
    BRACKET2        reduce using rule 75 (funcion -> And empty .)


state 121

    (76) funcion -> Or empty .

    PUNTOCOMA       reduce using rule 76 (funcion -> Or empty .)
    NUMERO          reduce using rule 76 (funcion -> Or empty .)
    ABRE_P          reduce using rule 76 (funcion -> Or empty .)
    SUM             reduce using rule 76 (funcion -> Or empty .)
    SUBSTR          reduce using rule 76 (funcion -> Or empty .)
    MULTI           reduce using rule 76 (funcion -> Or empty .)
    DIV             reduce using rule 76 (funcion -> Or empty .)
    RANDOM          reduce using rule 76 (funcion -> Or empty .)
    RUN             reduce using rule 76 (funcion -> Or empty .)
    IF              reduce using rule 76 (funcion -> Or empty .)
    IFELSE          reduce using rule 76 (funcion -> Or empty .)
    REPEAT          reduce using rule 76 (funcion -> Or empty .)
    UNTIL           reduce using rule 76 (funcion -> Or empty .)
    WHILE           reduce using rule 76 (funcion -> Or empty .)
    PRINTLINE       reduce using rule 76 (funcion -> Or empty .)
    AND             reduce using rule 76 (funcion -> Or empty .)
    OR              reduce using rule 76 (funcion -> Or empty .)
    ADD             reduce using rule 76 (funcion -> Or empty .)
    PUT             reduce using rule 76 (funcion -> Or empty .)
    FIN             reduce using rule 76 (funcion -> Or empty .)
    COMA            reduce using rule 76 (funcion -> Or empty .)
    CIERRA_P        reduce using rule 76 (funcion -> Or empty .)
    BRACKET2        reduce using rule 76 (funcion -> Or empty .)


state 122

    (77) funcion -> Add empty .

    PUNTOCOMA       reduce using rule 77 (funcion -> Add empty .)
    NUMERO          reduce using rule 77 (funcion -> Add empty .)
    ABRE_P          reduce using rule 77 (funcion -> Add empty .)
    SUM             reduce using rule 77 (funcion -> Add empty .)
    SUBSTR          reduce using rule 77 (funcion -> Add empty .)
    MULTI           reduce using rule 77 (funcion -> Add empty .)
    DIV             reduce using rule 77 (funcion -> Add empty .)
    RANDOM          reduce using rule 77 (funcion -> Add empty .)
    RUN             reduce using rule 77 (funcion -> Add empty .)
    IF              reduce using rule 77 (funcion -> Add empty .)
    IFELSE          reduce using rule 77 (funcion -> Add empty .)
    REPEAT          reduce using rule 77 (funcion -> Add empty .)
    UNTIL           reduce using rule 77 (funcion -> Add empty .)
    WHILE           reduce using rule 77 (funcion -> Add empty .)
    PRINTLINE       reduce using rule 77 (funcion -> Add empty .)
    AND             reduce using rule 77 (funcion -> Add empty .)
    OR              reduce using rule 77 (funcion -> Add empty .)
    ADD             reduce using rule 77 (funcion -> Add empty .)
    PUT             reduce using rule 77 (funcion -> Add empty .)
    FIN             reduce using rule 77 (funcion -> Add empty .)
    COMA            reduce using rule 77 (funcion -> Add empty .)
    CIERRA_P        reduce using rule 77 (funcion -> Add empty .)
    BRACKET2        reduce using rule 77 (funcion -> Add empty .)


state 123

    (80) funcion -> PUNTOCOMA funcion .

    PUNTOCOMA       reduce using rule 80 (funcion -> PUNTOCOMA funcion .)
    NUMERO          reduce using rule 80 (funcion -> PUNTOCOMA funcion .)
    ABRE_P          reduce using rule 80 (funcion -> PUNTOCOMA funcion .)
    SUM             reduce using rule 80 (funcion -> PUNTOCOMA funcion .)
    SUBSTR          reduce using rule 80 (funcion -> PUNTOCOMA funcion .)
    MULTI           reduce using rule 80 (funcion -> PUNTOCOMA funcion .)
    DIV             reduce using rule 80 (funcion -> PUNTOCOMA funcion .)
    RANDOM          reduce using rule 80 (funcion -> PUNTOCOMA funcion .)
    RUN             reduce using rule 80 (funcion -> PUNTOCOMA funcion .)
    IF              reduce using rule 80 (funcion -> PUNTOCOMA funcion .)
    IFELSE          reduce using rule 80 (funcion -> PUNTOCOMA funcion .)
    REPEAT          reduce using rule 80 (funcion -> PUNTOCOMA funcion .)
    UNTIL           reduce using rule 80 (funcion -> PUNTOCOMA funcion .)
    WHILE           reduce using rule 80 (funcion -> PUNTOCOMA funcion .)
    PRINTLINE       reduce using rule 80 (funcion -> PUNTOCOMA funcion .)
    AND             reduce using rule 80 (funcion -> PUNTOCOMA funcion .)
    OR              reduce using rule 80 (funcion -> PUNTOCOMA funcion .)
    ADD             reduce using rule 80 (funcion -> PUNTOCOMA funcion .)
    PUT             reduce using rule 80 (funcion -> PUNTOCOMA funcion .)
    FIN             reduce using rule 80 (funcion -> PUNTOCOMA funcion .)
    COMA            reduce using rule 80 (funcion -> PUNTOCOMA funcion .)
    CIERRA_P        reduce using rule 80 (funcion -> PUNTOCOMA funcion .)
    BRACKET2        reduce using rule 80 (funcion -> PUNTOCOMA funcion .)


state 124

    (81) funcion -> empty . empty
    (249) empty -> .

    PUNTOCOMA       reduce using rule 249 (empty -> .)
    NUMERO          reduce using rule 249 (empty -> .)
    ABRE_P          reduce using rule 249 (empty -> .)
    SUM             reduce using rule 249 (empty -> .)
    SUBSTR          reduce using rule 249 (empty -> .)
    MULTI           reduce using rule 249 (empty -> .)
    DIV             reduce using rule 249 (empty -> .)
    RANDOM          reduce using rule 249 (empty -> .)
    RUN             reduce using rule 249 (empty -> .)
    IF              reduce using rule 249 (empty -> .)
    IFELSE          reduce using rule 249 (empty -> .)
    REPEAT          reduce using rule 249 (empty -> .)
    UNTIL           reduce using rule 249 (empty -> .)
    WHILE           reduce using rule 249 (empty -> .)
    PRINTLINE       reduce using rule 249 (empty -> .)
    AND             reduce using rule 249 (empty -> .)
    OR              reduce using rule 249 (empty -> .)
    ADD             reduce using rule 249 (empty -> .)
    PUT             reduce using rule 249 (empty -> .)
    FIN             reduce using rule 249 (empty -> .)
    COMA            reduce using rule 249 (empty -> .)
    CIERRA_P        reduce using rule 249 (empty -> .)
    BRACKET2        reduce using rule 249 (empty -> .)

    empty                          shift and go to state 171

state 125

    (95) expresion_alge2 -> ABRE_P expresion_alge1 . CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (96) expresion_alge2 -> ABRE_P expresion_alge1 . CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (97) expresion_alge2 -> ABRE_P expresion_alge1 . CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (98) expresion_alge2 -> ABRE_P expresion_alge1 . CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (99) expresion_alge2 -> ABRE_P expresion_alge1 . CIERRA_P EXPONENTE ABRE_P expresion_alge1 CIERRA_P

    CIERRA_P        shift and go to state 172


state 126

    (90) expresion_alge1 -> NUMERO SUMA . NUMERO

    NUMERO          shift and go to state 173


state 127

    (91) expresion_alge1 -> NUMERO RESTA . NUMERO

    NUMERO          shift and go to state 174


state 128

    (92) expresion_alge1 -> NUMERO MULTI . NUMERO

    NUMERO          shift and go to state 175


state 129

    (93) expresion_alge1 -> NUMERO DIVISION . NUMERO

    NUMERO          shift and go to state 176


state 130

    (94) expresion_alge1 -> NUMERO EXPONENTE . NUMERO

    NUMERO          shift and go to state 177


state 131

    (118) Mult -> MULTI ABRE_P . NUMERO COMA NUMERO CIERRA_P
    (119) Mult -> MULTI ABRE_P . NUMERO COMA expresion_alge1 CIERRA_P
    (120) Mult -> MULTI ABRE_P . expresion_alge1 COMA expresion_alge1 CIERRA_P
    (121) Mult -> MULTI ABRE_P . NUMERO COMA Var CIERRA_P
    (122) Mult -> MULTI ABRE_P . Var COMA NUMERO CIERRA_P
    (123) Mult -> MULTI ABRE_P . Var COMA Var CIERRA_P
    (124) Mult -> MULTI ABRE_P . expresion_alge1 COMA Var CIERRA_P
    (125) Mult -> MULTI ABRE_P . expresion_alge1 COMA NUMERO CIERRA_P
    (126) Mult -> MULTI ABRE_P . Var COMA expresion_alge1 CIERRA_P
    (90) expresion_alge1 -> . NUMERO SUMA NUMERO
    (91) expresion_alge1 -> . NUMERO RESTA NUMERO
    (92) expresion_alge1 -> . NUMERO MULTI NUMERO
    (93) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (94) expresion_alge1 -> . NUMERO EXPONENTE NUMERO
    (136) Var -> . VAR

    NUMERO          shift and go to state 178
    VAR             shift and go to state 34

    expresion_alge1                shift and go to state 179
    Var                            shift and go to state 180

state 132

    (127) Div -> DIV ABRE_P . NUMERO COMA NUMERO CIERRA_P
    (128) Div -> DIV ABRE_P . NUMERO COMA expresion_alge1 CIERRA_P
    (129) Div -> DIV ABRE_P . expresion_alge1 COMA expresion_alge1 CIERRA_P
    (130) Div -> DIV ABRE_P . NUMERO COMA Var CIERRA_P
    (131) Div -> DIV ABRE_P . Var COMA NUMERO CIERRA_P
    (132) Div -> DIV ABRE_P . Var COMA Var CIERRA_P
    (133) Div -> DIV ABRE_P . expresion_alge1 COMA Var CIERRA_P
    (134) Div -> DIV ABRE_P . expresion_alge1 COMA NUMERO CIERRA_P
    (135) Div -> DIV ABRE_P . Var COMA expresion_alge1 CIERRA_P
    (90) expresion_alge1 -> . NUMERO SUMA NUMERO
    (91) expresion_alge1 -> . NUMERO RESTA NUMERO
    (92) expresion_alge1 -> . NUMERO MULTI NUMERO
    (93) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (94) expresion_alge1 -> . NUMERO EXPONENTE NUMERO
    (136) Var -> . VAR

    NUMERO          shift and go to state 181
    VAR             shift and go to state 34

    expresion_alge1                shift and go to state 182
    Var                            shift and go to state 183

state 133

    (100) Sum -> SUM ABRE_P . NUMERO COMA NUMERO CIERRA_P
    (101) Sum -> SUM ABRE_P . NUMERO COMA expresion_alge1 CIERRA_P
    (102) Sum -> SUM ABRE_P . expresion_alge1 COMA expresion_alge1 CIERRA_P
    (103) Sum -> SUM ABRE_P . NUMERO COMA Var CIERRA_P
    (104) Sum -> SUM ABRE_P . Var COMA NUMERO CIERRA_P
    (105) Sum -> SUM ABRE_P . Var COMA Var CIERRA_P
    (106) Sum -> SUM ABRE_P . expresion_alge1 COMA Var CIERRA_P
    (107) Sum -> SUM ABRE_P . expresion_alge1 COMA NUMERO CIERRA_P
    (108) Sum -> SUM ABRE_P . Var COMA expresion_alge1 CIERRA_P
    (90) expresion_alge1 -> . NUMERO SUMA NUMERO
    (91) expresion_alge1 -> . NUMERO RESTA NUMERO
    (92) expresion_alge1 -> . NUMERO MULTI NUMERO
    (93) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (94) expresion_alge1 -> . NUMERO EXPONENTE NUMERO
    (136) Var -> . VAR

    NUMERO          shift and go to state 184
    VAR             shift and go to state 34

    expresion_alge1                shift and go to state 185
    Var                            shift and go to state 186

state 134

    (109) Substr -> SUBSTR ABRE_P . NUMERO COMA NUMERO CIERRA_P
    (110) Substr -> SUBSTR ABRE_P . NUMERO COMA expresion_alge1 CIERRA_P
    (111) Substr -> SUBSTR ABRE_P . expresion_alge1 COMA expresion_alge1 CIERRA_P
    (112) Substr -> SUBSTR ABRE_P . NUMERO COMA Var CIERRA_P
    (113) Substr -> SUBSTR ABRE_P . Var COMA NUMERO CIERRA_P
    (114) Substr -> SUBSTR ABRE_P . Var COMA Var CIERRA_P
    (115) Substr -> SUBSTR ABRE_P . expresion_alge1 COMA Var CIERRA_P
    (116) Substr -> SUBSTR ABRE_P . expresion_alge1 COMA NUMERO CIERRA_P
    (117) Substr -> SUBSTR ABRE_P . Var COMA expresion_alge1 CIERRA_P
    (90) expresion_alge1 -> . NUMERO SUMA NUMERO
    (91) expresion_alge1 -> . NUMERO RESTA NUMERO
    (92) expresion_alge1 -> . NUMERO MULTI NUMERO
    (93) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (94) expresion_alge1 -> . NUMERO EXPONENTE NUMERO
    (136) Var -> . VAR

    NUMERO          shift and go to state 187
    VAR             shift and go to state 34

    expresion_alge1                shift and go to state 188
    Var                            shift and go to state 189

state 135

    (201) Random -> RANDOM ABRE_P . NUMERO CIERRA_P PUNTOCOMA

    NUMERO          shift and go to state 190


state 136

    (241) Run -> RUN BRACKET1 . ordenes BRACKET2 PUNTOCOMA
    (53) ordenes -> . Beginning empty
    (54) ordenes -> . ContinueUp empty
    (55) ordenes -> . ContinueDown empty
    (56) ordenes -> . ContinueRight empty
    (57) ordenes -> . ContinueLeft empty
    (58) ordenes -> . Up empty
    (59) ordenes -> . Down empty
    (60) ordenes -> . Speed empty
    (61) ordenes -> . Pos empty
    (62) ordenes -> . PosX empty
    (63) ordenes -> . PosY empty
    (64) ordenes -> . UseColor empty
    (65) ordenes -> . PUNTOCOMA ordenes
    (66) ordenes -> . empty empty
    (200) Beginning -> . BEGINNING PUNTOCOMA
    (202) ContinueUp -> . CONTINUEUP NUMERO PUNTOCOMA
    (203) ContinueUp -> . CONTINUEUP expresion_alge1 PUNTOCOMA
    (204) ContinueUp -> . CONTINUEUP expresion_alge2 PUNTOCOMA
    (205) ContinueUp -> . CONTINUEUP Var PUNTOCOMA
    (206) ContinueDown -> . CONTINUEDOWN NUMERO PUNTOCOMA
    (207) ContinueDown -> . CONTINUEDOWN expresion_alge1 PUNTOCOMA
    (208) ContinueDown -> . CONTINUEDOWN expresion_alge2 PUNTOCOMA
    (209) ContinueDown -> . CONTINUEDOWN Var PUNTOCOMA
    (210) ContinueRight -> . CONTINUERIGHT NUMERO PUNTOCOMA
    (211) ContinueRight -> . CONTINUERIGHT expresion_alge1 PUNTOCOMA
    (212) ContinueRight -> . CONTINUERIGHT expresion_alge2 PUNTOCOMA
    (213) ContinueRight -> . CONTINUERIGHT Var PUNTOCOMA
    (214) ContinueLeft -> . CONTINUELEFT NUMERO PUNTOCOMA
    (215) ContinueLeft -> . CONTINUELEFT expresion_alge1 PUNTOCOMA
    (216) ContinueLeft -> . CONTINUELEFT expresion_alge2 PUNTOCOMA
    (217) ContinueLeft -> . CONTINUELEFT Var PUNTOCOMA
    (218) Up -> . UP PUNTOCOMA
    (219) Down -> . DOWN PUNTOCOMA
    (220) Speed -> . SPEED NUMERO PUNTOCOMA
    (221) Pos -> . POS ABRE_P NUMERO COMA NUMERO CIERRA_P PUNTOCOMA
    (222) Pos -> . POS ABRE_P expresion_alge1 COMA NUMERO CIERRA_P PUNTOCOMA
    (223) Pos -> . POS ABRE_P NUMERO COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (224) Pos -> . POS ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (225) Pos -> . POS ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (226) Pos -> . POS ABRE_P NUMERO COMA Var CIERRA_P PUNTOCOMA
    (227) Pos -> . POS ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (228) Pos -> . POS ABRE_P expresion_alge1 COMA Var CIERRA_P PUNTOCOMA
    (229) Pos -> . POS ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (230) PosX -> . POSX NUMERO PUNTOCOMA
    (231) PosX -> . POSX expresion_alge1 PUNTOCOMA
    (232) PosX -> . POSX expresion_alge2 PUNTOCOMA
    (233) PosX -> . POSX Var PUNTOCOMA
    (234) PosY -> . POSY NUMERO PUNTOCOMA
    (235) PosY -> . POSY expresion_alge1 PUNTOCOMA
    (236) PosY -> . POSY expresion_alge2 PUNTOCOMA
    (237) PosY -> . POSY Var PUNTOCOMA
    (238) UseColor -> . USECOLOR NUMERO PUNTOCOMA
    (239) UseColor -> . USECOLOR Var PUNTOCOMA
    (240) UseColor -> . USECOLOR empty PUNTOCOMA
    (249) empty -> .

    PUNTOCOMA       shift and go to state 192
    BEGINNING       shift and go to state 206
    CONTINUEUP      shift and go to state 207
    CONTINUEDOWN    shift and go to state 208
    CONTINUERIGHT   shift and go to state 209
    CONTINUELEFT    shift and go to state 210
    UP              shift and go to state 211
    DOWN            shift and go to state 212
    SPEED           shift and go to state 213
    POS             shift and go to state 214
    POSX            shift and go to state 215
    POSY            shift and go to state 216
    USECOLOR        shift and go to state 217
    BRACKET2        reduce using rule 249 (empty -> .)

    ordenes                        shift and go to state 191
    Beginning                      shift and go to state 193
    empty                          shift and go to state 194
    ContinueUp                     shift and go to state 195
    ContinueDown                   shift and go to state 196
    ContinueRight                  shift and go to state 197
    ContinueLeft                   shift and go to state 198
    Up                             shift and go to state 199
    Down                           shift and go to state 200
    Speed                          shift and go to state 201
    Pos                            shift and go to state 202
    PosX                           shift and go to state 203
    PosY                           shift and go to state 204
    UseColor                       shift and go to state 205

state 137

    (187) If -> IF ABRE_P . condicion CIERRA_P BRACKET1 funcion BRACKET2
    (87) condicion -> . Equal
    (88) condicion -> . Greater
    (89) condicion -> . Smaller
    (137) Equal -> . EQUAL ABRE_P NUMERO COMA NUMERO CIERRA_P PUNTOCOMA
    (138) Equal -> . EQUAL ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (139) Equal -> . EQUAL ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (140) Equal -> . EQUAL ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (141) Equal -> . EQUAL ABRE_P NUMERO COMA Var CIERRA_P PUNTOCOMA
    (142) Equal -> . EQUAL ABRE_P expresion_alge2 COMA Var CIERRA_P PUNTOCOMA
    (143) Equal -> . EQUAL ABRE_P expresion_alge1 COMA Var CIERRA_P PUNTOCOMA
    (144) Equal -> . EQUAL ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (145) Equal -> . EQUAL ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (146) Equal -> . EQUAL ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (147) Equal -> . EQUAL ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (148) Equal -> . EQUAL ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (149) Equal -> . EQUAL ABRE_P expresion_alge1 COMA NUMERO CIERRA_P PUNTOCOMA
    (150) Equal -> . EQUAL ABRE_P expresion_alge2 COMA NUMERO CIERRA_P PUNTOCOMA
    (151) Equal -> . EQUAL ABRE_P NUMERO COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (152) Equal -> . EQUAL ABRE_P NUMERO COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (153) Greater -> . GREATER ABRE_P NUMERO COMA NUMERO CIERRA_P PUNTOCOMA
    (154) Greater -> . GREATER ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (155) Greater -> . GREATER ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (156) Greater -> . GREATER ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (157) Greater -> . GREATER ABRE_P NUMERO COMA Var CIERRA_P PUNTOCOMA
    (158) Greater -> . GREATER ABRE_P expresion_alge2 COMA Var CIERRA_P PUNTOCOMA
    (159) Greater -> . GREATER ABRE_P expresion_alge1 COMA Var CIERRA_P PUNTOCOMA
    (160) Greater -> . GREATER ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (161) Greater -> . GREATER ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (162) Greater -> . GREATER ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (163) Greater -> . GREATER ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (164) Greater -> . GREATER ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (165) Greater -> . GREATER ABRE_P expresion_alge1 COMA NUMERO CIERRA_P PUNTOCOMA
    (166) Greater -> . GREATER ABRE_P expresion_alge2 COMA NUMERO CIERRA_P PUNTOCOMA
    (167) Greater -> . GREATER ABRE_P NUMERO COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (168) Greater -> . GREATER ABRE_P NUMERO COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (169) Smaller -> . SMALLER ABRE_P NUMERO COMA NUMERO CIERRA_P PUNTOCOMA
    (170) Smaller -> . SMALLER ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (171) Smaller -> . SMALLER ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (172) Smaller -> . SMALLER ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (173) Smaller -> . SMALLER ABRE_P NUMERO COMA Var CIERRA_P PUNTOCOMA
    (174) Smaller -> . SMALLER ABRE_P expresion_alge2 COMA Var CIERRA_P PUNTOCOMA
    (175) Smaller -> . SMALLER ABRE_P expresion_alge1 COMA Var CIERRA_P PUNTOCOMA
    (176) Smaller -> . SMALLER ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (177) Smaller -> . SMALLER ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (178) Smaller -> . SMALLER ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (179) Smaller -> . SMALLER ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (180) Smaller -> . SMALLER ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (181) Smaller -> . SMALLER ABRE_P expresion_alge1 COMA NUMERO CIERRA_P PUNTOCOMA
    (182) Smaller -> . SMALLER ABRE_P expresion_alge2 COMA NUMERO CIERRA_P PUNTOCOMA
    (183) Smaller -> . SMALLER ABRE_P NUMERO COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (184) Smaller -> . SMALLER ABRE_P NUMERO COMA expresion_alge2 CIERRA_P PUNTOCOMA

    EQUAL           shift and go to state 222
    GREATER         shift and go to state 223
    SMALLER         shift and go to state 224

    condicion                      shift and go to state 218
    Equal                          shift and go to state 219
    Greater                        shift and go to state 220
    Smaller                        shift and go to state 221

state 138

    (188) IfElse -> IFELSE ABRE_P . condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2
    (87) condicion -> . Equal
    (88) condicion -> . Greater
    (89) condicion -> . Smaller
    (137) Equal -> . EQUAL ABRE_P NUMERO COMA NUMERO CIERRA_P PUNTOCOMA
    (138) Equal -> . EQUAL ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (139) Equal -> . EQUAL ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (140) Equal -> . EQUAL ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (141) Equal -> . EQUAL ABRE_P NUMERO COMA Var CIERRA_P PUNTOCOMA
    (142) Equal -> . EQUAL ABRE_P expresion_alge2 COMA Var CIERRA_P PUNTOCOMA
    (143) Equal -> . EQUAL ABRE_P expresion_alge1 COMA Var CIERRA_P PUNTOCOMA
    (144) Equal -> . EQUAL ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (145) Equal -> . EQUAL ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (146) Equal -> . EQUAL ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (147) Equal -> . EQUAL ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (148) Equal -> . EQUAL ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (149) Equal -> . EQUAL ABRE_P expresion_alge1 COMA NUMERO CIERRA_P PUNTOCOMA
    (150) Equal -> . EQUAL ABRE_P expresion_alge2 COMA NUMERO CIERRA_P PUNTOCOMA
    (151) Equal -> . EQUAL ABRE_P NUMERO COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (152) Equal -> . EQUAL ABRE_P NUMERO COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (153) Greater -> . GREATER ABRE_P NUMERO COMA NUMERO CIERRA_P PUNTOCOMA
    (154) Greater -> . GREATER ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (155) Greater -> . GREATER ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (156) Greater -> . GREATER ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (157) Greater -> . GREATER ABRE_P NUMERO COMA Var CIERRA_P PUNTOCOMA
    (158) Greater -> . GREATER ABRE_P expresion_alge2 COMA Var CIERRA_P PUNTOCOMA
    (159) Greater -> . GREATER ABRE_P expresion_alge1 COMA Var CIERRA_P PUNTOCOMA
    (160) Greater -> . GREATER ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (161) Greater -> . GREATER ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (162) Greater -> . GREATER ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (163) Greater -> . GREATER ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (164) Greater -> . GREATER ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (165) Greater -> . GREATER ABRE_P expresion_alge1 COMA NUMERO CIERRA_P PUNTOCOMA
    (166) Greater -> . GREATER ABRE_P expresion_alge2 COMA NUMERO CIERRA_P PUNTOCOMA
    (167) Greater -> . GREATER ABRE_P NUMERO COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (168) Greater -> . GREATER ABRE_P NUMERO COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (169) Smaller -> . SMALLER ABRE_P NUMERO COMA NUMERO CIERRA_P PUNTOCOMA
    (170) Smaller -> . SMALLER ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (171) Smaller -> . SMALLER ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (172) Smaller -> . SMALLER ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (173) Smaller -> . SMALLER ABRE_P NUMERO COMA Var CIERRA_P PUNTOCOMA
    (174) Smaller -> . SMALLER ABRE_P expresion_alge2 COMA Var CIERRA_P PUNTOCOMA
    (175) Smaller -> . SMALLER ABRE_P expresion_alge1 COMA Var CIERRA_P PUNTOCOMA
    (176) Smaller -> . SMALLER ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (177) Smaller -> . SMALLER ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (178) Smaller -> . SMALLER ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (179) Smaller -> . SMALLER ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (180) Smaller -> . SMALLER ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (181) Smaller -> . SMALLER ABRE_P expresion_alge1 COMA NUMERO CIERRA_P PUNTOCOMA
    (182) Smaller -> . SMALLER ABRE_P expresion_alge2 COMA NUMERO CIERRA_P PUNTOCOMA
    (183) Smaller -> . SMALLER ABRE_P NUMERO COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (184) Smaller -> . SMALLER ABRE_P NUMERO COMA expresion_alge2 CIERRA_P PUNTOCOMA

    EQUAL           shift and go to state 222
    GREATER         shift and go to state 223
    SMALLER         shift and go to state 224

    condicion                      shift and go to state 225
    Equal                          shift and go to state 219
    Greater                        shift and go to state 220
    Smaller                        shift and go to state 221

state 139

    (190) Repeat -> REPEAT NUMERO . BRACKET1 ordenes BRACKET2

    BRACKET1        shift and go to state 226


state 140

    (191) Until -> UNTIL BRACKET1 . funcion BRACKET2 BRACKET1 condicion BRACKET2
    (67) funcion -> . Random empty
    (68) funcion -> . Run empty
    (69) funcion -> . If empty
    (70) funcion -> . IfElse empty
    (71) funcion -> . Repeat empty
    (72) funcion -> . Until empty
    (73) funcion -> . While empty
    (74) funcion -> . PrintLine empty
    (75) funcion -> . And empty
    (76) funcion -> . Or empty
    (77) funcion -> . Add empty
    (78) funcion -> . Put2 empty
    (79) funcion -> . Put empty
    (80) funcion -> . PUNTOCOMA funcion
    (81) funcion -> . empty empty
    (201) Random -> . RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA
    (241) Run -> . RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA
    (187) If -> . IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2
    (188) IfElse -> . IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2
    (190) Repeat -> . REPEAT NUMERO BRACKET1 ordenes BRACKET2
    (191) Until -> . UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2
    (189) While -> . WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2
    (248) PrintLine -> . PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA
    (185) And -> . AND ABRE_P expresion COMA expresion CIERRA_P PUNTOCOMA
    (186) Or -> . OR ABRE_P expresion COMA expresion CIERRA_P PUNTOCOMA
    (192) Add -> . ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA
    (193) Add -> . ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (194) Add -> . ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (195) Add -> . ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (196) Add -> . ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (83) Put2 -> . PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (84) Put2 -> . PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (85) Put2 -> . PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (86) Put2 -> . PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA
    (82) Put -> . PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA
    (249) empty -> .

    PUNTOCOMA       shift and go to state 62
    RANDOM          shift and go to state 69
    RUN             shift and go to state 70
    IF              shift and go to state 71
    IFELSE          shift and go to state 72
    REPEAT          shift and go to state 73
    UNTIL           shift and go to state 74
    WHILE           shift and go to state 75
    PRINTLINE       shift and go to state 76
    AND             shift and go to state 77
    OR              shift and go to state 78
    ADD             shift and go to state 79
    PUT             shift and go to state 94
    BRACKET2        reduce using rule 249 (empty -> .)

    funcion                        shift and go to state 227
    Random                         shift and go to state 51
    empty                          shift and go to state 124
    Run                            shift and go to state 52
    If                             shift and go to state 53
    IfElse                         shift and go to state 54
    Repeat                         shift and go to state 55
    Until                          shift and go to state 56
    While                          shift and go to state 57
    PrintLine                      shift and go to state 58
    And                            shift and go to state 59
    Or                             shift and go to state 60
    Add                            shift and go to state 61
    Put2                           shift and go to state 92
    Put                            shift and go to state 93

state 141

    (189) While -> WHILE BRACKET1 . condicion BRACKET2 BRACKET1 funcion BRACKET2
    (87) condicion -> . Equal
    (88) condicion -> . Greater
    (89) condicion -> . Smaller
    (137) Equal -> . EQUAL ABRE_P NUMERO COMA NUMERO CIERRA_P PUNTOCOMA
    (138) Equal -> . EQUAL ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (139) Equal -> . EQUAL ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (140) Equal -> . EQUAL ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (141) Equal -> . EQUAL ABRE_P NUMERO COMA Var CIERRA_P PUNTOCOMA
    (142) Equal -> . EQUAL ABRE_P expresion_alge2 COMA Var CIERRA_P PUNTOCOMA
    (143) Equal -> . EQUAL ABRE_P expresion_alge1 COMA Var CIERRA_P PUNTOCOMA
    (144) Equal -> . EQUAL ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (145) Equal -> . EQUAL ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (146) Equal -> . EQUAL ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (147) Equal -> . EQUAL ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (148) Equal -> . EQUAL ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (149) Equal -> . EQUAL ABRE_P expresion_alge1 COMA NUMERO CIERRA_P PUNTOCOMA
    (150) Equal -> . EQUAL ABRE_P expresion_alge2 COMA NUMERO CIERRA_P PUNTOCOMA
    (151) Equal -> . EQUAL ABRE_P NUMERO COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (152) Equal -> . EQUAL ABRE_P NUMERO COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (153) Greater -> . GREATER ABRE_P NUMERO COMA NUMERO CIERRA_P PUNTOCOMA
    (154) Greater -> . GREATER ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (155) Greater -> . GREATER ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (156) Greater -> . GREATER ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (157) Greater -> . GREATER ABRE_P NUMERO COMA Var CIERRA_P PUNTOCOMA
    (158) Greater -> . GREATER ABRE_P expresion_alge2 COMA Var CIERRA_P PUNTOCOMA
    (159) Greater -> . GREATER ABRE_P expresion_alge1 COMA Var CIERRA_P PUNTOCOMA
    (160) Greater -> . GREATER ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (161) Greater -> . GREATER ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (162) Greater -> . GREATER ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (163) Greater -> . GREATER ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (164) Greater -> . GREATER ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (165) Greater -> . GREATER ABRE_P expresion_alge1 COMA NUMERO CIERRA_P PUNTOCOMA
    (166) Greater -> . GREATER ABRE_P expresion_alge2 COMA NUMERO CIERRA_P PUNTOCOMA
    (167) Greater -> . GREATER ABRE_P NUMERO COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (168) Greater -> . GREATER ABRE_P NUMERO COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (169) Smaller -> . SMALLER ABRE_P NUMERO COMA NUMERO CIERRA_P PUNTOCOMA
    (170) Smaller -> . SMALLER ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (171) Smaller -> . SMALLER ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (172) Smaller -> . SMALLER ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (173) Smaller -> . SMALLER ABRE_P NUMERO COMA Var CIERRA_P PUNTOCOMA
    (174) Smaller -> . SMALLER ABRE_P expresion_alge2 COMA Var CIERRA_P PUNTOCOMA
    (175) Smaller -> . SMALLER ABRE_P expresion_alge1 COMA Var CIERRA_P PUNTOCOMA
    (176) Smaller -> . SMALLER ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (177) Smaller -> . SMALLER ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (178) Smaller -> . SMALLER ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (179) Smaller -> . SMALLER ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (180) Smaller -> . SMALLER ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (181) Smaller -> . SMALLER ABRE_P expresion_alge1 COMA NUMERO CIERRA_P PUNTOCOMA
    (182) Smaller -> . SMALLER ABRE_P expresion_alge2 COMA NUMERO CIERRA_P PUNTOCOMA
    (183) Smaller -> . SMALLER ABRE_P NUMERO COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (184) Smaller -> . SMALLER ABRE_P NUMERO COMA expresion_alge2 CIERRA_P PUNTOCOMA

    EQUAL           shift and go to state 222
    GREATER         shift and go to state 223
    SMALLER         shift and go to state 224

    condicion                      shift and go to state 228
    Equal                          shift and go to state 219
    Greater                        shift and go to state 220
    Smaller                        shift and go to state 221

state 142

    (248) PrintLine -> PRINTLINE ABRE_P . exp CIERRA_P PUNTOCOMA
    (242) exp -> . NUMERO COMA exp
    (243) exp -> . STRING COMA exp
    (244) exp -> . Var COMA exp
    (245) exp -> . NUMERO empty empty
    (246) exp -> . STRING empty empty
    (247) exp -> . Var empty empty
    (136) Var -> . VAR

    NUMERO          shift and go to state 230
    STRING          shift and go to state 231
    VAR             shift and go to state 34

    exp                            shift and go to state 229
    Var                            shift and go to state 232

state 143

    (185) And -> AND ABRE_P . expresion COMA expresion CIERRA_P PUNTOCOMA
    (38) expresion -> . funcion expresion
    (39) expresion -> . expresion_alge1 expresion
    (40) expresion -> . expresion_alge2 expresion
    (41) expresion -> . Sum expresion
    (42) expresion -> . Substr expresion
    (43) expresion -> . Mult expresion
    (44) expresion -> . Div expresion
    (45) expresion -> . funcion empty
    (46) expresion -> . expresion_alge1 empty
    (47) expresion -> . expresion_alge2 empty
    (48) expresion -> . Sum empty
    (49) expresion -> . Substr empty
    (50) expresion -> . Mult empty
    (51) expresion -> . Div empty
    (52) expresion -> . empty empty
    (67) funcion -> . Random empty
    (68) funcion -> . Run empty
    (69) funcion -> . If empty
    (70) funcion -> . IfElse empty
    (71) funcion -> . Repeat empty
    (72) funcion -> . Until empty
    (73) funcion -> . While empty
    (74) funcion -> . PrintLine empty
    (75) funcion -> . And empty
    (76) funcion -> . Or empty
    (77) funcion -> . Add empty
    (78) funcion -> . Put2 empty
    (79) funcion -> . Put empty
    (80) funcion -> . PUNTOCOMA funcion
    (81) funcion -> . empty empty
    (90) expresion_alge1 -> . NUMERO SUMA NUMERO
    (91) expresion_alge1 -> . NUMERO RESTA NUMERO
    (92) expresion_alge1 -> . NUMERO MULTI NUMERO
    (93) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (94) expresion_alge1 -> . NUMERO EXPONENTE NUMERO
    (95) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (96) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (97) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (98) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (99) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P EXPONENTE ABRE_P expresion_alge1 CIERRA_P
    (100) Sum -> . SUM ABRE_P NUMERO COMA NUMERO CIERRA_P
    (101) Sum -> . SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (102) Sum -> . SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (103) Sum -> . SUM ABRE_P NUMERO COMA Var CIERRA_P
    (104) Sum -> . SUM ABRE_P Var COMA NUMERO CIERRA_P
    (105) Sum -> . SUM ABRE_P Var COMA Var CIERRA_P
    (106) Sum -> . SUM ABRE_P expresion_alge1 COMA Var CIERRA_P
    (107) Sum -> . SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (108) Sum -> . SUM ABRE_P Var COMA expresion_alge1 CIERRA_P
    (109) Substr -> . SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P
    (110) Substr -> . SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (111) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (112) Substr -> . SUBSTR ABRE_P NUMERO COMA Var CIERRA_P
    (113) Substr -> . SUBSTR ABRE_P Var COMA NUMERO CIERRA_P
    (114) Substr -> . SUBSTR ABRE_P Var COMA Var CIERRA_P
    (115) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P
    (116) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (117) Substr -> . SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P
    (118) Mult -> . MULTI ABRE_P NUMERO COMA NUMERO CIERRA_P
    (119) Mult -> . MULTI ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (120) Mult -> . MULTI ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (121) Mult -> . MULTI ABRE_P NUMERO COMA Var CIERRA_P
    (122) Mult -> . MULTI ABRE_P Var COMA NUMERO CIERRA_P
    (123) Mult -> . MULTI ABRE_P Var COMA Var CIERRA_P
    (124) Mult -> . MULTI ABRE_P expresion_alge1 COMA Var CIERRA_P
    (125) Mult -> . MULTI ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (126) Mult -> . MULTI ABRE_P Var COMA expresion_alge1 CIERRA_P
    (127) Div -> . DIV ABRE_P NUMERO COMA NUMERO CIERRA_P
    (128) Div -> . DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (129) Div -> . DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (130) Div -> . DIV ABRE_P NUMERO COMA Var CIERRA_P
    (131) Div -> . DIV ABRE_P Var COMA NUMERO CIERRA_P
    (132) Div -> . DIV ABRE_P Var COMA Var CIERRA_P
    (133) Div -> . DIV ABRE_P expresion_alge1 COMA Var CIERRA_P
    (134) Div -> . DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (135) Div -> . DIV ABRE_P Var COMA expresion_alge1 CIERRA_P
    (249) empty -> .
    (201) Random -> . RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA
    (241) Run -> . RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA
    (187) If -> . IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2
    (188) IfElse -> . IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2
    (190) Repeat -> . REPEAT NUMERO BRACKET1 ordenes BRACKET2
    (191) Until -> . UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2
    (189) While -> . WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2
    (248) PrintLine -> . PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA
    (185) And -> . AND ABRE_P expresion COMA expresion CIERRA_P PUNTOCOMA
    (186) Or -> . OR ABRE_P expresion COMA expresion CIERRA_P PUNTOCOMA
    (192) Add -> . ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA
    (193) Add -> . ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (194) Add -> . ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (195) Add -> . ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (196) Add -> . ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (83) Put2 -> . PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (84) Put2 -> . PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (85) Put2 -> . PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (86) Put2 -> . PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA
    (82) Put -> . PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA

  ! shift/reduce conflict for PUNTOCOMA resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for ABRE_P resolved as shift
  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for SUBSTR resolved as shift
  ! shift/reduce conflict for MULTI resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for RANDOM resolved as shift
  ! shift/reduce conflict for RUN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for IFELSE resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for PRINTLINE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for PUT resolved as shift
    PUNTOCOMA       shift and go to state 62
    NUMERO          shift and go to state 64
    ABRE_P          shift and go to state 63
    SUM             shift and go to state 67
    SUBSTR          shift and go to state 68
    MULTI           shift and go to state 65
    DIV             shift and go to state 66
    COMA            reduce using rule 249 (empty -> .)
    RANDOM          shift and go to state 69
    RUN             shift and go to state 70
    IF              shift and go to state 71
    IFELSE          shift and go to state 72
    REPEAT          shift and go to state 73
    UNTIL           shift and go to state 74
    WHILE           shift and go to state 75
    PRINTLINE       shift and go to state 76
    AND             shift and go to state 77
    OR              shift and go to state 78
    ADD             shift and go to state 79
    PUT             shift and go to state 94

  ! PUNTOCOMA       [ reduce using rule 249 (empty -> .) ]
  ! NUMERO          [ reduce using rule 249 (empty -> .) ]
  ! ABRE_P          [ reduce using rule 249 (empty -> .) ]
  ! SUM             [ reduce using rule 249 (empty -> .) ]
  ! SUBSTR          [ reduce using rule 249 (empty -> .) ]
  ! MULTI           [ reduce using rule 249 (empty -> .) ]
  ! DIV             [ reduce using rule 249 (empty -> .) ]
  ! RANDOM          [ reduce using rule 249 (empty -> .) ]
  ! RUN             [ reduce using rule 249 (empty -> .) ]
  ! IF              [ reduce using rule 249 (empty -> .) ]
  ! IFELSE          [ reduce using rule 249 (empty -> .) ]
  ! REPEAT          [ reduce using rule 249 (empty -> .) ]
  ! UNTIL           [ reduce using rule 249 (empty -> .) ]
  ! WHILE           [ reduce using rule 249 (empty -> .) ]
  ! PRINTLINE       [ reduce using rule 249 (empty -> .) ]
  ! AND             [ reduce using rule 249 (empty -> .) ]
  ! OR              [ reduce using rule 249 (empty -> .) ]
  ! ADD             [ reduce using rule 249 (empty -> .) ]
  ! PUT             [ reduce using rule 249 (empty -> .) ]

    expresion                      shift and go to state 233
    funcion                        shift and go to state 89
    expresion_alge1                shift and go to state 45
    expresion_alge2                shift and go to state 46
    Sum                            shift and go to state 47
    Substr                         shift and go to state 48
    Mult                           shift and go to state 49
    Div                            shift and go to state 50
    empty                          shift and go to state 234
    Random                         shift and go to state 51
    Run                            shift and go to state 52
    If                             shift and go to state 53
    IfElse                         shift and go to state 54
    Repeat                         shift and go to state 55
    Until                          shift and go to state 56
    While                          shift and go to state 57
    PrintLine                      shift and go to state 58
    And                            shift and go to state 59
    Or                             shift and go to state 60
    Add                            shift and go to state 61
    Put2                           shift and go to state 92
    Put                            shift and go to state 93

state 144

    (186) Or -> OR ABRE_P . expresion COMA expresion CIERRA_P PUNTOCOMA
    (38) expresion -> . funcion expresion
    (39) expresion -> . expresion_alge1 expresion
    (40) expresion -> . expresion_alge2 expresion
    (41) expresion -> . Sum expresion
    (42) expresion -> . Substr expresion
    (43) expresion -> . Mult expresion
    (44) expresion -> . Div expresion
    (45) expresion -> . funcion empty
    (46) expresion -> . expresion_alge1 empty
    (47) expresion -> . expresion_alge2 empty
    (48) expresion -> . Sum empty
    (49) expresion -> . Substr empty
    (50) expresion -> . Mult empty
    (51) expresion -> . Div empty
    (52) expresion -> . empty empty
    (67) funcion -> . Random empty
    (68) funcion -> . Run empty
    (69) funcion -> . If empty
    (70) funcion -> . IfElse empty
    (71) funcion -> . Repeat empty
    (72) funcion -> . Until empty
    (73) funcion -> . While empty
    (74) funcion -> . PrintLine empty
    (75) funcion -> . And empty
    (76) funcion -> . Or empty
    (77) funcion -> . Add empty
    (78) funcion -> . Put2 empty
    (79) funcion -> . Put empty
    (80) funcion -> . PUNTOCOMA funcion
    (81) funcion -> . empty empty
    (90) expresion_alge1 -> . NUMERO SUMA NUMERO
    (91) expresion_alge1 -> . NUMERO RESTA NUMERO
    (92) expresion_alge1 -> . NUMERO MULTI NUMERO
    (93) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (94) expresion_alge1 -> . NUMERO EXPONENTE NUMERO
    (95) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (96) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (97) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (98) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (99) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P EXPONENTE ABRE_P expresion_alge1 CIERRA_P
    (100) Sum -> . SUM ABRE_P NUMERO COMA NUMERO CIERRA_P
    (101) Sum -> . SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (102) Sum -> . SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (103) Sum -> . SUM ABRE_P NUMERO COMA Var CIERRA_P
    (104) Sum -> . SUM ABRE_P Var COMA NUMERO CIERRA_P
    (105) Sum -> . SUM ABRE_P Var COMA Var CIERRA_P
    (106) Sum -> . SUM ABRE_P expresion_alge1 COMA Var CIERRA_P
    (107) Sum -> . SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (108) Sum -> . SUM ABRE_P Var COMA expresion_alge1 CIERRA_P
    (109) Substr -> . SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P
    (110) Substr -> . SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (111) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (112) Substr -> . SUBSTR ABRE_P NUMERO COMA Var CIERRA_P
    (113) Substr -> . SUBSTR ABRE_P Var COMA NUMERO CIERRA_P
    (114) Substr -> . SUBSTR ABRE_P Var COMA Var CIERRA_P
    (115) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P
    (116) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (117) Substr -> . SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P
    (118) Mult -> . MULTI ABRE_P NUMERO COMA NUMERO CIERRA_P
    (119) Mult -> . MULTI ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (120) Mult -> . MULTI ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (121) Mult -> . MULTI ABRE_P NUMERO COMA Var CIERRA_P
    (122) Mult -> . MULTI ABRE_P Var COMA NUMERO CIERRA_P
    (123) Mult -> . MULTI ABRE_P Var COMA Var CIERRA_P
    (124) Mult -> . MULTI ABRE_P expresion_alge1 COMA Var CIERRA_P
    (125) Mult -> . MULTI ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (126) Mult -> . MULTI ABRE_P Var COMA expresion_alge1 CIERRA_P
    (127) Div -> . DIV ABRE_P NUMERO COMA NUMERO CIERRA_P
    (128) Div -> . DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (129) Div -> . DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (130) Div -> . DIV ABRE_P NUMERO COMA Var CIERRA_P
    (131) Div -> . DIV ABRE_P Var COMA NUMERO CIERRA_P
    (132) Div -> . DIV ABRE_P Var COMA Var CIERRA_P
    (133) Div -> . DIV ABRE_P expresion_alge1 COMA Var CIERRA_P
    (134) Div -> . DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (135) Div -> . DIV ABRE_P Var COMA expresion_alge1 CIERRA_P
    (249) empty -> .
    (201) Random -> . RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA
    (241) Run -> . RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA
    (187) If -> . IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2
    (188) IfElse -> . IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2
    (190) Repeat -> . REPEAT NUMERO BRACKET1 ordenes BRACKET2
    (191) Until -> . UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2
    (189) While -> . WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2
    (248) PrintLine -> . PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA
    (185) And -> . AND ABRE_P expresion COMA expresion CIERRA_P PUNTOCOMA
    (186) Or -> . OR ABRE_P expresion COMA expresion CIERRA_P PUNTOCOMA
    (192) Add -> . ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA
    (193) Add -> . ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (194) Add -> . ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (195) Add -> . ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (196) Add -> . ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (83) Put2 -> . PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (84) Put2 -> . PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (85) Put2 -> . PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (86) Put2 -> . PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA
    (82) Put -> . PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA

  ! shift/reduce conflict for PUNTOCOMA resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for ABRE_P resolved as shift
  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for SUBSTR resolved as shift
  ! shift/reduce conflict for MULTI resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for RANDOM resolved as shift
  ! shift/reduce conflict for RUN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for IFELSE resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for PRINTLINE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for PUT resolved as shift
    PUNTOCOMA       shift and go to state 62
    NUMERO          shift and go to state 64
    ABRE_P          shift and go to state 63
    SUM             shift and go to state 67
    SUBSTR          shift and go to state 68
    MULTI           shift and go to state 65
    DIV             shift and go to state 66
    COMA            reduce using rule 249 (empty -> .)
    RANDOM          shift and go to state 69
    RUN             shift and go to state 70
    IF              shift and go to state 71
    IFELSE          shift and go to state 72
    REPEAT          shift and go to state 73
    UNTIL           shift and go to state 74
    WHILE           shift and go to state 75
    PRINTLINE       shift and go to state 76
    AND             shift and go to state 77
    OR              shift and go to state 78
    ADD             shift and go to state 79
    PUT             shift and go to state 94

  ! PUNTOCOMA       [ reduce using rule 249 (empty -> .) ]
  ! NUMERO          [ reduce using rule 249 (empty -> .) ]
  ! ABRE_P          [ reduce using rule 249 (empty -> .) ]
  ! SUM             [ reduce using rule 249 (empty -> .) ]
  ! SUBSTR          [ reduce using rule 249 (empty -> .) ]
  ! MULTI           [ reduce using rule 249 (empty -> .) ]
  ! DIV             [ reduce using rule 249 (empty -> .) ]
  ! RANDOM          [ reduce using rule 249 (empty -> .) ]
  ! RUN             [ reduce using rule 249 (empty -> .) ]
  ! IF              [ reduce using rule 249 (empty -> .) ]
  ! IFELSE          [ reduce using rule 249 (empty -> .) ]
  ! REPEAT          [ reduce using rule 249 (empty -> .) ]
  ! UNTIL           [ reduce using rule 249 (empty -> .) ]
  ! WHILE           [ reduce using rule 249 (empty -> .) ]
  ! PRINTLINE       [ reduce using rule 249 (empty -> .) ]
  ! AND             [ reduce using rule 249 (empty -> .) ]
  ! OR              [ reduce using rule 249 (empty -> .) ]
  ! ADD             [ reduce using rule 249 (empty -> .) ]
  ! PUT             [ reduce using rule 249 (empty -> .) ]

    expresion                      shift and go to state 235
    funcion                        shift and go to state 89
    expresion_alge1                shift and go to state 45
    expresion_alge2                shift and go to state 46
    Sum                            shift and go to state 47
    Substr                         shift and go to state 48
    Mult                           shift and go to state 49
    Div                            shift and go to state 50
    empty                          shift and go to state 234
    Random                         shift and go to state 51
    Run                            shift and go to state 52
    If                             shift and go to state 53
    IfElse                         shift and go to state 54
    Repeat                         shift and go to state 55
    Until                          shift and go to state 56
    While                          shift and go to state 57
    PrintLine                      shift and go to state 58
    And                            shift and go to state 59
    Or                             shift and go to state 60
    Add                            shift and go to state 61
    Put2                           shift and go to state 92
    Put                            shift and go to state 93

state 145

    (192) Add -> ADD ABRE_P . Var empty empty CIERRA_P PUNTOCOMA
    (193) Add -> ADD ABRE_P . Var COMA NUMERO CIERRA_P PUNTOCOMA
    (194) Add -> ADD ABRE_P . Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (195) Add -> ADD ABRE_P . Var COMA Var CIERRA_P PUNTOCOMA
    (196) Add -> ADD ABRE_P . Var COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (136) Var -> . VAR

    VAR             shift and go to state 34

    Var                            shift and go to state 236

state 146

    (82) Put -> PUT ABRE_P VAR COMA VAR . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 237


state 147

    (83) Put2 -> PUT ABRE_P VAR COMA NUMERO . CIERRA_P PUNTOCOMA
    (90) expresion_alge1 -> NUMERO . SUMA NUMERO
    (91) expresion_alge1 -> NUMERO . RESTA NUMERO
    (92) expresion_alge1 -> NUMERO . MULTI NUMERO
    (93) expresion_alge1 -> NUMERO . DIVISION NUMERO
    (94) expresion_alge1 -> NUMERO . EXPONENTE NUMERO

    CIERRA_P        shift and go to state 238
    SUMA            shift and go to state 126
    RESTA           shift and go to state 127
    MULTI           shift and go to state 128
    DIVISION        shift and go to state 129
    EXPONENTE       shift and go to state 130


state 148

    (84) Put2 -> PUT ABRE_P VAR COMA expresion_alge1 . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 239


state 149

    (85) Put2 -> PUT ABRE_P VAR COMA expresion_alge2 . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 240


state 150

    (86) Put2 -> PUT ABRE_P VAR COMA funcion . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 241


state 151

    (37) variable2 -> DEF VAR IGUAL NUMERO PUNTOCOMA .

    COMMENT         reduce using rule 37 (variable2 -> DEF VAR IGUAL NUMERO PUNTOCOMA .)
    PARA            reduce using rule 37 (variable2 -> DEF VAR IGUAL NUMERO PUNTOCOMA .)
    MAIN            reduce using rule 37 (variable2 -> DEF VAR IGUAL NUMERO PUNTOCOMA .)
    PUT             reduce using rule 37 (variable2 -> DEF VAR IGUAL NUMERO PUNTOCOMA .)
    DEF             reduce using rule 37 (variable2 -> DEF VAR IGUAL NUMERO PUNTOCOMA .)
    $end            reduce using rule 37 (variable2 -> DEF VAR IGUAL NUMERO PUNTOCOMA .)
    PUNTOCOMA       reduce using rule 37 (variable2 -> DEF VAR IGUAL NUMERO PUNTOCOMA .)
    NUMERO          reduce using rule 37 (variable2 -> DEF VAR IGUAL NUMERO PUNTOCOMA .)
    ABRE_P          reduce using rule 37 (variable2 -> DEF VAR IGUAL NUMERO PUNTOCOMA .)
    SUM             reduce using rule 37 (variable2 -> DEF VAR IGUAL NUMERO PUNTOCOMA .)
    SUBSTR          reduce using rule 37 (variable2 -> DEF VAR IGUAL NUMERO PUNTOCOMA .)
    MULTI           reduce using rule 37 (variable2 -> DEF VAR IGUAL NUMERO PUNTOCOMA .)
    DIV             reduce using rule 37 (variable2 -> DEF VAR IGUAL NUMERO PUNTOCOMA .)
    RANDOM          reduce using rule 37 (variable2 -> DEF VAR IGUAL NUMERO PUNTOCOMA .)
    RUN             reduce using rule 37 (variable2 -> DEF VAR IGUAL NUMERO PUNTOCOMA .)
    IF              reduce using rule 37 (variable2 -> DEF VAR IGUAL NUMERO PUNTOCOMA .)
    IFELSE          reduce using rule 37 (variable2 -> DEF VAR IGUAL NUMERO PUNTOCOMA .)
    REPEAT          reduce using rule 37 (variable2 -> DEF VAR IGUAL NUMERO PUNTOCOMA .)
    UNTIL           reduce using rule 37 (variable2 -> DEF VAR IGUAL NUMERO PUNTOCOMA .)
    WHILE           reduce using rule 37 (variable2 -> DEF VAR IGUAL NUMERO PUNTOCOMA .)
    PRINTLINE       reduce using rule 37 (variable2 -> DEF VAR IGUAL NUMERO PUNTOCOMA .)
    AND             reduce using rule 37 (variable2 -> DEF VAR IGUAL NUMERO PUNTOCOMA .)
    OR              reduce using rule 37 (variable2 -> DEF VAR IGUAL NUMERO PUNTOCOMA .)
    ADD             reduce using rule 37 (variable2 -> DEF VAR IGUAL NUMERO PUNTOCOMA .)
    FIN             reduce using rule 37 (variable2 -> DEF VAR IGUAL NUMERO PUNTOCOMA .)


state 152

    (199) parametro -> empty empty empty .

    BRACKET2        reduce using rule 199 (parametro -> empty empty empty .)


state 153

    (25) llamadoproc -> PARA . id BRACKET1 parametro BRACKET2 PUNTOCOMA
    (22) id -> . ID

    ID              shift and go to state 22

    id                             shift and go to state 242

state 154

    (12) cuerpo2 -> empty .
    (32) variablexd -> empty . empty
    (52) expresion -> empty . empty
    (81) funcion -> empty . empty
    (249) empty -> .

  ! reduce/reduce conflict for FIN resolved using rule 12 (cuerpo2 -> empty .)
    FIN             reduce using rule 12 (cuerpo2 -> empty .)
    PUNTOCOMA       reduce using rule 249 (empty -> .)
    NUMERO          reduce using rule 249 (empty -> .)
    ABRE_P          reduce using rule 249 (empty -> .)
    SUM             reduce using rule 249 (empty -> .)
    SUBSTR          reduce using rule 249 (empty -> .)
    MULTI           reduce using rule 249 (empty -> .)
    DIV             reduce using rule 249 (empty -> .)
    RANDOM          reduce using rule 249 (empty -> .)
    RUN             reduce using rule 249 (empty -> .)
    IF              reduce using rule 249 (empty -> .)
    IFELSE          reduce using rule 249 (empty -> .)
    REPEAT          reduce using rule 249 (empty -> .)
    UNTIL           reduce using rule 249 (empty -> .)
    WHILE           reduce using rule 249 (empty -> .)
    PRINTLINE       reduce using rule 249 (empty -> .)
    AND             reduce using rule 249 (empty -> .)
    OR              reduce using rule 249 (empty -> .)
    ADD             reduce using rule 249 (empty -> .)
    PUT             reduce using rule 249 (empty -> .)

  ! FIN             [ reduce using rule 249 (empty -> .) ]

    empty                          shift and go to state 243

state 155

    (23) procedimiento -> PARA id BRACKET1 empty BRACKET2 cuerpo2 . FIN cuerpo

    FIN             shift and go to state 244


state 156

    (8) cuerpo2 -> variablexd .

    FIN             reduce using rule 8 (cuerpo2 -> variablexd .)


state 157

    (9) cuerpo2 -> COMMENT . cuerpo2
    (8) cuerpo2 -> . variablexd
    (9) cuerpo2 -> . COMMENT cuerpo2
    (10) cuerpo2 -> . expresion
    (11) cuerpo2 -> . llamadoproc
    (12) cuerpo2 -> . empty
    (13) cuerpo2 -> . Put2
    (14) cuerpo2 -> . Put
    (30) variablexd -> . variable1 cuerpo2
    (31) variablexd -> . variable2 cuerpo2
    (32) variablexd -> . empty empty
    (38) expresion -> . funcion expresion
    (39) expresion -> . expresion_alge1 expresion
    (40) expresion -> . expresion_alge2 expresion
    (41) expresion -> . Sum expresion
    (42) expresion -> . Substr expresion
    (43) expresion -> . Mult expresion
    (44) expresion -> . Div expresion
    (45) expresion -> . funcion empty
    (46) expresion -> . expresion_alge1 empty
    (47) expresion -> . expresion_alge2 empty
    (48) expresion -> . Sum empty
    (49) expresion -> . Substr empty
    (50) expresion -> . Mult empty
    (51) expresion -> . Div empty
    (52) expresion -> . empty empty
    (25) llamadoproc -> . PARA id BRACKET1 parametro BRACKET2 PUNTOCOMA
    (249) empty -> .
    (83) Put2 -> . PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (84) Put2 -> . PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (85) Put2 -> . PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (86) Put2 -> . PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA
    (82) Put -> . PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA
    (36) variable1 -> . DEF VAR PUNTOCOMA
    (37) variable2 -> . DEF VAR IGUAL NUMERO PUNTOCOMA
    (67) funcion -> . Random empty
    (68) funcion -> . Run empty
    (69) funcion -> . If empty
    (70) funcion -> . IfElse empty
    (71) funcion -> . Repeat empty
    (72) funcion -> . Until empty
    (73) funcion -> . While empty
    (74) funcion -> . PrintLine empty
    (75) funcion -> . And empty
    (76) funcion -> . Or empty
    (77) funcion -> . Add empty
    (78) funcion -> . Put2 empty
    (79) funcion -> . Put empty
    (80) funcion -> . PUNTOCOMA funcion
    (81) funcion -> . empty empty
    (90) expresion_alge1 -> . NUMERO SUMA NUMERO
    (91) expresion_alge1 -> . NUMERO RESTA NUMERO
    (92) expresion_alge1 -> . NUMERO MULTI NUMERO
    (93) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (94) expresion_alge1 -> . NUMERO EXPONENTE NUMERO
    (95) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (96) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (97) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (98) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (99) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P EXPONENTE ABRE_P expresion_alge1 CIERRA_P
    (100) Sum -> . SUM ABRE_P NUMERO COMA NUMERO CIERRA_P
    (101) Sum -> . SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (102) Sum -> . SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (103) Sum -> . SUM ABRE_P NUMERO COMA Var CIERRA_P
    (104) Sum -> . SUM ABRE_P Var COMA NUMERO CIERRA_P
    (105) Sum -> . SUM ABRE_P Var COMA Var CIERRA_P
    (106) Sum -> . SUM ABRE_P expresion_alge1 COMA Var CIERRA_P
    (107) Sum -> . SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (108) Sum -> . SUM ABRE_P Var COMA expresion_alge1 CIERRA_P
    (109) Substr -> . SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P
    (110) Substr -> . SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (111) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (112) Substr -> . SUBSTR ABRE_P NUMERO COMA Var CIERRA_P
    (113) Substr -> . SUBSTR ABRE_P Var COMA NUMERO CIERRA_P
    (114) Substr -> . SUBSTR ABRE_P Var COMA Var CIERRA_P
    (115) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P
    (116) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (117) Substr -> . SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P
    (118) Mult -> . MULTI ABRE_P NUMERO COMA NUMERO CIERRA_P
    (119) Mult -> . MULTI ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (120) Mult -> . MULTI ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (121) Mult -> . MULTI ABRE_P NUMERO COMA Var CIERRA_P
    (122) Mult -> . MULTI ABRE_P Var COMA NUMERO CIERRA_P
    (123) Mult -> . MULTI ABRE_P Var COMA Var CIERRA_P
    (124) Mult -> . MULTI ABRE_P expresion_alge1 COMA Var CIERRA_P
    (125) Mult -> . MULTI ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (126) Mult -> . MULTI ABRE_P Var COMA expresion_alge1 CIERRA_P
    (127) Div -> . DIV ABRE_P NUMERO COMA NUMERO CIERRA_P
    (128) Div -> . DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (129) Div -> . DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (130) Div -> . DIV ABRE_P NUMERO COMA Var CIERRA_P
    (131) Div -> . DIV ABRE_P Var COMA NUMERO CIERRA_P
    (132) Div -> . DIV ABRE_P Var COMA Var CIERRA_P
    (133) Div -> . DIV ABRE_P expresion_alge1 COMA Var CIERRA_P
    (134) Div -> . DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (135) Div -> . DIV ABRE_P Var COMA expresion_alge1 CIERRA_P
    (201) Random -> . RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA
    (241) Run -> . RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA
    (187) If -> . IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2
    (188) IfElse -> . IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2
    (190) Repeat -> . REPEAT NUMERO BRACKET1 ordenes BRACKET2
    (191) Until -> . UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2
    (189) While -> . WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2
    (248) PrintLine -> . PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA
    (185) And -> . AND ABRE_P expresion COMA expresion CIERRA_P PUNTOCOMA
    (186) Or -> . OR ABRE_P expresion COMA expresion CIERRA_P PUNTOCOMA
    (192) Add -> . ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA
    (193) Add -> . ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (194) Add -> . ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (195) Add -> . ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (196) Add -> . ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA

  ! shift/reduce conflict for PUT resolved as shift
  ! shift/reduce conflict for PUNTOCOMA resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for ABRE_P resolved as shift
  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for SUBSTR resolved as shift
  ! shift/reduce conflict for MULTI resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for RANDOM resolved as shift
  ! shift/reduce conflict for RUN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for IFELSE resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for PRINTLINE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
    COMMENT         shift and go to state 157
    PARA            shift and go to state 153
    FIN             reduce using rule 249 (empty -> .)
    PUT             shift and go to state 94
    DEF             shift and go to state 16
    PUNTOCOMA       shift and go to state 62
    NUMERO          shift and go to state 64
    ABRE_P          shift and go to state 63
    SUM             shift and go to state 67
    SUBSTR          shift and go to state 68
    MULTI           shift and go to state 65
    DIV             shift and go to state 66
    RANDOM          shift and go to state 69
    RUN             shift and go to state 70
    IF              shift and go to state 71
    IFELSE          shift and go to state 72
    REPEAT          shift and go to state 73
    UNTIL           shift and go to state 74
    WHILE           shift and go to state 75
    PRINTLINE       shift and go to state 76
    AND             shift and go to state 77
    OR              shift and go to state 78
    ADD             shift and go to state 79

  ! PUNTOCOMA       [ reduce using rule 249 (empty -> .) ]
  ! NUMERO          [ reduce using rule 249 (empty -> .) ]
  ! ABRE_P          [ reduce using rule 249 (empty -> .) ]
  ! SUM             [ reduce using rule 249 (empty -> .) ]
  ! SUBSTR          [ reduce using rule 249 (empty -> .) ]
  ! MULTI           [ reduce using rule 249 (empty -> .) ]
  ! DIV             [ reduce using rule 249 (empty -> .) ]
  ! RANDOM          [ reduce using rule 249 (empty -> .) ]
  ! RUN             [ reduce using rule 249 (empty -> .) ]
  ! IF              [ reduce using rule 249 (empty -> .) ]
  ! IFELSE          [ reduce using rule 249 (empty -> .) ]
  ! REPEAT          [ reduce using rule 249 (empty -> .) ]
  ! UNTIL           [ reduce using rule 249 (empty -> .) ]
  ! WHILE           [ reduce using rule 249 (empty -> .) ]
  ! PRINTLINE       [ reduce using rule 249 (empty -> .) ]
  ! AND             [ reduce using rule 249 (empty -> .) ]
  ! OR              [ reduce using rule 249 (empty -> .) ]
  ! ADD             [ reduce using rule 249 (empty -> .) ]
  ! PUT             [ reduce using rule 249 (empty -> .) ]

    cuerpo2                        shift and go to state 245
    variablexd                     shift and go to state 156
    expresion                      shift and go to state 158
    llamadoproc                    shift and go to state 159
    empty                          shift and go to state 154
    Put2                           shift and go to state 160
    Put                            shift and go to state 161
    variable1                      shift and go to state 162
    variable2                      shift and go to state 163
    funcion                        shift and go to state 89
    expresion_alge1                shift and go to state 45
    expresion_alge2                shift and go to state 46
    Sum                            shift and go to state 47
    Substr                         shift and go to state 48
    Mult                           shift and go to state 49
    Div                            shift and go to state 50
    Random                         shift and go to state 51
    Run                            shift and go to state 52
    If                             shift and go to state 53
    IfElse                         shift and go to state 54
    Repeat                         shift and go to state 55
    Until                          shift and go to state 56
    While                          shift and go to state 57
    PrintLine                      shift and go to state 58
    And                            shift and go to state 59
    Or                             shift and go to state 60
    Add                            shift and go to state 61

state 158

    (10) cuerpo2 -> expresion .

    FIN             reduce using rule 10 (cuerpo2 -> expresion .)


state 159

    (11) cuerpo2 -> llamadoproc .

    FIN             reduce using rule 11 (cuerpo2 -> llamadoproc .)


state 160

    (13) cuerpo2 -> Put2 .
    (78) funcion -> Put2 . empty
    (249) empty -> .

  ! reduce/reduce conflict for FIN resolved using rule 13 (cuerpo2 -> Put2 .)
    FIN             reduce using rule 13 (cuerpo2 -> Put2 .)
    PUNTOCOMA       reduce using rule 249 (empty -> .)
    NUMERO          reduce using rule 249 (empty -> .)
    ABRE_P          reduce using rule 249 (empty -> .)
    SUM             reduce using rule 249 (empty -> .)
    SUBSTR          reduce using rule 249 (empty -> .)
    MULTI           reduce using rule 249 (empty -> .)
    DIV             reduce using rule 249 (empty -> .)
    RANDOM          reduce using rule 249 (empty -> .)
    RUN             reduce using rule 249 (empty -> .)
    IF              reduce using rule 249 (empty -> .)
    IFELSE          reduce using rule 249 (empty -> .)
    REPEAT          reduce using rule 249 (empty -> .)
    UNTIL           reduce using rule 249 (empty -> .)
    WHILE           reduce using rule 249 (empty -> .)
    PRINTLINE       reduce using rule 249 (empty -> .)
    AND             reduce using rule 249 (empty -> .)
    OR              reduce using rule 249 (empty -> .)
    ADD             reduce using rule 249 (empty -> .)
    PUT             reduce using rule 249 (empty -> .)

  ! FIN             [ reduce using rule 249 (empty -> .) ]

    empty                          shift and go to state 97

state 161

    (14) cuerpo2 -> Put .
    (79) funcion -> Put . empty
    (249) empty -> .

  ! reduce/reduce conflict for FIN resolved using rule 14 (cuerpo2 -> Put .)
    FIN             reduce using rule 14 (cuerpo2 -> Put .)
    PUNTOCOMA       reduce using rule 249 (empty -> .)
    NUMERO          reduce using rule 249 (empty -> .)
    ABRE_P          reduce using rule 249 (empty -> .)
    SUM             reduce using rule 249 (empty -> .)
    SUBSTR          reduce using rule 249 (empty -> .)
    MULTI           reduce using rule 249 (empty -> .)
    DIV             reduce using rule 249 (empty -> .)
    RANDOM          reduce using rule 249 (empty -> .)
    RUN             reduce using rule 249 (empty -> .)
    IF              reduce using rule 249 (empty -> .)
    IFELSE          reduce using rule 249 (empty -> .)
    REPEAT          reduce using rule 249 (empty -> .)
    UNTIL           reduce using rule 249 (empty -> .)
    WHILE           reduce using rule 249 (empty -> .)
    PRINTLINE       reduce using rule 249 (empty -> .)
    AND             reduce using rule 249 (empty -> .)
    OR              reduce using rule 249 (empty -> .)
    ADD             reduce using rule 249 (empty -> .)
    PUT             reduce using rule 249 (empty -> .)

  ! FIN             [ reduce using rule 249 (empty -> .) ]

    empty                          shift and go to state 96

state 162

    (30) variablexd -> variable1 . cuerpo2
    (8) cuerpo2 -> . variablexd
    (9) cuerpo2 -> . COMMENT cuerpo2
    (10) cuerpo2 -> . expresion
    (11) cuerpo2 -> . llamadoproc
    (12) cuerpo2 -> . empty
    (13) cuerpo2 -> . Put2
    (14) cuerpo2 -> . Put
    (30) variablexd -> . variable1 cuerpo2
    (31) variablexd -> . variable2 cuerpo2
    (32) variablexd -> . empty empty
    (38) expresion -> . funcion expresion
    (39) expresion -> . expresion_alge1 expresion
    (40) expresion -> . expresion_alge2 expresion
    (41) expresion -> . Sum expresion
    (42) expresion -> . Substr expresion
    (43) expresion -> . Mult expresion
    (44) expresion -> . Div expresion
    (45) expresion -> . funcion empty
    (46) expresion -> . expresion_alge1 empty
    (47) expresion -> . expresion_alge2 empty
    (48) expresion -> . Sum empty
    (49) expresion -> . Substr empty
    (50) expresion -> . Mult empty
    (51) expresion -> . Div empty
    (52) expresion -> . empty empty
    (25) llamadoproc -> . PARA id BRACKET1 parametro BRACKET2 PUNTOCOMA
    (249) empty -> .
    (83) Put2 -> . PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (84) Put2 -> . PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (85) Put2 -> . PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (86) Put2 -> . PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA
    (82) Put -> . PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA
    (36) variable1 -> . DEF VAR PUNTOCOMA
    (37) variable2 -> . DEF VAR IGUAL NUMERO PUNTOCOMA
    (67) funcion -> . Random empty
    (68) funcion -> . Run empty
    (69) funcion -> . If empty
    (70) funcion -> . IfElse empty
    (71) funcion -> . Repeat empty
    (72) funcion -> . Until empty
    (73) funcion -> . While empty
    (74) funcion -> . PrintLine empty
    (75) funcion -> . And empty
    (76) funcion -> . Or empty
    (77) funcion -> . Add empty
    (78) funcion -> . Put2 empty
    (79) funcion -> . Put empty
    (80) funcion -> . PUNTOCOMA funcion
    (81) funcion -> . empty empty
    (90) expresion_alge1 -> . NUMERO SUMA NUMERO
    (91) expresion_alge1 -> . NUMERO RESTA NUMERO
    (92) expresion_alge1 -> . NUMERO MULTI NUMERO
    (93) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (94) expresion_alge1 -> . NUMERO EXPONENTE NUMERO
    (95) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (96) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (97) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (98) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (99) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P EXPONENTE ABRE_P expresion_alge1 CIERRA_P
    (100) Sum -> . SUM ABRE_P NUMERO COMA NUMERO CIERRA_P
    (101) Sum -> . SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (102) Sum -> . SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (103) Sum -> . SUM ABRE_P NUMERO COMA Var CIERRA_P
    (104) Sum -> . SUM ABRE_P Var COMA NUMERO CIERRA_P
    (105) Sum -> . SUM ABRE_P Var COMA Var CIERRA_P
    (106) Sum -> . SUM ABRE_P expresion_alge1 COMA Var CIERRA_P
    (107) Sum -> . SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (108) Sum -> . SUM ABRE_P Var COMA expresion_alge1 CIERRA_P
    (109) Substr -> . SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P
    (110) Substr -> . SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (111) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (112) Substr -> . SUBSTR ABRE_P NUMERO COMA Var CIERRA_P
    (113) Substr -> . SUBSTR ABRE_P Var COMA NUMERO CIERRA_P
    (114) Substr -> . SUBSTR ABRE_P Var COMA Var CIERRA_P
    (115) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P
    (116) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (117) Substr -> . SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P
    (118) Mult -> . MULTI ABRE_P NUMERO COMA NUMERO CIERRA_P
    (119) Mult -> . MULTI ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (120) Mult -> . MULTI ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (121) Mult -> . MULTI ABRE_P NUMERO COMA Var CIERRA_P
    (122) Mult -> . MULTI ABRE_P Var COMA NUMERO CIERRA_P
    (123) Mult -> . MULTI ABRE_P Var COMA Var CIERRA_P
    (124) Mult -> . MULTI ABRE_P expresion_alge1 COMA Var CIERRA_P
    (125) Mult -> . MULTI ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (126) Mult -> . MULTI ABRE_P Var COMA expresion_alge1 CIERRA_P
    (127) Div -> . DIV ABRE_P NUMERO COMA NUMERO CIERRA_P
    (128) Div -> . DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (129) Div -> . DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (130) Div -> . DIV ABRE_P NUMERO COMA Var CIERRA_P
    (131) Div -> . DIV ABRE_P Var COMA NUMERO CIERRA_P
    (132) Div -> . DIV ABRE_P Var COMA Var CIERRA_P
    (133) Div -> . DIV ABRE_P expresion_alge1 COMA Var CIERRA_P
    (134) Div -> . DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (135) Div -> . DIV ABRE_P Var COMA expresion_alge1 CIERRA_P
    (201) Random -> . RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA
    (241) Run -> . RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA
    (187) If -> . IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2
    (188) IfElse -> . IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2
    (190) Repeat -> . REPEAT NUMERO BRACKET1 ordenes BRACKET2
    (191) Until -> . UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2
    (189) While -> . WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2
    (248) PrintLine -> . PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA
    (185) And -> . AND ABRE_P expresion COMA expresion CIERRA_P PUNTOCOMA
    (186) Or -> . OR ABRE_P expresion COMA expresion CIERRA_P PUNTOCOMA
    (192) Add -> . ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA
    (193) Add -> . ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (194) Add -> . ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (195) Add -> . ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (196) Add -> . ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA

  ! shift/reduce conflict for PUT resolved as shift
  ! shift/reduce conflict for PUNTOCOMA resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for ABRE_P resolved as shift
  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for SUBSTR resolved as shift
  ! shift/reduce conflict for MULTI resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for RANDOM resolved as shift
  ! shift/reduce conflict for RUN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for IFELSE resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for PRINTLINE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
    COMMENT         shift and go to state 157
    PARA            shift and go to state 153
    FIN             reduce using rule 249 (empty -> .)
    PUT             shift and go to state 94
    DEF             shift and go to state 16
    PUNTOCOMA       shift and go to state 62
    NUMERO          shift and go to state 64
    ABRE_P          shift and go to state 63
    SUM             shift and go to state 67
    SUBSTR          shift and go to state 68
    MULTI           shift and go to state 65
    DIV             shift and go to state 66
    RANDOM          shift and go to state 69
    RUN             shift and go to state 70
    IF              shift and go to state 71
    IFELSE          shift and go to state 72
    REPEAT          shift and go to state 73
    UNTIL           shift and go to state 74
    WHILE           shift and go to state 75
    PRINTLINE       shift and go to state 76
    AND             shift and go to state 77
    OR              shift and go to state 78
    ADD             shift and go to state 79

  ! PUNTOCOMA       [ reduce using rule 249 (empty -> .) ]
  ! NUMERO          [ reduce using rule 249 (empty -> .) ]
  ! ABRE_P          [ reduce using rule 249 (empty -> .) ]
  ! SUM             [ reduce using rule 249 (empty -> .) ]
  ! SUBSTR          [ reduce using rule 249 (empty -> .) ]
  ! MULTI           [ reduce using rule 249 (empty -> .) ]
  ! DIV             [ reduce using rule 249 (empty -> .) ]
  ! RANDOM          [ reduce using rule 249 (empty -> .) ]
  ! RUN             [ reduce using rule 249 (empty -> .) ]
  ! IF              [ reduce using rule 249 (empty -> .) ]
  ! IFELSE          [ reduce using rule 249 (empty -> .) ]
  ! REPEAT          [ reduce using rule 249 (empty -> .) ]
  ! UNTIL           [ reduce using rule 249 (empty -> .) ]
  ! WHILE           [ reduce using rule 249 (empty -> .) ]
  ! PRINTLINE       [ reduce using rule 249 (empty -> .) ]
  ! AND             [ reduce using rule 249 (empty -> .) ]
  ! OR              [ reduce using rule 249 (empty -> .) ]
  ! ADD             [ reduce using rule 249 (empty -> .) ]
  ! PUT             [ reduce using rule 249 (empty -> .) ]

    variable1                      shift and go to state 162
    cuerpo2                        shift and go to state 246
    variablexd                     shift and go to state 156
    expresion                      shift and go to state 158
    llamadoproc                    shift and go to state 159
    empty                          shift and go to state 154
    Put2                           shift and go to state 160
    Put                            shift and go to state 161
    variable2                      shift and go to state 163
    funcion                        shift and go to state 89
    expresion_alge1                shift and go to state 45
    expresion_alge2                shift and go to state 46
    Sum                            shift and go to state 47
    Substr                         shift and go to state 48
    Mult                           shift and go to state 49
    Div                            shift and go to state 50
    Random                         shift and go to state 51
    Run                            shift and go to state 52
    If                             shift and go to state 53
    IfElse                         shift and go to state 54
    Repeat                         shift and go to state 55
    Until                          shift and go to state 56
    While                          shift and go to state 57
    PrintLine                      shift and go to state 58
    And                            shift and go to state 59
    Or                             shift and go to state 60
    Add                            shift and go to state 61

state 163

    (31) variablexd -> variable2 . cuerpo2
    (8) cuerpo2 -> . variablexd
    (9) cuerpo2 -> . COMMENT cuerpo2
    (10) cuerpo2 -> . expresion
    (11) cuerpo2 -> . llamadoproc
    (12) cuerpo2 -> . empty
    (13) cuerpo2 -> . Put2
    (14) cuerpo2 -> . Put
    (30) variablexd -> . variable1 cuerpo2
    (31) variablexd -> . variable2 cuerpo2
    (32) variablexd -> . empty empty
    (38) expresion -> . funcion expresion
    (39) expresion -> . expresion_alge1 expresion
    (40) expresion -> . expresion_alge2 expresion
    (41) expresion -> . Sum expresion
    (42) expresion -> . Substr expresion
    (43) expresion -> . Mult expresion
    (44) expresion -> . Div expresion
    (45) expresion -> . funcion empty
    (46) expresion -> . expresion_alge1 empty
    (47) expresion -> . expresion_alge2 empty
    (48) expresion -> . Sum empty
    (49) expresion -> . Substr empty
    (50) expresion -> . Mult empty
    (51) expresion -> . Div empty
    (52) expresion -> . empty empty
    (25) llamadoproc -> . PARA id BRACKET1 parametro BRACKET2 PUNTOCOMA
    (249) empty -> .
    (83) Put2 -> . PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (84) Put2 -> . PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (85) Put2 -> . PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (86) Put2 -> . PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA
    (82) Put -> . PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA
    (36) variable1 -> . DEF VAR PUNTOCOMA
    (37) variable2 -> . DEF VAR IGUAL NUMERO PUNTOCOMA
    (67) funcion -> . Random empty
    (68) funcion -> . Run empty
    (69) funcion -> . If empty
    (70) funcion -> . IfElse empty
    (71) funcion -> . Repeat empty
    (72) funcion -> . Until empty
    (73) funcion -> . While empty
    (74) funcion -> . PrintLine empty
    (75) funcion -> . And empty
    (76) funcion -> . Or empty
    (77) funcion -> . Add empty
    (78) funcion -> . Put2 empty
    (79) funcion -> . Put empty
    (80) funcion -> . PUNTOCOMA funcion
    (81) funcion -> . empty empty
    (90) expresion_alge1 -> . NUMERO SUMA NUMERO
    (91) expresion_alge1 -> . NUMERO RESTA NUMERO
    (92) expresion_alge1 -> . NUMERO MULTI NUMERO
    (93) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (94) expresion_alge1 -> . NUMERO EXPONENTE NUMERO
    (95) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (96) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (97) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (98) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (99) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P EXPONENTE ABRE_P expresion_alge1 CIERRA_P
    (100) Sum -> . SUM ABRE_P NUMERO COMA NUMERO CIERRA_P
    (101) Sum -> . SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (102) Sum -> . SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (103) Sum -> . SUM ABRE_P NUMERO COMA Var CIERRA_P
    (104) Sum -> . SUM ABRE_P Var COMA NUMERO CIERRA_P
    (105) Sum -> . SUM ABRE_P Var COMA Var CIERRA_P
    (106) Sum -> . SUM ABRE_P expresion_alge1 COMA Var CIERRA_P
    (107) Sum -> . SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (108) Sum -> . SUM ABRE_P Var COMA expresion_alge1 CIERRA_P
    (109) Substr -> . SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P
    (110) Substr -> . SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (111) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (112) Substr -> . SUBSTR ABRE_P NUMERO COMA Var CIERRA_P
    (113) Substr -> . SUBSTR ABRE_P Var COMA NUMERO CIERRA_P
    (114) Substr -> . SUBSTR ABRE_P Var COMA Var CIERRA_P
    (115) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P
    (116) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (117) Substr -> . SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P
    (118) Mult -> . MULTI ABRE_P NUMERO COMA NUMERO CIERRA_P
    (119) Mult -> . MULTI ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (120) Mult -> . MULTI ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (121) Mult -> . MULTI ABRE_P NUMERO COMA Var CIERRA_P
    (122) Mult -> . MULTI ABRE_P Var COMA NUMERO CIERRA_P
    (123) Mult -> . MULTI ABRE_P Var COMA Var CIERRA_P
    (124) Mult -> . MULTI ABRE_P expresion_alge1 COMA Var CIERRA_P
    (125) Mult -> . MULTI ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (126) Mult -> . MULTI ABRE_P Var COMA expresion_alge1 CIERRA_P
    (127) Div -> . DIV ABRE_P NUMERO COMA NUMERO CIERRA_P
    (128) Div -> . DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (129) Div -> . DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (130) Div -> . DIV ABRE_P NUMERO COMA Var CIERRA_P
    (131) Div -> . DIV ABRE_P Var COMA NUMERO CIERRA_P
    (132) Div -> . DIV ABRE_P Var COMA Var CIERRA_P
    (133) Div -> . DIV ABRE_P expresion_alge1 COMA Var CIERRA_P
    (134) Div -> . DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (135) Div -> . DIV ABRE_P Var COMA expresion_alge1 CIERRA_P
    (201) Random -> . RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA
    (241) Run -> . RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA
    (187) If -> . IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2
    (188) IfElse -> . IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2
    (190) Repeat -> . REPEAT NUMERO BRACKET1 ordenes BRACKET2
    (191) Until -> . UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2
    (189) While -> . WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2
    (248) PrintLine -> . PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA
    (185) And -> . AND ABRE_P expresion COMA expresion CIERRA_P PUNTOCOMA
    (186) Or -> . OR ABRE_P expresion COMA expresion CIERRA_P PUNTOCOMA
    (192) Add -> . ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA
    (193) Add -> . ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (194) Add -> . ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (195) Add -> . ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (196) Add -> . ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA

  ! shift/reduce conflict for PUT resolved as shift
  ! shift/reduce conflict for PUNTOCOMA resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for ABRE_P resolved as shift
  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for SUBSTR resolved as shift
  ! shift/reduce conflict for MULTI resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for RANDOM resolved as shift
  ! shift/reduce conflict for RUN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for IFELSE resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for PRINTLINE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
    COMMENT         shift and go to state 157
    PARA            shift and go to state 153
    FIN             reduce using rule 249 (empty -> .)
    PUT             shift and go to state 94
    DEF             shift and go to state 16
    PUNTOCOMA       shift and go to state 62
    NUMERO          shift and go to state 64
    ABRE_P          shift and go to state 63
    SUM             shift and go to state 67
    SUBSTR          shift and go to state 68
    MULTI           shift and go to state 65
    DIV             shift and go to state 66
    RANDOM          shift and go to state 69
    RUN             shift and go to state 70
    IF              shift and go to state 71
    IFELSE          shift and go to state 72
    REPEAT          shift and go to state 73
    UNTIL           shift and go to state 74
    WHILE           shift and go to state 75
    PRINTLINE       shift and go to state 76
    AND             shift and go to state 77
    OR              shift and go to state 78
    ADD             shift and go to state 79

  ! PUNTOCOMA       [ reduce using rule 249 (empty -> .) ]
  ! NUMERO          [ reduce using rule 249 (empty -> .) ]
  ! ABRE_P          [ reduce using rule 249 (empty -> .) ]
  ! SUM             [ reduce using rule 249 (empty -> .) ]
  ! SUBSTR          [ reduce using rule 249 (empty -> .) ]
  ! MULTI           [ reduce using rule 249 (empty -> .) ]
  ! DIV             [ reduce using rule 249 (empty -> .) ]
  ! RANDOM          [ reduce using rule 249 (empty -> .) ]
  ! RUN             [ reduce using rule 249 (empty -> .) ]
  ! IF              [ reduce using rule 249 (empty -> .) ]
  ! IFELSE          [ reduce using rule 249 (empty -> .) ]
  ! REPEAT          [ reduce using rule 249 (empty -> .) ]
  ! UNTIL           [ reduce using rule 249 (empty -> .) ]
  ! WHILE           [ reduce using rule 249 (empty -> .) ]
  ! PRINTLINE       [ reduce using rule 249 (empty -> .) ]
  ! AND             [ reduce using rule 249 (empty -> .) ]
  ! OR              [ reduce using rule 249 (empty -> .) ]
  ! ADD             [ reduce using rule 249 (empty -> .) ]
  ! PUT             [ reduce using rule 249 (empty -> .) ]

    variable2                      shift and go to state 163
    cuerpo2                        shift and go to state 247
    variablexd                     shift and go to state 156
    expresion                      shift and go to state 158
    llamadoproc                    shift and go to state 159
    empty                          shift and go to state 154
    Put2                           shift and go to state 160
    Put                            shift and go to state 161
    variable1                      shift and go to state 162
    funcion                        shift and go to state 89
    expresion_alge1                shift and go to state 45
    expresion_alge2                shift and go to state 46
    Sum                            shift and go to state 47
    Substr                         shift and go to state 48
    Mult                           shift and go to state 49
    Div                            shift and go to state 50
    Random                         shift and go to state 51
    Run                            shift and go to state 52
    If                             shift and go to state 53
    IfElse                         shift and go to state 54
    Repeat                         shift and go to state 55
    Until                          shift and go to state 56
    While                          shift and go to state 57
    PrintLine                      shift and go to state 58
    And                            shift and go to state 59
    Or                             shift and go to state 60
    Add                            shift and go to state 61

state 164

    (24) procedimiento -> PARA id BRACKET1 parametro BRACKET2 cuerpo2 . FIN cuerpo

    FIN             shift and go to state 248


state 165

    (197) parametro -> Var COMA parametro .

    BRACKET2        reduce using rule 197 (parametro -> Var COMA parametro .)


state 166

    (199) parametro -> empty . empty empty
    (249) empty -> .

    BRACKET2        reduce using rule 249 (empty -> .)

    empty                          shift and go to state 82

state 167

    (198) parametro -> Var empty empty .

    BRACKET2        reduce using rule 198 (parametro -> Var empty empty .)


state 168

    (26) main -> MAIN BRACKET1 BRACKET2 cuerpo3 FIN cuerpo .

    $end            reduce using rule 26 (main -> MAIN BRACKET1 BRACKET2 cuerpo3 FIN cuerpo .)


state 169

    (52) expresion -> empty empty .
    (81) funcion -> empty empty .

  ! reduce/reduce conflict for FIN resolved using rule 52 (expresion -> empty empty .)
  ! reduce/reduce conflict for COMA resolved using rule 52 (expresion -> empty empty .)
  ! reduce/reduce conflict for CIERRA_P resolved using rule 52 (expresion -> empty empty .)
    FIN             reduce using rule 52 (expresion -> empty empty .)
    COMA            reduce using rule 52 (expresion -> empty empty .)
    CIERRA_P        reduce using rule 52 (expresion -> empty empty .)
    PUNTOCOMA       reduce using rule 81 (funcion -> empty empty .)
    NUMERO          reduce using rule 81 (funcion -> empty empty .)
    ABRE_P          reduce using rule 81 (funcion -> empty empty .)
    SUM             reduce using rule 81 (funcion -> empty empty .)
    SUBSTR          reduce using rule 81 (funcion -> empty empty .)
    MULTI           reduce using rule 81 (funcion -> empty empty .)
    DIV             reduce using rule 81 (funcion -> empty empty .)
    RANDOM          reduce using rule 81 (funcion -> empty empty .)
    RUN             reduce using rule 81 (funcion -> empty empty .)
    IF              reduce using rule 81 (funcion -> empty empty .)
    IFELSE          reduce using rule 81 (funcion -> empty empty .)
    REPEAT          reduce using rule 81 (funcion -> empty empty .)
    UNTIL           reduce using rule 81 (funcion -> empty empty .)
    WHILE           reduce using rule 81 (funcion -> empty empty .)
    PRINTLINE       reduce using rule 81 (funcion -> empty empty .)
    AND             reduce using rule 81 (funcion -> empty empty .)
    OR              reduce using rule 81 (funcion -> empty empty .)
    ADD             reduce using rule 81 (funcion -> empty empty .)
    PUT             reduce using rule 81 (funcion -> empty empty .)

  ! FIN             [ reduce using rule 81 (funcion -> empty empty .) ]
  ! COMA            [ reduce using rule 81 (funcion -> empty empty .) ]
  ! CIERRA_P        [ reduce using rule 81 (funcion -> empty empty .) ]


state 170

    (83) Put2 -> PUT ABRE_P . VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (84) Put2 -> PUT ABRE_P . VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (85) Put2 -> PUT ABRE_P . VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (86) Put2 -> PUT ABRE_P . VAR COMA funcion CIERRA_P PUNTOCOMA
    (82) Put -> PUT ABRE_P . VAR COMA VAR CIERRA_P PUNTOCOMA

    VAR             shift and go to state 249


state 171

    (81) funcion -> empty empty .

    PUNTOCOMA       reduce using rule 81 (funcion -> empty empty .)
    NUMERO          reduce using rule 81 (funcion -> empty empty .)
    ABRE_P          reduce using rule 81 (funcion -> empty empty .)
    SUM             reduce using rule 81 (funcion -> empty empty .)
    SUBSTR          reduce using rule 81 (funcion -> empty empty .)
    MULTI           reduce using rule 81 (funcion -> empty empty .)
    DIV             reduce using rule 81 (funcion -> empty empty .)
    RANDOM          reduce using rule 81 (funcion -> empty empty .)
    RUN             reduce using rule 81 (funcion -> empty empty .)
    IF              reduce using rule 81 (funcion -> empty empty .)
    IFELSE          reduce using rule 81 (funcion -> empty empty .)
    REPEAT          reduce using rule 81 (funcion -> empty empty .)
    UNTIL           reduce using rule 81 (funcion -> empty empty .)
    WHILE           reduce using rule 81 (funcion -> empty empty .)
    PRINTLINE       reduce using rule 81 (funcion -> empty empty .)
    AND             reduce using rule 81 (funcion -> empty empty .)
    OR              reduce using rule 81 (funcion -> empty empty .)
    ADD             reduce using rule 81 (funcion -> empty empty .)
    PUT             reduce using rule 81 (funcion -> empty empty .)
    FIN             reduce using rule 81 (funcion -> empty empty .)
    COMA            reduce using rule 81 (funcion -> empty empty .)
    CIERRA_P        reduce using rule 81 (funcion -> empty empty .)
    BRACKET2        reduce using rule 81 (funcion -> empty empty .)


state 172

    (95) expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P . SUMA ABRE_P expresion_alge1 CIERRA_P
    (96) expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P . RESTA ABRE_P expresion_alge1 CIERRA_P
    (97) expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P . MULT ABRE_P expresion_alge1 CIERRA_P
    (98) expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P . DIV ABRE_P expresion_alge1 CIERRA_P
    (99) expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P . EXPONENTE ABRE_P expresion_alge1 CIERRA_P

    SUMA            shift and go to state 250
    RESTA           shift and go to state 251
    MULT            shift and go to state 252
    DIV             shift and go to state 253
    EXPONENTE       shift and go to state 254


state 173

    (90) expresion_alge1 -> NUMERO SUMA NUMERO .

    PUNTOCOMA       reduce using rule 90 (expresion_alge1 -> NUMERO SUMA NUMERO .)
    NUMERO          reduce using rule 90 (expresion_alge1 -> NUMERO SUMA NUMERO .)
    ABRE_P          reduce using rule 90 (expresion_alge1 -> NUMERO SUMA NUMERO .)
    SUM             reduce using rule 90 (expresion_alge1 -> NUMERO SUMA NUMERO .)
    SUBSTR          reduce using rule 90 (expresion_alge1 -> NUMERO SUMA NUMERO .)
    MULTI           reduce using rule 90 (expresion_alge1 -> NUMERO SUMA NUMERO .)
    DIV             reduce using rule 90 (expresion_alge1 -> NUMERO SUMA NUMERO .)
    RANDOM          reduce using rule 90 (expresion_alge1 -> NUMERO SUMA NUMERO .)
    RUN             reduce using rule 90 (expresion_alge1 -> NUMERO SUMA NUMERO .)
    IF              reduce using rule 90 (expresion_alge1 -> NUMERO SUMA NUMERO .)
    IFELSE          reduce using rule 90 (expresion_alge1 -> NUMERO SUMA NUMERO .)
    REPEAT          reduce using rule 90 (expresion_alge1 -> NUMERO SUMA NUMERO .)
    UNTIL           reduce using rule 90 (expresion_alge1 -> NUMERO SUMA NUMERO .)
    WHILE           reduce using rule 90 (expresion_alge1 -> NUMERO SUMA NUMERO .)
    PRINTLINE       reduce using rule 90 (expresion_alge1 -> NUMERO SUMA NUMERO .)
    AND             reduce using rule 90 (expresion_alge1 -> NUMERO SUMA NUMERO .)
    OR              reduce using rule 90 (expresion_alge1 -> NUMERO SUMA NUMERO .)
    ADD             reduce using rule 90 (expresion_alge1 -> NUMERO SUMA NUMERO .)
    PUT             reduce using rule 90 (expresion_alge1 -> NUMERO SUMA NUMERO .)
    FIN             reduce using rule 90 (expresion_alge1 -> NUMERO SUMA NUMERO .)
    COMA            reduce using rule 90 (expresion_alge1 -> NUMERO SUMA NUMERO .)
    CIERRA_P        reduce using rule 90 (expresion_alge1 -> NUMERO SUMA NUMERO .)


state 174

    (91) expresion_alge1 -> NUMERO RESTA NUMERO .

    PUNTOCOMA       reduce using rule 91 (expresion_alge1 -> NUMERO RESTA NUMERO .)
    NUMERO          reduce using rule 91 (expresion_alge1 -> NUMERO RESTA NUMERO .)
    ABRE_P          reduce using rule 91 (expresion_alge1 -> NUMERO RESTA NUMERO .)
    SUM             reduce using rule 91 (expresion_alge1 -> NUMERO RESTA NUMERO .)
    SUBSTR          reduce using rule 91 (expresion_alge1 -> NUMERO RESTA NUMERO .)
    MULTI           reduce using rule 91 (expresion_alge1 -> NUMERO RESTA NUMERO .)
    DIV             reduce using rule 91 (expresion_alge1 -> NUMERO RESTA NUMERO .)
    RANDOM          reduce using rule 91 (expresion_alge1 -> NUMERO RESTA NUMERO .)
    RUN             reduce using rule 91 (expresion_alge1 -> NUMERO RESTA NUMERO .)
    IF              reduce using rule 91 (expresion_alge1 -> NUMERO RESTA NUMERO .)
    IFELSE          reduce using rule 91 (expresion_alge1 -> NUMERO RESTA NUMERO .)
    REPEAT          reduce using rule 91 (expresion_alge1 -> NUMERO RESTA NUMERO .)
    UNTIL           reduce using rule 91 (expresion_alge1 -> NUMERO RESTA NUMERO .)
    WHILE           reduce using rule 91 (expresion_alge1 -> NUMERO RESTA NUMERO .)
    PRINTLINE       reduce using rule 91 (expresion_alge1 -> NUMERO RESTA NUMERO .)
    AND             reduce using rule 91 (expresion_alge1 -> NUMERO RESTA NUMERO .)
    OR              reduce using rule 91 (expresion_alge1 -> NUMERO RESTA NUMERO .)
    ADD             reduce using rule 91 (expresion_alge1 -> NUMERO RESTA NUMERO .)
    PUT             reduce using rule 91 (expresion_alge1 -> NUMERO RESTA NUMERO .)
    FIN             reduce using rule 91 (expresion_alge1 -> NUMERO RESTA NUMERO .)
    COMA            reduce using rule 91 (expresion_alge1 -> NUMERO RESTA NUMERO .)
    CIERRA_P        reduce using rule 91 (expresion_alge1 -> NUMERO RESTA NUMERO .)


state 175

    (92) expresion_alge1 -> NUMERO MULTI NUMERO .

    PUNTOCOMA       reduce using rule 92 (expresion_alge1 -> NUMERO MULTI NUMERO .)
    NUMERO          reduce using rule 92 (expresion_alge1 -> NUMERO MULTI NUMERO .)
    ABRE_P          reduce using rule 92 (expresion_alge1 -> NUMERO MULTI NUMERO .)
    SUM             reduce using rule 92 (expresion_alge1 -> NUMERO MULTI NUMERO .)
    SUBSTR          reduce using rule 92 (expresion_alge1 -> NUMERO MULTI NUMERO .)
    MULTI           reduce using rule 92 (expresion_alge1 -> NUMERO MULTI NUMERO .)
    DIV             reduce using rule 92 (expresion_alge1 -> NUMERO MULTI NUMERO .)
    RANDOM          reduce using rule 92 (expresion_alge1 -> NUMERO MULTI NUMERO .)
    RUN             reduce using rule 92 (expresion_alge1 -> NUMERO MULTI NUMERO .)
    IF              reduce using rule 92 (expresion_alge1 -> NUMERO MULTI NUMERO .)
    IFELSE          reduce using rule 92 (expresion_alge1 -> NUMERO MULTI NUMERO .)
    REPEAT          reduce using rule 92 (expresion_alge1 -> NUMERO MULTI NUMERO .)
    UNTIL           reduce using rule 92 (expresion_alge1 -> NUMERO MULTI NUMERO .)
    WHILE           reduce using rule 92 (expresion_alge1 -> NUMERO MULTI NUMERO .)
    PRINTLINE       reduce using rule 92 (expresion_alge1 -> NUMERO MULTI NUMERO .)
    AND             reduce using rule 92 (expresion_alge1 -> NUMERO MULTI NUMERO .)
    OR              reduce using rule 92 (expresion_alge1 -> NUMERO MULTI NUMERO .)
    ADD             reduce using rule 92 (expresion_alge1 -> NUMERO MULTI NUMERO .)
    PUT             reduce using rule 92 (expresion_alge1 -> NUMERO MULTI NUMERO .)
    FIN             reduce using rule 92 (expresion_alge1 -> NUMERO MULTI NUMERO .)
    COMA            reduce using rule 92 (expresion_alge1 -> NUMERO MULTI NUMERO .)
    CIERRA_P        reduce using rule 92 (expresion_alge1 -> NUMERO MULTI NUMERO .)


state 176

    (93) expresion_alge1 -> NUMERO DIVISION NUMERO .

    PUNTOCOMA       reduce using rule 93 (expresion_alge1 -> NUMERO DIVISION NUMERO .)
    NUMERO          reduce using rule 93 (expresion_alge1 -> NUMERO DIVISION NUMERO .)
    ABRE_P          reduce using rule 93 (expresion_alge1 -> NUMERO DIVISION NUMERO .)
    SUM             reduce using rule 93 (expresion_alge1 -> NUMERO DIVISION NUMERO .)
    SUBSTR          reduce using rule 93 (expresion_alge1 -> NUMERO DIVISION NUMERO .)
    MULTI           reduce using rule 93 (expresion_alge1 -> NUMERO DIVISION NUMERO .)
    DIV             reduce using rule 93 (expresion_alge1 -> NUMERO DIVISION NUMERO .)
    RANDOM          reduce using rule 93 (expresion_alge1 -> NUMERO DIVISION NUMERO .)
    RUN             reduce using rule 93 (expresion_alge1 -> NUMERO DIVISION NUMERO .)
    IF              reduce using rule 93 (expresion_alge1 -> NUMERO DIVISION NUMERO .)
    IFELSE          reduce using rule 93 (expresion_alge1 -> NUMERO DIVISION NUMERO .)
    REPEAT          reduce using rule 93 (expresion_alge1 -> NUMERO DIVISION NUMERO .)
    UNTIL           reduce using rule 93 (expresion_alge1 -> NUMERO DIVISION NUMERO .)
    WHILE           reduce using rule 93 (expresion_alge1 -> NUMERO DIVISION NUMERO .)
    PRINTLINE       reduce using rule 93 (expresion_alge1 -> NUMERO DIVISION NUMERO .)
    AND             reduce using rule 93 (expresion_alge1 -> NUMERO DIVISION NUMERO .)
    OR              reduce using rule 93 (expresion_alge1 -> NUMERO DIVISION NUMERO .)
    ADD             reduce using rule 93 (expresion_alge1 -> NUMERO DIVISION NUMERO .)
    PUT             reduce using rule 93 (expresion_alge1 -> NUMERO DIVISION NUMERO .)
    FIN             reduce using rule 93 (expresion_alge1 -> NUMERO DIVISION NUMERO .)
    COMA            reduce using rule 93 (expresion_alge1 -> NUMERO DIVISION NUMERO .)
    CIERRA_P        reduce using rule 93 (expresion_alge1 -> NUMERO DIVISION NUMERO .)


state 177

    (94) expresion_alge1 -> NUMERO EXPONENTE NUMERO .

    PUNTOCOMA       reduce using rule 94 (expresion_alge1 -> NUMERO EXPONENTE NUMERO .)
    NUMERO          reduce using rule 94 (expresion_alge1 -> NUMERO EXPONENTE NUMERO .)
    ABRE_P          reduce using rule 94 (expresion_alge1 -> NUMERO EXPONENTE NUMERO .)
    SUM             reduce using rule 94 (expresion_alge1 -> NUMERO EXPONENTE NUMERO .)
    SUBSTR          reduce using rule 94 (expresion_alge1 -> NUMERO EXPONENTE NUMERO .)
    MULTI           reduce using rule 94 (expresion_alge1 -> NUMERO EXPONENTE NUMERO .)
    DIV             reduce using rule 94 (expresion_alge1 -> NUMERO EXPONENTE NUMERO .)
    RANDOM          reduce using rule 94 (expresion_alge1 -> NUMERO EXPONENTE NUMERO .)
    RUN             reduce using rule 94 (expresion_alge1 -> NUMERO EXPONENTE NUMERO .)
    IF              reduce using rule 94 (expresion_alge1 -> NUMERO EXPONENTE NUMERO .)
    IFELSE          reduce using rule 94 (expresion_alge1 -> NUMERO EXPONENTE NUMERO .)
    REPEAT          reduce using rule 94 (expresion_alge1 -> NUMERO EXPONENTE NUMERO .)
    UNTIL           reduce using rule 94 (expresion_alge1 -> NUMERO EXPONENTE NUMERO .)
    WHILE           reduce using rule 94 (expresion_alge1 -> NUMERO EXPONENTE NUMERO .)
    PRINTLINE       reduce using rule 94 (expresion_alge1 -> NUMERO EXPONENTE NUMERO .)
    AND             reduce using rule 94 (expresion_alge1 -> NUMERO EXPONENTE NUMERO .)
    OR              reduce using rule 94 (expresion_alge1 -> NUMERO EXPONENTE NUMERO .)
    ADD             reduce using rule 94 (expresion_alge1 -> NUMERO EXPONENTE NUMERO .)
    PUT             reduce using rule 94 (expresion_alge1 -> NUMERO EXPONENTE NUMERO .)
    FIN             reduce using rule 94 (expresion_alge1 -> NUMERO EXPONENTE NUMERO .)
    COMA            reduce using rule 94 (expresion_alge1 -> NUMERO EXPONENTE NUMERO .)
    CIERRA_P        reduce using rule 94 (expresion_alge1 -> NUMERO EXPONENTE NUMERO .)


state 178

    (118) Mult -> MULTI ABRE_P NUMERO . COMA NUMERO CIERRA_P
    (119) Mult -> MULTI ABRE_P NUMERO . COMA expresion_alge1 CIERRA_P
    (121) Mult -> MULTI ABRE_P NUMERO . COMA Var CIERRA_P
    (90) expresion_alge1 -> NUMERO . SUMA NUMERO
    (91) expresion_alge1 -> NUMERO . RESTA NUMERO
    (92) expresion_alge1 -> NUMERO . MULTI NUMERO
    (93) expresion_alge1 -> NUMERO . DIVISION NUMERO
    (94) expresion_alge1 -> NUMERO . EXPONENTE NUMERO

    COMA            shift and go to state 255
    SUMA            shift and go to state 126
    RESTA           shift and go to state 127
    MULTI           shift and go to state 128
    DIVISION        shift and go to state 129
    EXPONENTE       shift and go to state 130


state 179

    (120) Mult -> MULTI ABRE_P expresion_alge1 . COMA expresion_alge1 CIERRA_P
    (124) Mult -> MULTI ABRE_P expresion_alge1 . COMA Var CIERRA_P
    (125) Mult -> MULTI ABRE_P expresion_alge1 . COMA NUMERO CIERRA_P

    COMA            shift and go to state 256


state 180

    (122) Mult -> MULTI ABRE_P Var . COMA NUMERO CIERRA_P
    (123) Mult -> MULTI ABRE_P Var . COMA Var CIERRA_P
    (126) Mult -> MULTI ABRE_P Var . COMA expresion_alge1 CIERRA_P

    COMA            shift and go to state 257


state 181

    (127) Div -> DIV ABRE_P NUMERO . COMA NUMERO CIERRA_P
    (128) Div -> DIV ABRE_P NUMERO . COMA expresion_alge1 CIERRA_P
    (130) Div -> DIV ABRE_P NUMERO . COMA Var CIERRA_P
    (90) expresion_alge1 -> NUMERO . SUMA NUMERO
    (91) expresion_alge1 -> NUMERO . RESTA NUMERO
    (92) expresion_alge1 -> NUMERO . MULTI NUMERO
    (93) expresion_alge1 -> NUMERO . DIVISION NUMERO
    (94) expresion_alge1 -> NUMERO . EXPONENTE NUMERO

    COMA            shift and go to state 258
    SUMA            shift and go to state 126
    RESTA           shift and go to state 127
    MULTI           shift and go to state 128
    DIVISION        shift and go to state 129
    EXPONENTE       shift and go to state 130


state 182

    (129) Div -> DIV ABRE_P expresion_alge1 . COMA expresion_alge1 CIERRA_P
    (133) Div -> DIV ABRE_P expresion_alge1 . COMA Var CIERRA_P
    (134) Div -> DIV ABRE_P expresion_alge1 . COMA NUMERO CIERRA_P

    COMA            shift and go to state 259


state 183

    (131) Div -> DIV ABRE_P Var . COMA NUMERO CIERRA_P
    (132) Div -> DIV ABRE_P Var . COMA Var CIERRA_P
    (135) Div -> DIV ABRE_P Var . COMA expresion_alge1 CIERRA_P

    COMA            shift and go to state 260


state 184

    (100) Sum -> SUM ABRE_P NUMERO . COMA NUMERO CIERRA_P
    (101) Sum -> SUM ABRE_P NUMERO . COMA expresion_alge1 CIERRA_P
    (103) Sum -> SUM ABRE_P NUMERO . COMA Var CIERRA_P
    (90) expresion_alge1 -> NUMERO . SUMA NUMERO
    (91) expresion_alge1 -> NUMERO . RESTA NUMERO
    (92) expresion_alge1 -> NUMERO . MULTI NUMERO
    (93) expresion_alge1 -> NUMERO . DIVISION NUMERO
    (94) expresion_alge1 -> NUMERO . EXPONENTE NUMERO

    COMA            shift and go to state 261
    SUMA            shift and go to state 126
    RESTA           shift and go to state 127
    MULTI           shift and go to state 128
    DIVISION        shift and go to state 129
    EXPONENTE       shift and go to state 130


state 185

    (102) Sum -> SUM ABRE_P expresion_alge1 . COMA expresion_alge1 CIERRA_P
    (106) Sum -> SUM ABRE_P expresion_alge1 . COMA Var CIERRA_P
    (107) Sum -> SUM ABRE_P expresion_alge1 . COMA NUMERO CIERRA_P

    COMA            shift and go to state 262


state 186

    (104) Sum -> SUM ABRE_P Var . COMA NUMERO CIERRA_P
    (105) Sum -> SUM ABRE_P Var . COMA Var CIERRA_P
    (108) Sum -> SUM ABRE_P Var . COMA expresion_alge1 CIERRA_P

    COMA            shift and go to state 263


state 187

    (109) Substr -> SUBSTR ABRE_P NUMERO . COMA NUMERO CIERRA_P
    (110) Substr -> SUBSTR ABRE_P NUMERO . COMA expresion_alge1 CIERRA_P
    (112) Substr -> SUBSTR ABRE_P NUMERO . COMA Var CIERRA_P
    (90) expresion_alge1 -> NUMERO . SUMA NUMERO
    (91) expresion_alge1 -> NUMERO . RESTA NUMERO
    (92) expresion_alge1 -> NUMERO . MULTI NUMERO
    (93) expresion_alge1 -> NUMERO . DIVISION NUMERO
    (94) expresion_alge1 -> NUMERO . EXPONENTE NUMERO

    COMA            shift and go to state 264
    SUMA            shift and go to state 126
    RESTA           shift and go to state 127
    MULTI           shift and go to state 128
    DIVISION        shift and go to state 129
    EXPONENTE       shift and go to state 130


state 188

    (111) Substr -> SUBSTR ABRE_P expresion_alge1 . COMA expresion_alge1 CIERRA_P
    (115) Substr -> SUBSTR ABRE_P expresion_alge1 . COMA Var CIERRA_P
    (116) Substr -> SUBSTR ABRE_P expresion_alge1 . COMA NUMERO CIERRA_P

    COMA            shift and go to state 265


state 189

    (113) Substr -> SUBSTR ABRE_P Var . COMA NUMERO CIERRA_P
    (114) Substr -> SUBSTR ABRE_P Var . COMA Var CIERRA_P
    (117) Substr -> SUBSTR ABRE_P Var . COMA expresion_alge1 CIERRA_P

    COMA            shift and go to state 266


state 190

    (201) Random -> RANDOM ABRE_P NUMERO . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 267


state 191

    (241) Run -> RUN BRACKET1 ordenes . BRACKET2 PUNTOCOMA

    BRACKET2        shift and go to state 268


state 192

    (65) ordenes -> PUNTOCOMA . ordenes
    (53) ordenes -> . Beginning empty
    (54) ordenes -> . ContinueUp empty
    (55) ordenes -> . ContinueDown empty
    (56) ordenes -> . ContinueRight empty
    (57) ordenes -> . ContinueLeft empty
    (58) ordenes -> . Up empty
    (59) ordenes -> . Down empty
    (60) ordenes -> . Speed empty
    (61) ordenes -> . Pos empty
    (62) ordenes -> . PosX empty
    (63) ordenes -> . PosY empty
    (64) ordenes -> . UseColor empty
    (65) ordenes -> . PUNTOCOMA ordenes
    (66) ordenes -> . empty empty
    (200) Beginning -> . BEGINNING PUNTOCOMA
    (202) ContinueUp -> . CONTINUEUP NUMERO PUNTOCOMA
    (203) ContinueUp -> . CONTINUEUP expresion_alge1 PUNTOCOMA
    (204) ContinueUp -> . CONTINUEUP expresion_alge2 PUNTOCOMA
    (205) ContinueUp -> . CONTINUEUP Var PUNTOCOMA
    (206) ContinueDown -> . CONTINUEDOWN NUMERO PUNTOCOMA
    (207) ContinueDown -> . CONTINUEDOWN expresion_alge1 PUNTOCOMA
    (208) ContinueDown -> . CONTINUEDOWN expresion_alge2 PUNTOCOMA
    (209) ContinueDown -> . CONTINUEDOWN Var PUNTOCOMA
    (210) ContinueRight -> . CONTINUERIGHT NUMERO PUNTOCOMA
    (211) ContinueRight -> . CONTINUERIGHT expresion_alge1 PUNTOCOMA
    (212) ContinueRight -> . CONTINUERIGHT expresion_alge2 PUNTOCOMA
    (213) ContinueRight -> . CONTINUERIGHT Var PUNTOCOMA
    (214) ContinueLeft -> . CONTINUELEFT NUMERO PUNTOCOMA
    (215) ContinueLeft -> . CONTINUELEFT expresion_alge1 PUNTOCOMA
    (216) ContinueLeft -> . CONTINUELEFT expresion_alge2 PUNTOCOMA
    (217) ContinueLeft -> . CONTINUELEFT Var PUNTOCOMA
    (218) Up -> . UP PUNTOCOMA
    (219) Down -> . DOWN PUNTOCOMA
    (220) Speed -> . SPEED NUMERO PUNTOCOMA
    (221) Pos -> . POS ABRE_P NUMERO COMA NUMERO CIERRA_P PUNTOCOMA
    (222) Pos -> . POS ABRE_P expresion_alge1 COMA NUMERO CIERRA_P PUNTOCOMA
    (223) Pos -> . POS ABRE_P NUMERO COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (224) Pos -> . POS ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (225) Pos -> . POS ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (226) Pos -> . POS ABRE_P NUMERO COMA Var CIERRA_P PUNTOCOMA
    (227) Pos -> . POS ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (228) Pos -> . POS ABRE_P expresion_alge1 COMA Var CIERRA_P PUNTOCOMA
    (229) Pos -> . POS ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (230) PosX -> . POSX NUMERO PUNTOCOMA
    (231) PosX -> . POSX expresion_alge1 PUNTOCOMA
    (232) PosX -> . POSX expresion_alge2 PUNTOCOMA
    (233) PosX -> . POSX Var PUNTOCOMA
    (234) PosY -> . POSY NUMERO PUNTOCOMA
    (235) PosY -> . POSY expresion_alge1 PUNTOCOMA
    (236) PosY -> . POSY expresion_alge2 PUNTOCOMA
    (237) PosY -> . POSY Var PUNTOCOMA
    (238) UseColor -> . USECOLOR NUMERO PUNTOCOMA
    (239) UseColor -> . USECOLOR Var PUNTOCOMA
    (240) UseColor -> . USECOLOR empty PUNTOCOMA
    (249) empty -> .

    PUNTOCOMA       shift and go to state 192
    BEGINNING       shift and go to state 206
    CONTINUEUP      shift and go to state 207
    CONTINUEDOWN    shift and go to state 208
    CONTINUERIGHT   shift and go to state 209
    CONTINUELEFT    shift and go to state 210
    UP              shift and go to state 211
    DOWN            shift and go to state 212
    SPEED           shift and go to state 213
    POS             shift and go to state 214
    POSX            shift and go to state 215
    POSY            shift and go to state 216
    USECOLOR        shift and go to state 217
    BRACKET2        reduce using rule 249 (empty -> .)

    ordenes                        shift and go to state 269
    Beginning                      shift and go to state 193
    empty                          shift and go to state 194
    ContinueUp                     shift and go to state 195
    ContinueDown                   shift and go to state 196
    ContinueRight                  shift and go to state 197
    ContinueLeft                   shift and go to state 198
    Up                             shift and go to state 199
    Down                           shift and go to state 200
    Speed                          shift and go to state 201
    Pos                            shift and go to state 202
    PosX                           shift and go to state 203
    PosY                           shift and go to state 204
    UseColor                       shift and go to state 205

state 193

    (53) ordenes -> Beginning . empty
    (249) empty -> .

    BRACKET2        reduce using rule 249 (empty -> .)

    empty                          shift and go to state 270

state 194

    (66) ordenes -> empty . empty
    (249) empty -> .

    BRACKET2        reduce using rule 249 (empty -> .)

    empty                          shift and go to state 271

state 195

    (54) ordenes -> ContinueUp . empty
    (249) empty -> .

    BRACKET2        reduce using rule 249 (empty -> .)

    empty                          shift and go to state 272

state 196

    (55) ordenes -> ContinueDown . empty
    (249) empty -> .

    BRACKET2        reduce using rule 249 (empty -> .)

    empty                          shift and go to state 273

state 197

    (56) ordenes -> ContinueRight . empty
    (249) empty -> .

    BRACKET2        reduce using rule 249 (empty -> .)

    empty                          shift and go to state 274

state 198

    (57) ordenes -> ContinueLeft . empty
    (249) empty -> .

    BRACKET2        reduce using rule 249 (empty -> .)

    empty                          shift and go to state 275

state 199

    (58) ordenes -> Up . empty
    (249) empty -> .

    BRACKET2        reduce using rule 249 (empty -> .)

    empty                          shift and go to state 276

state 200

    (59) ordenes -> Down . empty
    (249) empty -> .

    BRACKET2        reduce using rule 249 (empty -> .)

    empty                          shift and go to state 277

state 201

    (60) ordenes -> Speed . empty
    (249) empty -> .

    BRACKET2        reduce using rule 249 (empty -> .)

    empty                          shift and go to state 278

state 202

    (61) ordenes -> Pos . empty
    (249) empty -> .

    BRACKET2        reduce using rule 249 (empty -> .)

    empty                          shift and go to state 279

state 203

    (62) ordenes -> PosX . empty
    (249) empty -> .

    BRACKET2        reduce using rule 249 (empty -> .)

    empty                          shift and go to state 280

state 204

    (63) ordenes -> PosY . empty
    (249) empty -> .

    BRACKET2        reduce using rule 249 (empty -> .)

    empty                          shift and go to state 281

state 205

    (64) ordenes -> UseColor . empty
    (249) empty -> .

    BRACKET2        reduce using rule 249 (empty -> .)

    empty                          shift and go to state 282

state 206

    (200) Beginning -> BEGINNING . PUNTOCOMA

    PUNTOCOMA       shift and go to state 283


state 207

    (202) ContinueUp -> CONTINUEUP . NUMERO PUNTOCOMA
    (203) ContinueUp -> CONTINUEUP . expresion_alge1 PUNTOCOMA
    (204) ContinueUp -> CONTINUEUP . expresion_alge2 PUNTOCOMA
    (205) ContinueUp -> CONTINUEUP . Var PUNTOCOMA
    (90) expresion_alge1 -> . NUMERO SUMA NUMERO
    (91) expresion_alge1 -> . NUMERO RESTA NUMERO
    (92) expresion_alge1 -> . NUMERO MULTI NUMERO
    (93) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (94) expresion_alge1 -> . NUMERO EXPONENTE NUMERO
    (95) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (96) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (97) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (98) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (99) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P EXPONENTE ABRE_P expresion_alge1 CIERRA_P
    (136) Var -> . VAR

    NUMERO          shift and go to state 284
    ABRE_P          shift and go to state 63
    VAR             shift and go to state 34

    expresion_alge1                shift and go to state 285
    expresion_alge2                shift and go to state 286
    Var                            shift and go to state 287

state 208

    (206) ContinueDown -> CONTINUEDOWN . NUMERO PUNTOCOMA
    (207) ContinueDown -> CONTINUEDOWN . expresion_alge1 PUNTOCOMA
    (208) ContinueDown -> CONTINUEDOWN . expresion_alge2 PUNTOCOMA
    (209) ContinueDown -> CONTINUEDOWN . Var PUNTOCOMA
    (90) expresion_alge1 -> . NUMERO SUMA NUMERO
    (91) expresion_alge1 -> . NUMERO RESTA NUMERO
    (92) expresion_alge1 -> . NUMERO MULTI NUMERO
    (93) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (94) expresion_alge1 -> . NUMERO EXPONENTE NUMERO
    (95) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (96) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (97) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (98) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (99) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P EXPONENTE ABRE_P expresion_alge1 CIERRA_P
    (136) Var -> . VAR

    NUMERO          shift and go to state 288
    ABRE_P          shift and go to state 63
    VAR             shift and go to state 34

    expresion_alge1                shift and go to state 289
    expresion_alge2                shift and go to state 290
    Var                            shift and go to state 291

state 209

    (210) ContinueRight -> CONTINUERIGHT . NUMERO PUNTOCOMA
    (211) ContinueRight -> CONTINUERIGHT . expresion_alge1 PUNTOCOMA
    (212) ContinueRight -> CONTINUERIGHT . expresion_alge2 PUNTOCOMA
    (213) ContinueRight -> CONTINUERIGHT . Var PUNTOCOMA
    (90) expresion_alge1 -> . NUMERO SUMA NUMERO
    (91) expresion_alge1 -> . NUMERO RESTA NUMERO
    (92) expresion_alge1 -> . NUMERO MULTI NUMERO
    (93) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (94) expresion_alge1 -> . NUMERO EXPONENTE NUMERO
    (95) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (96) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (97) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (98) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (99) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P EXPONENTE ABRE_P expresion_alge1 CIERRA_P
    (136) Var -> . VAR

    NUMERO          shift and go to state 292
    ABRE_P          shift and go to state 63
    VAR             shift and go to state 34

    expresion_alge1                shift and go to state 293
    expresion_alge2                shift and go to state 294
    Var                            shift and go to state 295

state 210

    (214) ContinueLeft -> CONTINUELEFT . NUMERO PUNTOCOMA
    (215) ContinueLeft -> CONTINUELEFT . expresion_alge1 PUNTOCOMA
    (216) ContinueLeft -> CONTINUELEFT . expresion_alge2 PUNTOCOMA
    (217) ContinueLeft -> CONTINUELEFT . Var PUNTOCOMA
    (90) expresion_alge1 -> . NUMERO SUMA NUMERO
    (91) expresion_alge1 -> . NUMERO RESTA NUMERO
    (92) expresion_alge1 -> . NUMERO MULTI NUMERO
    (93) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (94) expresion_alge1 -> . NUMERO EXPONENTE NUMERO
    (95) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (96) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (97) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (98) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (99) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P EXPONENTE ABRE_P expresion_alge1 CIERRA_P
    (136) Var -> . VAR

    NUMERO          shift and go to state 296
    ABRE_P          shift and go to state 63
    VAR             shift and go to state 34

    expresion_alge1                shift and go to state 297
    expresion_alge2                shift and go to state 298
    Var                            shift and go to state 299

state 211

    (218) Up -> UP . PUNTOCOMA

    PUNTOCOMA       shift and go to state 300


state 212

    (219) Down -> DOWN . PUNTOCOMA

    PUNTOCOMA       shift and go to state 301


state 213

    (220) Speed -> SPEED . NUMERO PUNTOCOMA

    NUMERO          shift and go to state 302


state 214

    (221) Pos -> POS . ABRE_P NUMERO COMA NUMERO CIERRA_P PUNTOCOMA
    (222) Pos -> POS . ABRE_P expresion_alge1 COMA NUMERO CIERRA_P PUNTOCOMA
    (223) Pos -> POS . ABRE_P NUMERO COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (224) Pos -> POS . ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (225) Pos -> POS . ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (226) Pos -> POS . ABRE_P NUMERO COMA Var CIERRA_P PUNTOCOMA
    (227) Pos -> POS . ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (228) Pos -> POS . ABRE_P expresion_alge1 COMA Var CIERRA_P PUNTOCOMA
    (229) Pos -> POS . ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA

    ABRE_P          shift and go to state 303


state 215

    (230) PosX -> POSX . NUMERO PUNTOCOMA
    (231) PosX -> POSX . expresion_alge1 PUNTOCOMA
    (232) PosX -> POSX . expresion_alge2 PUNTOCOMA
    (233) PosX -> POSX . Var PUNTOCOMA
    (90) expresion_alge1 -> . NUMERO SUMA NUMERO
    (91) expresion_alge1 -> . NUMERO RESTA NUMERO
    (92) expresion_alge1 -> . NUMERO MULTI NUMERO
    (93) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (94) expresion_alge1 -> . NUMERO EXPONENTE NUMERO
    (95) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (96) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (97) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (98) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (99) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P EXPONENTE ABRE_P expresion_alge1 CIERRA_P
    (136) Var -> . VAR

    NUMERO          shift and go to state 304
    ABRE_P          shift and go to state 63
    VAR             shift and go to state 34

    expresion_alge1                shift and go to state 305
    expresion_alge2                shift and go to state 306
    Var                            shift and go to state 307

state 216

    (234) PosY -> POSY . NUMERO PUNTOCOMA
    (235) PosY -> POSY . expresion_alge1 PUNTOCOMA
    (236) PosY -> POSY . expresion_alge2 PUNTOCOMA
    (237) PosY -> POSY . Var PUNTOCOMA
    (90) expresion_alge1 -> . NUMERO SUMA NUMERO
    (91) expresion_alge1 -> . NUMERO RESTA NUMERO
    (92) expresion_alge1 -> . NUMERO MULTI NUMERO
    (93) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (94) expresion_alge1 -> . NUMERO EXPONENTE NUMERO
    (95) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (96) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (97) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (98) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (99) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P EXPONENTE ABRE_P expresion_alge1 CIERRA_P
    (136) Var -> . VAR

    NUMERO          shift and go to state 308
    ABRE_P          shift and go to state 63
    VAR             shift and go to state 34

    expresion_alge1                shift and go to state 309
    expresion_alge2                shift and go to state 310
    Var                            shift and go to state 311

state 217

    (238) UseColor -> USECOLOR . NUMERO PUNTOCOMA
    (239) UseColor -> USECOLOR . Var PUNTOCOMA
    (240) UseColor -> USECOLOR . empty PUNTOCOMA
    (136) Var -> . VAR
    (249) empty -> .

    NUMERO          shift and go to state 312
    VAR             shift and go to state 34
    PUNTOCOMA       reduce using rule 249 (empty -> .)

    Var                            shift and go to state 313
    empty                          shift and go to state 314

state 218

    (187) If -> IF ABRE_P condicion . CIERRA_P BRACKET1 funcion BRACKET2

    CIERRA_P        shift and go to state 315


state 219

    (87) condicion -> Equal .

    CIERRA_P        reduce using rule 87 (condicion -> Equal .)
    BRACKET2        reduce using rule 87 (condicion -> Equal .)


state 220

    (88) condicion -> Greater .

    CIERRA_P        reduce using rule 88 (condicion -> Greater .)
    BRACKET2        reduce using rule 88 (condicion -> Greater .)


state 221

    (89) condicion -> Smaller .

    CIERRA_P        reduce using rule 89 (condicion -> Smaller .)
    BRACKET2        reduce using rule 89 (condicion -> Smaller .)


state 222

    (137) Equal -> EQUAL . ABRE_P NUMERO COMA NUMERO CIERRA_P PUNTOCOMA
    (138) Equal -> EQUAL . ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (139) Equal -> EQUAL . ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (140) Equal -> EQUAL . ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (141) Equal -> EQUAL . ABRE_P NUMERO COMA Var CIERRA_P PUNTOCOMA
    (142) Equal -> EQUAL . ABRE_P expresion_alge2 COMA Var CIERRA_P PUNTOCOMA
    (143) Equal -> EQUAL . ABRE_P expresion_alge1 COMA Var CIERRA_P PUNTOCOMA
    (144) Equal -> EQUAL . ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (145) Equal -> EQUAL . ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (146) Equal -> EQUAL . ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (147) Equal -> EQUAL . ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (148) Equal -> EQUAL . ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (149) Equal -> EQUAL . ABRE_P expresion_alge1 COMA NUMERO CIERRA_P PUNTOCOMA
    (150) Equal -> EQUAL . ABRE_P expresion_alge2 COMA NUMERO CIERRA_P PUNTOCOMA
    (151) Equal -> EQUAL . ABRE_P NUMERO COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (152) Equal -> EQUAL . ABRE_P NUMERO COMA expresion_alge2 CIERRA_P PUNTOCOMA

    ABRE_P          shift and go to state 316


state 223

    (153) Greater -> GREATER . ABRE_P NUMERO COMA NUMERO CIERRA_P PUNTOCOMA
    (154) Greater -> GREATER . ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (155) Greater -> GREATER . ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (156) Greater -> GREATER . ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (157) Greater -> GREATER . ABRE_P NUMERO COMA Var CIERRA_P PUNTOCOMA
    (158) Greater -> GREATER . ABRE_P expresion_alge2 COMA Var CIERRA_P PUNTOCOMA
    (159) Greater -> GREATER . ABRE_P expresion_alge1 COMA Var CIERRA_P PUNTOCOMA
    (160) Greater -> GREATER . ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (161) Greater -> GREATER . ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (162) Greater -> GREATER . ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (163) Greater -> GREATER . ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (164) Greater -> GREATER . ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (165) Greater -> GREATER . ABRE_P expresion_alge1 COMA NUMERO CIERRA_P PUNTOCOMA
    (166) Greater -> GREATER . ABRE_P expresion_alge2 COMA NUMERO CIERRA_P PUNTOCOMA
    (167) Greater -> GREATER . ABRE_P NUMERO COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (168) Greater -> GREATER . ABRE_P NUMERO COMA expresion_alge2 CIERRA_P PUNTOCOMA

    ABRE_P          shift and go to state 317


state 224

    (169) Smaller -> SMALLER . ABRE_P NUMERO COMA NUMERO CIERRA_P PUNTOCOMA
    (170) Smaller -> SMALLER . ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (171) Smaller -> SMALLER . ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (172) Smaller -> SMALLER . ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (173) Smaller -> SMALLER . ABRE_P NUMERO COMA Var CIERRA_P PUNTOCOMA
    (174) Smaller -> SMALLER . ABRE_P expresion_alge2 COMA Var CIERRA_P PUNTOCOMA
    (175) Smaller -> SMALLER . ABRE_P expresion_alge1 COMA Var CIERRA_P PUNTOCOMA
    (176) Smaller -> SMALLER . ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (177) Smaller -> SMALLER . ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (178) Smaller -> SMALLER . ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (179) Smaller -> SMALLER . ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (180) Smaller -> SMALLER . ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (181) Smaller -> SMALLER . ABRE_P expresion_alge1 COMA NUMERO CIERRA_P PUNTOCOMA
    (182) Smaller -> SMALLER . ABRE_P expresion_alge2 COMA NUMERO CIERRA_P PUNTOCOMA
    (183) Smaller -> SMALLER . ABRE_P NUMERO COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (184) Smaller -> SMALLER . ABRE_P NUMERO COMA expresion_alge2 CIERRA_P PUNTOCOMA

    ABRE_P          shift and go to state 318


state 225

    (188) IfElse -> IFELSE ABRE_P condicion . CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2

    CIERRA_P        shift and go to state 319


state 226

    (190) Repeat -> REPEAT NUMERO BRACKET1 . ordenes BRACKET2
    (53) ordenes -> . Beginning empty
    (54) ordenes -> . ContinueUp empty
    (55) ordenes -> . ContinueDown empty
    (56) ordenes -> . ContinueRight empty
    (57) ordenes -> . ContinueLeft empty
    (58) ordenes -> . Up empty
    (59) ordenes -> . Down empty
    (60) ordenes -> . Speed empty
    (61) ordenes -> . Pos empty
    (62) ordenes -> . PosX empty
    (63) ordenes -> . PosY empty
    (64) ordenes -> . UseColor empty
    (65) ordenes -> . PUNTOCOMA ordenes
    (66) ordenes -> . empty empty
    (200) Beginning -> . BEGINNING PUNTOCOMA
    (202) ContinueUp -> . CONTINUEUP NUMERO PUNTOCOMA
    (203) ContinueUp -> . CONTINUEUP expresion_alge1 PUNTOCOMA
    (204) ContinueUp -> . CONTINUEUP expresion_alge2 PUNTOCOMA
    (205) ContinueUp -> . CONTINUEUP Var PUNTOCOMA
    (206) ContinueDown -> . CONTINUEDOWN NUMERO PUNTOCOMA
    (207) ContinueDown -> . CONTINUEDOWN expresion_alge1 PUNTOCOMA
    (208) ContinueDown -> . CONTINUEDOWN expresion_alge2 PUNTOCOMA
    (209) ContinueDown -> . CONTINUEDOWN Var PUNTOCOMA
    (210) ContinueRight -> . CONTINUERIGHT NUMERO PUNTOCOMA
    (211) ContinueRight -> . CONTINUERIGHT expresion_alge1 PUNTOCOMA
    (212) ContinueRight -> . CONTINUERIGHT expresion_alge2 PUNTOCOMA
    (213) ContinueRight -> . CONTINUERIGHT Var PUNTOCOMA
    (214) ContinueLeft -> . CONTINUELEFT NUMERO PUNTOCOMA
    (215) ContinueLeft -> . CONTINUELEFT expresion_alge1 PUNTOCOMA
    (216) ContinueLeft -> . CONTINUELEFT expresion_alge2 PUNTOCOMA
    (217) ContinueLeft -> . CONTINUELEFT Var PUNTOCOMA
    (218) Up -> . UP PUNTOCOMA
    (219) Down -> . DOWN PUNTOCOMA
    (220) Speed -> . SPEED NUMERO PUNTOCOMA
    (221) Pos -> . POS ABRE_P NUMERO COMA NUMERO CIERRA_P PUNTOCOMA
    (222) Pos -> . POS ABRE_P expresion_alge1 COMA NUMERO CIERRA_P PUNTOCOMA
    (223) Pos -> . POS ABRE_P NUMERO COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (224) Pos -> . POS ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (225) Pos -> . POS ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (226) Pos -> . POS ABRE_P NUMERO COMA Var CIERRA_P PUNTOCOMA
    (227) Pos -> . POS ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (228) Pos -> . POS ABRE_P expresion_alge1 COMA Var CIERRA_P PUNTOCOMA
    (229) Pos -> . POS ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (230) PosX -> . POSX NUMERO PUNTOCOMA
    (231) PosX -> . POSX expresion_alge1 PUNTOCOMA
    (232) PosX -> . POSX expresion_alge2 PUNTOCOMA
    (233) PosX -> . POSX Var PUNTOCOMA
    (234) PosY -> . POSY NUMERO PUNTOCOMA
    (235) PosY -> . POSY expresion_alge1 PUNTOCOMA
    (236) PosY -> . POSY expresion_alge2 PUNTOCOMA
    (237) PosY -> . POSY Var PUNTOCOMA
    (238) UseColor -> . USECOLOR NUMERO PUNTOCOMA
    (239) UseColor -> . USECOLOR Var PUNTOCOMA
    (240) UseColor -> . USECOLOR empty PUNTOCOMA
    (249) empty -> .

    PUNTOCOMA       shift and go to state 192
    BEGINNING       shift and go to state 206
    CONTINUEUP      shift and go to state 207
    CONTINUEDOWN    shift and go to state 208
    CONTINUERIGHT   shift and go to state 209
    CONTINUELEFT    shift and go to state 210
    UP              shift and go to state 211
    DOWN            shift and go to state 212
    SPEED           shift and go to state 213
    POS             shift and go to state 214
    POSX            shift and go to state 215
    POSY            shift and go to state 216
    USECOLOR        shift and go to state 217
    BRACKET2        reduce using rule 249 (empty -> .)

    ordenes                        shift and go to state 320
    Beginning                      shift and go to state 193
    empty                          shift and go to state 194
    ContinueUp                     shift and go to state 195
    ContinueDown                   shift and go to state 196
    ContinueRight                  shift and go to state 197
    ContinueLeft                   shift and go to state 198
    Up                             shift and go to state 199
    Down                           shift and go to state 200
    Speed                          shift and go to state 201
    Pos                            shift and go to state 202
    PosX                           shift and go to state 203
    PosY                           shift and go to state 204
    UseColor                       shift and go to state 205

state 227

    (191) Until -> UNTIL BRACKET1 funcion . BRACKET2 BRACKET1 condicion BRACKET2

    BRACKET2        shift and go to state 321


state 228

    (189) While -> WHILE BRACKET1 condicion . BRACKET2 BRACKET1 funcion BRACKET2

    BRACKET2        shift and go to state 322


state 229

    (248) PrintLine -> PRINTLINE ABRE_P exp . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 323


state 230

    (242) exp -> NUMERO . COMA exp
    (245) exp -> NUMERO . empty empty
    (249) empty -> .

    COMA            shift and go to state 324
    CIERRA_P        reduce using rule 249 (empty -> .)

    empty                          shift and go to state 325

state 231

    (243) exp -> STRING . COMA exp
    (246) exp -> STRING . empty empty
    (249) empty -> .

    COMA            shift and go to state 326
    CIERRA_P        reduce using rule 249 (empty -> .)

    empty                          shift and go to state 327

state 232

    (244) exp -> Var . COMA exp
    (247) exp -> Var . empty empty
    (249) empty -> .

    COMA            shift and go to state 328
    CIERRA_P        reduce using rule 249 (empty -> .)

    empty                          shift and go to state 329

state 233

    (185) And -> AND ABRE_P expresion . COMA expresion CIERRA_P PUNTOCOMA

    COMA            shift and go to state 330


state 234

    (52) expresion -> empty . empty
    (81) funcion -> empty . empty
    (249) empty -> .

    COMA            reduce using rule 249 (empty -> .)
    PUNTOCOMA       reduce using rule 249 (empty -> .)
    NUMERO          reduce using rule 249 (empty -> .)
    ABRE_P          reduce using rule 249 (empty -> .)
    SUM             reduce using rule 249 (empty -> .)
    SUBSTR          reduce using rule 249 (empty -> .)
    MULTI           reduce using rule 249 (empty -> .)
    DIV             reduce using rule 249 (empty -> .)
    RANDOM          reduce using rule 249 (empty -> .)
    RUN             reduce using rule 249 (empty -> .)
    IF              reduce using rule 249 (empty -> .)
    IFELSE          reduce using rule 249 (empty -> .)
    REPEAT          reduce using rule 249 (empty -> .)
    UNTIL           reduce using rule 249 (empty -> .)
    WHILE           reduce using rule 249 (empty -> .)
    PRINTLINE       reduce using rule 249 (empty -> .)
    AND             reduce using rule 249 (empty -> .)
    OR              reduce using rule 249 (empty -> .)
    ADD             reduce using rule 249 (empty -> .)
    PUT             reduce using rule 249 (empty -> .)
    CIERRA_P        reduce using rule 249 (empty -> .)

    empty                          shift and go to state 169

state 235

    (186) Or -> OR ABRE_P expresion . COMA expresion CIERRA_P PUNTOCOMA

    COMA            shift and go to state 331


state 236

    (192) Add -> ADD ABRE_P Var . empty empty CIERRA_P PUNTOCOMA
    (193) Add -> ADD ABRE_P Var . COMA NUMERO CIERRA_P PUNTOCOMA
    (194) Add -> ADD ABRE_P Var . COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (195) Add -> ADD ABRE_P Var . COMA Var CIERRA_P PUNTOCOMA
    (196) Add -> ADD ABRE_P Var . COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (249) empty -> .

    COMA            shift and go to state 333
    CIERRA_P        reduce using rule 249 (empty -> .)

    empty                          shift and go to state 332

state 237

    (82) Put -> PUT ABRE_P VAR COMA VAR CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 334


state 238

    (83) Put2 -> PUT ABRE_P VAR COMA NUMERO CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 335


state 239

    (84) Put2 -> PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 336


state 240

    (85) Put2 -> PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 337


state 241

    (86) Put2 -> PUT ABRE_P VAR COMA funcion CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 338


state 242

    (25) llamadoproc -> PARA id . BRACKET1 parametro BRACKET2 PUNTOCOMA

    BRACKET1        shift and go to state 339


state 243

    (32) variablexd -> empty empty .
    (52) expresion -> empty empty .
    (81) funcion -> empty empty .

  ! reduce/reduce conflict for FIN resolved using rule 32 (variablexd -> empty empty .)
  ! reduce/reduce conflict for FIN resolved using rule 32 (variablexd -> empty empty .)
    FIN             reduce using rule 32 (variablexd -> empty empty .)
    PUNTOCOMA       reduce using rule 81 (funcion -> empty empty .)
    NUMERO          reduce using rule 81 (funcion -> empty empty .)
    ABRE_P          reduce using rule 81 (funcion -> empty empty .)
    SUM             reduce using rule 81 (funcion -> empty empty .)
    SUBSTR          reduce using rule 81 (funcion -> empty empty .)
    MULTI           reduce using rule 81 (funcion -> empty empty .)
    DIV             reduce using rule 81 (funcion -> empty empty .)
    RANDOM          reduce using rule 81 (funcion -> empty empty .)
    RUN             reduce using rule 81 (funcion -> empty empty .)
    IF              reduce using rule 81 (funcion -> empty empty .)
    IFELSE          reduce using rule 81 (funcion -> empty empty .)
    REPEAT          reduce using rule 81 (funcion -> empty empty .)
    UNTIL           reduce using rule 81 (funcion -> empty empty .)
    WHILE           reduce using rule 81 (funcion -> empty empty .)
    PRINTLINE       reduce using rule 81 (funcion -> empty empty .)
    AND             reduce using rule 81 (funcion -> empty empty .)
    OR              reduce using rule 81 (funcion -> empty empty .)
    ADD             reduce using rule 81 (funcion -> empty empty .)
    PUT             reduce using rule 81 (funcion -> empty empty .)

  ! FIN             [ reduce using rule 52 (expresion -> empty empty .) ]
  ! FIN             [ reduce using rule 81 (funcion -> empty empty .) ]


state 244

    (23) procedimiento -> PARA id BRACKET1 empty BRACKET2 cuerpo2 FIN . cuerpo
    (2) cuerpo -> . variable
    (3) cuerpo -> . procedimiento
    (4) cuerpo -> . main
    (5) cuerpo -> . COMMENT cuerpo
    (6) cuerpo -> . Put
    (7) cuerpo -> . Put2
    (27) variable -> . variable1 cuerpo
    (28) variable -> . variable2 cuerpo
    (29) variable -> . empty empty
    (23) procedimiento -> . PARA id BRACKET1 empty BRACKET2 cuerpo2 FIN cuerpo
    (24) procedimiento -> . PARA id BRACKET1 parametro BRACKET2 cuerpo2 FIN cuerpo
    (26) main -> . MAIN BRACKET1 BRACKET2 cuerpo3 FIN cuerpo
    (82) Put -> . PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA
    (83) Put2 -> . PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (84) Put2 -> . PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (85) Put2 -> . PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (86) Put2 -> . PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA
    (36) variable1 -> . DEF VAR PUNTOCOMA
    (37) variable2 -> . DEF VAR IGUAL NUMERO PUNTOCOMA
    (249) empty -> .

    COMMENT         shift and go to state 3
    PARA            shift and go to state 13
    MAIN            shift and go to state 14
    PUT             shift and go to state 15
    DEF             shift and go to state 16
    $end            reduce using rule 249 (empty -> .)

    empty                          shift and go to state 12
    cuerpo                         shift and go to state 340
    variable                       shift and go to state 5
    procedimiento                  shift and go to state 6
    main                           shift and go to state 7
    Put                            shift and go to state 8
    Put2                           shift and go to state 9
    variable1                      shift and go to state 10
    variable2                      shift and go to state 11

state 245

    (9) cuerpo2 -> COMMENT cuerpo2 .

    FIN             reduce using rule 9 (cuerpo2 -> COMMENT cuerpo2 .)


state 246

    (30) variablexd -> variable1 cuerpo2 .

    FIN             reduce using rule 30 (variablexd -> variable1 cuerpo2 .)


state 247

    (31) variablexd -> variable2 cuerpo2 .

    FIN             reduce using rule 31 (variablexd -> variable2 cuerpo2 .)


state 248

    (24) procedimiento -> PARA id BRACKET1 parametro BRACKET2 cuerpo2 FIN . cuerpo
    (2) cuerpo -> . variable
    (3) cuerpo -> . procedimiento
    (4) cuerpo -> . main
    (5) cuerpo -> . COMMENT cuerpo
    (6) cuerpo -> . Put
    (7) cuerpo -> . Put2
    (27) variable -> . variable1 cuerpo
    (28) variable -> . variable2 cuerpo
    (29) variable -> . empty empty
    (23) procedimiento -> . PARA id BRACKET1 empty BRACKET2 cuerpo2 FIN cuerpo
    (24) procedimiento -> . PARA id BRACKET1 parametro BRACKET2 cuerpo2 FIN cuerpo
    (26) main -> . MAIN BRACKET1 BRACKET2 cuerpo3 FIN cuerpo
    (82) Put -> . PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA
    (83) Put2 -> . PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (84) Put2 -> . PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (85) Put2 -> . PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (86) Put2 -> . PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA
    (36) variable1 -> . DEF VAR PUNTOCOMA
    (37) variable2 -> . DEF VAR IGUAL NUMERO PUNTOCOMA
    (249) empty -> .

    COMMENT         shift and go to state 3
    PARA            shift and go to state 13
    MAIN            shift and go to state 14
    PUT             shift and go to state 15
    DEF             shift and go to state 16
    $end            reduce using rule 249 (empty -> .)

    cuerpo                         shift and go to state 341
    variable                       shift and go to state 5
    procedimiento                  shift and go to state 6
    main                           shift and go to state 7
    Put                            shift and go to state 8
    Put2                           shift and go to state 9
    variable1                      shift and go to state 10
    variable2                      shift and go to state 11
    empty                          shift and go to state 12

state 249

    (83) Put2 -> PUT ABRE_P VAR . COMA NUMERO CIERRA_P PUNTOCOMA
    (84) Put2 -> PUT ABRE_P VAR . COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (85) Put2 -> PUT ABRE_P VAR . COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (86) Put2 -> PUT ABRE_P VAR . COMA funcion CIERRA_P PUNTOCOMA
    (82) Put -> PUT ABRE_P VAR . COMA VAR CIERRA_P PUNTOCOMA

    COMA            shift and go to state 342


state 250

    (95) expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P SUMA . ABRE_P expresion_alge1 CIERRA_P

    ABRE_P          shift and go to state 343


state 251

    (96) expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P RESTA . ABRE_P expresion_alge1 CIERRA_P

    ABRE_P          shift and go to state 344


state 252

    (97) expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P MULT . ABRE_P expresion_alge1 CIERRA_P

    ABRE_P          shift and go to state 345


state 253

    (98) expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P DIV . ABRE_P expresion_alge1 CIERRA_P

    ABRE_P          shift and go to state 346


state 254

    (99) expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P EXPONENTE . ABRE_P expresion_alge1 CIERRA_P

    ABRE_P          shift and go to state 347


state 255

    (118) Mult -> MULTI ABRE_P NUMERO COMA . NUMERO CIERRA_P
    (119) Mult -> MULTI ABRE_P NUMERO COMA . expresion_alge1 CIERRA_P
    (121) Mult -> MULTI ABRE_P NUMERO COMA . Var CIERRA_P
    (90) expresion_alge1 -> . NUMERO SUMA NUMERO
    (91) expresion_alge1 -> . NUMERO RESTA NUMERO
    (92) expresion_alge1 -> . NUMERO MULTI NUMERO
    (93) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (94) expresion_alge1 -> . NUMERO EXPONENTE NUMERO
    (136) Var -> . VAR

    NUMERO          shift and go to state 348
    VAR             shift and go to state 34

    expresion_alge1                shift and go to state 349
    Var                            shift and go to state 350

state 256

    (120) Mult -> MULTI ABRE_P expresion_alge1 COMA . expresion_alge1 CIERRA_P
    (124) Mult -> MULTI ABRE_P expresion_alge1 COMA . Var CIERRA_P
    (125) Mult -> MULTI ABRE_P expresion_alge1 COMA . NUMERO CIERRA_P
    (90) expresion_alge1 -> . NUMERO SUMA NUMERO
    (91) expresion_alge1 -> . NUMERO RESTA NUMERO
    (92) expresion_alge1 -> . NUMERO MULTI NUMERO
    (93) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (94) expresion_alge1 -> . NUMERO EXPONENTE NUMERO
    (136) Var -> . VAR

    NUMERO          shift and go to state 353
    VAR             shift and go to state 34

    expresion_alge1                shift and go to state 351
    Var                            shift and go to state 352

state 257

    (122) Mult -> MULTI ABRE_P Var COMA . NUMERO CIERRA_P
    (123) Mult -> MULTI ABRE_P Var COMA . Var CIERRA_P
    (126) Mult -> MULTI ABRE_P Var COMA . expresion_alge1 CIERRA_P
    (136) Var -> . VAR
    (90) expresion_alge1 -> . NUMERO SUMA NUMERO
    (91) expresion_alge1 -> . NUMERO RESTA NUMERO
    (92) expresion_alge1 -> . NUMERO MULTI NUMERO
    (93) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (94) expresion_alge1 -> . NUMERO EXPONENTE NUMERO

    NUMERO          shift and go to state 355
    VAR             shift and go to state 34

    Var                            shift and go to state 354
    expresion_alge1                shift and go to state 356

state 258

    (127) Div -> DIV ABRE_P NUMERO COMA . NUMERO CIERRA_P
    (128) Div -> DIV ABRE_P NUMERO COMA . expresion_alge1 CIERRA_P
    (130) Div -> DIV ABRE_P NUMERO COMA . Var CIERRA_P
    (90) expresion_alge1 -> . NUMERO SUMA NUMERO
    (91) expresion_alge1 -> . NUMERO RESTA NUMERO
    (92) expresion_alge1 -> . NUMERO MULTI NUMERO
    (93) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (94) expresion_alge1 -> . NUMERO EXPONENTE NUMERO
    (136) Var -> . VAR

    NUMERO          shift and go to state 357
    VAR             shift and go to state 34

    expresion_alge1                shift and go to state 358
    Var                            shift and go to state 359

state 259

    (129) Div -> DIV ABRE_P expresion_alge1 COMA . expresion_alge1 CIERRA_P
    (133) Div -> DIV ABRE_P expresion_alge1 COMA . Var CIERRA_P
    (134) Div -> DIV ABRE_P expresion_alge1 COMA . NUMERO CIERRA_P
    (90) expresion_alge1 -> . NUMERO SUMA NUMERO
    (91) expresion_alge1 -> . NUMERO RESTA NUMERO
    (92) expresion_alge1 -> . NUMERO MULTI NUMERO
    (93) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (94) expresion_alge1 -> . NUMERO EXPONENTE NUMERO
    (136) Var -> . VAR

    NUMERO          shift and go to state 362
    VAR             shift and go to state 34

    expresion_alge1                shift and go to state 360
    Var                            shift and go to state 361

state 260

    (131) Div -> DIV ABRE_P Var COMA . NUMERO CIERRA_P
    (132) Div -> DIV ABRE_P Var COMA . Var CIERRA_P
    (135) Div -> DIV ABRE_P Var COMA . expresion_alge1 CIERRA_P
    (136) Var -> . VAR
    (90) expresion_alge1 -> . NUMERO SUMA NUMERO
    (91) expresion_alge1 -> . NUMERO RESTA NUMERO
    (92) expresion_alge1 -> . NUMERO MULTI NUMERO
    (93) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (94) expresion_alge1 -> . NUMERO EXPONENTE NUMERO

    NUMERO          shift and go to state 364
    VAR             shift and go to state 34

    Var                            shift and go to state 363
    expresion_alge1                shift and go to state 365

state 261

    (100) Sum -> SUM ABRE_P NUMERO COMA . NUMERO CIERRA_P
    (101) Sum -> SUM ABRE_P NUMERO COMA . expresion_alge1 CIERRA_P
    (103) Sum -> SUM ABRE_P NUMERO COMA . Var CIERRA_P
    (90) expresion_alge1 -> . NUMERO SUMA NUMERO
    (91) expresion_alge1 -> . NUMERO RESTA NUMERO
    (92) expresion_alge1 -> . NUMERO MULTI NUMERO
    (93) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (94) expresion_alge1 -> . NUMERO EXPONENTE NUMERO
    (136) Var -> . VAR

    NUMERO          shift and go to state 366
    VAR             shift and go to state 34

    expresion_alge1                shift and go to state 367
    Var                            shift and go to state 368

state 262

    (102) Sum -> SUM ABRE_P expresion_alge1 COMA . expresion_alge1 CIERRA_P
    (106) Sum -> SUM ABRE_P expresion_alge1 COMA . Var CIERRA_P
    (107) Sum -> SUM ABRE_P expresion_alge1 COMA . NUMERO CIERRA_P
    (90) expresion_alge1 -> . NUMERO SUMA NUMERO
    (91) expresion_alge1 -> . NUMERO RESTA NUMERO
    (92) expresion_alge1 -> . NUMERO MULTI NUMERO
    (93) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (94) expresion_alge1 -> . NUMERO EXPONENTE NUMERO
    (136) Var -> . VAR

    NUMERO          shift and go to state 371
    VAR             shift and go to state 34

    expresion_alge1                shift and go to state 369
    Var                            shift and go to state 370

state 263

    (104) Sum -> SUM ABRE_P Var COMA . NUMERO CIERRA_P
    (105) Sum -> SUM ABRE_P Var COMA . Var CIERRA_P
    (108) Sum -> SUM ABRE_P Var COMA . expresion_alge1 CIERRA_P
    (136) Var -> . VAR
    (90) expresion_alge1 -> . NUMERO SUMA NUMERO
    (91) expresion_alge1 -> . NUMERO RESTA NUMERO
    (92) expresion_alge1 -> . NUMERO MULTI NUMERO
    (93) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (94) expresion_alge1 -> . NUMERO EXPONENTE NUMERO

    NUMERO          shift and go to state 373
    VAR             shift and go to state 34

    Var                            shift and go to state 372
    expresion_alge1                shift and go to state 374

state 264

    (109) Substr -> SUBSTR ABRE_P NUMERO COMA . NUMERO CIERRA_P
    (110) Substr -> SUBSTR ABRE_P NUMERO COMA . expresion_alge1 CIERRA_P
    (112) Substr -> SUBSTR ABRE_P NUMERO COMA . Var CIERRA_P
    (90) expresion_alge1 -> . NUMERO SUMA NUMERO
    (91) expresion_alge1 -> . NUMERO RESTA NUMERO
    (92) expresion_alge1 -> . NUMERO MULTI NUMERO
    (93) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (94) expresion_alge1 -> . NUMERO EXPONENTE NUMERO
    (136) Var -> . VAR

    NUMERO          shift and go to state 375
    VAR             shift and go to state 34

    expresion_alge1                shift and go to state 376
    Var                            shift and go to state 377

state 265

    (111) Substr -> SUBSTR ABRE_P expresion_alge1 COMA . expresion_alge1 CIERRA_P
    (115) Substr -> SUBSTR ABRE_P expresion_alge1 COMA . Var CIERRA_P
    (116) Substr -> SUBSTR ABRE_P expresion_alge1 COMA . NUMERO CIERRA_P
    (90) expresion_alge1 -> . NUMERO SUMA NUMERO
    (91) expresion_alge1 -> . NUMERO RESTA NUMERO
    (92) expresion_alge1 -> . NUMERO MULTI NUMERO
    (93) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (94) expresion_alge1 -> . NUMERO EXPONENTE NUMERO
    (136) Var -> . VAR

    NUMERO          shift and go to state 380
    VAR             shift and go to state 34

    expresion_alge1                shift and go to state 378
    Var                            shift and go to state 379

state 266

    (113) Substr -> SUBSTR ABRE_P Var COMA . NUMERO CIERRA_P
    (114) Substr -> SUBSTR ABRE_P Var COMA . Var CIERRA_P
    (117) Substr -> SUBSTR ABRE_P Var COMA . expresion_alge1 CIERRA_P
    (136) Var -> . VAR
    (90) expresion_alge1 -> . NUMERO SUMA NUMERO
    (91) expresion_alge1 -> . NUMERO RESTA NUMERO
    (92) expresion_alge1 -> . NUMERO MULTI NUMERO
    (93) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (94) expresion_alge1 -> . NUMERO EXPONENTE NUMERO

    NUMERO          shift and go to state 382
    VAR             shift and go to state 34

    Var                            shift and go to state 381
    expresion_alge1                shift and go to state 383

state 267

    (201) Random -> RANDOM ABRE_P NUMERO CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 384


state 268

    (241) Run -> RUN BRACKET1 ordenes BRACKET2 . PUNTOCOMA

    PUNTOCOMA       shift and go to state 385


state 269

    (65) ordenes -> PUNTOCOMA ordenes .

    BRACKET2        reduce using rule 65 (ordenes -> PUNTOCOMA ordenes .)


state 270

    (53) ordenes -> Beginning empty .

    BRACKET2        reduce using rule 53 (ordenes -> Beginning empty .)


state 271

    (66) ordenes -> empty empty .

    BRACKET2        reduce using rule 66 (ordenes -> empty empty .)


state 272

    (54) ordenes -> ContinueUp empty .

    BRACKET2        reduce using rule 54 (ordenes -> ContinueUp empty .)


state 273

    (55) ordenes -> ContinueDown empty .

    BRACKET2        reduce using rule 55 (ordenes -> ContinueDown empty .)


state 274

    (56) ordenes -> ContinueRight empty .

    BRACKET2        reduce using rule 56 (ordenes -> ContinueRight empty .)


state 275

    (57) ordenes -> ContinueLeft empty .

    BRACKET2        reduce using rule 57 (ordenes -> ContinueLeft empty .)


state 276

    (58) ordenes -> Up empty .

    BRACKET2        reduce using rule 58 (ordenes -> Up empty .)


state 277

    (59) ordenes -> Down empty .

    BRACKET2        reduce using rule 59 (ordenes -> Down empty .)


state 278

    (60) ordenes -> Speed empty .

    BRACKET2        reduce using rule 60 (ordenes -> Speed empty .)


state 279

    (61) ordenes -> Pos empty .

    BRACKET2        reduce using rule 61 (ordenes -> Pos empty .)


state 280

    (62) ordenes -> PosX empty .

    BRACKET2        reduce using rule 62 (ordenes -> PosX empty .)


state 281

    (63) ordenes -> PosY empty .

    BRACKET2        reduce using rule 63 (ordenes -> PosY empty .)


state 282

    (64) ordenes -> UseColor empty .

    BRACKET2        reduce using rule 64 (ordenes -> UseColor empty .)


state 283

    (200) Beginning -> BEGINNING PUNTOCOMA .

    BRACKET2        reduce using rule 200 (Beginning -> BEGINNING PUNTOCOMA .)


state 284

    (202) ContinueUp -> CONTINUEUP NUMERO . PUNTOCOMA
    (90) expresion_alge1 -> NUMERO . SUMA NUMERO
    (91) expresion_alge1 -> NUMERO . RESTA NUMERO
    (92) expresion_alge1 -> NUMERO . MULTI NUMERO
    (93) expresion_alge1 -> NUMERO . DIVISION NUMERO
    (94) expresion_alge1 -> NUMERO . EXPONENTE NUMERO

    PUNTOCOMA       shift and go to state 386
    SUMA            shift and go to state 126
    RESTA           shift and go to state 127
    MULTI           shift and go to state 128
    DIVISION        shift and go to state 129
    EXPONENTE       shift and go to state 130


state 285

    (203) ContinueUp -> CONTINUEUP expresion_alge1 . PUNTOCOMA

    PUNTOCOMA       shift and go to state 387


state 286

    (204) ContinueUp -> CONTINUEUP expresion_alge2 . PUNTOCOMA

    PUNTOCOMA       shift and go to state 388


state 287

    (205) ContinueUp -> CONTINUEUP Var . PUNTOCOMA

    PUNTOCOMA       shift and go to state 389


state 288

    (206) ContinueDown -> CONTINUEDOWN NUMERO . PUNTOCOMA
    (90) expresion_alge1 -> NUMERO . SUMA NUMERO
    (91) expresion_alge1 -> NUMERO . RESTA NUMERO
    (92) expresion_alge1 -> NUMERO . MULTI NUMERO
    (93) expresion_alge1 -> NUMERO . DIVISION NUMERO
    (94) expresion_alge1 -> NUMERO . EXPONENTE NUMERO

    PUNTOCOMA       shift and go to state 390
    SUMA            shift and go to state 126
    RESTA           shift and go to state 127
    MULTI           shift and go to state 128
    DIVISION        shift and go to state 129
    EXPONENTE       shift and go to state 130


state 289

    (207) ContinueDown -> CONTINUEDOWN expresion_alge1 . PUNTOCOMA

    PUNTOCOMA       shift and go to state 391


state 290

    (208) ContinueDown -> CONTINUEDOWN expresion_alge2 . PUNTOCOMA

    PUNTOCOMA       shift and go to state 392


state 291

    (209) ContinueDown -> CONTINUEDOWN Var . PUNTOCOMA

    PUNTOCOMA       shift and go to state 393


state 292

    (210) ContinueRight -> CONTINUERIGHT NUMERO . PUNTOCOMA
    (90) expresion_alge1 -> NUMERO . SUMA NUMERO
    (91) expresion_alge1 -> NUMERO . RESTA NUMERO
    (92) expresion_alge1 -> NUMERO . MULTI NUMERO
    (93) expresion_alge1 -> NUMERO . DIVISION NUMERO
    (94) expresion_alge1 -> NUMERO . EXPONENTE NUMERO

    PUNTOCOMA       shift and go to state 394
    SUMA            shift and go to state 126
    RESTA           shift and go to state 127
    MULTI           shift and go to state 128
    DIVISION        shift and go to state 129
    EXPONENTE       shift and go to state 130


state 293

    (211) ContinueRight -> CONTINUERIGHT expresion_alge1 . PUNTOCOMA

    PUNTOCOMA       shift and go to state 395


state 294

    (212) ContinueRight -> CONTINUERIGHT expresion_alge2 . PUNTOCOMA

    PUNTOCOMA       shift and go to state 396


state 295

    (213) ContinueRight -> CONTINUERIGHT Var . PUNTOCOMA

    PUNTOCOMA       shift and go to state 397


state 296

    (214) ContinueLeft -> CONTINUELEFT NUMERO . PUNTOCOMA
    (90) expresion_alge1 -> NUMERO . SUMA NUMERO
    (91) expresion_alge1 -> NUMERO . RESTA NUMERO
    (92) expresion_alge1 -> NUMERO . MULTI NUMERO
    (93) expresion_alge1 -> NUMERO . DIVISION NUMERO
    (94) expresion_alge1 -> NUMERO . EXPONENTE NUMERO

    PUNTOCOMA       shift and go to state 398
    SUMA            shift and go to state 126
    RESTA           shift and go to state 127
    MULTI           shift and go to state 128
    DIVISION        shift and go to state 129
    EXPONENTE       shift and go to state 130


state 297

    (215) ContinueLeft -> CONTINUELEFT expresion_alge1 . PUNTOCOMA

    PUNTOCOMA       shift and go to state 399


state 298

    (216) ContinueLeft -> CONTINUELEFT expresion_alge2 . PUNTOCOMA

    PUNTOCOMA       shift and go to state 400


state 299

    (217) ContinueLeft -> CONTINUELEFT Var . PUNTOCOMA

    PUNTOCOMA       shift and go to state 401


state 300

    (218) Up -> UP PUNTOCOMA .

    BRACKET2        reduce using rule 218 (Up -> UP PUNTOCOMA .)


state 301

    (219) Down -> DOWN PUNTOCOMA .

    BRACKET2        reduce using rule 219 (Down -> DOWN PUNTOCOMA .)


state 302

    (220) Speed -> SPEED NUMERO . PUNTOCOMA

    PUNTOCOMA       shift and go to state 402


state 303

    (221) Pos -> POS ABRE_P . NUMERO COMA NUMERO CIERRA_P PUNTOCOMA
    (222) Pos -> POS ABRE_P . expresion_alge1 COMA NUMERO CIERRA_P PUNTOCOMA
    (223) Pos -> POS ABRE_P . NUMERO COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (224) Pos -> POS ABRE_P . expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (225) Pos -> POS ABRE_P . Var COMA NUMERO CIERRA_P PUNTOCOMA
    (226) Pos -> POS ABRE_P . NUMERO COMA Var CIERRA_P PUNTOCOMA
    (227) Pos -> POS ABRE_P . Var COMA Var CIERRA_P PUNTOCOMA
    (228) Pos -> POS ABRE_P . expresion_alge1 COMA Var CIERRA_P PUNTOCOMA
    (229) Pos -> POS ABRE_P . Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (90) expresion_alge1 -> . NUMERO SUMA NUMERO
    (91) expresion_alge1 -> . NUMERO RESTA NUMERO
    (92) expresion_alge1 -> . NUMERO MULTI NUMERO
    (93) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (94) expresion_alge1 -> . NUMERO EXPONENTE NUMERO
    (136) Var -> . VAR

    NUMERO          shift and go to state 403
    VAR             shift and go to state 34

    expresion_alge1                shift and go to state 404
    Var                            shift and go to state 405

state 304

    (230) PosX -> POSX NUMERO . PUNTOCOMA
    (90) expresion_alge1 -> NUMERO . SUMA NUMERO
    (91) expresion_alge1 -> NUMERO . RESTA NUMERO
    (92) expresion_alge1 -> NUMERO . MULTI NUMERO
    (93) expresion_alge1 -> NUMERO . DIVISION NUMERO
    (94) expresion_alge1 -> NUMERO . EXPONENTE NUMERO

    PUNTOCOMA       shift and go to state 406
    SUMA            shift and go to state 126
    RESTA           shift and go to state 127
    MULTI           shift and go to state 128
    DIVISION        shift and go to state 129
    EXPONENTE       shift and go to state 130


state 305

    (231) PosX -> POSX expresion_alge1 . PUNTOCOMA

    PUNTOCOMA       shift and go to state 407


state 306

    (232) PosX -> POSX expresion_alge2 . PUNTOCOMA

    PUNTOCOMA       shift and go to state 408


state 307

    (233) PosX -> POSX Var . PUNTOCOMA

    PUNTOCOMA       shift and go to state 409


state 308

    (234) PosY -> POSY NUMERO . PUNTOCOMA
    (90) expresion_alge1 -> NUMERO . SUMA NUMERO
    (91) expresion_alge1 -> NUMERO . RESTA NUMERO
    (92) expresion_alge1 -> NUMERO . MULTI NUMERO
    (93) expresion_alge1 -> NUMERO . DIVISION NUMERO
    (94) expresion_alge1 -> NUMERO . EXPONENTE NUMERO

    PUNTOCOMA       shift and go to state 410
    SUMA            shift and go to state 126
    RESTA           shift and go to state 127
    MULTI           shift and go to state 128
    DIVISION        shift and go to state 129
    EXPONENTE       shift and go to state 130


state 309

    (235) PosY -> POSY expresion_alge1 . PUNTOCOMA

    PUNTOCOMA       shift and go to state 411


state 310

    (236) PosY -> POSY expresion_alge2 . PUNTOCOMA

    PUNTOCOMA       shift and go to state 412


state 311

    (237) PosY -> POSY Var . PUNTOCOMA

    PUNTOCOMA       shift and go to state 413


state 312

    (238) UseColor -> USECOLOR NUMERO . PUNTOCOMA

    PUNTOCOMA       shift and go to state 414


state 313

    (239) UseColor -> USECOLOR Var . PUNTOCOMA

    PUNTOCOMA       shift and go to state 415


state 314

    (240) UseColor -> USECOLOR empty . PUNTOCOMA

    PUNTOCOMA       shift and go to state 416


state 315

    (187) If -> IF ABRE_P condicion CIERRA_P . BRACKET1 funcion BRACKET2

    BRACKET1        shift and go to state 417


state 316

    (137) Equal -> EQUAL ABRE_P . NUMERO COMA NUMERO CIERRA_P PUNTOCOMA
    (138) Equal -> EQUAL ABRE_P . expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (139) Equal -> EQUAL ABRE_P . expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (140) Equal -> EQUAL ABRE_P . Var COMA Var CIERRA_P PUNTOCOMA
    (141) Equal -> EQUAL ABRE_P . NUMERO COMA Var CIERRA_P PUNTOCOMA
    (142) Equal -> EQUAL ABRE_P . expresion_alge2 COMA Var CIERRA_P PUNTOCOMA
    (143) Equal -> EQUAL ABRE_P . expresion_alge1 COMA Var CIERRA_P PUNTOCOMA
    (144) Equal -> EQUAL ABRE_P . Var COMA NUMERO CIERRA_P PUNTOCOMA
    (145) Equal -> EQUAL ABRE_P . Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (146) Equal -> EQUAL ABRE_P . Var COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (147) Equal -> EQUAL ABRE_P . expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (148) Equal -> EQUAL ABRE_P . expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (149) Equal -> EQUAL ABRE_P . expresion_alge1 COMA NUMERO CIERRA_P PUNTOCOMA
    (150) Equal -> EQUAL ABRE_P . expresion_alge2 COMA NUMERO CIERRA_P PUNTOCOMA
    (151) Equal -> EQUAL ABRE_P . NUMERO COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (152) Equal -> EQUAL ABRE_P . NUMERO COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (90) expresion_alge1 -> . NUMERO SUMA NUMERO
    (91) expresion_alge1 -> . NUMERO RESTA NUMERO
    (92) expresion_alge1 -> . NUMERO MULTI NUMERO
    (93) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (94) expresion_alge1 -> . NUMERO EXPONENTE NUMERO
    (95) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (96) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (97) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (98) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (99) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P EXPONENTE ABRE_P expresion_alge1 CIERRA_P
    (136) Var -> . VAR

    NUMERO          shift and go to state 418
    ABRE_P          shift and go to state 63
    VAR             shift and go to state 34

    expresion_alge1                shift and go to state 419
    expresion_alge2                shift and go to state 420
    Var                            shift and go to state 421

state 317

    (153) Greater -> GREATER ABRE_P . NUMERO COMA NUMERO CIERRA_P PUNTOCOMA
    (154) Greater -> GREATER ABRE_P . expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (155) Greater -> GREATER ABRE_P . expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (156) Greater -> GREATER ABRE_P . Var COMA Var CIERRA_P PUNTOCOMA
    (157) Greater -> GREATER ABRE_P . NUMERO COMA Var CIERRA_P PUNTOCOMA
    (158) Greater -> GREATER ABRE_P . expresion_alge2 COMA Var CIERRA_P PUNTOCOMA
    (159) Greater -> GREATER ABRE_P . expresion_alge1 COMA Var CIERRA_P PUNTOCOMA
    (160) Greater -> GREATER ABRE_P . Var COMA NUMERO CIERRA_P PUNTOCOMA
    (161) Greater -> GREATER ABRE_P . Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (162) Greater -> GREATER ABRE_P . Var COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (163) Greater -> GREATER ABRE_P . expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (164) Greater -> GREATER ABRE_P . expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (165) Greater -> GREATER ABRE_P . expresion_alge1 COMA NUMERO CIERRA_P PUNTOCOMA
    (166) Greater -> GREATER ABRE_P . expresion_alge2 COMA NUMERO CIERRA_P PUNTOCOMA
    (167) Greater -> GREATER ABRE_P . NUMERO COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (168) Greater -> GREATER ABRE_P . NUMERO COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (90) expresion_alge1 -> . NUMERO SUMA NUMERO
    (91) expresion_alge1 -> . NUMERO RESTA NUMERO
    (92) expresion_alge1 -> . NUMERO MULTI NUMERO
    (93) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (94) expresion_alge1 -> . NUMERO EXPONENTE NUMERO
    (95) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (96) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (97) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (98) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (99) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P EXPONENTE ABRE_P expresion_alge1 CIERRA_P
    (136) Var -> . VAR

    NUMERO          shift and go to state 422
    ABRE_P          shift and go to state 63
    VAR             shift and go to state 34

    expresion_alge1                shift and go to state 423
    expresion_alge2                shift and go to state 424
    Var                            shift and go to state 425

state 318

    (169) Smaller -> SMALLER ABRE_P . NUMERO COMA NUMERO CIERRA_P PUNTOCOMA
    (170) Smaller -> SMALLER ABRE_P . expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (171) Smaller -> SMALLER ABRE_P . expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (172) Smaller -> SMALLER ABRE_P . Var COMA Var CIERRA_P PUNTOCOMA
    (173) Smaller -> SMALLER ABRE_P . NUMERO COMA Var CIERRA_P PUNTOCOMA
    (174) Smaller -> SMALLER ABRE_P . expresion_alge2 COMA Var CIERRA_P PUNTOCOMA
    (175) Smaller -> SMALLER ABRE_P . expresion_alge1 COMA Var CIERRA_P PUNTOCOMA
    (176) Smaller -> SMALLER ABRE_P . Var COMA NUMERO CIERRA_P PUNTOCOMA
    (177) Smaller -> SMALLER ABRE_P . Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (178) Smaller -> SMALLER ABRE_P . Var COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (179) Smaller -> SMALLER ABRE_P . expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (180) Smaller -> SMALLER ABRE_P . expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (181) Smaller -> SMALLER ABRE_P . expresion_alge1 COMA NUMERO CIERRA_P PUNTOCOMA
    (182) Smaller -> SMALLER ABRE_P . expresion_alge2 COMA NUMERO CIERRA_P PUNTOCOMA
    (183) Smaller -> SMALLER ABRE_P . NUMERO COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (184) Smaller -> SMALLER ABRE_P . NUMERO COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (90) expresion_alge1 -> . NUMERO SUMA NUMERO
    (91) expresion_alge1 -> . NUMERO RESTA NUMERO
    (92) expresion_alge1 -> . NUMERO MULTI NUMERO
    (93) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (94) expresion_alge1 -> . NUMERO EXPONENTE NUMERO
    (95) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (96) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (97) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (98) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (99) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P EXPONENTE ABRE_P expresion_alge1 CIERRA_P
    (136) Var -> . VAR

    NUMERO          shift and go to state 426
    ABRE_P          shift and go to state 63
    VAR             shift and go to state 34

    expresion_alge1                shift and go to state 427
    expresion_alge2                shift and go to state 428
    Var                            shift and go to state 429

state 319

    (188) IfElse -> IFELSE ABRE_P condicion CIERRA_P . BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2

    BRACKET1        shift and go to state 430


state 320

    (190) Repeat -> REPEAT NUMERO BRACKET1 ordenes . BRACKET2

    BRACKET2        shift and go to state 431


state 321

    (191) Until -> UNTIL BRACKET1 funcion BRACKET2 . BRACKET1 condicion BRACKET2

    BRACKET1        shift and go to state 432


state 322

    (189) While -> WHILE BRACKET1 condicion BRACKET2 . BRACKET1 funcion BRACKET2

    BRACKET1        shift and go to state 433


state 323

    (248) PrintLine -> PRINTLINE ABRE_P exp CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 434


state 324

    (242) exp -> NUMERO COMA . exp
    (242) exp -> . NUMERO COMA exp
    (243) exp -> . STRING COMA exp
    (244) exp -> . Var COMA exp
    (245) exp -> . NUMERO empty empty
    (246) exp -> . STRING empty empty
    (247) exp -> . Var empty empty
    (136) Var -> . VAR

    NUMERO          shift and go to state 230
    STRING          shift and go to state 231
    VAR             shift and go to state 34

    exp                            shift and go to state 435
    Var                            shift and go to state 232

state 325

    (245) exp -> NUMERO empty . empty
    (249) empty -> .

    CIERRA_P        reduce using rule 249 (empty -> .)

    empty                          shift and go to state 436

state 326

    (243) exp -> STRING COMA . exp
    (242) exp -> . NUMERO COMA exp
    (243) exp -> . STRING COMA exp
    (244) exp -> . Var COMA exp
    (245) exp -> . NUMERO empty empty
    (246) exp -> . STRING empty empty
    (247) exp -> . Var empty empty
    (136) Var -> . VAR

    NUMERO          shift and go to state 230
    STRING          shift and go to state 231
    VAR             shift and go to state 34

    exp                            shift and go to state 437
    Var                            shift and go to state 232

state 327

    (246) exp -> STRING empty . empty
    (249) empty -> .

    CIERRA_P        reduce using rule 249 (empty -> .)

    empty                          shift and go to state 438

state 328

    (244) exp -> Var COMA . exp
    (242) exp -> . NUMERO COMA exp
    (243) exp -> . STRING COMA exp
    (244) exp -> . Var COMA exp
    (245) exp -> . NUMERO empty empty
    (246) exp -> . STRING empty empty
    (247) exp -> . Var empty empty
    (136) Var -> . VAR

    NUMERO          shift and go to state 230
    STRING          shift and go to state 231
    VAR             shift and go to state 34

    Var                            shift and go to state 232
    exp                            shift and go to state 439

state 329

    (247) exp -> Var empty . empty
    (249) empty -> .

    CIERRA_P        reduce using rule 249 (empty -> .)

    empty                          shift and go to state 440

state 330

    (185) And -> AND ABRE_P expresion COMA . expresion CIERRA_P PUNTOCOMA
    (38) expresion -> . funcion expresion
    (39) expresion -> . expresion_alge1 expresion
    (40) expresion -> . expresion_alge2 expresion
    (41) expresion -> . Sum expresion
    (42) expresion -> . Substr expresion
    (43) expresion -> . Mult expresion
    (44) expresion -> . Div expresion
    (45) expresion -> . funcion empty
    (46) expresion -> . expresion_alge1 empty
    (47) expresion -> . expresion_alge2 empty
    (48) expresion -> . Sum empty
    (49) expresion -> . Substr empty
    (50) expresion -> . Mult empty
    (51) expresion -> . Div empty
    (52) expresion -> . empty empty
    (67) funcion -> . Random empty
    (68) funcion -> . Run empty
    (69) funcion -> . If empty
    (70) funcion -> . IfElse empty
    (71) funcion -> . Repeat empty
    (72) funcion -> . Until empty
    (73) funcion -> . While empty
    (74) funcion -> . PrintLine empty
    (75) funcion -> . And empty
    (76) funcion -> . Or empty
    (77) funcion -> . Add empty
    (78) funcion -> . Put2 empty
    (79) funcion -> . Put empty
    (80) funcion -> . PUNTOCOMA funcion
    (81) funcion -> . empty empty
    (90) expresion_alge1 -> . NUMERO SUMA NUMERO
    (91) expresion_alge1 -> . NUMERO RESTA NUMERO
    (92) expresion_alge1 -> . NUMERO MULTI NUMERO
    (93) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (94) expresion_alge1 -> . NUMERO EXPONENTE NUMERO
    (95) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (96) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (97) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (98) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (99) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P EXPONENTE ABRE_P expresion_alge1 CIERRA_P
    (100) Sum -> . SUM ABRE_P NUMERO COMA NUMERO CIERRA_P
    (101) Sum -> . SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (102) Sum -> . SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (103) Sum -> . SUM ABRE_P NUMERO COMA Var CIERRA_P
    (104) Sum -> . SUM ABRE_P Var COMA NUMERO CIERRA_P
    (105) Sum -> . SUM ABRE_P Var COMA Var CIERRA_P
    (106) Sum -> . SUM ABRE_P expresion_alge1 COMA Var CIERRA_P
    (107) Sum -> . SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (108) Sum -> . SUM ABRE_P Var COMA expresion_alge1 CIERRA_P
    (109) Substr -> . SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P
    (110) Substr -> . SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (111) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (112) Substr -> . SUBSTR ABRE_P NUMERO COMA Var CIERRA_P
    (113) Substr -> . SUBSTR ABRE_P Var COMA NUMERO CIERRA_P
    (114) Substr -> . SUBSTR ABRE_P Var COMA Var CIERRA_P
    (115) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P
    (116) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (117) Substr -> . SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P
    (118) Mult -> . MULTI ABRE_P NUMERO COMA NUMERO CIERRA_P
    (119) Mult -> . MULTI ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (120) Mult -> . MULTI ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (121) Mult -> . MULTI ABRE_P NUMERO COMA Var CIERRA_P
    (122) Mult -> . MULTI ABRE_P Var COMA NUMERO CIERRA_P
    (123) Mult -> . MULTI ABRE_P Var COMA Var CIERRA_P
    (124) Mult -> . MULTI ABRE_P expresion_alge1 COMA Var CIERRA_P
    (125) Mult -> . MULTI ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (126) Mult -> . MULTI ABRE_P Var COMA expresion_alge1 CIERRA_P
    (127) Div -> . DIV ABRE_P NUMERO COMA NUMERO CIERRA_P
    (128) Div -> . DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (129) Div -> . DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (130) Div -> . DIV ABRE_P NUMERO COMA Var CIERRA_P
    (131) Div -> . DIV ABRE_P Var COMA NUMERO CIERRA_P
    (132) Div -> . DIV ABRE_P Var COMA Var CIERRA_P
    (133) Div -> . DIV ABRE_P expresion_alge1 COMA Var CIERRA_P
    (134) Div -> . DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (135) Div -> . DIV ABRE_P Var COMA expresion_alge1 CIERRA_P
    (249) empty -> .
    (201) Random -> . RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA
    (241) Run -> . RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA
    (187) If -> . IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2
    (188) IfElse -> . IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2
    (190) Repeat -> . REPEAT NUMERO BRACKET1 ordenes BRACKET2
    (191) Until -> . UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2
    (189) While -> . WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2
    (248) PrintLine -> . PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA
    (185) And -> . AND ABRE_P expresion COMA expresion CIERRA_P PUNTOCOMA
    (186) Or -> . OR ABRE_P expresion COMA expresion CIERRA_P PUNTOCOMA
    (192) Add -> . ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA
    (193) Add -> . ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (194) Add -> . ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (195) Add -> . ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (196) Add -> . ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (83) Put2 -> . PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (84) Put2 -> . PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (85) Put2 -> . PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (86) Put2 -> . PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA
    (82) Put -> . PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA

  ! shift/reduce conflict for PUNTOCOMA resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for ABRE_P resolved as shift
  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for SUBSTR resolved as shift
  ! shift/reduce conflict for MULTI resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for RANDOM resolved as shift
  ! shift/reduce conflict for RUN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for IFELSE resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for PRINTLINE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for PUT resolved as shift
    PUNTOCOMA       shift and go to state 62
    NUMERO          shift and go to state 64
    ABRE_P          shift and go to state 63
    SUM             shift and go to state 67
    SUBSTR          shift and go to state 68
    MULTI           shift and go to state 65
    DIV             shift and go to state 66
    CIERRA_P        reduce using rule 249 (empty -> .)
    RANDOM          shift and go to state 69
    RUN             shift and go to state 70
    IF              shift and go to state 71
    IFELSE          shift and go to state 72
    REPEAT          shift and go to state 73
    UNTIL           shift and go to state 74
    WHILE           shift and go to state 75
    PRINTLINE       shift and go to state 76
    AND             shift and go to state 77
    OR              shift and go to state 78
    ADD             shift and go to state 79
    PUT             shift and go to state 94

  ! PUNTOCOMA       [ reduce using rule 249 (empty -> .) ]
  ! NUMERO          [ reduce using rule 249 (empty -> .) ]
  ! ABRE_P          [ reduce using rule 249 (empty -> .) ]
  ! SUM             [ reduce using rule 249 (empty -> .) ]
  ! SUBSTR          [ reduce using rule 249 (empty -> .) ]
  ! MULTI           [ reduce using rule 249 (empty -> .) ]
  ! DIV             [ reduce using rule 249 (empty -> .) ]
  ! RANDOM          [ reduce using rule 249 (empty -> .) ]
  ! RUN             [ reduce using rule 249 (empty -> .) ]
  ! IF              [ reduce using rule 249 (empty -> .) ]
  ! IFELSE          [ reduce using rule 249 (empty -> .) ]
  ! REPEAT          [ reduce using rule 249 (empty -> .) ]
  ! UNTIL           [ reduce using rule 249 (empty -> .) ]
  ! WHILE           [ reduce using rule 249 (empty -> .) ]
  ! PRINTLINE       [ reduce using rule 249 (empty -> .) ]
  ! AND             [ reduce using rule 249 (empty -> .) ]
  ! OR              [ reduce using rule 249 (empty -> .) ]
  ! ADD             [ reduce using rule 249 (empty -> .) ]
  ! PUT             [ reduce using rule 249 (empty -> .) ]

    expresion                      shift and go to state 441
    funcion                        shift and go to state 89
    expresion_alge1                shift and go to state 45
    expresion_alge2                shift and go to state 46
    Sum                            shift and go to state 47
    Substr                         shift and go to state 48
    Mult                           shift and go to state 49
    Div                            shift and go to state 50
    empty                          shift and go to state 234
    Random                         shift and go to state 51
    Run                            shift and go to state 52
    If                             shift and go to state 53
    IfElse                         shift and go to state 54
    Repeat                         shift and go to state 55
    Until                          shift and go to state 56
    While                          shift and go to state 57
    PrintLine                      shift and go to state 58
    And                            shift and go to state 59
    Or                             shift and go to state 60
    Add                            shift and go to state 61
    Put2                           shift and go to state 92
    Put                            shift and go to state 93

state 331

    (186) Or -> OR ABRE_P expresion COMA . expresion CIERRA_P PUNTOCOMA
    (38) expresion -> . funcion expresion
    (39) expresion -> . expresion_alge1 expresion
    (40) expresion -> . expresion_alge2 expresion
    (41) expresion -> . Sum expresion
    (42) expresion -> . Substr expresion
    (43) expresion -> . Mult expresion
    (44) expresion -> . Div expresion
    (45) expresion -> . funcion empty
    (46) expresion -> . expresion_alge1 empty
    (47) expresion -> . expresion_alge2 empty
    (48) expresion -> . Sum empty
    (49) expresion -> . Substr empty
    (50) expresion -> . Mult empty
    (51) expresion -> . Div empty
    (52) expresion -> . empty empty
    (67) funcion -> . Random empty
    (68) funcion -> . Run empty
    (69) funcion -> . If empty
    (70) funcion -> . IfElse empty
    (71) funcion -> . Repeat empty
    (72) funcion -> . Until empty
    (73) funcion -> . While empty
    (74) funcion -> . PrintLine empty
    (75) funcion -> . And empty
    (76) funcion -> . Or empty
    (77) funcion -> . Add empty
    (78) funcion -> . Put2 empty
    (79) funcion -> . Put empty
    (80) funcion -> . PUNTOCOMA funcion
    (81) funcion -> . empty empty
    (90) expresion_alge1 -> . NUMERO SUMA NUMERO
    (91) expresion_alge1 -> . NUMERO RESTA NUMERO
    (92) expresion_alge1 -> . NUMERO MULTI NUMERO
    (93) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (94) expresion_alge1 -> . NUMERO EXPONENTE NUMERO
    (95) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (96) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (97) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (98) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (99) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P EXPONENTE ABRE_P expresion_alge1 CIERRA_P
    (100) Sum -> . SUM ABRE_P NUMERO COMA NUMERO CIERRA_P
    (101) Sum -> . SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (102) Sum -> . SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (103) Sum -> . SUM ABRE_P NUMERO COMA Var CIERRA_P
    (104) Sum -> . SUM ABRE_P Var COMA NUMERO CIERRA_P
    (105) Sum -> . SUM ABRE_P Var COMA Var CIERRA_P
    (106) Sum -> . SUM ABRE_P expresion_alge1 COMA Var CIERRA_P
    (107) Sum -> . SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (108) Sum -> . SUM ABRE_P Var COMA expresion_alge1 CIERRA_P
    (109) Substr -> . SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P
    (110) Substr -> . SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (111) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (112) Substr -> . SUBSTR ABRE_P NUMERO COMA Var CIERRA_P
    (113) Substr -> . SUBSTR ABRE_P Var COMA NUMERO CIERRA_P
    (114) Substr -> . SUBSTR ABRE_P Var COMA Var CIERRA_P
    (115) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P
    (116) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (117) Substr -> . SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P
    (118) Mult -> . MULTI ABRE_P NUMERO COMA NUMERO CIERRA_P
    (119) Mult -> . MULTI ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (120) Mult -> . MULTI ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (121) Mult -> . MULTI ABRE_P NUMERO COMA Var CIERRA_P
    (122) Mult -> . MULTI ABRE_P Var COMA NUMERO CIERRA_P
    (123) Mult -> . MULTI ABRE_P Var COMA Var CIERRA_P
    (124) Mult -> . MULTI ABRE_P expresion_alge1 COMA Var CIERRA_P
    (125) Mult -> . MULTI ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (126) Mult -> . MULTI ABRE_P Var COMA expresion_alge1 CIERRA_P
    (127) Div -> . DIV ABRE_P NUMERO COMA NUMERO CIERRA_P
    (128) Div -> . DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (129) Div -> . DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (130) Div -> . DIV ABRE_P NUMERO COMA Var CIERRA_P
    (131) Div -> . DIV ABRE_P Var COMA NUMERO CIERRA_P
    (132) Div -> . DIV ABRE_P Var COMA Var CIERRA_P
    (133) Div -> . DIV ABRE_P expresion_alge1 COMA Var CIERRA_P
    (134) Div -> . DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (135) Div -> . DIV ABRE_P Var COMA expresion_alge1 CIERRA_P
    (249) empty -> .
    (201) Random -> . RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA
    (241) Run -> . RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA
    (187) If -> . IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2
    (188) IfElse -> . IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2
    (190) Repeat -> . REPEAT NUMERO BRACKET1 ordenes BRACKET2
    (191) Until -> . UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2
    (189) While -> . WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2
    (248) PrintLine -> . PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA
    (185) And -> . AND ABRE_P expresion COMA expresion CIERRA_P PUNTOCOMA
    (186) Or -> . OR ABRE_P expresion COMA expresion CIERRA_P PUNTOCOMA
    (192) Add -> . ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA
    (193) Add -> . ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (194) Add -> . ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (195) Add -> . ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (196) Add -> . ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (83) Put2 -> . PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (84) Put2 -> . PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (85) Put2 -> . PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (86) Put2 -> . PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA
    (82) Put -> . PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA

  ! shift/reduce conflict for PUNTOCOMA resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for ABRE_P resolved as shift
  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for SUBSTR resolved as shift
  ! shift/reduce conflict for MULTI resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for RANDOM resolved as shift
  ! shift/reduce conflict for RUN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for IFELSE resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for PRINTLINE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for PUT resolved as shift
    PUNTOCOMA       shift and go to state 62
    NUMERO          shift and go to state 64
    ABRE_P          shift and go to state 63
    SUM             shift and go to state 67
    SUBSTR          shift and go to state 68
    MULTI           shift and go to state 65
    DIV             shift and go to state 66
    CIERRA_P        reduce using rule 249 (empty -> .)
    RANDOM          shift and go to state 69
    RUN             shift and go to state 70
    IF              shift and go to state 71
    IFELSE          shift and go to state 72
    REPEAT          shift and go to state 73
    UNTIL           shift and go to state 74
    WHILE           shift and go to state 75
    PRINTLINE       shift and go to state 76
    AND             shift and go to state 77
    OR              shift and go to state 78
    ADD             shift and go to state 79
    PUT             shift and go to state 94

  ! PUNTOCOMA       [ reduce using rule 249 (empty -> .) ]
  ! NUMERO          [ reduce using rule 249 (empty -> .) ]
  ! ABRE_P          [ reduce using rule 249 (empty -> .) ]
  ! SUM             [ reduce using rule 249 (empty -> .) ]
  ! SUBSTR          [ reduce using rule 249 (empty -> .) ]
  ! MULTI           [ reduce using rule 249 (empty -> .) ]
  ! DIV             [ reduce using rule 249 (empty -> .) ]
  ! RANDOM          [ reduce using rule 249 (empty -> .) ]
  ! RUN             [ reduce using rule 249 (empty -> .) ]
  ! IF              [ reduce using rule 249 (empty -> .) ]
  ! IFELSE          [ reduce using rule 249 (empty -> .) ]
  ! REPEAT          [ reduce using rule 249 (empty -> .) ]
  ! UNTIL           [ reduce using rule 249 (empty -> .) ]
  ! WHILE           [ reduce using rule 249 (empty -> .) ]
  ! PRINTLINE       [ reduce using rule 249 (empty -> .) ]
  ! AND             [ reduce using rule 249 (empty -> .) ]
  ! OR              [ reduce using rule 249 (empty -> .) ]
  ! ADD             [ reduce using rule 249 (empty -> .) ]
  ! PUT             [ reduce using rule 249 (empty -> .) ]

    expresion                      shift and go to state 442
    funcion                        shift and go to state 89
    expresion_alge1                shift and go to state 45
    expresion_alge2                shift and go to state 46
    Sum                            shift and go to state 47
    Substr                         shift and go to state 48
    Mult                           shift and go to state 49
    Div                            shift and go to state 50
    empty                          shift and go to state 234
    Random                         shift and go to state 51
    Run                            shift and go to state 52
    If                             shift and go to state 53
    IfElse                         shift and go to state 54
    Repeat                         shift and go to state 55
    Until                          shift and go to state 56
    While                          shift and go to state 57
    PrintLine                      shift and go to state 58
    And                            shift and go to state 59
    Or                             shift and go to state 60
    Add                            shift and go to state 61
    Put2                           shift and go to state 92
    Put                            shift and go to state 93

state 332

    (192) Add -> ADD ABRE_P Var empty . empty CIERRA_P PUNTOCOMA
    (249) empty -> .

    CIERRA_P        reduce using rule 249 (empty -> .)

    empty                          shift and go to state 443

state 333

    (193) Add -> ADD ABRE_P Var COMA . NUMERO CIERRA_P PUNTOCOMA
    (194) Add -> ADD ABRE_P Var COMA . expresion_alge1 CIERRA_P PUNTOCOMA
    (195) Add -> ADD ABRE_P Var COMA . Var CIERRA_P PUNTOCOMA
    (196) Add -> ADD ABRE_P Var COMA . expresion_alge2 CIERRA_P PUNTOCOMA
    (90) expresion_alge1 -> . NUMERO SUMA NUMERO
    (91) expresion_alge1 -> . NUMERO RESTA NUMERO
    (92) expresion_alge1 -> . NUMERO MULTI NUMERO
    (93) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (94) expresion_alge1 -> . NUMERO EXPONENTE NUMERO
    (136) Var -> . VAR
    (95) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (96) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (97) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (98) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (99) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P EXPONENTE ABRE_P expresion_alge1 CIERRA_P

    NUMERO          shift and go to state 445
    VAR             shift and go to state 34
    ABRE_P          shift and go to state 63

    Var                            shift and go to state 444
    expresion_alge1                shift and go to state 446
    expresion_alge2                shift and go to state 447

state 334

    (82) Put -> PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA .

    $end            reduce using rule 82 (Put -> PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA .)
    FIN             reduce using rule 82 (Put -> PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA .)
    PUNTOCOMA       reduce using rule 82 (Put -> PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA .)
    NUMERO          reduce using rule 82 (Put -> PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA .)
    ABRE_P          reduce using rule 82 (Put -> PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA .)
    SUM             reduce using rule 82 (Put -> PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA .)
    SUBSTR          reduce using rule 82 (Put -> PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA .)
    MULTI           reduce using rule 82 (Put -> PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA .)
    DIV             reduce using rule 82 (Put -> PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA .)
    RANDOM          reduce using rule 82 (Put -> PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA .)
    RUN             reduce using rule 82 (Put -> PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA .)
    IF              reduce using rule 82 (Put -> PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA .)
    IFELSE          reduce using rule 82 (Put -> PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA .)
    REPEAT          reduce using rule 82 (Put -> PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA .)
    UNTIL           reduce using rule 82 (Put -> PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA .)
    WHILE           reduce using rule 82 (Put -> PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA .)
    PRINTLINE       reduce using rule 82 (Put -> PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA .)
    AND             reduce using rule 82 (Put -> PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA .)
    OR              reduce using rule 82 (Put -> PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA .)
    ADD             reduce using rule 82 (Put -> PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA .)
    PUT             reduce using rule 82 (Put -> PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA .)
    COMA            reduce using rule 82 (Put -> PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA .)
    CIERRA_P        reduce using rule 82 (Put -> PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 82 (Put -> PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA .)


state 335

    (83) Put2 -> PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA .

    $end            reduce using rule 83 (Put2 -> PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA .)
    FIN             reduce using rule 83 (Put2 -> PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA .)
    PUNTOCOMA       reduce using rule 83 (Put2 -> PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA .)
    NUMERO          reduce using rule 83 (Put2 -> PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA .)
    ABRE_P          reduce using rule 83 (Put2 -> PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA .)
    SUM             reduce using rule 83 (Put2 -> PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA .)
    SUBSTR          reduce using rule 83 (Put2 -> PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA .)
    MULTI           reduce using rule 83 (Put2 -> PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA .)
    DIV             reduce using rule 83 (Put2 -> PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA .)
    RANDOM          reduce using rule 83 (Put2 -> PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA .)
    RUN             reduce using rule 83 (Put2 -> PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA .)
    IF              reduce using rule 83 (Put2 -> PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA .)
    IFELSE          reduce using rule 83 (Put2 -> PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA .)
    REPEAT          reduce using rule 83 (Put2 -> PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA .)
    UNTIL           reduce using rule 83 (Put2 -> PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA .)
    WHILE           reduce using rule 83 (Put2 -> PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA .)
    PRINTLINE       reduce using rule 83 (Put2 -> PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA .)
    AND             reduce using rule 83 (Put2 -> PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA .)
    OR              reduce using rule 83 (Put2 -> PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA .)
    ADD             reduce using rule 83 (Put2 -> PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA .)
    PUT             reduce using rule 83 (Put2 -> PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA .)
    COMA            reduce using rule 83 (Put2 -> PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA .)
    CIERRA_P        reduce using rule 83 (Put2 -> PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 83 (Put2 -> PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA .)


state 336

    (84) Put2 -> PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA .

    $end            reduce using rule 84 (Put2 -> PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    FIN             reduce using rule 84 (Put2 -> PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    PUNTOCOMA       reduce using rule 84 (Put2 -> PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    NUMERO          reduce using rule 84 (Put2 -> PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    ABRE_P          reduce using rule 84 (Put2 -> PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    SUM             reduce using rule 84 (Put2 -> PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    SUBSTR          reduce using rule 84 (Put2 -> PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    MULTI           reduce using rule 84 (Put2 -> PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    DIV             reduce using rule 84 (Put2 -> PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    RANDOM          reduce using rule 84 (Put2 -> PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    RUN             reduce using rule 84 (Put2 -> PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    IF              reduce using rule 84 (Put2 -> PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    IFELSE          reduce using rule 84 (Put2 -> PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    REPEAT          reduce using rule 84 (Put2 -> PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    UNTIL           reduce using rule 84 (Put2 -> PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    WHILE           reduce using rule 84 (Put2 -> PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    PRINTLINE       reduce using rule 84 (Put2 -> PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    AND             reduce using rule 84 (Put2 -> PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    OR              reduce using rule 84 (Put2 -> PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    ADD             reduce using rule 84 (Put2 -> PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    PUT             reduce using rule 84 (Put2 -> PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    COMA            reduce using rule 84 (Put2 -> PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    CIERRA_P        reduce using rule 84 (Put2 -> PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 84 (Put2 -> PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA .)


state 337

    (85) Put2 -> PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA .

    $end            reduce using rule 85 (Put2 -> PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    FIN             reduce using rule 85 (Put2 -> PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    PUNTOCOMA       reduce using rule 85 (Put2 -> PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    NUMERO          reduce using rule 85 (Put2 -> PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    ABRE_P          reduce using rule 85 (Put2 -> PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    SUM             reduce using rule 85 (Put2 -> PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    SUBSTR          reduce using rule 85 (Put2 -> PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    MULTI           reduce using rule 85 (Put2 -> PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    DIV             reduce using rule 85 (Put2 -> PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    RANDOM          reduce using rule 85 (Put2 -> PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    RUN             reduce using rule 85 (Put2 -> PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    IF              reduce using rule 85 (Put2 -> PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    IFELSE          reduce using rule 85 (Put2 -> PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    REPEAT          reduce using rule 85 (Put2 -> PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    UNTIL           reduce using rule 85 (Put2 -> PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    WHILE           reduce using rule 85 (Put2 -> PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    PRINTLINE       reduce using rule 85 (Put2 -> PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    AND             reduce using rule 85 (Put2 -> PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    OR              reduce using rule 85 (Put2 -> PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    ADD             reduce using rule 85 (Put2 -> PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    PUT             reduce using rule 85 (Put2 -> PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    COMA            reduce using rule 85 (Put2 -> PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    CIERRA_P        reduce using rule 85 (Put2 -> PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 85 (Put2 -> PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA .)


state 338

    (86) Put2 -> PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA .

    $end            reduce using rule 86 (Put2 -> PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA .)
    FIN             reduce using rule 86 (Put2 -> PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA .)
    PUNTOCOMA       reduce using rule 86 (Put2 -> PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA .)
    NUMERO          reduce using rule 86 (Put2 -> PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA .)
    ABRE_P          reduce using rule 86 (Put2 -> PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA .)
    SUM             reduce using rule 86 (Put2 -> PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA .)
    SUBSTR          reduce using rule 86 (Put2 -> PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA .)
    MULTI           reduce using rule 86 (Put2 -> PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA .)
    DIV             reduce using rule 86 (Put2 -> PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA .)
    RANDOM          reduce using rule 86 (Put2 -> PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA .)
    RUN             reduce using rule 86 (Put2 -> PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA .)
    IF              reduce using rule 86 (Put2 -> PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA .)
    IFELSE          reduce using rule 86 (Put2 -> PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA .)
    REPEAT          reduce using rule 86 (Put2 -> PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA .)
    UNTIL           reduce using rule 86 (Put2 -> PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA .)
    WHILE           reduce using rule 86 (Put2 -> PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA .)
    PRINTLINE       reduce using rule 86 (Put2 -> PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA .)
    AND             reduce using rule 86 (Put2 -> PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA .)
    OR              reduce using rule 86 (Put2 -> PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA .)
    ADD             reduce using rule 86 (Put2 -> PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA .)
    PUT             reduce using rule 86 (Put2 -> PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA .)
    COMA            reduce using rule 86 (Put2 -> PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA .)
    CIERRA_P        reduce using rule 86 (Put2 -> PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 86 (Put2 -> PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA .)


state 339

    (25) llamadoproc -> PARA id BRACKET1 . parametro BRACKET2 PUNTOCOMA
    (197) parametro -> . Var COMA parametro
    (198) parametro -> . Var empty empty
    (199) parametro -> . empty empty empty
    (136) Var -> . VAR
    (249) empty -> .

    VAR             shift and go to state 34
    BRACKET2        reduce using rule 249 (empty -> .)

    parametro                      shift and go to state 448
    Var                            shift and go to state 33
    empty                          shift and go to state 166

state 340

    (23) procedimiento -> PARA id BRACKET1 empty BRACKET2 cuerpo2 FIN cuerpo .

    $end            reduce using rule 23 (procedimiento -> PARA id BRACKET1 empty BRACKET2 cuerpo2 FIN cuerpo .)


state 341

    (24) procedimiento -> PARA id BRACKET1 parametro BRACKET2 cuerpo2 FIN cuerpo .

    $end            reduce using rule 24 (procedimiento -> PARA id BRACKET1 parametro BRACKET2 cuerpo2 FIN cuerpo .)


state 342

    (83) Put2 -> PUT ABRE_P VAR COMA . NUMERO CIERRA_P PUNTOCOMA
    (84) Put2 -> PUT ABRE_P VAR COMA . expresion_alge1 CIERRA_P PUNTOCOMA
    (85) Put2 -> PUT ABRE_P VAR COMA . expresion_alge2 CIERRA_P PUNTOCOMA
    (86) Put2 -> PUT ABRE_P VAR COMA . funcion CIERRA_P PUNTOCOMA
    (82) Put -> PUT ABRE_P VAR COMA . VAR CIERRA_P PUNTOCOMA
    (90) expresion_alge1 -> . NUMERO SUMA NUMERO
    (91) expresion_alge1 -> . NUMERO RESTA NUMERO
    (92) expresion_alge1 -> . NUMERO MULTI NUMERO
    (93) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (94) expresion_alge1 -> . NUMERO EXPONENTE NUMERO
    (95) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (96) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (97) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (98) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (99) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P EXPONENTE ABRE_P expresion_alge1 CIERRA_P
    (67) funcion -> . Random empty
    (68) funcion -> . Run empty
    (69) funcion -> . If empty
    (70) funcion -> . IfElse empty
    (71) funcion -> . Repeat empty
    (72) funcion -> . Until empty
    (73) funcion -> . While empty
    (74) funcion -> . PrintLine empty
    (75) funcion -> . And empty
    (76) funcion -> . Or empty
    (77) funcion -> . Add empty
    (78) funcion -> . Put2 empty
    (79) funcion -> . Put empty
    (80) funcion -> . PUNTOCOMA funcion
    (81) funcion -> . empty empty
    (201) Random -> . RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA
    (241) Run -> . RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA
    (187) If -> . IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2
    (188) IfElse -> . IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2
    (190) Repeat -> . REPEAT NUMERO BRACKET1 ordenes BRACKET2
    (191) Until -> . UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2
    (189) While -> . WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2
    (248) PrintLine -> . PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA
    (185) And -> . AND ABRE_P expresion COMA expresion CIERRA_P PUNTOCOMA
    (186) Or -> . OR ABRE_P expresion COMA expresion CIERRA_P PUNTOCOMA
    (192) Add -> . ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA
    (193) Add -> . ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (194) Add -> . ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (195) Add -> . ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (196) Add -> . ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (83) Put2 -> . PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (84) Put2 -> . PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (85) Put2 -> . PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (86) Put2 -> . PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA
    (82) Put -> . PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA
    (249) empty -> .

    NUMERO          shift and go to state 147
    VAR             shift and go to state 146
    ABRE_P          shift and go to state 63
    PUNTOCOMA       shift and go to state 62
    RANDOM          shift and go to state 69
    RUN             shift and go to state 70
    IF              shift and go to state 71
    IFELSE          shift and go to state 72
    REPEAT          shift and go to state 73
    UNTIL           shift and go to state 74
    WHILE           shift and go to state 75
    PRINTLINE       shift and go to state 76
    AND             shift and go to state 77
    OR              shift and go to state 78
    ADD             shift and go to state 79
    PUT             shift and go to state 94
    CIERRA_P        reduce using rule 249 (empty -> .)

    expresion_alge1                shift and go to state 148
    expresion_alge2                shift and go to state 149
    funcion                        shift and go to state 150
    Random                         shift and go to state 51
    empty                          shift and go to state 124
    Run                            shift and go to state 52
    If                             shift and go to state 53
    IfElse                         shift and go to state 54
    Repeat                         shift and go to state 55
    Until                          shift and go to state 56
    While                          shift and go to state 57
    PrintLine                      shift and go to state 58
    And                            shift and go to state 59
    Or                             shift and go to state 60
    Add                            shift and go to state 61
    Put2                           shift and go to state 92
    Put                            shift and go to state 93

state 343

    (95) expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P . expresion_alge1 CIERRA_P
    (90) expresion_alge1 -> . NUMERO SUMA NUMERO
    (91) expresion_alge1 -> . NUMERO RESTA NUMERO
    (92) expresion_alge1 -> . NUMERO MULTI NUMERO
    (93) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (94) expresion_alge1 -> . NUMERO EXPONENTE NUMERO

    NUMERO          shift and go to state 64

    expresion_alge1                shift and go to state 449

state 344

    (96) expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P . expresion_alge1 CIERRA_P
    (90) expresion_alge1 -> . NUMERO SUMA NUMERO
    (91) expresion_alge1 -> . NUMERO RESTA NUMERO
    (92) expresion_alge1 -> . NUMERO MULTI NUMERO
    (93) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (94) expresion_alge1 -> . NUMERO EXPONENTE NUMERO

    NUMERO          shift and go to state 64

    expresion_alge1                shift and go to state 450

state 345

    (97) expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P . expresion_alge1 CIERRA_P
    (90) expresion_alge1 -> . NUMERO SUMA NUMERO
    (91) expresion_alge1 -> . NUMERO RESTA NUMERO
    (92) expresion_alge1 -> . NUMERO MULTI NUMERO
    (93) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (94) expresion_alge1 -> . NUMERO EXPONENTE NUMERO

    NUMERO          shift and go to state 64

    expresion_alge1                shift and go to state 451

state 346

    (98) expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P . expresion_alge1 CIERRA_P
    (90) expresion_alge1 -> . NUMERO SUMA NUMERO
    (91) expresion_alge1 -> . NUMERO RESTA NUMERO
    (92) expresion_alge1 -> . NUMERO MULTI NUMERO
    (93) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (94) expresion_alge1 -> . NUMERO EXPONENTE NUMERO

    NUMERO          shift and go to state 64

    expresion_alge1                shift and go to state 452

state 347

    (99) expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P EXPONENTE ABRE_P . expresion_alge1 CIERRA_P
    (90) expresion_alge1 -> . NUMERO SUMA NUMERO
    (91) expresion_alge1 -> . NUMERO RESTA NUMERO
    (92) expresion_alge1 -> . NUMERO MULTI NUMERO
    (93) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (94) expresion_alge1 -> . NUMERO EXPONENTE NUMERO

    NUMERO          shift and go to state 64

    expresion_alge1                shift and go to state 453

state 348

    (118) Mult -> MULTI ABRE_P NUMERO COMA NUMERO . CIERRA_P
    (90) expresion_alge1 -> NUMERO . SUMA NUMERO
    (91) expresion_alge1 -> NUMERO . RESTA NUMERO
    (92) expresion_alge1 -> NUMERO . MULTI NUMERO
    (93) expresion_alge1 -> NUMERO . DIVISION NUMERO
    (94) expresion_alge1 -> NUMERO . EXPONENTE NUMERO

    CIERRA_P        shift and go to state 454
    SUMA            shift and go to state 126
    RESTA           shift and go to state 127
    MULTI           shift and go to state 128
    DIVISION        shift and go to state 129
    EXPONENTE       shift and go to state 130


state 349

    (119) Mult -> MULTI ABRE_P NUMERO COMA expresion_alge1 . CIERRA_P

    CIERRA_P        shift and go to state 455


state 350

    (121) Mult -> MULTI ABRE_P NUMERO COMA Var . CIERRA_P

    CIERRA_P        shift and go to state 456


state 351

    (120) Mult -> MULTI ABRE_P expresion_alge1 COMA expresion_alge1 . CIERRA_P

    CIERRA_P        shift and go to state 457


state 352

    (124) Mult -> MULTI ABRE_P expresion_alge1 COMA Var . CIERRA_P

    CIERRA_P        shift and go to state 458


state 353

    (125) Mult -> MULTI ABRE_P expresion_alge1 COMA NUMERO . CIERRA_P
    (90) expresion_alge1 -> NUMERO . SUMA NUMERO
    (91) expresion_alge1 -> NUMERO . RESTA NUMERO
    (92) expresion_alge1 -> NUMERO . MULTI NUMERO
    (93) expresion_alge1 -> NUMERO . DIVISION NUMERO
    (94) expresion_alge1 -> NUMERO . EXPONENTE NUMERO

    CIERRA_P        shift and go to state 459
    SUMA            shift and go to state 126
    RESTA           shift and go to state 127
    MULTI           shift and go to state 128
    DIVISION        shift and go to state 129
    EXPONENTE       shift and go to state 130


state 354

    (123) Mult -> MULTI ABRE_P Var COMA Var . CIERRA_P

    CIERRA_P        shift and go to state 460


state 355

    (122) Mult -> MULTI ABRE_P Var COMA NUMERO . CIERRA_P
    (90) expresion_alge1 -> NUMERO . SUMA NUMERO
    (91) expresion_alge1 -> NUMERO . RESTA NUMERO
    (92) expresion_alge1 -> NUMERO . MULTI NUMERO
    (93) expresion_alge1 -> NUMERO . DIVISION NUMERO
    (94) expresion_alge1 -> NUMERO . EXPONENTE NUMERO

    CIERRA_P        shift and go to state 461
    SUMA            shift and go to state 126
    RESTA           shift and go to state 127
    MULTI           shift and go to state 128
    DIVISION        shift and go to state 129
    EXPONENTE       shift and go to state 130


state 356

    (126) Mult -> MULTI ABRE_P Var COMA expresion_alge1 . CIERRA_P

    CIERRA_P        shift and go to state 462


state 357

    (127) Div -> DIV ABRE_P NUMERO COMA NUMERO . CIERRA_P
    (90) expresion_alge1 -> NUMERO . SUMA NUMERO
    (91) expresion_alge1 -> NUMERO . RESTA NUMERO
    (92) expresion_alge1 -> NUMERO . MULTI NUMERO
    (93) expresion_alge1 -> NUMERO . DIVISION NUMERO
    (94) expresion_alge1 -> NUMERO . EXPONENTE NUMERO

    CIERRA_P        shift and go to state 463
    SUMA            shift and go to state 126
    RESTA           shift and go to state 127
    MULTI           shift and go to state 128
    DIVISION        shift and go to state 129
    EXPONENTE       shift and go to state 130


state 358

    (128) Div -> DIV ABRE_P NUMERO COMA expresion_alge1 . CIERRA_P

    CIERRA_P        shift and go to state 464


state 359

    (130) Div -> DIV ABRE_P NUMERO COMA Var . CIERRA_P

    CIERRA_P        shift and go to state 465


state 360

    (129) Div -> DIV ABRE_P expresion_alge1 COMA expresion_alge1 . CIERRA_P

    CIERRA_P        shift and go to state 466


state 361

    (133) Div -> DIV ABRE_P expresion_alge1 COMA Var . CIERRA_P

    CIERRA_P        shift and go to state 467


state 362

    (134) Div -> DIV ABRE_P expresion_alge1 COMA NUMERO . CIERRA_P
    (90) expresion_alge1 -> NUMERO . SUMA NUMERO
    (91) expresion_alge1 -> NUMERO . RESTA NUMERO
    (92) expresion_alge1 -> NUMERO . MULTI NUMERO
    (93) expresion_alge1 -> NUMERO . DIVISION NUMERO
    (94) expresion_alge1 -> NUMERO . EXPONENTE NUMERO

    CIERRA_P        shift and go to state 468
    SUMA            shift and go to state 126
    RESTA           shift and go to state 127
    MULTI           shift and go to state 128
    DIVISION        shift and go to state 129
    EXPONENTE       shift and go to state 130


state 363

    (132) Div -> DIV ABRE_P Var COMA Var . CIERRA_P

    CIERRA_P        shift and go to state 469


state 364

    (131) Div -> DIV ABRE_P Var COMA NUMERO . CIERRA_P
    (90) expresion_alge1 -> NUMERO . SUMA NUMERO
    (91) expresion_alge1 -> NUMERO . RESTA NUMERO
    (92) expresion_alge1 -> NUMERO . MULTI NUMERO
    (93) expresion_alge1 -> NUMERO . DIVISION NUMERO
    (94) expresion_alge1 -> NUMERO . EXPONENTE NUMERO

    CIERRA_P        shift and go to state 470
    SUMA            shift and go to state 126
    RESTA           shift and go to state 127
    MULTI           shift and go to state 128
    DIVISION        shift and go to state 129
    EXPONENTE       shift and go to state 130


state 365

    (135) Div -> DIV ABRE_P Var COMA expresion_alge1 . CIERRA_P

    CIERRA_P        shift and go to state 471


state 366

    (100) Sum -> SUM ABRE_P NUMERO COMA NUMERO . CIERRA_P
    (90) expresion_alge1 -> NUMERO . SUMA NUMERO
    (91) expresion_alge1 -> NUMERO . RESTA NUMERO
    (92) expresion_alge1 -> NUMERO . MULTI NUMERO
    (93) expresion_alge1 -> NUMERO . DIVISION NUMERO
    (94) expresion_alge1 -> NUMERO . EXPONENTE NUMERO

    CIERRA_P        shift and go to state 472
    SUMA            shift and go to state 126
    RESTA           shift and go to state 127
    MULTI           shift and go to state 128
    DIVISION        shift and go to state 129
    EXPONENTE       shift and go to state 130


state 367

    (101) Sum -> SUM ABRE_P NUMERO COMA expresion_alge1 . CIERRA_P

    CIERRA_P        shift and go to state 473


state 368

    (103) Sum -> SUM ABRE_P NUMERO COMA Var . CIERRA_P

    CIERRA_P        shift and go to state 474


state 369

    (102) Sum -> SUM ABRE_P expresion_alge1 COMA expresion_alge1 . CIERRA_P

    CIERRA_P        shift and go to state 475


state 370

    (106) Sum -> SUM ABRE_P expresion_alge1 COMA Var . CIERRA_P

    CIERRA_P        shift and go to state 476


state 371

    (107) Sum -> SUM ABRE_P expresion_alge1 COMA NUMERO . CIERRA_P
    (90) expresion_alge1 -> NUMERO . SUMA NUMERO
    (91) expresion_alge1 -> NUMERO . RESTA NUMERO
    (92) expresion_alge1 -> NUMERO . MULTI NUMERO
    (93) expresion_alge1 -> NUMERO . DIVISION NUMERO
    (94) expresion_alge1 -> NUMERO . EXPONENTE NUMERO

    CIERRA_P        shift and go to state 477
    SUMA            shift and go to state 126
    RESTA           shift and go to state 127
    MULTI           shift and go to state 128
    DIVISION        shift and go to state 129
    EXPONENTE       shift and go to state 130


state 372

    (105) Sum -> SUM ABRE_P Var COMA Var . CIERRA_P

    CIERRA_P        shift and go to state 478


state 373

    (104) Sum -> SUM ABRE_P Var COMA NUMERO . CIERRA_P
    (90) expresion_alge1 -> NUMERO . SUMA NUMERO
    (91) expresion_alge1 -> NUMERO . RESTA NUMERO
    (92) expresion_alge1 -> NUMERO . MULTI NUMERO
    (93) expresion_alge1 -> NUMERO . DIVISION NUMERO
    (94) expresion_alge1 -> NUMERO . EXPONENTE NUMERO

    CIERRA_P        shift and go to state 479
    SUMA            shift and go to state 126
    RESTA           shift and go to state 127
    MULTI           shift and go to state 128
    DIVISION        shift and go to state 129
    EXPONENTE       shift and go to state 130


state 374

    (108) Sum -> SUM ABRE_P Var COMA expresion_alge1 . CIERRA_P

    CIERRA_P        shift and go to state 480


state 375

    (109) Substr -> SUBSTR ABRE_P NUMERO COMA NUMERO . CIERRA_P
    (90) expresion_alge1 -> NUMERO . SUMA NUMERO
    (91) expresion_alge1 -> NUMERO . RESTA NUMERO
    (92) expresion_alge1 -> NUMERO . MULTI NUMERO
    (93) expresion_alge1 -> NUMERO . DIVISION NUMERO
    (94) expresion_alge1 -> NUMERO . EXPONENTE NUMERO

    CIERRA_P        shift and go to state 481
    SUMA            shift and go to state 126
    RESTA           shift and go to state 127
    MULTI           shift and go to state 128
    DIVISION        shift and go to state 129
    EXPONENTE       shift and go to state 130


state 376

    (110) Substr -> SUBSTR ABRE_P NUMERO COMA expresion_alge1 . CIERRA_P

    CIERRA_P        shift and go to state 482


state 377

    (112) Substr -> SUBSTR ABRE_P NUMERO COMA Var . CIERRA_P

    CIERRA_P        shift and go to state 483


state 378

    (111) Substr -> SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 . CIERRA_P

    CIERRA_P        shift and go to state 484


state 379

    (115) Substr -> SUBSTR ABRE_P expresion_alge1 COMA Var . CIERRA_P

    CIERRA_P        shift and go to state 485


state 380

    (116) Substr -> SUBSTR ABRE_P expresion_alge1 COMA NUMERO . CIERRA_P
    (90) expresion_alge1 -> NUMERO . SUMA NUMERO
    (91) expresion_alge1 -> NUMERO . RESTA NUMERO
    (92) expresion_alge1 -> NUMERO . MULTI NUMERO
    (93) expresion_alge1 -> NUMERO . DIVISION NUMERO
    (94) expresion_alge1 -> NUMERO . EXPONENTE NUMERO

    CIERRA_P        shift and go to state 486
    SUMA            shift and go to state 126
    RESTA           shift and go to state 127
    MULTI           shift and go to state 128
    DIVISION        shift and go to state 129
    EXPONENTE       shift and go to state 130


state 381

    (114) Substr -> SUBSTR ABRE_P Var COMA Var . CIERRA_P

    CIERRA_P        shift and go to state 487


state 382

    (113) Substr -> SUBSTR ABRE_P Var COMA NUMERO . CIERRA_P
    (90) expresion_alge1 -> NUMERO . SUMA NUMERO
    (91) expresion_alge1 -> NUMERO . RESTA NUMERO
    (92) expresion_alge1 -> NUMERO . MULTI NUMERO
    (93) expresion_alge1 -> NUMERO . DIVISION NUMERO
    (94) expresion_alge1 -> NUMERO . EXPONENTE NUMERO

    CIERRA_P        shift and go to state 488
    SUMA            shift and go to state 126
    RESTA           shift and go to state 127
    MULTI           shift and go to state 128
    DIVISION        shift and go to state 129
    EXPONENTE       shift and go to state 130


state 383

    (117) Substr -> SUBSTR ABRE_P Var COMA expresion_alge1 . CIERRA_P

    CIERRA_P        shift and go to state 489


state 384

    (201) Random -> RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA .

    PUNTOCOMA       reduce using rule 201 (Random -> RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA .)
    NUMERO          reduce using rule 201 (Random -> RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA .)
    ABRE_P          reduce using rule 201 (Random -> RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA .)
    SUM             reduce using rule 201 (Random -> RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA .)
    SUBSTR          reduce using rule 201 (Random -> RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA .)
    MULTI           reduce using rule 201 (Random -> RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA .)
    DIV             reduce using rule 201 (Random -> RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA .)
    RANDOM          reduce using rule 201 (Random -> RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA .)
    RUN             reduce using rule 201 (Random -> RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA .)
    IF              reduce using rule 201 (Random -> RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA .)
    IFELSE          reduce using rule 201 (Random -> RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA .)
    REPEAT          reduce using rule 201 (Random -> RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA .)
    UNTIL           reduce using rule 201 (Random -> RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA .)
    WHILE           reduce using rule 201 (Random -> RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA .)
    PRINTLINE       reduce using rule 201 (Random -> RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA .)
    AND             reduce using rule 201 (Random -> RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA .)
    OR              reduce using rule 201 (Random -> RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA .)
    ADD             reduce using rule 201 (Random -> RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA .)
    PUT             reduce using rule 201 (Random -> RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA .)
    FIN             reduce using rule 201 (Random -> RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA .)
    COMA            reduce using rule 201 (Random -> RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA .)
    CIERRA_P        reduce using rule 201 (Random -> RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 201 (Random -> RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA .)


state 385

    (241) Run -> RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA .

    PUNTOCOMA       reduce using rule 241 (Run -> RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA .)
    NUMERO          reduce using rule 241 (Run -> RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA .)
    ABRE_P          reduce using rule 241 (Run -> RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA .)
    SUM             reduce using rule 241 (Run -> RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA .)
    SUBSTR          reduce using rule 241 (Run -> RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA .)
    MULTI           reduce using rule 241 (Run -> RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA .)
    DIV             reduce using rule 241 (Run -> RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA .)
    RANDOM          reduce using rule 241 (Run -> RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA .)
    RUN             reduce using rule 241 (Run -> RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA .)
    IF              reduce using rule 241 (Run -> RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA .)
    IFELSE          reduce using rule 241 (Run -> RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA .)
    REPEAT          reduce using rule 241 (Run -> RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA .)
    UNTIL           reduce using rule 241 (Run -> RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA .)
    WHILE           reduce using rule 241 (Run -> RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA .)
    PRINTLINE       reduce using rule 241 (Run -> RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA .)
    AND             reduce using rule 241 (Run -> RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA .)
    OR              reduce using rule 241 (Run -> RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA .)
    ADD             reduce using rule 241 (Run -> RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA .)
    PUT             reduce using rule 241 (Run -> RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA .)
    FIN             reduce using rule 241 (Run -> RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA .)
    COMA            reduce using rule 241 (Run -> RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA .)
    CIERRA_P        reduce using rule 241 (Run -> RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA .)
    BRACKET2        reduce using rule 241 (Run -> RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA .)


state 386

    (202) ContinueUp -> CONTINUEUP NUMERO PUNTOCOMA .

    BRACKET2        reduce using rule 202 (ContinueUp -> CONTINUEUP NUMERO PUNTOCOMA .)


state 387

    (203) ContinueUp -> CONTINUEUP expresion_alge1 PUNTOCOMA .

    BRACKET2        reduce using rule 203 (ContinueUp -> CONTINUEUP expresion_alge1 PUNTOCOMA .)


state 388

    (204) ContinueUp -> CONTINUEUP expresion_alge2 PUNTOCOMA .

    BRACKET2        reduce using rule 204 (ContinueUp -> CONTINUEUP expresion_alge2 PUNTOCOMA .)


state 389

    (205) ContinueUp -> CONTINUEUP Var PUNTOCOMA .

    BRACKET2        reduce using rule 205 (ContinueUp -> CONTINUEUP Var PUNTOCOMA .)


state 390

    (206) ContinueDown -> CONTINUEDOWN NUMERO PUNTOCOMA .

    BRACKET2        reduce using rule 206 (ContinueDown -> CONTINUEDOWN NUMERO PUNTOCOMA .)


state 391

    (207) ContinueDown -> CONTINUEDOWN expresion_alge1 PUNTOCOMA .

    BRACKET2        reduce using rule 207 (ContinueDown -> CONTINUEDOWN expresion_alge1 PUNTOCOMA .)


state 392

    (208) ContinueDown -> CONTINUEDOWN expresion_alge2 PUNTOCOMA .

    BRACKET2        reduce using rule 208 (ContinueDown -> CONTINUEDOWN expresion_alge2 PUNTOCOMA .)


state 393

    (209) ContinueDown -> CONTINUEDOWN Var PUNTOCOMA .

    BRACKET2        reduce using rule 209 (ContinueDown -> CONTINUEDOWN Var PUNTOCOMA .)


state 394

    (210) ContinueRight -> CONTINUERIGHT NUMERO PUNTOCOMA .

    BRACKET2        reduce using rule 210 (ContinueRight -> CONTINUERIGHT NUMERO PUNTOCOMA .)


state 395

    (211) ContinueRight -> CONTINUERIGHT expresion_alge1 PUNTOCOMA .

    BRACKET2        reduce using rule 211 (ContinueRight -> CONTINUERIGHT expresion_alge1 PUNTOCOMA .)


state 396

    (212) ContinueRight -> CONTINUERIGHT expresion_alge2 PUNTOCOMA .

    BRACKET2        reduce using rule 212 (ContinueRight -> CONTINUERIGHT expresion_alge2 PUNTOCOMA .)


state 397

    (213) ContinueRight -> CONTINUERIGHT Var PUNTOCOMA .

    BRACKET2        reduce using rule 213 (ContinueRight -> CONTINUERIGHT Var PUNTOCOMA .)


state 398

    (214) ContinueLeft -> CONTINUELEFT NUMERO PUNTOCOMA .

    BRACKET2        reduce using rule 214 (ContinueLeft -> CONTINUELEFT NUMERO PUNTOCOMA .)


state 399

    (215) ContinueLeft -> CONTINUELEFT expresion_alge1 PUNTOCOMA .

    BRACKET2        reduce using rule 215 (ContinueLeft -> CONTINUELEFT expresion_alge1 PUNTOCOMA .)


state 400

    (216) ContinueLeft -> CONTINUELEFT expresion_alge2 PUNTOCOMA .

    BRACKET2        reduce using rule 216 (ContinueLeft -> CONTINUELEFT expresion_alge2 PUNTOCOMA .)


state 401

    (217) ContinueLeft -> CONTINUELEFT Var PUNTOCOMA .

    BRACKET2        reduce using rule 217 (ContinueLeft -> CONTINUELEFT Var PUNTOCOMA .)


state 402

    (220) Speed -> SPEED NUMERO PUNTOCOMA .

    BRACKET2        reduce using rule 220 (Speed -> SPEED NUMERO PUNTOCOMA .)


state 403

    (221) Pos -> POS ABRE_P NUMERO . COMA NUMERO CIERRA_P PUNTOCOMA
    (223) Pos -> POS ABRE_P NUMERO . COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (226) Pos -> POS ABRE_P NUMERO . COMA Var CIERRA_P PUNTOCOMA
    (90) expresion_alge1 -> NUMERO . SUMA NUMERO
    (91) expresion_alge1 -> NUMERO . RESTA NUMERO
    (92) expresion_alge1 -> NUMERO . MULTI NUMERO
    (93) expresion_alge1 -> NUMERO . DIVISION NUMERO
    (94) expresion_alge1 -> NUMERO . EXPONENTE NUMERO

    COMA            shift and go to state 490
    SUMA            shift and go to state 126
    RESTA           shift and go to state 127
    MULTI           shift and go to state 128
    DIVISION        shift and go to state 129
    EXPONENTE       shift and go to state 130


state 404

    (222) Pos -> POS ABRE_P expresion_alge1 . COMA NUMERO CIERRA_P PUNTOCOMA
    (224) Pos -> POS ABRE_P expresion_alge1 . COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (228) Pos -> POS ABRE_P expresion_alge1 . COMA Var CIERRA_P PUNTOCOMA

    COMA            shift and go to state 491


state 405

    (225) Pos -> POS ABRE_P Var . COMA NUMERO CIERRA_P PUNTOCOMA
    (227) Pos -> POS ABRE_P Var . COMA Var CIERRA_P PUNTOCOMA
    (229) Pos -> POS ABRE_P Var . COMA expresion_alge1 CIERRA_P PUNTOCOMA

    COMA            shift and go to state 492


state 406

    (230) PosX -> POSX NUMERO PUNTOCOMA .

    BRACKET2        reduce using rule 230 (PosX -> POSX NUMERO PUNTOCOMA .)


state 407

    (231) PosX -> POSX expresion_alge1 PUNTOCOMA .

    BRACKET2        reduce using rule 231 (PosX -> POSX expresion_alge1 PUNTOCOMA .)


state 408

    (232) PosX -> POSX expresion_alge2 PUNTOCOMA .

    BRACKET2        reduce using rule 232 (PosX -> POSX expresion_alge2 PUNTOCOMA .)


state 409

    (233) PosX -> POSX Var PUNTOCOMA .

    BRACKET2        reduce using rule 233 (PosX -> POSX Var PUNTOCOMA .)


state 410

    (234) PosY -> POSY NUMERO PUNTOCOMA .

    BRACKET2        reduce using rule 234 (PosY -> POSY NUMERO PUNTOCOMA .)


state 411

    (235) PosY -> POSY expresion_alge1 PUNTOCOMA .

    BRACKET2        reduce using rule 235 (PosY -> POSY expresion_alge1 PUNTOCOMA .)


state 412

    (236) PosY -> POSY expresion_alge2 PUNTOCOMA .

    BRACKET2        reduce using rule 236 (PosY -> POSY expresion_alge2 PUNTOCOMA .)


state 413

    (237) PosY -> POSY Var PUNTOCOMA .

    BRACKET2        reduce using rule 237 (PosY -> POSY Var PUNTOCOMA .)


state 414

    (238) UseColor -> USECOLOR NUMERO PUNTOCOMA .

    BRACKET2        reduce using rule 238 (UseColor -> USECOLOR NUMERO PUNTOCOMA .)


state 415

    (239) UseColor -> USECOLOR Var PUNTOCOMA .

    BRACKET2        reduce using rule 239 (UseColor -> USECOLOR Var PUNTOCOMA .)


state 416

    (240) UseColor -> USECOLOR empty PUNTOCOMA .

    BRACKET2        reduce using rule 240 (UseColor -> USECOLOR empty PUNTOCOMA .)


state 417

    (187) If -> IF ABRE_P condicion CIERRA_P BRACKET1 . funcion BRACKET2
    (67) funcion -> . Random empty
    (68) funcion -> . Run empty
    (69) funcion -> . If empty
    (70) funcion -> . IfElse empty
    (71) funcion -> . Repeat empty
    (72) funcion -> . Until empty
    (73) funcion -> . While empty
    (74) funcion -> . PrintLine empty
    (75) funcion -> . And empty
    (76) funcion -> . Or empty
    (77) funcion -> . Add empty
    (78) funcion -> . Put2 empty
    (79) funcion -> . Put empty
    (80) funcion -> . PUNTOCOMA funcion
    (81) funcion -> . empty empty
    (201) Random -> . RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA
    (241) Run -> . RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA
    (187) If -> . IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2
    (188) IfElse -> . IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2
    (190) Repeat -> . REPEAT NUMERO BRACKET1 ordenes BRACKET2
    (191) Until -> . UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2
    (189) While -> . WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2
    (248) PrintLine -> . PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA
    (185) And -> . AND ABRE_P expresion COMA expresion CIERRA_P PUNTOCOMA
    (186) Or -> . OR ABRE_P expresion COMA expresion CIERRA_P PUNTOCOMA
    (192) Add -> . ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA
    (193) Add -> . ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (194) Add -> . ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (195) Add -> . ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (196) Add -> . ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (83) Put2 -> . PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (84) Put2 -> . PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (85) Put2 -> . PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (86) Put2 -> . PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA
    (82) Put -> . PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA
    (249) empty -> .

    PUNTOCOMA       shift and go to state 62
    RANDOM          shift and go to state 69
    RUN             shift and go to state 70
    IF              shift and go to state 71
    IFELSE          shift and go to state 72
    REPEAT          shift and go to state 73
    UNTIL           shift and go to state 74
    WHILE           shift and go to state 75
    PRINTLINE       shift and go to state 76
    AND             shift and go to state 77
    OR              shift and go to state 78
    ADD             shift and go to state 79
    PUT             shift and go to state 94
    BRACKET2        reduce using rule 249 (empty -> .)

    funcion                        shift and go to state 493
    Random                         shift and go to state 51
    empty                          shift and go to state 124
    Run                            shift and go to state 52
    If                             shift and go to state 53
    IfElse                         shift and go to state 54
    Repeat                         shift and go to state 55
    Until                          shift and go to state 56
    While                          shift and go to state 57
    PrintLine                      shift and go to state 58
    And                            shift and go to state 59
    Or                             shift and go to state 60
    Add                            shift and go to state 61
    Put2                           shift and go to state 92
    Put                            shift and go to state 93

state 418

    (137) Equal -> EQUAL ABRE_P NUMERO . COMA NUMERO CIERRA_P PUNTOCOMA
    (141) Equal -> EQUAL ABRE_P NUMERO . COMA Var CIERRA_P PUNTOCOMA
    (151) Equal -> EQUAL ABRE_P NUMERO . COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (152) Equal -> EQUAL ABRE_P NUMERO . COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (90) expresion_alge1 -> NUMERO . SUMA NUMERO
    (91) expresion_alge1 -> NUMERO . RESTA NUMERO
    (92) expresion_alge1 -> NUMERO . MULTI NUMERO
    (93) expresion_alge1 -> NUMERO . DIVISION NUMERO
    (94) expresion_alge1 -> NUMERO . EXPONENTE NUMERO

    COMA            shift and go to state 494
    SUMA            shift and go to state 126
    RESTA           shift and go to state 127
    MULTI           shift and go to state 128
    DIVISION        shift and go to state 129
    EXPONENTE       shift and go to state 130


state 419

    (138) Equal -> EQUAL ABRE_P expresion_alge1 . COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (143) Equal -> EQUAL ABRE_P expresion_alge1 . COMA Var CIERRA_P PUNTOCOMA
    (147) Equal -> EQUAL ABRE_P expresion_alge1 . COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (149) Equal -> EQUAL ABRE_P expresion_alge1 . COMA NUMERO CIERRA_P PUNTOCOMA

    COMA            shift and go to state 495


state 420

    (139) Equal -> EQUAL ABRE_P expresion_alge2 . COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (142) Equal -> EQUAL ABRE_P expresion_alge2 . COMA Var CIERRA_P PUNTOCOMA
    (148) Equal -> EQUAL ABRE_P expresion_alge2 . COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (150) Equal -> EQUAL ABRE_P expresion_alge2 . COMA NUMERO CIERRA_P PUNTOCOMA

    COMA            shift and go to state 496


state 421

    (140) Equal -> EQUAL ABRE_P Var . COMA Var CIERRA_P PUNTOCOMA
    (144) Equal -> EQUAL ABRE_P Var . COMA NUMERO CIERRA_P PUNTOCOMA
    (145) Equal -> EQUAL ABRE_P Var . COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (146) Equal -> EQUAL ABRE_P Var . COMA expresion_alge2 CIERRA_P PUNTOCOMA

    COMA            shift and go to state 497


state 422

    (153) Greater -> GREATER ABRE_P NUMERO . COMA NUMERO CIERRA_P PUNTOCOMA
    (157) Greater -> GREATER ABRE_P NUMERO . COMA Var CIERRA_P PUNTOCOMA
    (167) Greater -> GREATER ABRE_P NUMERO . COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (168) Greater -> GREATER ABRE_P NUMERO . COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (90) expresion_alge1 -> NUMERO . SUMA NUMERO
    (91) expresion_alge1 -> NUMERO . RESTA NUMERO
    (92) expresion_alge1 -> NUMERO . MULTI NUMERO
    (93) expresion_alge1 -> NUMERO . DIVISION NUMERO
    (94) expresion_alge1 -> NUMERO . EXPONENTE NUMERO

    COMA            shift and go to state 498
    SUMA            shift and go to state 126
    RESTA           shift and go to state 127
    MULTI           shift and go to state 128
    DIVISION        shift and go to state 129
    EXPONENTE       shift and go to state 130


state 423

    (154) Greater -> GREATER ABRE_P expresion_alge1 . COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (159) Greater -> GREATER ABRE_P expresion_alge1 . COMA Var CIERRA_P PUNTOCOMA
    (163) Greater -> GREATER ABRE_P expresion_alge1 . COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (165) Greater -> GREATER ABRE_P expresion_alge1 . COMA NUMERO CIERRA_P PUNTOCOMA

    COMA            shift and go to state 499


state 424

    (155) Greater -> GREATER ABRE_P expresion_alge2 . COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (158) Greater -> GREATER ABRE_P expresion_alge2 . COMA Var CIERRA_P PUNTOCOMA
    (164) Greater -> GREATER ABRE_P expresion_alge2 . COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (166) Greater -> GREATER ABRE_P expresion_alge2 . COMA NUMERO CIERRA_P PUNTOCOMA

    COMA            shift and go to state 500


state 425

    (156) Greater -> GREATER ABRE_P Var . COMA Var CIERRA_P PUNTOCOMA
    (160) Greater -> GREATER ABRE_P Var . COMA NUMERO CIERRA_P PUNTOCOMA
    (161) Greater -> GREATER ABRE_P Var . COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (162) Greater -> GREATER ABRE_P Var . COMA expresion_alge2 CIERRA_P PUNTOCOMA

    COMA            shift and go to state 501


state 426

    (169) Smaller -> SMALLER ABRE_P NUMERO . COMA NUMERO CIERRA_P PUNTOCOMA
    (173) Smaller -> SMALLER ABRE_P NUMERO . COMA Var CIERRA_P PUNTOCOMA
    (183) Smaller -> SMALLER ABRE_P NUMERO . COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (184) Smaller -> SMALLER ABRE_P NUMERO . COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (90) expresion_alge1 -> NUMERO . SUMA NUMERO
    (91) expresion_alge1 -> NUMERO . RESTA NUMERO
    (92) expresion_alge1 -> NUMERO . MULTI NUMERO
    (93) expresion_alge1 -> NUMERO . DIVISION NUMERO
    (94) expresion_alge1 -> NUMERO . EXPONENTE NUMERO

    COMA            shift and go to state 502
    SUMA            shift and go to state 126
    RESTA           shift and go to state 127
    MULTI           shift and go to state 128
    DIVISION        shift and go to state 129
    EXPONENTE       shift and go to state 130


state 427

    (170) Smaller -> SMALLER ABRE_P expresion_alge1 . COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (175) Smaller -> SMALLER ABRE_P expresion_alge1 . COMA Var CIERRA_P PUNTOCOMA
    (179) Smaller -> SMALLER ABRE_P expresion_alge1 . COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (181) Smaller -> SMALLER ABRE_P expresion_alge1 . COMA NUMERO CIERRA_P PUNTOCOMA

    COMA            shift and go to state 503


state 428

    (171) Smaller -> SMALLER ABRE_P expresion_alge2 . COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (174) Smaller -> SMALLER ABRE_P expresion_alge2 . COMA Var CIERRA_P PUNTOCOMA
    (180) Smaller -> SMALLER ABRE_P expresion_alge2 . COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (182) Smaller -> SMALLER ABRE_P expresion_alge2 . COMA NUMERO CIERRA_P PUNTOCOMA

    COMA            shift and go to state 504


state 429

    (172) Smaller -> SMALLER ABRE_P Var . COMA Var CIERRA_P PUNTOCOMA
    (176) Smaller -> SMALLER ABRE_P Var . COMA NUMERO CIERRA_P PUNTOCOMA
    (177) Smaller -> SMALLER ABRE_P Var . COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (178) Smaller -> SMALLER ABRE_P Var . COMA expresion_alge2 CIERRA_P PUNTOCOMA

    COMA            shift and go to state 505


state 430

    (188) IfElse -> IFELSE ABRE_P condicion CIERRA_P BRACKET1 . funcion BRACKET2 BRACKET1 funcion BRACKET2
    (67) funcion -> . Random empty
    (68) funcion -> . Run empty
    (69) funcion -> . If empty
    (70) funcion -> . IfElse empty
    (71) funcion -> . Repeat empty
    (72) funcion -> . Until empty
    (73) funcion -> . While empty
    (74) funcion -> . PrintLine empty
    (75) funcion -> . And empty
    (76) funcion -> . Or empty
    (77) funcion -> . Add empty
    (78) funcion -> . Put2 empty
    (79) funcion -> . Put empty
    (80) funcion -> . PUNTOCOMA funcion
    (81) funcion -> . empty empty
    (201) Random -> . RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA
    (241) Run -> . RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA
    (187) If -> . IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2
    (188) IfElse -> . IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2
    (190) Repeat -> . REPEAT NUMERO BRACKET1 ordenes BRACKET2
    (191) Until -> . UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2
    (189) While -> . WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2
    (248) PrintLine -> . PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA
    (185) And -> . AND ABRE_P expresion COMA expresion CIERRA_P PUNTOCOMA
    (186) Or -> . OR ABRE_P expresion COMA expresion CIERRA_P PUNTOCOMA
    (192) Add -> . ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA
    (193) Add -> . ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (194) Add -> . ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (195) Add -> . ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (196) Add -> . ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (83) Put2 -> . PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (84) Put2 -> . PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (85) Put2 -> . PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (86) Put2 -> . PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA
    (82) Put -> . PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA
    (249) empty -> .

    PUNTOCOMA       shift and go to state 62
    RANDOM          shift and go to state 69
    RUN             shift and go to state 70
    IF              shift and go to state 71
    IFELSE          shift and go to state 72
    REPEAT          shift and go to state 73
    UNTIL           shift and go to state 74
    WHILE           shift and go to state 75
    PRINTLINE       shift and go to state 76
    AND             shift and go to state 77
    OR              shift and go to state 78
    ADD             shift and go to state 79
    PUT             shift and go to state 94
    BRACKET2        reduce using rule 249 (empty -> .)

    funcion                        shift and go to state 506
    Random                         shift and go to state 51
    empty                          shift and go to state 124
    Run                            shift and go to state 52
    If                             shift and go to state 53
    IfElse                         shift and go to state 54
    Repeat                         shift and go to state 55
    Until                          shift and go to state 56
    While                          shift and go to state 57
    PrintLine                      shift and go to state 58
    And                            shift and go to state 59
    Or                             shift and go to state 60
    Add                            shift and go to state 61
    Put2                           shift and go to state 92
    Put                            shift and go to state 93

state 431

    (190) Repeat -> REPEAT NUMERO BRACKET1 ordenes BRACKET2 .

    PUNTOCOMA       reduce using rule 190 (Repeat -> REPEAT NUMERO BRACKET1 ordenes BRACKET2 .)
    NUMERO          reduce using rule 190 (Repeat -> REPEAT NUMERO BRACKET1 ordenes BRACKET2 .)
    ABRE_P          reduce using rule 190 (Repeat -> REPEAT NUMERO BRACKET1 ordenes BRACKET2 .)
    SUM             reduce using rule 190 (Repeat -> REPEAT NUMERO BRACKET1 ordenes BRACKET2 .)
    SUBSTR          reduce using rule 190 (Repeat -> REPEAT NUMERO BRACKET1 ordenes BRACKET2 .)
    MULTI           reduce using rule 190 (Repeat -> REPEAT NUMERO BRACKET1 ordenes BRACKET2 .)
    DIV             reduce using rule 190 (Repeat -> REPEAT NUMERO BRACKET1 ordenes BRACKET2 .)
    RANDOM          reduce using rule 190 (Repeat -> REPEAT NUMERO BRACKET1 ordenes BRACKET2 .)
    RUN             reduce using rule 190 (Repeat -> REPEAT NUMERO BRACKET1 ordenes BRACKET2 .)
    IF              reduce using rule 190 (Repeat -> REPEAT NUMERO BRACKET1 ordenes BRACKET2 .)
    IFELSE          reduce using rule 190 (Repeat -> REPEAT NUMERO BRACKET1 ordenes BRACKET2 .)
    REPEAT          reduce using rule 190 (Repeat -> REPEAT NUMERO BRACKET1 ordenes BRACKET2 .)
    UNTIL           reduce using rule 190 (Repeat -> REPEAT NUMERO BRACKET1 ordenes BRACKET2 .)
    WHILE           reduce using rule 190 (Repeat -> REPEAT NUMERO BRACKET1 ordenes BRACKET2 .)
    PRINTLINE       reduce using rule 190 (Repeat -> REPEAT NUMERO BRACKET1 ordenes BRACKET2 .)
    AND             reduce using rule 190 (Repeat -> REPEAT NUMERO BRACKET1 ordenes BRACKET2 .)
    OR              reduce using rule 190 (Repeat -> REPEAT NUMERO BRACKET1 ordenes BRACKET2 .)
    ADD             reduce using rule 190 (Repeat -> REPEAT NUMERO BRACKET1 ordenes BRACKET2 .)
    PUT             reduce using rule 190 (Repeat -> REPEAT NUMERO BRACKET1 ordenes BRACKET2 .)
    FIN             reduce using rule 190 (Repeat -> REPEAT NUMERO BRACKET1 ordenes BRACKET2 .)
    COMA            reduce using rule 190 (Repeat -> REPEAT NUMERO BRACKET1 ordenes BRACKET2 .)
    CIERRA_P        reduce using rule 190 (Repeat -> REPEAT NUMERO BRACKET1 ordenes BRACKET2 .)
    BRACKET2        reduce using rule 190 (Repeat -> REPEAT NUMERO BRACKET1 ordenes BRACKET2 .)


state 432

    (191) Until -> UNTIL BRACKET1 funcion BRACKET2 BRACKET1 . condicion BRACKET2
    (87) condicion -> . Equal
    (88) condicion -> . Greater
    (89) condicion -> . Smaller
    (137) Equal -> . EQUAL ABRE_P NUMERO COMA NUMERO CIERRA_P PUNTOCOMA
    (138) Equal -> . EQUAL ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (139) Equal -> . EQUAL ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (140) Equal -> . EQUAL ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (141) Equal -> . EQUAL ABRE_P NUMERO COMA Var CIERRA_P PUNTOCOMA
    (142) Equal -> . EQUAL ABRE_P expresion_alge2 COMA Var CIERRA_P PUNTOCOMA
    (143) Equal -> . EQUAL ABRE_P expresion_alge1 COMA Var CIERRA_P PUNTOCOMA
    (144) Equal -> . EQUAL ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (145) Equal -> . EQUAL ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (146) Equal -> . EQUAL ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (147) Equal -> . EQUAL ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (148) Equal -> . EQUAL ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (149) Equal -> . EQUAL ABRE_P expresion_alge1 COMA NUMERO CIERRA_P PUNTOCOMA
    (150) Equal -> . EQUAL ABRE_P expresion_alge2 COMA NUMERO CIERRA_P PUNTOCOMA
    (151) Equal -> . EQUAL ABRE_P NUMERO COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (152) Equal -> . EQUAL ABRE_P NUMERO COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (153) Greater -> . GREATER ABRE_P NUMERO COMA NUMERO CIERRA_P PUNTOCOMA
    (154) Greater -> . GREATER ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (155) Greater -> . GREATER ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (156) Greater -> . GREATER ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (157) Greater -> . GREATER ABRE_P NUMERO COMA Var CIERRA_P PUNTOCOMA
    (158) Greater -> . GREATER ABRE_P expresion_alge2 COMA Var CIERRA_P PUNTOCOMA
    (159) Greater -> . GREATER ABRE_P expresion_alge1 COMA Var CIERRA_P PUNTOCOMA
    (160) Greater -> . GREATER ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (161) Greater -> . GREATER ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (162) Greater -> . GREATER ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (163) Greater -> . GREATER ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (164) Greater -> . GREATER ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (165) Greater -> . GREATER ABRE_P expresion_alge1 COMA NUMERO CIERRA_P PUNTOCOMA
    (166) Greater -> . GREATER ABRE_P expresion_alge2 COMA NUMERO CIERRA_P PUNTOCOMA
    (167) Greater -> . GREATER ABRE_P NUMERO COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (168) Greater -> . GREATER ABRE_P NUMERO COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (169) Smaller -> . SMALLER ABRE_P NUMERO COMA NUMERO CIERRA_P PUNTOCOMA
    (170) Smaller -> . SMALLER ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (171) Smaller -> . SMALLER ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (172) Smaller -> . SMALLER ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (173) Smaller -> . SMALLER ABRE_P NUMERO COMA Var CIERRA_P PUNTOCOMA
    (174) Smaller -> . SMALLER ABRE_P expresion_alge2 COMA Var CIERRA_P PUNTOCOMA
    (175) Smaller -> . SMALLER ABRE_P expresion_alge1 COMA Var CIERRA_P PUNTOCOMA
    (176) Smaller -> . SMALLER ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (177) Smaller -> . SMALLER ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (178) Smaller -> . SMALLER ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (179) Smaller -> . SMALLER ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (180) Smaller -> . SMALLER ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (181) Smaller -> . SMALLER ABRE_P expresion_alge1 COMA NUMERO CIERRA_P PUNTOCOMA
    (182) Smaller -> . SMALLER ABRE_P expresion_alge2 COMA NUMERO CIERRA_P PUNTOCOMA
    (183) Smaller -> . SMALLER ABRE_P NUMERO COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (184) Smaller -> . SMALLER ABRE_P NUMERO COMA expresion_alge2 CIERRA_P PUNTOCOMA

    EQUAL           shift and go to state 222
    GREATER         shift and go to state 223
    SMALLER         shift and go to state 224

    condicion                      shift and go to state 507
    Equal                          shift and go to state 219
    Greater                        shift and go to state 220
    Smaller                        shift and go to state 221

state 433

    (189) While -> WHILE BRACKET1 condicion BRACKET2 BRACKET1 . funcion BRACKET2
    (67) funcion -> . Random empty
    (68) funcion -> . Run empty
    (69) funcion -> . If empty
    (70) funcion -> . IfElse empty
    (71) funcion -> . Repeat empty
    (72) funcion -> . Until empty
    (73) funcion -> . While empty
    (74) funcion -> . PrintLine empty
    (75) funcion -> . And empty
    (76) funcion -> . Or empty
    (77) funcion -> . Add empty
    (78) funcion -> . Put2 empty
    (79) funcion -> . Put empty
    (80) funcion -> . PUNTOCOMA funcion
    (81) funcion -> . empty empty
    (201) Random -> . RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA
    (241) Run -> . RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA
    (187) If -> . IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2
    (188) IfElse -> . IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2
    (190) Repeat -> . REPEAT NUMERO BRACKET1 ordenes BRACKET2
    (191) Until -> . UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2
    (189) While -> . WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2
    (248) PrintLine -> . PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA
    (185) And -> . AND ABRE_P expresion COMA expresion CIERRA_P PUNTOCOMA
    (186) Or -> . OR ABRE_P expresion COMA expresion CIERRA_P PUNTOCOMA
    (192) Add -> . ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA
    (193) Add -> . ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (194) Add -> . ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (195) Add -> . ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (196) Add -> . ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (83) Put2 -> . PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (84) Put2 -> . PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (85) Put2 -> . PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (86) Put2 -> . PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA
    (82) Put -> . PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA
    (249) empty -> .

    PUNTOCOMA       shift and go to state 62
    RANDOM          shift and go to state 69
    RUN             shift and go to state 70
    IF              shift and go to state 71
    IFELSE          shift and go to state 72
    REPEAT          shift and go to state 73
    UNTIL           shift and go to state 74
    WHILE           shift and go to state 75
    PRINTLINE       shift and go to state 76
    AND             shift and go to state 77
    OR              shift and go to state 78
    ADD             shift and go to state 79
    PUT             shift and go to state 94
    BRACKET2        reduce using rule 249 (empty -> .)

    funcion                        shift and go to state 508
    Random                         shift and go to state 51
    empty                          shift and go to state 124
    Run                            shift and go to state 52
    If                             shift and go to state 53
    IfElse                         shift and go to state 54
    Repeat                         shift and go to state 55
    Until                          shift and go to state 56
    While                          shift and go to state 57
    PrintLine                      shift and go to state 58
    And                            shift and go to state 59
    Or                             shift and go to state 60
    Add                            shift and go to state 61
    Put2                           shift and go to state 92
    Put                            shift and go to state 93

state 434

    (248) PrintLine -> PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA .

    PUNTOCOMA       reduce using rule 248 (PrintLine -> PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA .)
    NUMERO          reduce using rule 248 (PrintLine -> PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA .)
    ABRE_P          reduce using rule 248 (PrintLine -> PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA .)
    SUM             reduce using rule 248 (PrintLine -> PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA .)
    SUBSTR          reduce using rule 248 (PrintLine -> PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA .)
    MULTI           reduce using rule 248 (PrintLine -> PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA .)
    DIV             reduce using rule 248 (PrintLine -> PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA .)
    RANDOM          reduce using rule 248 (PrintLine -> PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA .)
    RUN             reduce using rule 248 (PrintLine -> PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA .)
    IF              reduce using rule 248 (PrintLine -> PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA .)
    IFELSE          reduce using rule 248 (PrintLine -> PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA .)
    REPEAT          reduce using rule 248 (PrintLine -> PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA .)
    UNTIL           reduce using rule 248 (PrintLine -> PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA .)
    WHILE           reduce using rule 248 (PrintLine -> PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA .)
    PRINTLINE       reduce using rule 248 (PrintLine -> PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA .)
    AND             reduce using rule 248 (PrintLine -> PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA .)
    OR              reduce using rule 248 (PrintLine -> PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA .)
    ADD             reduce using rule 248 (PrintLine -> PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA .)
    PUT             reduce using rule 248 (PrintLine -> PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA .)
    FIN             reduce using rule 248 (PrintLine -> PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA .)
    COMA            reduce using rule 248 (PrintLine -> PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA .)
    CIERRA_P        reduce using rule 248 (PrintLine -> PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 248 (PrintLine -> PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA .)


state 435

    (242) exp -> NUMERO COMA exp .

    CIERRA_P        reduce using rule 242 (exp -> NUMERO COMA exp .)


state 436

    (245) exp -> NUMERO empty empty .

    CIERRA_P        reduce using rule 245 (exp -> NUMERO empty empty .)


state 437

    (243) exp -> STRING COMA exp .

    CIERRA_P        reduce using rule 243 (exp -> STRING COMA exp .)


state 438

    (246) exp -> STRING empty empty .

    CIERRA_P        reduce using rule 246 (exp -> STRING empty empty .)


state 439

    (244) exp -> Var COMA exp .

    CIERRA_P        reduce using rule 244 (exp -> Var COMA exp .)


state 440

    (247) exp -> Var empty empty .

    CIERRA_P        reduce using rule 247 (exp -> Var empty empty .)


state 441

    (185) And -> AND ABRE_P expresion COMA expresion . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 509


state 442

    (186) Or -> OR ABRE_P expresion COMA expresion . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 510


state 443

    (192) Add -> ADD ABRE_P Var empty empty . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 511


state 444

    (195) Add -> ADD ABRE_P Var COMA Var . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 512


state 445

    (193) Add -> ADD ABRE_P Var COMA NUMERO . CIERRA_P PUNTOCOMA
    (90) expresion_alge1 -> NUMERO . SUMA NUMERO
    (91) expresion_alge1 -> NUMERO . RESTA NUMERO
    (92) expresion_alge1 -> NUMERO . MULTI NUMERO
    (93) expresion_alge1 -> NUMERO . DIVISION NUMERO
    (94) expresion_alge1 -> NUMERO . EXPONENTE NUMERO

    CIERRA_P        shift and go to state 513
    SUMA            shift and go to state 126
    RESTA           shift and go to state 127
    MULTI           shift and go to state 128
    DIVISION        shift and go to state 129
    EXPONENTE       shift and go to state 130


state 446

    (194) Add -> ADD ABRE_P Var COMA expresion_alge1 . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 514


state 447

    (196) Add -> ADD ABRE_P Var COMA expresion_alge2 . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 515


state 448

    (25) llamadoproc -> PARA id BRACKET1 parametro . BRACKET2 PUNTOCOMA

    BRACKET2        shift and go to state 516


state 449

    (95) expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 . CIERRA_P

    CIERRA_P        shift and go to state 517


state 450

    (96) expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 . CIERRA_P

    CIERRA_P        shift and go to state 518


state 451

    (97) expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 . CIERRA_P

    CIERRA_P        shift and go to state 519


state 452

    (98) expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 . CIERRA_P

    CIERRA_P        shift and go to state 520


state 453

    (99) expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P EXPONENTE ABRE_P expresion_alge1 . CIERRA_P

    CIERRA_P        shift and go to state 521


state 454

    (118) Mult -> MULTI ABRE_P NUMERO COMA NUMERO CIERRA_P .

    PUNTOCOMA       reduce using rule 118 (Mult -> MULTI ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    NUMERO          reduce using rule 118 (Mult -> MULTI ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    ABRE_P          reduce using rule 118 (Mult -> MULTI ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    SUM             reduce using rule 118 (Mult -> MULTI ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    SUBSTR          reduce using rule 118 (Mult -> MULTI ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    MULTI           reduce using rule 118 (Mult -> MULTI ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    DIV             reduce using rule 118 (Mult -> MULTI ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    RANDOM          reduce using rule 118 (Mult -> MULTI ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    RUN             reduce using rule 118 (Mult -> MULTI ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    IF              reduce using rule 118 (Mult -> MULTI ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    IFELSE          reduce using rule 118 (Mult -> MULTI ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    REPEAT          reduce using rule 118 (Mult -> MULTI ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    UNTIL           reduce using rule 118 (Mult -> MULTI ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    WHILE           reduce using rule 118 (Mult -> MULTI ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    PRINTLINE       reduce using rule 118 (Mult -> MULTI ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    AND             reduce using rule 118 (Mult -> MULTI ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    OR              reduce using rule 118 (Mult -> MULTI ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    ADD             reduce using rule 118 (Mult -> MULTI ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    PUT             reduce using rule 118 (Mult -> MULTI ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    FIN             reduce using rule 118 (Mult -> MULTI ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    COMA            reduce using rule 118 (Mult -> MULTI ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    CIERRA_P        reduce using rule 118 (Mult -> MULTI ABRE_P NUMERO COMA NUMERO CIERRA_P .)


state 455

    (119) Mult -> MULTI ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .

    PUNTOCOMA       reduce using rule 119 (Mult -> MULTI ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    NUMERO          reduce using rule 119 (Mult -> MULTI ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    ABRE_P          reduce using rule 119 (Mult -> MULTI ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    SUM             reduce using rule 119 (Mult -> MULTI ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    SUBSTR          reduce using rule 119 (Mult -> MULTI ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    MULTI           reduce using rule 119 (Mult -> MULTI ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    DIV             reduce using rule 119 (Mult -> MULTI ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    RANDOM          reduce using rule 119 (Mult -> MULTI ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    RUN             reduce using rule 119 (Mult -> MULTI ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    IF              reduce using rule 119 (Mult -> MULTI ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    IFELSE          reduce using rule 119 (Mult -> MULTI ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    REPEAT          reduce using rule 119 (Mult -> MULTI ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    UNTIL           reduce using rule 119 (Mult -> MULTI ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    WHILE           reduce using rule 119 (Mult -> MULTI ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    PRINTLINE       reduce using rule 119 (Mult -> MULTI ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    AND             reduce using rule 119 (Mult -> MULTI ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    OR              reduce using rule 119 (Mult -> MULTI ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    ADD             reduce using rule 119 (Mult -> MULTI ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    PUT             reduce using rule 119 (Mult -> MULTI ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    FIN             reduce using rule 119 (Mult -> MULTI ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    COMA            reduce using rule 119 (Mult -> MULTI ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    CIERRA_P        reduce using rule 119 (Mult -> MULTI ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)


state 456

    (121) Mult -> MULTI ABRE_P NUMERO COMA Var CIERRA_P .

    PUNTOCOMA       reduce using rule 121 (Mult -> MULTI ABRE_P NUMERO COMA Var CIERRA_P .)
    NUMERO          reduce using rule 121 (Mult -> MULTI ABRE_P NUMERO COMA Var CIERRA_P .)
    ABRE_P          reduce using rule 121 (Mult -> MULTI ABRE_P NUMERO COMA Var CIERRA_P .)
    SUM             reduce using rule 121 (Mult -> MULTI ABRE_P NUMERO COMA Var CIERRA_P .)
    SUBSTR          reduce using rule 121 (Mult -> MULTI ABRE_P NUMERO COMA Var CIERRA_P .)
    MULTI           reduce using rule 121 (Mult -> MULTI ABRE_P NUMERO COMA Var CIERRA_P .)
    DIV             reduce using rule 121 (Mult -> MULTI ABRE_P NUMERO COMA Var CIERRA_P .)
    RANDOM          reduce using rule 121 (Mult -> MULTI ABRE_P NUMERO COMA Var CIERRA_P .)
    RUN             reduce using rule 121 (Mult -> MULTI ABRE_P NUMERO COMA Var CIERRA_P .)
    IF              reduce using rule 121 (Mult -> MULTI ABRE_P NUMERO COMA Var CIERRA_P .)
    IFELSE          reduce using rule 121 (Mult -> MULTI ABRE_P NUMERO COMA Var CIERRA_P .)
    REPEAT          reduce using rule 121 (Mult -> MULTI ABRE_P NUMERO COMA Var CIERRA_P .)
    UNTIL           reduce using rule 121 (Mult -> MULTI ABRE_P NUMERO COMA Var CIERRA_P .)
    WHILE           reduce using rule 121 (Mult -> MULTI ABRE_P NUMERO COMA Var CIERRA_P .)
    PRINTLINE       reduce using rule 121 (Mult -> MULTI ABRE_P NUMERO COMA Var CIERRA_P .)
    AND             reduce using rule 121 (Mult -> MULTI ABRE_P NUMERO COMA Var CIERRA_P .)
    OR              reduce using rule 121 (Mult -> MULTI ABRE_P NUMERO COMA Var CIERRA_P .)
    ADD             reduce using rule 121 (Mult -> MULTI ABRE_P NUMERO COMA Var CIERRA_P .)
    PUT             reduce using rule 121 (Mult -> MULTI ABRE_P NUMERO COMA Var CIERRA_P .)
    FIN             reduce using rule 121 (Mult -> MULTI ABRE_P NUMERO COMA Var CIERRA_P .)
    COMA            reduce using rule 121 (Mult -> MULTI ABRE_P NUMERO COMA Var CIERRA_P .)
    CIERRA_P        reduce using rule 121 (Mult -> MULTI ABRE_P NUMERO COMA Var CIERRA_P .)


state 457

    (120) Mult -> MULTI ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .

    PUNTOCOMA       reduce using rule 120 (Mult -> MULTI ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    NUMERO          reduce using rule 120 (Mult -> MULTI ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    ABRE_P          reduce using rule 120 (Mult -> MULTI ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    SUM             reduce using rule 120 (Mult -> MULTI ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    SUBSTR          reduce using rule 120 (Mult -> MULTI ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    MULTI           reduce using rule 120 (Mult -> MULTI ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    DIV             reduce using rule 120 (Mult -> MULTI ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    RANDOM          reduce using rule 120 (Mult -> MULTI ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    RUN             reduce using rule 120 (Mult -> MULTI ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    IF              reduce using rule 120 (Mult -> MULTI ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    IFELSE          reduce using rule 120 (Mult -> MULTI ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    REPEAT          reduce using rule 120 (Mult -> MULTI ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    UNTIL           reduce using rule 120 (Mult -> MULTI ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    WHILE           reduce using rule 120 (Mult -> MULTI ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    PRINTLINE       reduce using rule 120 (Mult -> MULTI ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    AND             reduce using rule 120 (Mult -> MULTI ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    OR              reduce using rule 120 (Mult -> MULTI ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    ADD             reduce using rule 120 (Mult -> MULTI ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    PUT             reduce using rule 120 (Mult -> MULTI ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    FIN             reduce using rule 120 (Mult -> MULTI ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    COMA            reduce using rule 120 (Mult -> MULTI ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    CIERRA_P        reduce using rule 120 (Mult -> MULTI ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)


state 458

    (124) Mult -> MULTI ABRE_P expresion_alge1 COMA Var CIERRA_P .

    PUNTOCOMA       reduce using rule 124 (Mult -> MULTI ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    NUMERO          reduce using rule 124 (Mult -> MULTI ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    ABRE_P          reduce using rule 124 (Mult -> MULTI ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    SUM             reduce using rule 124 (Mult -> MULTI ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    SUBSTR          reduce using rule 124 (Mult -> MULTI ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    MULTI           reduce using rule 124 (Mult -> MULTI ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    DIV             reduce using rule 124 (Mult -> MULTI ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    RANDOM          reduce using rule 124 (Mult -> MULTI ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    RUN             reduce using rule 124 (Mult -> MULTI ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    IF              reduce using rule 124 (Mult -> MULTI ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    IFELSE          reduce using rule 124 (Mult -> MULTI ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    REPEAT          reduce using rule 124 (Mult -> MULTI ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    UNTIL           reduce using rule 124 (Mult -> MULTI ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    WHILE           reduce using rule 124 (Mult -> MULTI ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    PRINTLINE       reduce using rule 124 (Mult -> MULTI ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    AND             reduce using rule 124 (Mult -> MULTI ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    OR              reduce using rule 124 (Mult -> MULTI ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    ADD             reduce using rule 124 (Mult -> MULTI ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    PUT             reduce using rule 124 (Mult -> MULTI ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    FIN             reduce using rule 124 (Mult -> MULTI ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    COMA            reduce using rule 124 (Mult -> MULTI ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    CIERRA_P        reduce using rule 124 (Mult -> MULTI ABRE_P expresion_alge1 COMA Var CIERRA_P .)


state 459

    (125) Mult -> MULTI ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .

    PUNTOCOMA       reduce using rule 125 (Mult -> MULTI ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    NUMERO          reduce using rule 125 (Mult -> MULTI ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    ABRE_P          reduce using rule 125 (Mult -> MULTI ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    SUM             reduce using rule 125 (Mult -> MULTI ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    SUBSTR          reduce using rule 125 (Mult -> MULTI ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    MULTI           reduce using rule 125 (Mult -> MULTI ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    DIV             reduce using rule 125 (Mult -> MULTI ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    RANDOM          reduce using rule 125 (Mult -> MULTI ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    RUN             reduce using rule 125 (Mult -> MULTI ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    IF              reduce using rule 125 (Mult -> MULTI ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    IFELSE          reduce using rule 125 (Mult -> MULTI ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    REPEAT          reduce using rule 125 (Mult -> MULTI ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    UNTIL           reduce using rule 125 (Mult -> MULTI ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    WHILE           reduce using rule 125 (Mult -> MULTI ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    PRINTLINE       reduce using rule 125 (Mult -> MULTI ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    AND             reduce using rule 125 (Mult -> MULTI ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    OR              reduce using rule 125 (Mult -> MULTI ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    ADD             reduce using rule 125 (Mult -> MULTI ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    PUT             reduce using rule 125 (Mult -> MULTI ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    FIN             reduce using rule 125 (Mult -> MULTI ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    COMA            reduce using rule 125 (Mult -> MULTI ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    CIERRA_P        reduce using rule 125 (Mult -> MULTI ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)


state 460

    (123) Mult -> MULTI ABRE_P Var COMA Var CIERRA_P .

    PUNTOCOMA       reduce using rule 123 (Mult -> MULTI ABRE_P Var COMA Var CIERRA_P .)
    NUMERO          reduce using rule 123 (Mult -> MULTI ABRE_P Var COMA Var CIERRA_P .)
    ABRE_P          reduce using rule 123 (Mult -> MULTI ABRE_P Var COMA Var CIERRA_P .)
    SUM             reduce using rule 123 (Mult -> MULTI ABRE_P Var COMA Var CIERRA_P .)
    SUBSTR          reduce using rule 123 (Mult -> MULTI ABRE_P Var COMA Var CIERRA_P .)
    MULTI           reduce using rule 123 (Mult -> MULTI ABRE_P Var COMA Var CIERRA_P .)
    DIV             reduce using rule 123 (Mult -> MULTI ABRE_P Var COMA Var CIERRA_P .)
    RANDOM          reduce using rule 123 (Mult -> MULTI ABRE_P Var COMA Var CIERRA_P .)
    RUN             reduce using rule 123 (Mult -> MULTI ABRE_P Var COMA Var CIERRA_P .)
    IF              reduce using rule 123 (Mult -> MULTI ABRE_P Var COMA Var CIERRA_P .)
    IFELSE          reduce using rule 123 (Mult -> MULTI ABRE_P Var COMA Var CIERRA_P .)
    REPEAT          reduce using rule 123 (Mult -> MULTI ABRE_P Var COMA Var CIERRA_P .)
    UNTIL           reduce using rule 123 (Mult -> MULTI ABRE_P Var COMA Var CIERRA_P .)
    WHILE           reduce using rule 123 (Mult -> MULTI ABRE_P Var COMA Var CIERRA_P .)
    PRINTLINE       reduce using rule 123 (Mult -> MULTI ABRE_P Var COMA Var CIERRA_P .)
    AND             reduce using rule 123 (Mult -> MULTI ABRE_P Var COMA Var CIERRA_P .)
    OR              reduce using rule 123 (Mult -> MULTI ABRE_P Var COMA Var CIERRA_P .)
    ADD             reduce using rule 123 (Mult -> MULTI ABRE_P Var COMA Var CIERRA_P .)
    PUT             reduce using rule 123 (Mult -> MULTI ABRE_P Var COMA Var CIERRA_P .)
    FIN             reduce using rule 123 (Mult -> MULTI ABRE_P Var COMA Var CIERRA_P .)
    COMA            reduce using rule 123 (Mult -> MULTI ABRE_P Var COMA Var CIERRA_P .)
    CIERRA_P        reduce using rule 123 (Mult -> MULTI ABRE_P Var COMA Var CIERRA_P .)


state 461

    (122) Mult -> MULTI ABRE_P Var COMA NUMERO CIERRA_P .

    PUNTOCOMA       reduce using rule 122 (Mult -> MULTI ABRE_P Var COMA NUMERO CIERRA_P .)
    NUMERO          reduce using rule 122 (Mult -> MULTI ABRE_P Var COMA NUMERO CIERRA_P .)
    ABRE_P          reduce using rule 122 (Mult -> MULTI ABRE_P Var COMA NUMERO CIERRA_P .)
    SUM             reduce using rule 122 (Mult -> MULTI ABRE_P Var COMA NUMERO CIERRA_P .)
    SUBSTR          reduce using rule 122 (Mult -> MULTI ABRE_P Var COMA NUMERO CIERRA_P .)
    MULTI           reduce using rule 122 (Mult -> MULTI ABRE_P Var COMA NUMERO CIERRA_P .)
    DIV             reduce using rule 122 (Mult -> MULTI ABRE_P Var COMA NUMERO CIERRA_P .)
    RANDOM          reduce using rule 122 (Mult -> MULTI ABRE_P Var COMA NUMERO CIERRA_P .)
    RUN             reduce using rule 122 (Mult -> MULTI ABRE_P Var COMA NUMERO CIERRA_P .)
    IF              reduce using rule 122 (Mult -> MULTI ABRE_P Var COMA NUMERO CIERRA_P .)
    IFELSE          reduce using rule 122 (Mult -> MULTI ABRE_P Var COMA NUMERO CIERRA_P .)
    REPEAT          reduce using rule 122 (Mult -> MULTI ABRE_P Var COMA NUMERO CIERRA_P .)
    UNTIL           reduce using rule 122 (Mult -> MULTI ABRE_P Var COMA NUMERO CIERRA_P .)
    WHILE           reduce using rule 122 (Mult -> MULTI ABRE_P Var COMA NUMERO CIERRA_P .)
    PRINTLINE       reduce using rule 122 (Mult -> MULTI ABRE_P Var COMA NUMERO CIERRA_P .)
    AND             reduce using rule 122 (Mult -> MULTI ABRE_P Var COMA NUMERO CIERRA_P .)
    OR              reduce using rule 122 (Mult -> MULTI ABRE_P Var COMA NUMERO CIERRA_P .)
    ADD             reduce using rule 122 (Mult -> MULTI ABRE_P Var COMA NUMERO CIERRA_P .)
    PUT             reduce using rule 122 (Mult -> MULTI ABRE_P Var COMA NUMERO CIERRA_P .)
    FIN             reduce using rule 122 (Mult -> MULTI ABRE_P Var COMA NUMERO CIERRA_P .)
    COMA            reduce using rule 122 (Mult -> MULTI ABRE_P Var COMA NUMERO CIERRA_P .)
    CIERRA_P        reduce using rule 122 (Mult -> MULTI ABRE_P Var COMA NUMERO CIERRA_P .)


state 462

    (126) Mult -> MULTI ABRE_P Var COMA expresion_alge1 CIERRA_P .

    PUNTOCOMA       reduce using rule 126 (Mult -> MULTI ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    NUMERO          reduce using rule 126 (Mult -> MULTI ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    ABRE_P          reduce using rule 126 (Mult -> MULTI ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    SUM             reduce using rule 126 (Mult -> MULTI ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    SUBSTR          reduce using rule 126 (Mult -> MULTI ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    MULTI           reduce using rule 126 (Mult -> MULTI ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    DIV             reduce using rule 126 (Mult -> MULTI ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    RANDOM          reduce using rule 126 (Mult -> MULTI ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    RUN             reduce using rule 126 (Mult -> MULTI ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    IF              reduce using rule 126 (Mult -> MULTI ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    IFELSE          reduce using rule 126 (Mult -> MULTI ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    REPEAT          reduce using rule 126 (Mult -> MULTI ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    UNTIL           reduce using rule 126 (Mult -> MULTI ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    WHILE           reduce using rule 126 (Mult -> MULTI ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    PRINTLINE       reduce using rule 126 (Mult -> MULTI ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    AND             reduce using rule 126 (Mult -> MULTI ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    OR              reduce using rule 126 (Mult -> MULTI ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    ADD             reduce using rule 126 (Mult -> MULTI ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    PUT             reduce using rule 126 (Mult -> MULTI ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    FIN             reduce using rule 126 (Mult -> MULTI ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    COMA            reduce using rule 126 (Mult -> MULTI ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    CIERRA_P        reduce using rule 126 (Mult -> MULTI ABRE_P Var COMA expresion_alge1 CIERRA_P .)


state 463

    (127) Div -> DIV ABRE_P NUMERO COMA NUMERO CIERRA_P .

    PUNTOCOMA       reduce using rule 127 (Div -> DIV ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    NUMERO          reduce using rule 127 (Div -> DIV ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    ABRE_P          reduce using rule 127 (Div -> DIV ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    SUM             reduce using rule 127 (Div -> DIV ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    SUBSTR          reduce using rule 127 (Div -> DIV ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    MULTI           reduce using rule 127 (Div -> DIV ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    DIV             reduce using rule 127 (Div -> DIV ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    RANDOM          reduce using rule 127 (Div -> DIV ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    RUN             reduce using rule 127 (Div -> DIV ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    IF              reduce using rule 127 (Div -> DIV ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    IFELSE          reduce using rule 127 (Div -> DIV ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    REPEAT          reduce using rule 127 (Div -> DIV ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    UNTIL           reduce using rule 127 (Div -> DIV ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    WHILE           reduce using rule 127 (Div -> DIV ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    PRINTLINE       reduce using rule 127 (Div -> DIV ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    AND             reduce using rule 127 (Div -> DIV ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    OR              reduce using rule 127 (Div -> DIV ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    ADD             reduce using rule 127 (Div -> DIV ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    PUT             reduce using rule 127 (Div -> DIV ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    FIN             reduce using rule 127 (Div -> DIV ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    COMA            reduce using rule 127 (Div -> DIV ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    CIERRA_P        reduce using rule 127 (Div -> DIV ABRE_P NUMERO COMA NUMERO CIERRA_P .)


state 464

    (128) Div -> DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .

    PUNTOCOMA       reduce using rule 128 (Div -> DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    NUMERO          reduce using rule 128 (Div -> DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    ABRE_P          reduce using rule 128 (Div -> DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    SUM             reduce using rule 128 (Div -> DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    SUBSTR          reduce using rule 128 (Div -> DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    MULTI           reduce using rule 128 (Div -> DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    DIV             reduce using rule 128 (Div -> DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    RANDOM          reduce using rule 128 (Div -> DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    RUN             reduce using rule 128 (Div -> DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    IF              reduce using rule 128 (Div -> DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    IFELSE          reduce using rule 128 (Div -> DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    REPEAT          reduce using rule 128 (Div -> DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    UNTIL           reduce using rule 128 (Div -> DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    WHILE           reduce using rule 128 (Div -> DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    PRINTLINE       reduce using rule 128 (Div -> DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    AND             reduce using rule 128 (Div -> DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    OR              reduce using rule 128 (Div -> DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    ADD             reduce using rule 128 (Div -> DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    PUT             reduce using rule 128 (Div -> DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    FIN             reduce using rule 128 (Div -> DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    COMA            reduce using rule 128 (Div -> DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    CIERRA_P        reduce using rule 128 (Div -> DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)


state 465

    (130) Div -> DIV ABRE_P NUMERO COMA Var CIERRA_P .

    PUNTOCOMA       reduce using rule 130 (Div -> DIV ABRE_P NUMERO COMA Var CIERRA_P .)
    NUMERO          reduce using rule 130 (Div -> DIV ABRE_P NUMERO COMA Var CIERRA_P .)
    ABRE_P          reduce using rule 130 (Div -> DIV ABRE_P NUMERO COMA Var CIERRA_P .)
    SUM             reduce using rule 130 (Div -> DIV ABRE_P NUMERO COMA Var CIERRA_P .)
    SUBSTR          reduce using rule 130 (Div -> DIV ABRE_P NUMERO COMA Var CIERRA_P .)
    MULTI           reduce using rule 130 (Div -> DIV ABRE_P NUMERO COMA Var CIERRA_P .)
    DIV             reduce using rule 130 (Div -> DIV ABRE_P NUMERO COMA Var CIERRA_P .)
    RANDOM          reduce using rule 130 (Div -> DIV ABRE_P NUMERO COMA Var CIERRA_P .)
    RUN             reduce using rule 130 (Div -> DIV ABRE_P NUMERO COMA Var CIERRA_P .)
    IF              reduce using rule 130 (Div -> DIV ABRE_P NUMERO COMA Var CIERRA_P .)
    IFELSE          reduce using rule 130 (Div -> DIV ABRE_P NUMERO COMA Var CIERRA_P .)
    REPEAT          reduce using rule 130 (Div -> DIV ABRE_P NUMERO COMA Var CIERRA_P .)
    UNTIL           reduce using rule 130 (Div -> DIV ABRE_P NUMERO COMA Var CIERRA_P .)
    WHILE           reduce using rule 130 (Div -> DIV ABRE_P NUMERO COMA Var CIERRA_P .)
    PRINTLINE       reduce using rule 130 (Div -> DIV ABRE_P NUMERO COMA Var CIERRA_P .)
    AND             reduce using rule 130 (Div -> DIV ABRE_P NUMERO COMA Var CIERRA_P .)
    OR              reduce using rule 130 (Div -> DIV ABRE_P NUMERO COMA Var CIERRA_P .)
    ADD             reduce using rule 130 (Div -> DIV ABRE_P NUMERO COMA Var CIERRA_P .)
    PUT             reduce using rule 130 (Div -> DIV ABRE_P NUMERO COMA Var CIERRA_P .)
    FIN             reduce using rule 130 (Div -> DIV ABRE_P NUMERO COMA Var CIERRA_P .)
    COMA            reduce using rule 130 (Div -> DIV ABRE_P NUMERO COMA Var CIERRA_P .)
    CIERRA_P        reduce using rule 130 (Div -> DIV ABRE_P NUMERO COMA Var CIERRA_P .)


state 466

    (129) Div -> DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .

    PUNTOCOMA       reduce using rule 129 (Div -> DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    NUMERO          reduce using rule 129 (Div -> DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    ABRE_P          reduce using rule 129 (Div -> DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    SUM             reduce using rule 129 (Div -> DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    SUBSTR          reduce using rule 129 (Div -> DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    MULTI           reduce using rule 129 (Div -> DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    DIV             reduce using rule 129 (Div -> DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    RANDOM          reduce using rule 129 (Div -> DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    RUN             reduce using rule 129 (Div -> DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    IF              reduce using rule 129 (Div -> DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    IFELSE          reduce using rule 129 (Div -> DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    REPEAT          reduce using rule 129 (Div -> DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    UNTIL           reduce using rule 129 (Div -> DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    WHILE           reduce using rule 129 (Div -> DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    PRINTLINE       reduce using rule 129 (Div -> DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    AND             reduce using rule 129 (Div -> DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    OR              reduce using rule 129 (Div -> DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    ADD             reduce using rule 129 (Div -> DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    PUT             reduce using rule 129 (Div -> DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    FIN             reduce using rule 129 (Div -> DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    COMA            reduce using rule 129 (Div -> DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    CIERRA_P        reduce using rule 129 (Div -> DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)


state 467

    (133) Div -> DIV ABRE_P expresion_alge1 COMA Var CIERRA_P .

    PUNTOCOMA       reduce using rule 133 (Div -> DIV ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    NUMERO          reduce using rule 133 (Div -> DIV ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    ABRE_P          reduce using rule 133 (Div -> DIV ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    SUM             reduce using rule 133 (Div -> DIV ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    SUBSTR          reduce using rule 133 (Div -> DIV ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    MULTI           reduce using rule 133 (Div -> DIV ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    DIV             reduce using rule 133 (Div -> DIV ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    RANDOM          reduce using rule 133 (Div -> DIV ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    RUN             reduce using rule 133 (Div -> DIV ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    IF              reduce using rule 133 (Div -> DIV ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    IFELSE          reduce using rule 133 (Div -> DIV ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    REPEAT          reduce using rule 133 (Div -> DIV ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    UNTIL           reduce using rule 133 (Div -> DIV ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    WHILE           reduce using rule 133 (Div -> DIV ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    PRINTLINE       reduce using rule 133 (Div -> DIV ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    AND             reduce using rule 133 (Div -> DIV ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    OR              reduce using rule 133 (Div -> DIV ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    ADD             reduce using rule 133 (Div -> DIV ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    PUT             reduce using rule 133 (Div -> DIV ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    FIN             reduce using rule 133 (Div -> DIV ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    COMA            reduce using rule 133 (Div -> DIV ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    CIERRA_P        reduce using rule 133 (Div -> DIV ABRE_P expresion_alge1 COMA Var CIERRA_P .)


state 468

    (134) Div -> DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .

    PUNTOCOMA       reduce using rule 134 (Div -> DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    NUMERO          reduce using rule 134 (Div -> DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    ABRE_P          reduce using rule 134 (Div -> DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    SUM             reduce using rule 134 (Div -> DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    SUBSTR          reduce using rule 134 (Div -> DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    MULTI           reduce using rule 134 (Div -> DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    DIV             reduce using rule 134 (Div -> DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    RANDOM          reduce using rule 134 (Div -> DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    RUN             reduce using rule 134 (Div -> DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    IF              reduce using rule 134 (Div -> DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    IFELSE          reduce using rule 134 (Div -> DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    REPEAT          reduce using rule 134 (Div -> DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    UNTIL           reduce using rule 134 (Div -> DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    WHILE           reduce using rule 134 (Div -> DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    PRINTLINE       reduce using rule 134 (Div -> DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    AND             reduce using rule 134 (Div -> DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    OR              reduce using rule 134 (Div -> DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    ADD             reduce using rule 134 (Div -> DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    PUT             reduce using rule 134 (Div -> DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    FIN             reduce using rule 134 (Div -> DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    COMA            reduce using rule 134 (Div -> DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    CIERRA_P        reduce using rule 134 (Div -> DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)


state 469

    (132) Div -> DIV ABRE_P Var COMA Var CIERRA_P .

    PUNTOCOMA       reduce using rule 132 (Div -> DIV ABRE_P Var COMA Var CIERRA_P .)
    NUMERO          reduce using rule 132 (Div -> DIV ABRE_P Var COMA Var CIERRA_P .)
    ABRE_P          reduce using rule 132 (Div -> DIV ABRE_P Var COMA Var CIERRA_P .)
    SUM             reduce using rule 132 (Div -> DIV ABRE_P Var COMA Var CIERRA_P .)
    SUBSTR          reduce using rule 132 (Div -> DIV ABRE_P Var COMA Var CIERRA_P .)
    MULTI           reduce using rule 132 (Div -> DIV ABRE_P Var COMA Var CIERRA_P .)
    DIV             reduce using rule 132 (Div -> DIV ABRE_P Var COMA Var CIERRA_P .)
    RANDOM          reduce using rule 132 (Div -> DIV ABRE_P Var COMA Var CIERRA_P .)
    RUN             reduce using rule 132 (Div -> DIV ABRE_P Var COMA Var CIERRA_P .)
    IF              reduce using rule 132 (Div -> DIV ABRE_P Var COMA Var CIERRA_P .)
    IFELSE          reduce using rule 132 (Div -> DIV ABRE_P Var COMA Var CIERRA_P .)
    REPEAT          reduce using rule 132 (Div -> DIV ABRE_P Var COMA Var CIERRA_P .)
    UNTIL           reduce using rule 132 (Div -> DIV ABRE_P Var COMA Var CIERRA_P .)
    WHILE           reduce using rule 132 (Div -> DIV ABRE_P Var COMA Var CIERRA_P .)
    PRINTLINE       reduce using rule 132 (Div -> DIV ABRE_P Var COMA Var CIERRA_P .)
    AND             reduce using rule 132 (Div -> DIV ABRE_P Var COMA Var CIERRA_P .)
    OR              reduce using rule 132 (Div -> DIV ABRE_P Var COMA Var CIERRA_P .)
    ADD             reduce using rule 132 (Div -> DIV ABRE_P Var COMA Var CIERRA_P .)
    PUT             reduce using rule 132 (Div -> DIV ABRE_P Var COMA Var CIERRA_P .)
    FIN             reduce using rule 132 (Div -> DIV ABRE_P Var COMA Var CIERRA_P .)
    COMA            reduce using rule 132 (Div -> DIV ABRE_P Var COMA Var CIERRA_P .)
    CIERRA_P        reduce using rule 132 (Div -> DIV ABRE_P Var COMA Var CIERRA_P .)


state 470

    (131) Div -> DIV ABRE_P Var COMA NUMERO CIERRA_P .

    PUNTOCOMA       reduce using rule 131 (Div -> DIV ABRE_P Var COMA NUMERO CIERRA_P .)
    NUMERO          reduce using rule 131 (Div -> DIV ABRE_P Var COMA NUMERO CIERRA_P .)
    ABRE_P          reduce using rule 131 (Div -> DIV ABRE_P Var COMA NUMERO CIERRA_P .)
    SUM             reduce using rule 131 (Div -> DIV ABRE_P Var COMA NUMERO CIERRA_P .)
    SUBSTR          reduce using rule 131 (Div -> DIV ABRE_P Var COMA NUMERO CIERRA_P .)
    MULTI           reduce using rule 131 (Div -> DIV ABRE_P Var COMA NUMERO CIERRA_P .)
    DIV             reduce using rule 131 (Div -> DIV ABRE_P Var COMA NUMERO CIERRA_P .)
    RANDOM          reduce using rule 131 (Div -> DIV ABRE_P Var COMA NUMERO CIERRA_P .)
    RUN             reduce using rule 131 (Div -> DIV ABRE_P Var COMA NUMERO CIERRA_P .)
    IF              reduce using rule 131 (Div -> DIV ABRE_P Var COMA NUMERO CIERRA_P .)
    IFELSE          reduce using rule 131 (Div -> DIV ABRE_P Var COMA NUMERO CIERRA_P .)
    REPEAT          reduce using rule 131 (Div -> DIV ABRE_P Var COMA NUMERO CIERRA_P .)
    UNTIL           reduce using rule 131 (Div -> DIV ABRE_P Var COMA NUMERO CIERRA_P .)
    WHILE           reduce using rule 131 (Div -> DIV ABRE_P Var COMA NUMERO CIERRA_P .)
    PRINTLINE       reduce using rule 131 (Div -> DIV ABRE_P Var COMA NUMERO CIERRA_P .)
    AND             reduce using rule 131 (Div -> DIV ABRE_P Var COMA NUMERO CIERRA_P .)
    OR              reduce using rule 131 (Div -> DIV ABRE_P Var COMA NUMERO CIERRA_P .)
    ADD             reduce using rule 131 (Div -> DIV ABRE_P Var COMA NUMERO CIERRA_P .)
    PUT             reduce using rule 131 (Div -> DIV ABRE_P Var COMA NUMERO CIERRA_P .)
    FIN             reduce using rule 131 (Div -> DIV ABRE_P Var COMA NUMERO CIERRA_P .)
    COMA            reduce using rule 131 (Div -> DIV ABRE_P Var COMA NUMERO CIERRA_P .)
    CIERRA_P        reduce using rule 131 (Div -> DIV ABRE_P Var COMA NUMERO CIERRA_P .)


state 471

    (135) Div -> DIV ABRE_P Var COMA expresion_alge1 CIERRA_P .

    PUNTOCOMA       reduce using rule 135 (Div -> DIV ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    NUMERO          reduce using rule 135 (Div -> DIV ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    ABRE_P          reduce using rule 135 (Div -> DIV ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    SUM             reduce using rule 135 (Div -> DIV ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    SUBSTR          reduce using rule 135 (Div -> DIV ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    MULTI           reduce using rule 135 (Div -> DIV ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    DIV             reduce using rule 135 (Div -> DIV ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    RANDOM          reduce using rule 135 (Div -> DIV ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    RUN             reduce using rule 135 (Div -> DIV ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    IF              reduce using rule 135 (Div -> DIV ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    IFELSE          reduce using rule 135 (Div -> DIV ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    REPEAT          reduce using rule 135 (Div -> DIV ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    UNTIL           reduce using rule 135 (Div -> DIV ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    WHILE           reduce using rule 135 (Div -> DIV ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    PRINTLINE       reduce using rule 135 (Div -> DIV ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    AND             reduce using rule 135 (Div -> DIV ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    OR              reduce using rule 135 (Div -> DIV ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    ADD             reduce using rule 135 (Div -> DIV ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    PUT             reduce using rule 135 (Div -> DIV ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    FIN             reduce using rule 135 (Div -> DIV ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    COMA            reduce using rule 135 (Div -> DIV ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    CIERRA_P        reduce using rule 135 (Div -> DIV ABRE_P Var COMA expresion_alge1 CIERRA_P .)


state 472

    (100) Sum -> SUM ABRE_P NUMERO COMA NUMERO CIERRA_P .

    PUNTOCOMA       reduce using rule 100 (Sum -> SUM ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    NUMERO          reduce using rule 100 (Sum -> SUM ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    ABRE_P          reduce using rule 100 (Sum -> SUM ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    SUM             reduce using rule 100 (Sum -> SUM ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    SUBSTR          reduce using rule 100 (Sum -> SUM ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    MULTI           reduce using rule 100 (Sum -> SUM ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    DIV             reduce using rule 100 (Sum -> SUM ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    RANDOM          reduce using rule 100 (Sum -> SUM ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    RUN             reduce using rule 100 (Sum -> SUM ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    IF              reduce using rule 100 (Sum -> SUM ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    IFELSE          reduce using rule 100 (Sum -> SUM ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    REPEAT          reduce using rule 100 (Sum -> SUM ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    UNTIL           reduce using rule 100 (Sum -> SUM ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    WHILE           reduce using rule 100 (Sum -> SUM ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    PRINTLINE       reduce using rule 100 (Sum -> SUM ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    AND             reduce using rule 100 (Sum -> SUM ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    OR              reduce using rule 100 (Sum -> SUM ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    ADD             reduce using rule 100 (Sum -> SUM ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    PUT             reduce using rule 100 (Sum -> SUM ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    FIN             reduce using rule 100 (Sum -> SUM ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    COMA            reduce using rule 100 (Sum -> SUM ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    CIERRA_P        reduce using rule 100 (Sum -> SUM ABRE_P NUMERO COMA NUMERO CIERRA_P .)


state 473

    (101) Sum -> SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .

    PUNTOCOMA       reduce using rule 101 (Sum -> SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    NUMERO          reduce using rule 101 (Sum -> SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    ABRE_P          reduce using rule 101 (Sum -> SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    SUM             reduce using rule 101 (Sum -> SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    SUBSTR          reduce using rule 101 (Sum -> SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    MULTI           reduce using rule 101 (Sum -> SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    DIV             reduce using rule 101 (Sum -> SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    RANDOM          reduce using rule 101 (Sum -> SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    RUN             reduce using rule 101 (Sum -> SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    IF              reduce using rule 101 (Sum -> SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    IFELSE          reduce using rule 101 (Sum -> SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    REPEAT          reduce using rule 101 (Sum -> SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    UNTIL           reduce using rule 101 (Sum -> SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    WHILE           reduce using rule 101 (Sum -> SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    PRINTLINE       reduce using rule 101 (Sum -> SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    AND             reduce using rule 101 (Sum -> SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    OR              reduce using rule 101 (Sum -> SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    ADD             reduce using rule 101 (Sum -> SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    PUT             reduce using rule 101 (Sum -> SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    FIN             reduce using rule 101 (Sum -> SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    COMA            reduce using rule 101 (Sum -> SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    CIERRA_P        reduce using rule 101 (Sum -> SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)


state 474

    (103) Sum -> SUM ABRE_P NUMERO COMA Var CIERRA_P .

    PUNTOCOMA       reduce using rule 103 (Sum -> SUM ABRE_P NUMERO COMA Var CIERRA_P .)
    NUMERO          reduce using rule 103 (Sum -> SUM ABRE_P NUMERO COMA Var CIERRA_P .)
    ABRE_P          reduce using rule 103 (Sum -> SUM ABRE_P NUMERO COMA Var CIERRA_P .)
    SUM             reduce using rule 103 (Sum -> SUM ABRE_P NUMERO COMA Var CIERRA_P .)
    SUBSTR          reduce using rule 103 (Sum -> SUM ABRE_P NUMERO COMA Var CIERRA_P .)
    MULTI           reduce using rule 103 (Sum -> SUM ABRE_P NUMERO COMA Var CIERRA_P .)
    DIV             reduce using rule 103 (Sum -> SUM ABRE_P NUMERO COMA Var CIERRA_P .)
    RANDOM          reduce using rule 103 (Sum -> SUM ABRE_P NUMERO COMA Var CIERRA_P .)
    RUN             reduce using rule 103 (Sum -> SUM ABRE_P NUMERO COMA Var CIERRA_P .)
    IF              reduce using rule 103 (Sum -> SUM ABRE_P NUMERO COMA Var CIERRA_P .)
    IFELSE          reduce using rule 103 (Sum -> SUM ABRE_P NUMERO COMA Var CIERRA_P .)
    REPEAT          reduce using rule 103 (Sum -> SUM ABRE_P NUMERO COMA Var CIERRA_P .)
    UNTIL           reduce using rule 103 (Sum -> SUM ABRE_P NUMERO COMA Var CIERRA_P .)
    WHILE           reduce using rule 103 (Sum -> SUM ABRE_P NUMERO COMA Var CIERRA_P .)
    PRINTLINE       reduce using rule 103 (Sum -> SUM ABRE_P NUMERO COMA Var CIERRA_P .)
    AND             reduce using rule 103 (Sum -> SUM ABRE_P NUMERO COMA Var CIERRA_P .)
    OR              reduce using rule 103 (Sum -> SUM ABRE_P NUMERO COMA Var CIERRA_P .)
    ADD             reduce using rule 103 (Sum -> SUM ABRE_P NUMERO COMA Var CIERRA_P .)
    PUT             reduce using rule 103 (Sum -> SUM ABRE_P NUMERO COMA Var CIERRA_P .)
    FIN             reduce using rule 103 (Sum -> SUM ABRE_P NUMERO COMA Var CIERRA_P .)
    COMA            reduce using rule 103 (Sum -> SUM ABRE_P NUMERO COMA Var CIERRA_P .)
    CIERRA_P        reduce using rule 103 (Sum -> SUM ABRE_P NUMERO COMA Var CIERRA_P .)


state 475

    (102) Sum -> SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .

    PUNTOCOMA       reduce using rule 102 (Sum -> SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    NUMERO          reduce using rule 102 (Sum -> SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    ABRE_P          reduce using rule 102 (Sum -> SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    SUM             reduce using rule 102 (Sum -> SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    SUBSTR          reduce using rule 102 (Sum -> SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    MULTI           reduce using rule 102 (Sum -> SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    DIV             reduce using rule 102 (Sum -> SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    RANDOM          reduce using rule 102 (Sum -> SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    RUN             reduce using rule 102 (Sum -> SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    IF              reduce using rule 102 (Sum -> SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    IFELSE          reduce using rule 102 (Sum -> SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    REPEAT          reduce using rule 102 (Sum -> SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    UNTIL           reduce using rule 102 (Sum -> SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    WHILE           reduce using rule 102 (Sum -> SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    PRINTLINE       reduce using rule 102 (Sum -> SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    AND             reduce using rule 102 (Sum -> SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    OR              reduce using rule 102 (Sum -> SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    ADD             reduce using rule 102 (Sum -> SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    PUT             reduce using rule 102 (Sum -> SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    FIN             reduce using rule 102 (Sum -> SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    COMA            reduce using rule 102 (Sum -> SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    CIERRA_P        reduce using rule 102 (Sum -> SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)


state 476

    (106) Sum -> SUM ABRE_P expresion_alge1 COMA Var CIERRA_P .

    PUNTOCOMA       reduce using rule 106 (Sum -> SUM ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    NUMERO          reduce using rule 106 (Sum -> SUM ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    ABRE_P          reduce using rule 106 (Sum -> SUM ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    SUM             reduce using rule 106 (Sum -> SUM ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    SUBSTR          reduce using rule 106 (Sum -> SUM ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    MULTI           reduce using rule 106 (Sum -> SUM ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    DIV             reduce using rule 106 (Sum -> SUM ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    RANDOM          reduce using rule 106 (Sum -> SUM ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    RUN             reduce using rule 106 (Sum -> SUM ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    IF              reduce using rule 106 (Sum -> SUM ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    IFELSE          reduce using rule 106 (Sum -> SUM ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    REPEAT          reduce using rule 106 (Sum -> SUM ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    UNTIL           reduce using rule 106 (Sum -> SUM ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    WHILE           reduce using rule 106 (Sum -> SUM ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    PRINTLINE       reduce using rule 106 (Sum -> SUM ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    AND             reduce using rule 106 (Sum -> SUM ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    OR              reduce using rule 106 (Sum -> SUM ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    ADD             reduce using rule 106 (Sum -> SUM ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    PUT             reduce using rule 106 (Sum -> SUM ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    FIN             reduce using rule 106 (Sum -> SUM ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    COMA            reduce using rule 106 (Sum -> SUM ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    CIERRA_P        reduce using rule 106 (Sum -> SUM ABRE_P expresion_alge1 COMA Var CIERRA_P .)


state 477

    (107) Sum -> SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .

    PUNTOCOMA       reduce using rule 107 (Sum -> SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    NUMERO          reduce using rule 107 (Sum -> SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    ABRE_P          reduce using rule 107 (Sum -> SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    SUM             reduce using rule 107 (Sum -> SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    SUBSTR          reduce using rule 107 (Sum -> SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    MULTI           reduce using rule 107 (Sum -> SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    DIV             reduce using rule 107 (Sum -> SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    RANDOM          reduce using rule 107 (Sum -> SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    RUN             reduce using rule 107 (Sum -> SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    IF              reduce using rule 107 (Sum -> SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    IFELSE          reduce using rule 107 (Sum -> SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    REPEAT          reduce using rule 107 (Sum -> SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    UNTIL           reduce using rule 107 (Sum -> SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    WHILE           reduce using rule 107 (Sum -> SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    PRINTLINE       reduce using rule 107 (Sum -> SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    AND             reduce using rule 107 (Sum -> SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    OR              reduce using rule 107 (Sum -> SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    ADD             reduce using rule 107 (Sum -> SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    PUT             reduce using rule 107 (Sum -> SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    FIN             reduce using rule 107 (Sum -> SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    COMA            reduce using rule 107 (Sum -> SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    CIERRA_P        reduce using rule 107 (Sum -> SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)


state 478

    (105) Sum -> SUM ABRE_P Var COMA Var CIERRA_P .

    PUNTOCOMA       reduce using rule 105 (Sum -> SUM ABRE_P Var COMA Var CIERRA_P .)
    NUMERO          reduce using rule 105 (Sum -> SUM ABRE_P Var COMA Var CIERRA_P .)
    ABRE_P          reduce using rule 105 (Sum -> SUM ABRE_P Var COMA Var CIERRA_P .)
    SUM             reduce using rule 105 (Sum -> SUM ABRE_P Var COMA Var CIERRA_P .)
    SUBSTR          reduce using rule 105 (Sum -> SUM ABRE_P Var COMA Var CIERRA_P .)
    MULTI           reduce using rule 105 (Sum -> SUM ABRE_P Var COMA Var CIERRA_P .)
    DIV             reduce using rule 105 (Sum -> SUM ABRE_P Var COMA Var CIERRA_P .)
    RANDOM          reduce using rule 105 (Sum -> SUM ABRE_P Var COMA Var CIERRA_P .)
    RUN             reduce using rule 105 (Sum -> SUM ABRE_P Var COMA Var CIERRA_P .)
    IF              reduce using rule 105 (Sum -> SUM ABRE_P Var COMA Var CIERRA_P .)
    IFELSE          reduce using rule 105 (Sum -> SUM ABRE_P Var COMA Var CIERRA_P .)
    REPEAT          reduce using rule 105 (Sum -> SUM ABRE_P Var COMA Var CIERRA_P .)
    UNTIL           reduce using rule 105 (Sum -> SUM ABRE_P Var COMA Var CIERRA_P .)
    WHILE           reduce using rule 105 (Sum -> SUM ABRE_P Var COMA Var CIERRA_P .)
    PRINTLINE       reduce using rule 105 (Sum -> SUM ABRE_P Var COMA Var CIERRA_P .)
    AND             reduce using rule 105 (Sum -> SUM ABRE_P Var COMA Var CIERRA_P .)
    OR              reduce using rule 105 (Sum -> SUM ABRE_P Var COMA Var CIERRA_P .)
    ADD             reduce using rule 105 (Sum -> SUM ABRE_P Var COMA Var CIERRA_P .)
    PUT             reduce using rule 105 (Sum -> SUM ABRE_P Var COMA Var CIERRA_P .)
    FIN             reduce using rule 105 (Sum -> SUM ABRE_P Var COMA Var CIERRA_P .)
    COMA            reduce using rule 105 (Sum -> SUM ABRE_P Var COMA Var CIERRA_P .)
    CIERRA_P        reduce using rule 105 (Sum -> SUM ABRE_P Var COMA Var CIERRA_P .)


state 479

    (104) Sum -> SUM ABRE_P Var COMA NUMERO CIERRA_P .

    PUNTOCOMA       reduce using rule 104 (Sum -> SUM ABRE_P Var COMA NUMERO CIERRA_P .)
    NUMERO          reduce using rule 104 (Sum -> SUM ABRE_P Var COMA NUMERO CIERRA_P .)
    ABRE_P          reduce using rule 104 (Sum -> SUM ABRE_P Var COMA NUMERO CIERRA_P .)
    SUM             reduce using rule 104 (Sum -> SUM ABRE_P Var COMA NUMERO CIERRA_P .)
    SUBSTR          reduce using rule 104 (Sum -> SUM ABRE_P Var COMA NUMERO CIERRA_P .)
    MULTI           reduce using rule 104 (Sum -> SUM ABRE_P Var COMA NUMERO CIERRA_P .)
    DIV             reduce using rule 104 (Sum -> SUM ABRE_P Var COMA NUMERO CIERRA_P .)
    RANDOM          reduce using rule 104 (Sum -> SUM ABRE_P Var COMA NUMERO CIERRA_P .)
    RUN             reduce using rule 104 (Sum -> SUM ABRE_P Var COMA NUMERO CIERRA_P .)
    IF              reduce using rule 104 (Sum -> SUM ABRE_P Var COMA NUMERO CIERRA_P .)
    IFELSE          reduce using rule 104 (Sum -> SUM ABRE_P Var COMA NUMERO CIERRA_P .)
    REPEAT          reduce using rule 104 (Sum -> SUM ABRE_P Var COMA NUMERO CIERRA_P .)
    UNTIL           reduce using rule 104 (Sum -> SUM ABRE_P Var COMA NUMERO CIERRA_P .)
    WHILE           reduce using rule 104 (Sum -> SUM ABRE_P Var COMA NUMERO CIERRA_P .)
    PRINTLINE       reduce using rule 104 (Sum -> SUM ABRE_P Var COMA NUMERO CIERRA_P .)
    AND             reduce using rule 104 (Sum -> SUM ABRE_P Var COMA NUMERO CIERRA_P .)
    OR              reduce using rule 104 (Sum -> SUM ABRE_P Var COMA NUMERO CIERRA_P .)
    ADD             reduce using rule 104 (Sum -> SUM ABRE_P Var COMA NUMERO CIERRA_P .)
    PUT             reduce using rule 104 (Sum -> SUM ABRE_P Var COMA NUMERO CIERRA_P .)
    FIN             reduce using rule 104 (Sum -> SUM ABRE_P Var COMA NUMERO CIERRA_P .)
    COMA            reduce using rule 104 (Sum -> SUM ABRE_P Var COMA NUMERO CIERRA_P .)
    CIERRA_P        reduce using rule 104 (Sum -> SUM ABRE_P Var COMA NUMERO CIERRA_P .)


state 480

    (108) Sum -> SUM ABRE_P Var COMA expresion_alge1 CIERRA_P .

    PUNTOCOMA       reduce using rule 108 (Sum -> SUM ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    NUMERO          reduce using rule 108 (Sum -> SUM ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    ABRE_P          reduce using rule 108 (Sum -> SUM ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    SUM             reduce using rule 108 (Sum -> SUM ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    SUBSTR          reduce using rule 108 (Sum -> SUM ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    MULTI           reduce using rule 108 (Sum -> SUM ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    DIV             reduce using rule 108 (Sum -> SUM ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    RANDOM          reduce using rule 108 (Sum -> SUM ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    RUN             reduce using rule 108 (Sum -> SUM ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    IF              reduce using rule 108 (Sum -> SUM ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    IFELSE          reduce using rule 108 (Sum -> SUM ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    REPEAT          reduce using rule 108 (Sum -> SUM ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    UNTIL           reduce using rule 108 (Sum -> SUM ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    WHILE           reduce using rule 108 (Sum -> SUM ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    PRINTLINE       reduce using rule 108 (Sum -> SUM ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    AND             reduce using rule 108 (Sum -> SUM ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    OR              reduce using rule 108 (Sum -> SUM ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    ADD             reduce using rule 108 (Sum -> SUM ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    PUT             reduce using rule 108 (Sum -> SUM ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    FIN             reduce using rule 108 (Sum -> SUM ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    COMA            reduce using rule 108 (Sum -> SUM ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    CIERRA_P        reduce using rule 108 (Sum -> SUM ABRE_P Var COMA expresion_alge1 CIERRA_P .)


state 481

    (109) Substr -> SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P .

    PUNTOCOMA       reduce using rule 109 (Substr -> SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    NUMERO          reduce using rule 109 (Substr -> SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    ABRE_P          reduce using rule 109 (Substr -> SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    SUM             reduce using rule 109 (Substr -> SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    SUBSTR          reduce using rule 109 (Substr -> SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    MULTI           reduce using rule 109 (Substr -> SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    DIV             reduce using rule 109 (Substr -> SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    RANDOM          reduce using rule 109 (Substr -> SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    RUN             reduce using rule 109 (Substr -> SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    IF              reduce using rule 109 (Substr -> SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    IFELSE          reduce using rule 109 (Substr -> SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    REPEAT          reduce using rule 109 (Substr -> SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    UNTIL           reduce using rule 109 (Substr -> SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    WHILE           reduce using rule 109 (Substr -> SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    PRINTLINE       reduce using rule 109 (Substr -> SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    AND             reduce using rule 109 (Substr -> SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    OR              reduce using rule 109 (Substr -> SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    ADD             reduce using rule 109 (Substr -> SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    PUT             reduce using rule 109 (Substr -> SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    FIN             reduce using rule 109 (Substr -> SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    COMA            reduce using rule 109 (Substr -> SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    CIERRA_P        reduce using rule 109 (Substr -> SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P .)


state 482

    (110) Substr -> SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .

    PUNTOCOMA       reduce using rule 110 (Substr -> SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    NUMERO          reduce using rule 110 (Substr -> SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    ABRE_P          reduce using rule 110 (Substr -> SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    SUM             reduce using rule 110 (Substr -> SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    SUBSTR          reduce using rule 110 (Substr -> SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    MULTI           reduce using rule 110 (Substr -> SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    DIV             reduce using rule 110 (Substr -> SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    RANDOM          reduce using rule 110 (Substr -> SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    RUN             reduce using rule 110 (Substr -> SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    IF              reduce using rule 110 (Substr -> SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    IFELSE          reduce using rule 110 (Substr -> SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    REPEAT          reduce using rule 110 (Substr -> SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    UNTIL           reduce using rule 110 (Substr -> SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    WHILE           reduce using rule 110 (Substr -> SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    PRINTLINE       reduce using rule 110 (Substr -> SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    AND             reduce using rule 110 (Substr -> SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    OR              reduce using rule 110 (Substr -> SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    ADD             reduce using rule 110 (Substr -> SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    PUT             reduce using rule 110 (Substr -> SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    FIN             reduce using rule 110 (Substr -> SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    COMA            reduce using rule 110 (Substr -> SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    CIERRA_P        reduce using rule 110 (Substr -> SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)


state 483

    (112) Substr -> SUBSTR ABRE_P NUMERO COMA Var CIERRA_P .

    PUNTOCOMA       reduce using rule 112 (Substr -> SUBSTR ABRE_P NUMERO COMA Var CIERRA_P .)
    NUMERO          reduce using rule 112 (Substr -> SUBSTR ABRE_P NUMERO COMA Var CIERRA_P .)
    ABRE_P          reduce using rule 112 (Substr -> SUBSTR ABRE_P NUMERO COMA Var CIERRA_P .)
    SUM             reduce using rule 112 (Substr -> SUBSTR ABRE_P NUMERO COMA Var CIERRA_P .)
    SUBSTR          reduce using rule 112 (Substr -> SUBSTR ABRE_P NUMERO COMA Var CIERRA_P .)
    MULTI           reduce using rule 112 (Substr -> SUBSTR ABRE_P NUMERO COMA Var CIERRA_P .)
    DIV             reduce using rule 112 (Substr -> SUBSTR ABRE_P NUMERO COMA Var CIERRA_P .)
    RANDOM          reduce using rule 112 (Substr -> SUBSTR ABRE_P NUMERO COMA Var CIERRA_P .)
    RUN             reduce using rule 112 (Substr -> SUBSTR ABRE_P NUMERO COMA Var CIERRA_P .)
    IF              reduce using rule 112 (Substr -> SUBSTR ABRE_P NUMERO COMA Var CIERRA_P .)
    IFELSE          reduce using rule 112 (Substr -> SUBSTR ABRE_P NUMERO COMA Var CIERRA_P .)
    REPEAT          reduce using rule 112 (Substr -> SUBSTR ABRE_P NUMERO COMA Var CIERRA_P .)
    UNTIL           reduce using rule 112 (Substr -> SUBSTR ABRE_P NUMERO COMA Var CIERRA_P .)
    WHILE           reduce using rule 112 (Substr -> SUBSTR ABRE_P NUMERO COMA Var CIERRA_P .)
    PRINTLINE       reduce using rule 112 (Substr -> SUBSTR ABRE_P NUMERO COMA Var CIERRA_P .)
    AND             reduce using rule 112 (Substr -> SUBSTR ABRE_P NUMERO COMA Var CIERRA_P .)
    OR              reduce using rule 112 (Substr -> SUBSTR ABRE_P NUMERO COMA Var CIERRA_P .)
    ADD             reduce using rule 112 (Substr -> SUBSTR ABRE_P NUMERO COMA Var CIERRA_P .)
    PUT             reduce using rule 112 (Substr -> SUBSTR ABRE_P NUMERO COMA Var CIERRA_P .)
    FIN             reduce using rule 112 (Substr -> SUBSTR ABRE_P NUMERO COMA Var CIERRA_P .)
    COMA            reduce using rule 112 (Substr -> SUBSTR ABRE_P NUMERO COMA Var CIERRA_P .)
    CIERRA_P        reduce using rule 112 (Substr -> SUBSTR ABRE_P NUMERO COMA Var CIERRA_P .)


state 484

    (111) Substr -> SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .

    PUNTOCOMA       reduce using rule 111 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    NUMERO          reduce using rule 111 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    ABRE_P          reduce using rule 111 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    SUM             reduce using rule 111 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    SUBSTR          reduce using rule 111 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    MULTI           reduce using rule 111 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    DIV             reduce using rule 111 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    RANDOM          reduce using rule 111 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    RUN             reduce using rule 111 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    IF              reduce using rule 111 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    IFELSE          reduce using rule 111 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    REPEAT          reduce using rule 111 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    UNTIL           reduce using rule 111 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    WHILE           reduce using rule 111 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    PRINTLINE       reduce using rule 111 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    AND             reduce using rule 111 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    OR              reduce using rule 111 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    ADD             reduce using rule 111 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    PUT             reduce using rule 111 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    FIN             reduce using rule 111 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    COMA            reduce using rule 111 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    CIERRA_P        reduce using rule 111 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)


state 485

    (115) Substr -> SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P .

    PUNTOCOMA       reduce using rule 115 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    NUMERO          reduce using rule 115 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    ABRE_P          reduce using rule 115 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    SUM             reduce using rule 115 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    SUBSTR          reduce using rule 115 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    MULTI           reduce using rule 115 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    DIV             reduce using rule 115 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    RANDOM          reduce using rule 115 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    RUN             reduce using rule 115 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    IF              reduce using rule 115 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    IFELSE          reduce using rule 115 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    REPEAT          reduce using rule 115 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    UNTIL           reduce using rule 115 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    WHILE           reduce using rule 115 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    PRINTLINE       reduce using rule 115 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    AND             reduce using rule 115 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    OR              reduce using rule 115 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    ADD             reduce using rule 115 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    PUT             reduce using rule 115 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    FIN             reduce using rule 115 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    COMA            reduce using rule 115 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    CIERRA_P        reduce using rule 115 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P .)


state 486

    (116) Substr -> SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .

    PUNTOCOMA       reduce using rule 116 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    NUMERO          reduce using rule 116 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    ABRE_P          reduce using rule 116 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    SUM             reduce using rule 116 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    SUBSTR          reduce using rule 116 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    MULTI           reduce using rule 116 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    DIV             reduce using rule 116 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    RANDOM          reduce using rule 116 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    RUN             reduce using rule 116 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    IF              reduce using rule 116 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    IFELSE          reduce using rule 116 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    REPEAT          reduce using rule 116 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    UNTIL           reduce using rule 116 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    WHILE           reduce using rule 116 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    PRINTLINE       reduce using rule 116 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    AND             reduce using rule 116 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    OR              reduce using rule 116 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    ADD             reduce using rule 116 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    PUT             reduce using rule 116 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    FIN             reduce using rule 116 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    COMA            reduce using rule 116 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    CIERRA_P        reduce using rule 116 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)


state 487

    (114) Substr -> SUBSTR ABRE_P Var COMA Var CIERRA_P .

    PUNTOCOMA       reduce using rule 114 (Substr -> SUBSTR ABRE_P Var COMA Var CIERRA_P .)
    NUMERO          reduce using rule 114 (Substr -> SUBSTR ABRE_P Var COMA Var CIERRA_P .)
    ABRE_P          reduce using rule 114 (Substr -> SUBSTR ABRE_P Var COMA Var CIERRA_P .)
    SUM             reduce using rule 114 (Substr -> SUBSTR ABRE_P Var COMA Var CIERRA_P .)
    SUBSTR          reduce using rule 114 (Substr -> SUBSTR ABRE_P Var COMA Var CIERRA_P .)
    MULTI           reduce using rule 114 (Substr -> SUBSTR ABRE_P Var COMA Var CIERRA_P .)
    DIV             reduce using rule 114 (Substr -> SUBSTR ABRE_P Var COMA Var CIERRA_P .)
    RANDOM          reduce using rule 114 (Substr -> SUBSTR ABRE_P Var COMA Var CIERRA_P .)
    RUN             reduce using rule 114 (Substr -> SUBSTR ABRE_P Var COMA Var CIERRA_P .)
    IF              reduce using rule 114 (Substr -> SUBSTR ABRE_P Var COMA Var CIERRA_P .)
    IFELSE          reduce using rule 114 (Substr -> SUBSTR ABRE_P Var COMA Var CIERRA_P .)
    REPEAT          reduce using rule 114 (Substr -> SUBSTR ABRE_P Var COMA Var CIERRA_P .)
    UNTIL           reduce using rule 114 (Substr -> SUBSTR ABRE_P Var COMA Var CIERRA_P .)
    WHILE           reduce using rule 114 (Substr -> SUBSTR ABRE_P Var COMA Var CIERRA_P .)
    PRINTLINE       reduce using rule 114 (Substr -> SUBSTR ABRE_P Var COMA Var CIERRA_P .)
    AND             reduce using rule 114 (Substr -> SUBSTR ABRE_P Var COMA Var CIERRA_P .)
    OR              reduce using rule 114 (Substr -> SUBSTR ABRE_P Var COMA Var CIERRA_P .)
    ADD             reduce using rule 114 (Substr -> SUBSTR ABRE_P Var COMA Var CIERRA_P .)
    PUT             reduce using rule 114 (Substr -> SUBSTR ABRE_P Var COMA Var CIERRA_P .)
    FIN             reduce using rule 114 (Substr -> SUBSTR ABRE_P Var COMA Var CIERRA_P .)
    COMA            reduce using rule 114 (Substr -> SUBSTR ABRE_P Var COMA Var CIERRA_P .)
    CIERRA_P        reduce using rule 114 (Substr -> SUBSTR ABRE_P Var COMA Var CIERRA_P .)


state 488

    (113) Substr -> SUBSTR ABRE_P Var COMA NUMERO CIERRA_P .

    PUNTOCOMA       reduce using rule 113 (Substr -> SUBSTR ABRE_P Var COMA NUMERO CIERRA_P .)
    NUMERO          reduce using rule 113 (Substr -> SUBSTR ABRE_P Var COMA NUMERO CIERRA_P .)
    ABRE_P          reduce using rule 113 (Substr -> SUBSTR ABRE_P Var COMA NUMERO CIERRA_P .)
    SUM             reduce using rule 113 (Substr -> SUBSTR ABRE_P Var COMA NUMERO CIERRA_P .)
    SUBSTR          reduce using rule 113 (Substr -> SUBSTR ABRE_P Var COMA NUMERO CIERRA_P .)
    MULTI           reduce using rule 113 (Substr -> SUBSTR ABRE_P Var COMA NUMERO CIERRA_P .)
    DIV             reduce using rule 113 (Substr -> SUBSTR ABRE_P Var COMA NUMERO CIERRA_P .)
    RANDOM          reduce using rule 113 (Substr -> SUBSTR ABRE_P Var COMA NUMERO CIERRA_P .)
    RUN             reduce using rule 113 (Substr -> SUBSTR ABRE_P Var COMA NUMERO CIERRA_P .)
    IF              reduce using rule 113 (Substr -> SUBSTR ABRE_P Var COMA NUMERO CIERRA_P .)
    IFELSE          reduce using rule 113 (Substr -> SUBSTR ABRE_P Var COMA NUMERO CIERRA_P .)
    REPEAT          reduce using rule 113 (Substr -> SUBSTR ABRE_P Var COMA NUMERO CIERRA_P .)
    UNTIL           reduce using rule 113 (Substr -> SUBSTR ABRE_P Var COMA NUMERO CIERRA_P .)
    WHILE           reduce using rule 113 (Substr -> SUBSTR ABRE_P Var COMA NUMERO CIERRA_P .)
    PRINTLINE       reduce using rule 113 (Substr -> SUBSTR ABRE_P Var COMA NUMERO CIERRA_P .)
    AND             reduce using rule 113 (Substr -> SUBSTR ABRE_P Var COMA NUMERO CIERRA_P .)
    OR              reduce using rule 113 (Substr -> SUBSTR ABRE_P Var COMA NUMERO CIERRA_P .)
    ADD             reduce using rule 113 (Substr -> SUBSTR ABRE_P Var COMA NUMERO CIERRA_P .)
    PUT             reduce using rule 113 (Substr -> SUBSTR ABRE_P Var COMA NUMERO CIERRA_P .)
    FIN             reduce using rule 113 (Substr -> SUBSTR ABRE_P Var COMA NUMERO CIERRA_P .)
    COMA            reduce using rule 113 (Substr -> SUBSTR ABRE_P Var COMA NUMERO CIERRA_P .)
    CIERRA_P        reduce using rule 113 (Substr -> SUBSTR ABRE_P Var COMA NUMERO CIERRA_P .)


state 489

    (117) Substr -> SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P .

    PUNTOCOMA       reduce using rule 117 (Substr -> SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    NUMERO          reduce using rule 117 (Substr -> SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    ABRE_P          reduce using rule 117 (Substr -> SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    SUM             reduce using rule 117 (Substr -> SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    SUBSTR          reduce using rule 117 (Substr -> SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    MULTI           reduce using rule 117 (Substr -> SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    DIV             reduce using rule 117 (Substr -> SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    RANDOM          reduce using rule 117 (Substr -> SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    RUN             reduce using rule 117 (Substr -> SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    IF              reduce using rule 117 (Substr -> SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    IFELSE          reduce using rule 117 (Substr -> SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    REPEAT          reduce using rule 117 (Substr -> SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    UNTIL           reduce using rule 117 (Substr -> SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    WHILE           reduce using rule 117 (Substr -> SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    PRINTLINE       reduce using rule 117 (Substr -> SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    AND             reduce using rule 117 (Substr -> SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    OR              reduce using rule 117 (Substr -> SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    ADD             reduce using rule 117 (Substr -> SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    PUT             reduce using rule 117 (Substr -> SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    FIN             reduce using rule 117 (Substr -> SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    COMA            reduce using rule 117 (Substr -> SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    CIERRA_P        reduce using rule 117 (Substr -> SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P .)


state 490

    (221) Pos -> POS ABRE_P NUMERO COMA . NUMERO CIERRA_P PUNTOCOMA
    (223) Pos -> POS ABRE_P NUMERO COMA . expresion_alge1 CIERRA_P PUNTOCOMA
    (226) Pos -> POS ABRE_P NUMERO COMA . Var CIERRA_P PUNTOCOMA
    (90) expresion_alge1 -> . NUMERO SUMA NUMERO
    (91) expresion_alge1 -> . NUMERO RESTA NUMERO
    (92) expresion_alge1 -> . NUMERO MULTI NUMERO
    (93) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (94) expresion_alge1 -> . NUMERO EXPONENTE NUMERO
    (136) Var -> . VAR

    NUMERO          shift and go to state 522
    VAR             shift and go to state 34

    expresion_alge1                shift and go to state 523
    Var                            shift and go to state 524

state 491

    (222) Pos -> POS ABRE_P expresion_alge1 COMA . NUMERO CIERRA_P PUNTOCOMA
    (224) Pos -> POS ABRE_P expresion_alge1 COMA . expresion_alge1 CIERRA_P PUNTOCOMA
    (228) Pos -> POS ABRE_P expresion_alge1 COMA . Var CIERRA_P PUNTOCOMA
    (90) expresion_alge1 -> . NUMERO SUMA NUMERO
    (91) expresion_alge1 -> . NUMERO RESTA NUMERO
    (92) expresion_alge1 -> . NUMERO MULTI NUMERO
    (93) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (94) expresion_alge1 -> . NUMERO EXPONENTE NUMERO
    (136) Var -> . VAR

    NUMERO          shift and go to state 526
    VAR             shift and go to state 34

    expresion_alge1                shift and go to state 525
    Var                            shift and go to state 527

state 492

    (225) Pos -> POS ABRE_P Var COMA . NUMERO CIERRA_P PUNTOCOMA
    (227) Pos -> POS ABRE_P Var COMA . Var CIERRA_P PUNTOCOMA
    (229) Pos -> POS ABRE_P Var COMA . expresion_alge1 CIERRA_P PUNTOCOMA
    (136) Var -> . VAR
    (90) expresion_alge1 -> . NUMERO SUMA NUMERO
    (91) expresion_alge1 -> . NUMERO RESTA NUMERO
    (92) expresion_alge1 -> . NUMERO MULTI NUMERO
    (93) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (94) expresion_alge1 -> . NUMERO EXPONENTE NUMERO

    NUMERO          shift and go to state 529
    VAR             shift and go to state 34

    Var                            shift and go to state 528
    expresion_alge1                shift and go to state 530

state 493

    (187) If -> IF ABRE_P condicion CIERRA_P BRACKET1 funcion . BRACKET2

    BRACKET2        shift and go to state 531


state 494

    (137) Equal -> EQUAL ABRE_P NUMERO COMA . NUMERO CIERRA_P PUNTOCOMA
    (141) Equal -> EQUAL ABRE_P NUMERO COMA . Var CIERRA_P PUNTOCOMA
    (151) Equal -> EQUAL ABRE_P NUMERO COMA . expresion_alge1 CIERRA_P PUNTOCOMA
    (152) Equal -> EQUAL ABRE_P NUMERO COMA . expresion_alge2 CIERRA_P PUNTOCOMA
    (136) Var -> . VAR
    (90) expresion_alge1 -> . NUMERO SUMA NUMERO
    (91) expresion_alge1 -> . NUMERO RESTA NUMERO
    (92) expresion_alge1 -> . NUMERO MULTI NUMERO
    (93) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (94) expresion_alge1 -> . NUMERO EXPONENTE NUMERO
    (95) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (96) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (97) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (98) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (99) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P EXPONENTE ABRE_P expresion_alge1 CIERRA_P

    NUMERO          shift and go to state 532
    VAR             shift and go to state 34
    ABRE_P          shift and go to state 63

    Var                            shift and go to state 533
    expresion_alge1                shift and go to state 534
    expresion_alge2                shift and go to state 535

state 495

    (138) Equal -> EQUAL ABRE_P expresion_alge1 COMA . expresion_alge1 CIERRA_P PUNTOCOMA
    (143) Equal -> EQUAL ABRE_P expresion_alge1 COMA . Var CIERRA_P PUNTOCOMA
    (147) Equal -> EQUAL ABRE_P expresion_alge1 COMA . expresion_alge2 CIERRA_P PUNTOCOMA
    (149) Equal -> EQUAL ABRE_P expresion_alge1 COMA . NUMERO CIERRA_P PUNTOCOMA
    (90) expresion_alge1 -> . NUMERO SUMA NUMERO
    (91) expresion_alge1 -> . NUMERO RESTA NUMERO
    (92) expresion_alge1 -> . NUMERO MULTI NUMERO
    (93) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (94) expresion_alge1 -> . NUMERO EXPONENTE NUMERO
    (136) Var -> . VAR
    (95) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (96) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (97) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (98) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (99) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P EXPONENTE ABRE_P expresion_alge1 CIERRA_P

    NUMERO          shift and go to state 539
    VAR             shift and go to state 34
    ABRE_P          shift and go to state 63

    expresion_alge1                shift and go to state 536
    Var                            shift and go to state 537
    expresion_alge2                shift and go to state 538

state 496

    (139) Equal -> EQUAL ABRE_P expresion_alge2 COMA . expresion_alge2 CIERRA_P PUNTOCOMA
    (142) Equal -> EQUAL ABRE_P expresion_alge2 COMA . Var CIERRA_P PUNTOCOMA
    (148) Equal -> EQUAL ABRE_P expresion_alge2 COMA . expresion_alge1 CIERRA_P PUNTOCOMA
    (150) Equal -> EQUAL ABRE_P expresion_alge2 COMA . NUMERO CIERRA_P PUNTOCOMA
    (95) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (96) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (97) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (98) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (99) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P EXPONENTE ABRE_P expresion_alge1 CIERRA_P
    (136) Var -> . VAR
    (90) expresion_alge1 -> . NUMERO SUMA NUMERO
    (91) expresion_alge1 -> . NUMERO RESTA NUMERO
    (92) expresion_alge1 -> . NUMERO MULTI NUMERO
    (93) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (94) expresion_alge1 -> . NUMERO EXPONENTE NUMERO

    NUMERO          shift and go to state 543
    ABRE_P          shift and go to state 63
    VAR             shift and go to state 34

    expresion_alge2                shift and go to state 540
    Var                            shift and go to state 541
    expresion_alge1                shift and go to state 542

state 497

    (140) Equal -> EQUAL ABRE_P Var COMA . Var CIERRA_P PUNTOCOMA
    (144) Equal -> EQUAL ABRE_P Var COMA . NUMERO CIERRA_P PUNTOCOMA
    (145) Equal -> EQUAL ABRE_P Var COMA . expresion_alge1 CIERRA_P PUNTOCOMA
    (146) Equal -> EQUAL ABRE_P Var COMA . expresion_alge2 CIERRA_P PUNTOCOMA
    (136) Var -> . VAR
    (90) expresion_alge1 -> . NUMERO SUMA NUMERO
    (91) expresion_alge1 -> . NUMERO RESTA NUMERO
    (92) expresion_alge1 -> . NUMERO MULTI NUMERO
    (93) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (94) expresion_alge1 -> . NUMERO EXPONENTE NUMERO
    (95) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (96) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (97) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (98) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (99) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P EXPONENTE ABRE_P expresion_alge1 CIERRA_P

    NUMERO          shift and go to state 545
    VAR             shift and go to state 34
    ABRE_P          shift and go to state 63

    Var                            shift and go to state 544
    expresion_alge1                shift and go to state 546
    expresion_alge2                shift and go to state 547

state 498

    (153) Greater -> GREATER ABRE_P NUMERO COMA . NUMERO CIERRA_P PUNTOCOMA
    (157) Greater -> GREATER ABRE_P NUMERO COMA . Var CIERRA_P PUNTOCOMA
    (167) Greater -> GREATER ABRE_P NUMERO COMA . expresion_alge1 CIERRA_P PUNTOCOMA
    (168) Greater -> GREATER ABRE_P NUMERO COMA . expresion_alge2 CIERRA_P PUNTOCOMA
    (136) Var -> . VAR
    (90) expresion_alge1 -> . NUMERO SUMA NUMERO
    (91) expresion_alge1 -> . NUMERO RESTA NUMERO
    (92) expresion_alge1 -> . NUMERO MULTI NUMERO
    (93) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (94) expresion_alge1 -> . NUMERO EXPONENTE NUMERO
    (95) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (96) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (97) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (98) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (99) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P EXPONENTE ABRE_P expresion_alge1 CIERRA_P

    NUMERO          shift and go to state 548
    VAR             shift and go to state 34
    ABRE_P          shift and go to state 63

    Var                            shift and go to state 549
    expresion_alge1                shift and go to state 550
    expresion_alge2                shift and go to state 551

state 499

    (154) Greater -> GREATER ABRE_P expresion_alge1 COMA . expresion_alge1 CIERRA_P PUNTOCOMA
    (159) Greater -> GREATER ABRE_P expresion_alge1 COMA . Var CIERRA_P PUNTOCOMA
    (163) Greater -> GREATER ABRE_P expresion_alge1 COMA . expresion_alge2 CIERRA_P PUNTOCOMA
    (165) Greater -> GREATER ABRE_P expresion_alge1 COMA . NUMERO CIERRA_P PUNTOCOMA
    (90) expresion_alge1 -> . NUMERO SUMA NUMERO
    (91) expresion_alge1 -> . NUMERO RESTA NUMERO
    (92) expresion_alge1 -> . NUMERO MULTI NUMERO
    (93) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (94) expresion_alge1 -> . NUMERO EXPONENTE NUMERO
    (136) Var -> . VAR
    (95) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (96) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (97) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (98) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (99) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P EXPONENTE ABRE_P expresion_alge1 CIERRA_P

    NUMERO          shift and go to state 555
    VAR             shift and go to state 34
    ABRE_P          shift and go to state 63

    expresion_alge1                shift and go to state 552
    Var                            shift and go to state 553
    expresion_alge2                shift and go to state 554

state 500

    (155) Greater -> GREATER ABRE_P expresion_alge2 COMA . expresion_alge2 CIERRA_P PUNTOCOMA
    (158) Greater -> GREATER ABRE_P expresion_alge2 COMA . Var CIERRA_P PUNTOCOMA
    (164) Greater -> GREATER ABRE_P expresion_alge2 COMA . expresion_alge1 CIERRA_P PUNTOCOMA
    (166) Greater -> GREATER ABRE_P expresion_alge2 COMA . NUMERO CIERRA_P PUNTOCOMA
    (95) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (96) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (97) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (98) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (99) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P EXPONENTE ABRE_P expresion_alge1 CIERRA_P
    (136) Var -> . VAR
    (90) expresion_alge1 -> . NUMERO SUMA NUMERO
    (91) expresion_alge1 -> . NUMERO RESTA NUMERO
    (92) expresion_alge1 -> . NUMERO MULTI NUMERO
    (93) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (94) expresion_alge1 -> . NUMERO EXPONENTE NUMERO

    NUMERO          shift and go to state 559
    ABRE_P          shift and go to state 63
    VAR             shift and go to state 34

    expresion_alge2                shift and go to state 556
    Var                            shift and go to state 557
    expresion_alge1                shift and go to state 558

state 501

    (156) Greater -> GREATER ABRE_P Var COMA . Var CIERRA_P PUNTOCOMA
    (160) Greater -> GREATER ABRE_P Var COMA . NUMERO CIERRA_P PUNTOCOMA
    (161) Greater -> GREATER ABRE_P Var COMA . expresion_alge1 CIERRA_P PUNTOCOMA
    (162) Greater -> GREATER ABRE_P Var COMA . expresion_alge2 CIERRA_P PUNTOCOMA
    (136) Var -> . VAR
    (90) expresion_alge1 -> . NUMERO SUMA NUMERO
    (91) expresion_alge1 -> . NUMERO RESTA NUMERO
    (92) expresion_alge1 -> . NUMERO MULTI NUMERO
    (93) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (94) expresion_alge1 -> . NUMERO EXPONENTE NUMERO
    (95) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (96) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (97) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (98) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (99) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P EXPONENTE ABRE_P expresion_alge1 CIERRA_P

    NUMERO          shift and go to state 561
    VAR             shift and go to state 34
    ABRE_P          shift and go to state 63

    Var                            shift and go to state 560
    expresion_alge1                shift and go to state 562
    expresion_alge2                shift and go to state 563

state 502

    (169) Smaller -> SMALLER ABRE_P NUMERO COMA . NUMERO CIERRA_P PUNTOCOMA
    (173) Smaller -> SMALLER ABRE_P NUMERO COMA . Var CIERRA_P PUNTOCOMA
    (183) Smaller -> SMALLER ABRE_P NUMERO COMA . expresion_alge1 CIERRA_P PUNTOCOMA
    (184) Smaller -> SMALLER ABRE_P NUMERO COMA . expresion_alge2 CIERRA_P PUNTOCOMA
    (136) Var -> . VAR
    (90) expresion_alge1 -> . NUMERO SUMA NUMERO
    (91) expresion_alge1 -> . NUMERO RESTA NUMERO
    (92) expresion_alge1 -> . NUMERO MULTI NUMERO
    (93) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (94) expresion_alge1 -> . NUMERO EXPONENTE NUMERO
    (95) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (96) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (97) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (98) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (99) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P EXPONENTE ABRE_P expresion_alge1 CIERRA_P

    NUMERO          shift and go to state 564
    VAR             shift and go to state 34
    ABRE_P          shift and go to state 63

    Var                            shift and go to state 565
    expresion_alge1                shift and go to state 566
    expresion_alge2                shift and go to state 567

state 503

    (170) Smaller -> SMALLER ABRE_P expresion_alge1 COMA . expresion_alge1 CIERRA_P PUNTOCOMA
    (175) Smaller -> SMALLER ABRE_P expresion_alge1 COMA . Var CIERRA_P PUNTOCOMA
    (179) Smaller -> SMALLER ABRE_P expresion_alge1 COMA . expresion_alge2 CIERRA_P PUNTOCOMA
    (181) Smaller -> SMALLER ABRE_P expresion_alge1 COMA . NUMERO CIERRA_P PUNTOCOMA
    (90) expresion_alge1 -> . NUMERO SUMA NUMERO
    (91) expresion_alge1 -> . NUMERO RESTA NUMERO
    (92) expresion_alge1 -> . NUMERO MULTI NUMERO
    (93) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (94) expresion_alge1 -> . NUMERO EXPONENTE NUMERO
    (136) Var -> . VAR
    (95) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (96) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (97) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (98) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (99) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P EXPONENTE ABRE_P expresion_alge1 CIERRA_P

    NUMERO          shift and go to state 571
    VAR             shift and go to state 34
    ABRE_P          shift and go to state 63

    expresion_alge1                shift and go to state 568
    Var                            shift and go to state 569
    expresion_alge2                shift and go to state 570

state 504

    (171) Smaller -> SMALLER ABRE_P expresion_alge2 COMA . expresion_alge2 CIERRA_P PUNTOCOMA
    (174) Smaller -> SMALLER ABRE_P expresion_alge2 COMA . Var CIERRA_P PUNTOCOMA
    (180) Smaller -> SMALLER ABRE_P expresion_alge2 COMA . expresion_alge1 CIERRA_P PUNTOCOMA
    (182) Smaller -> SMALLER ABRE_P expresion_alge2 COMA . NUMERO CIERRA_P PUNTOCOMA
    (95) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (96) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (97) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (98) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (99) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P EXPONENTE ABRE_P expresion_alge1 CIERRA_P
    (136) Var -> . VAR
    (90) expresion_alge1 -> . NUMERO SUMA NUMERO
    (91) expresion_alge1 -> . NUMERO RESTA NUMERO
    (92) expresion_alge1 -> . NUMERO MULTI NUMERO
    (93) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (94) expresion_alge1 -> . NUMERO EXPONENTE NUMERO

    NUMERO          shift and go to state 575
    ABRE_P          shift and go to state 63
    VAR             shift and go to state 34

    expresion_alge2                shift and go to state 572
    Var                            shift and go to state 573
    expresion_alge1                shift and go to state 574

state 505

    (172) Smaller -> SMALLER ABRE_P Var COMA . Var CIERRA_P PUNTOCOMA
    (176) Smaller -> SMALLER ABRE_P Var COMA . NUMERO CIERRA_P PUNTOCOMA
    (177) Smaller -> SMALLER ABRE_P Var COMA . expresion_alge1 CIERRA_P PUNTOCOMA
    (178) Smaller -> SMALLER ABRE_P Var COMA . expresion_alge2 CIERRA_P PUNTOCOMA
    (136) Var -> . VAR
    (90) expresion_alge1 -> . NUMERO SUMA NUMERO
    (91) expresion_alge1 -> . NUMERO RESTA NUMERO
    (92) expresion_alge1 -> . NUMERO MULTI NUMERO
    (93) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (94) expresion_alge1 -> . NUMERO EXPONENTE NUMERO
    (95) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (96) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (97) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (98) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (99) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P EXPONENTE ABRE_P expresion_alge1 CIERRA_P

    NUMERO          shift and go to state 577
    VAR             shift and go to state 34
    ABRE_P          shift and go to state 63

    Var                            shift and go to state 576
    expresion_alge1                shift and go to state 578
    expresion_alge2                shift and go to state 579

state 506

    (188) IfElse -> IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion . BRACKET2 BRACKET1 funcion BRACKET2

    BRACKET2        shift and go to state 580


state 507

    (191) Until -> UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion . BRACKET2

    BRACKET2        shift and go to state 581


state 508

    (189) While -> WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion . BRACKET2

    BRACKET2        shift and go to state 582


state 509

    (185) And -> AND ABRE_P expresion COMA expresion CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 583


state 510

    (186) Or -> OR ABRE_P expresion COMA expresion CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 584


state 511

    (192) Add -> ADD ABRE_P Var empty empty CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 585


state 512

    (195) Add -> ADD ABRE_P Var COMA Var CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 586


state 513

    (193) Add -> ADD ABRE_P Var COMA NUMERO CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 587


state 514

    (194) Add -> ADD ABRE_P Var COMA expresion_alge1 CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 588


state 515

    (196) Add -> ADD ABRE_P Var COMA expresion_alge2 CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 589


state 516

    (25) llamadoproc -> PARA id BRACKET1 parametro BRACKET2 . PUNTOCOMA

    PUNTOCOMA       shift and go to state 590


state 517

    (95) expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P .

    PUNTOCOMA       reduce using rule 95 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P .)
    NUMERO          reduce using rule 95 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P .)
    ABRE_P          reduce using rule 95 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P .)
    SUM             reduce using rule 95 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P .)
    SUBSTR          reduce using rule 95 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P .)
    MULTI           reduce using rule 95 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P .)
    DIV             reduce using rule 95 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P .)
    RANDOM          reduce using rule 95 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P .)
    RUN             reduce using rule 95 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P .)
    IF              reduce using rule 95 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P .)
    IFELSE          reduce using rule 95 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P .)
    REPEAT          reduce using rule 95 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P .)
    UNTIL           reduce using rule 95 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P .)
    WHILE           reduce using rule 95 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P .)
    PRINTLINE       reduce using rule 95 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P .)
    AND             reduce using rule 95 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P .)
    OR              reduce using rule 95 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P .)
    ADD             reduce using rule 95 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P .)
    PUT             reduce using rule 95 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P .)
    FIN             reduce using rule 95 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P .)
    COMA            reduce using rule 95 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P .)
    CIERRA_P        reduce using rule 95 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P .)


state 518

    (96) expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P .

    PUNTOCOMA       reduce using rule 96 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P .)
    NUMERO          reduce using rule 96 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P .)
    ABRE_P          reduce using rule 96 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P .)
    SUM             reduce using rule 96 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P .)
    SUBSTR          reduce using rule 96 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P .)
    MULTI           reduce using rule 96 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P .)
    DIV             reduce using rule 96 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P .)
    RANDOM          reduce using rule 96 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P .)
    RUN             reduce using rule 96 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P .)
    IF              reduce using rule 96 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P .)
    IFELSE          reduce using rule 96 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P .)
    REPEAT          reduce using rule 96 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P .)
    UNTIL           reduce using rule 96 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P .)
    WHILE           reduce using rule 96 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P .)
    PRINTLINE       reduce using rule 96 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P .)
    AND             reduce using rule 96 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P .)
    OR              reduce using rule 96 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P .)
    ADD             reduce using rule 96 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P .)
    PUT             reduce using rule 96 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P .)
    FIN             reduce using rule 96 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P .)
    COMA            reduce using rule 96 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P .)
    CIERRA_P        reduce using rule 96 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P .)


state 519

    (97) expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P .

    PUNTOCOMA       reduce using rule 97 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P .)
    NUMERO          reduce using rule 97 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P .)
    ABRE_P          reduce using rule 97 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P .)
    SUM             reduce using rule 97 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P .)
    SUBSTR          reduce using rule 97 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P .)
    MULTI           reduce using rule 97 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P .)
    DIV             reduce using rule 97 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P .)
    RANDOM          reduce using rule 97 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P .)
    RUN             reduce using rule 97 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P .)
    IF              reduce using rule 97 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P .)
    IFELSE          reduce using rule 97 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P .)
    REPEAT          reduce using rule 97 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P .)
    UNTIL           reduce using rule 97 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P .)
    WHILE           reduce using rule 97 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P .)
    PRINTLINE       reduce using rule 97 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P .)
    AND             reduce using rule 97 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P .)
    OR              reduce using rule 97 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P .)
    ADD             reduce using rule 97 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P .)
    PUT             reduce using rule 97 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P .)
    FIN             reduce using rule 97 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P .)
    COMA            reduce using rule 97 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P .)
    CIERRA_P        reduce using rule 97 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P .)


state 520

    (98) expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P .

    PUNTOCOMA       reduce using rule 98 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P .)
    NUMERO          reduce using rule 98 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P .)
    ABRE_P          reduce using rule 98 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P .)
    SUM             reduce using rule 98 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P .)
    SUBSTR          reduce using rule 98 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P .)
    MULTI           reduce using rule 98 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P .)
    DIV             reduce using rule 98 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P .)
    RANDOM          reduce using rule 98 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P .)
    RUN             reduce using rule 98 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P .)
    IF              reduce using rule 98 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P .)
    IFELSE          reduce using rule 98 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P .)
    REPEAT          reduce using rule 98 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P .)
    UNTIL           reduce using rule 98 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P .)
    WHILE           reduce using rule 98 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P .)
    PRINTLINE       reduce using rule 98 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P .)
    AND             reduce using rule 98 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P .)
    OR              reduce using rule 98 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P .)
    ADD             reduce using rule 98 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P .)
    PUT             reduce using rule 98 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P .)
    FIN             reduce using rule 98 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P .)
    COMA            reduce using rule 98 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P .)
    CIERRA_P        reduce using rule 98 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P .)


state 521

    (99) expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P EXPONENTE ABRE_P expresion_alge1 CIERRA_P .

    PUNTOCOMA       reduce using rule 99 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P EXPONENTE ABRE_P expresion_alge1 CIERRA_P .)
    NUMERO          reduce using rule 99 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P EXPONENTE ABRE_P expresion_alge1 CIERRA_P .)
    ABRE_P          reduce using rule 99 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P EXPONENTE ABRE_P expresion_alge1 CIERRA_P .)
    SUM             reduce using rule 99 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P EXPONENTE ABRE_P expresion_alge1 CIERRA_P .)
    SUBSTR          reduce using rule 99 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P EXPONENTE ABRE_P expresion_alge1 CIERRA_P .)
    MULTI           reduce using rule 99 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P EXPONENTE ABRE_P expresion_alge1 CIERRA_P .)
    DIV             reduce using rule 99 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P EXPONENTE ABRE_P expresion_alge1 CIERRA_P .)
    RANDOM          reduce using rule 99 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P EXPONENTE ABRE_P expresion_alge1 CIERRA_P .)
    RUN             reduce using rule 99 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P EXPONENTE ABRE_P expresion_alge1 CIERRA_P .)
    IF              reduce using rule 99 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P EXPONENTE ABRE_P expresion_alge1 CIERRA_P .)
    IFELSE          reduce using rule 99 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P EXPONENTE ABRE_P expresion_alge1 CIERRA_P .)
    REPEAT          reduce using rule 99 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P EXPONENTE ABRE_P expresion_alge1 CIERRA_P .)
    UNTIL           reduce using rule 99 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P EXPONENTE ABRE_P expresion_alge1 CIERRA_P .)
    WHILE           reduce using rule 99 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P EXPONENTE ABRE_P expresion_alge1 CIERRA_P .)
    PRINTLINE       reduce using rule 99 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P EXPONENTE ABRE_P expresion_alge1 CIERRA_P .)
    AND             reduce using rule 99 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P EXPONENTE ABRE_P expresion_alge1 CIERRA_P .)
    OR              reduce using rule 99 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P EXPONENTE ABRE_P expresion_alge1 CIERRA_P .)
    ADD             reduce using rule 99 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P EXPONENTE ABRE_P expresion_alge1 CIERRA_P .)
    PUT             reduce using rule 99 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P EXPONENTE ABRE_P expresion_alge1 CIERRA_P .)
    FIN             reduce using rule 99 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P EXPONENTE ABRE_P expresion_alge1 CIERRA_P .)
    COMA            reduce using rule 99 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P EXPONENTE ABRE_P expresion_alge1 CIERRA_P .)
    CIERRA_P        reduce using rule 99 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P EXPONENTE ABRE_P expresion_alge1 CIERRA_P .)


state 522

    (221) Pos -> POS ABRE_P NUMERO COMA NUMERO . CIERRA_P PUNTOCOMA
    (90) expresion_alge1 -> NUMERO . SUMA NUMERO
    (91) expresion_alge1 -> NUMERO . RESTA NUMERO
    (92) expresion_alge1 -> NUMERO . MULTI NUMERO
    (93) expresion_alge1 -> NUMERO . DIVISION NUMERO
    (94) expresion_alge1 -> NUMERO . EXPONENTE NUMERO

    CIERRA_P        shift and go to state 591
    SUMA            shift and go to state 126
    RESTA           shift and go to state 127
    MULTI           shift and go to state 128
    DIVISION        shift and go to state 129
    EXPONENTE       shift and go to state 130


state 523

    (223) Pos -> POS ABRE_P NUMERO COMA expresion_alge1 . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 592


state 524

    (226) Pos -> POS ABRE_P NUMERO COMA Var . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 593


state 525

    (224) Pos -> POS ABRE_P expresion_alge1 COMA expresion_alge1 . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 594


state 526

    (222) Pos -> POS ABRE_P expresion_alge1 COMA NUMERO . CIERRA_P PUNTOCOMA
    (90) expresion_alge1 -> NUMERO . SUMA NUMERO
    (91) expresion_alge1 -> NUMERO . RESTA NUMERO
    (92) expresion_alge1 -> NUMERO . MULTI NUMERO
    (93) expresion_alge1 -> NUMERO . DIVISION NUMERO
    (94) expresion_alge1 -> NUMERO . EXPONENTE NUMERO

    CIERRA_P        shift and go to state 595
    SUMA            shift and go to state 126
    RESTA           shift and go to state 127
    MULTI           shift and go to state 128
    DIVISION        shift and go to state 129
    EXPONENTE       shift and go to state 130


state 527

    (228) Pos -> POS ABRE_P expresion_alge1 COMA Var . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 596


state 528

    (227) Pos -> POS ABRE_P Var COMA Var . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 597


state 529

    (225) Pos -> POS ABRE_P Var COMA NUMERO . CIERRA_P PUNTOCOMA
    (90) expresion_alge1 -> NUMERO . SUMA NUMERO
    (91) expresion_alge1 -> NUMERO . RESTA NUMERO
    (92) expresion_alge1 -> NUMERO . MULTI NUMERO
    (93) expresion_alge1 -> NUMERO . DIVISION NUMERO
    (94) expresion_alge1 -> NUMERO . EXPONENTE NUMERO

    CIERRA_P        shift and go to state 598
    SUMA            shift and go to state 126
    RESTA           shift and go to state 127
    MULTI           shift and go to state 128
    DIVISION        shift and go to state 129
    EXPONENTE       shift and go to state 130


state 530

    (229) Pos -> POS ABRE_P Var COMA expresion_alge1 . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 599


state 531

    (187) If -> IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 .

    PUNTOCOMA       reduce using rule 187 (If -> IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 .)
    NUMERO          reduce using rule 187 (If -> IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 .)
    ABRE_P          reduce using rule 187 (If -> IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 .)
    SUM             reduce using rule 187 (If -> IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 .)
    SUBSTR          reduce using rule 187 (If -> IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 .)
    MULTI           reduce using rule 187 (If -> IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 .)
    DIV             reduce using rule 187 (If -> IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 .)
    RANDOM          reduce using rule 187 (If -> IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 .)
    RUN             reduce using rule 187 (If -> IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 .)
    IF              reduce using rule 187 (If -> IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 .)
    IFELSE          reduce using rule 187 (If -> IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 .)
    REPEAT          reduce using rule 187 (If -> IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 .)
    UNTIL           reduce using rule 187 (If -> IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 .)
    WHILE           reduce using rule 187 (If -> IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 .)
    PRINTLINE       reduce using rule 187 (If -> IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 .)
    AND             reduce using rule 187 (If -> IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 .)
    OR              reduce using rule 187 (If -> IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 .)
    ADD             reduce using rule 187 (If -> IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 .)
    PUT             reduce using rule 187 (If -> IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 .)
    FIN             reduce using rule 187 (If -> IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 .)
    COMA            reduce using rule 187 (If -> IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 .)
    CIERRA_P        reduce using rule 187 (If -> IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 .)
    BRACKET2        reduce using rule 187 (If -> IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 .)


state 532

    (137) Equal -> EQUAL ABRE_P NUMERO COMA NUMERO . CIERRA_P PUNTOCOMA
    (90) expresion_alge1 -> NUMERO . SUMA NUMERO
    (91) expresion_alge1 -> NUMERO . RESTA NUMERO
    (92) expresion_alge1 -> NUMERO . MULTI NUMERO
    (93) expresion_alge1 -> NUMERO . DIVISION NUMERO
    (94) expresion_alge1 -> NUMERO . EXPONENTE NUMERO

    CIERRA_P        shift and go to state 600
    SUMA            shift and go to state 126
    RESTA           shift and go to state 127
    MULTI           shift and go to state 128
    DIVISION        shift and go to state 129
    EXPONENTE       shift and go to state 130


state 533

    (141) Equal -> EQUAL ABRE_P NUMERO COMA Var . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 601


state 534

    (151) Equal -> EQUAL ABRE_P NUMERO COMA expresion_alge1 . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 602


state 535

    (152) Equal -> EQUAL ABRE_P NUMERO COMA expresion_alge2 . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 603


state 536

    (138) Equal -> EQUAL ABRE_P expresion_alge1 COMA expresion_alge1 . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 604


state 537

    (143) Equal -> EQUAL ABRE_P expresion_alge1 COMA Var . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 605


state 538

    (147) Equal -> EQUAL ABRE_P expresion_alge1 COMA expresion_alge2 . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 606


state 539

    (149) Equal -> EQUAL ABRE_P expresion_alge1 COMA NUMERO . CIERRA_P PUNTOCOMA
    (90) expresion_alge1 -> NUMERO . SUMA NUMERO
    (91) expresion_alge1 -> NUMERO . RESTA NUMERO
    (92) expresion_alge1 -> NUMERO . MULTI NUMERO
    (93) expresion_alge1 -> NUMERO . DIVISION NUMERO
    (94) expresion_alge1 -> NUMERO . EXPONENTE NUMERO

    CIERRA_P        shift and go to state 607
    SUMA            shift and go to state 126
    RESTA           shift and go to state 127
    MULTI           shift and go to state 128
    DIVISION        shift and go to state 129
    EXPONENTE       shift and go to state 130


state 540

    (139) Equal -> EQUAL ABRE_P expresion_alge2 COMA expresion_alge2 . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 608


state 541

    (142) Equal -> EQUAL ABRE_P expresion_alge2 COMA Var . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 609


state 542

    (148) Equal -> EQUAL ABRE_P expresion_alge2 COMA expresion_alge1 . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 610


state 543

    (150) Equal -> EQUAL ABRE_P expresion_alge2 COMA NUMERO . CIERRA_P PUNTOCOMA
    (90) expresion_alge1 -> NUMERO . SUMA NUMERO
    (91) expresion_alge1 -> NUMERO . RESTA NUMERO
    (92) expresion_alge1 -> NUMERO . MULTI NUMERO
    (93) expresion_alge1 -> NUMERO . DIVISION NUMERO
    (94) expresion_alge1 -> NUMERO . EXPONENTE NUMERO

    CIERRA_P        shift and go to state 611
    SUMA            shift and go to state 126
    RESTA           shift and go to state 127
    MULTI           shift and go to state 128
    DIVISION        shift and go to state 129
    EXPONENTE       shift and go to state 130


state 544

    (140) Equal -> EQUAL ABRE_P Var COMA Var . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 612


state 545

    (144) Equal -> EQUAL ABRE_P Var COMA NUMERO . CIERRA_P PUNTOCOMA
    (90) expresion_alge1 -> NUMERO . SUMA NUMERO
    (91) expresion_alge1 -> NUMERO . RESTA NUMERO
    (92) expresion_alge1 -> NUMERO . MULTI NUMERO
    (93) expresion_alge1 -> NUMERO . DIVISION NUMERO
    (94) expresion_alge1 -> NUMERO . EXPONENTE NUMERO

    CIERRA_P        shift and go to state 613
    SUMA            shift and go to state 126
    RESTA           shift and go to state 127
    MULTI           shift and go to state 128
    DIVISION        shift and go to state 129
    EXPONENTE       shift and go to state 130


state 546

    (145) Equal -> EQUAL ABRE_P Var COMA expresion_alge1 . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 614


state 547

    (146) Equal -> EQUAL ABRE_P Var COMA expresion_alge2 . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 615


state 548

    (153) Greater -> GREATER ABRE_P NUMERO COMA NUMERO . CIERRA_P PUNTOCOMA
    (90) expresion_alge1 -> NUMERO . SUMA NUMERO
    (91) expresion_alge1 -> NUMERO . RESTA NUMERO
    (92) expresion_alge1 -> NUMERO . MULTI NUMERO
    (93) expresion_alge1 -> NUMERO . DIVISION NUMERO
    (94) expresion_alge1 -> NUMERO . EXPONENTE NUMERO

    CIERRA_P        shift and go to state 616
    SUMA            shift and go to state 126
    RESTA           shift and go to state 127
    MULTI           shift and go to state 128
    DIVISION        shift and go to state 129
    EXPONENTE       shift and go to state 130


state 549

    (157) Greater -> GREATER ABRE_P NUMERO COMA Var . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 617


state 550

    (167) Greater -> GREATER ABRE_P NUMERO COMA expresion_alge1 . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 618


state 551

    (168) Greater -> GREATER ABRE_P NUMERO COMA expresion_alge2 . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 619


state 552

    (154) Greater -> GREATER ABRE_P expresion_alge1 COMA expresion_alge1 . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 620


state 553

    (159) Greater -> GREATER ABRE_P expresion_alge1 COMA Var . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 621


state 554

    (163) Greater -> GREATER ABRE_P expresion_alge1 COMA expresion_alge2 . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 622


state 555

    (165) Greater -> GREATER ABRE_P expresion_alge1 COMA NUMERO . CIERRA_P PUNTOCOMA
    (90) expresion_alge1 -> NUMERO . SUMA NUMERO
    (91) expresion_alge1 -> NUMERO . RESTA NUMERO
    (92) expresion_alge1 -> NUMERO . MULTI NUMERO
    (93) expresion_alge1 -> NUMERO . DIVISION NUMERO
    (94) expresion_alge1 -> NUMERO . EXPONENTE NUMERO

    CIERRA_P        shift and go to state 623
    SUMA            shift and go to state 126
    RESTA           shift and go to state 127
    MULTI           shift and go to state 128
    DIVISION        shift and go to state 129
    EXPONENTE       shift and go to state 130


state 556

    (155) Greater -> GREATER ABRE_P expresion_alge2 COMA expresion_alge2 . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 624


state 557

    (158) Greater -> GREATER ABRE_P expresion_alge2 COMA Var . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 625


state 558

    (164) Greater -> GREATER ABRE_P expresion_alge2 COMA expresion_alge1 . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 626


state 559

    (166) Greater -> GREATER ABRE_P expresion_alge2 COMA NUMERO . CIERRA_P PUNTOCOMA
    (90) expresion_alge1 -> NUMERO . SUMA NUMERO
    (91) expresion_alge1 -> NUMERO . RESTA NUMERO
    (92) expresion_alge1 -> NUMERO . MULTI NUMERO
    (93) expresion_alge1 -> NUMERO . DIVISION NUMERO
    (94) expresion_alge1 -> NUMERO . EXPONENTE NUMERO

    CIERRA_P        shift and go to state 627
    SUMA            shift and go to state 126
    RESTA           shift and go to state 127
    MULTI           shift and go to state 128
    DIVISION        shift and go to state 129
    EXPONENTE       shift and go to state 130


state 560

    (156) Greater -> GREATER ABRE_P Var COMA Var . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 628


state 561

    (160) Greater -> GREATER ABRE_P Var COMA NUMERO . CIERRA_P PUNTOCOMA
    (90) expresion_alge1 -> NUMERO . SUMA NUMERO
    (91) expresion_alge1 -> NUMERO . RESTA NUMERO
    (92) expresion_alge1 -> NUMERO . MULTI NUMERO
    (93) expresion_alge1 -> NUMERO . DIVISION NUMERO
    (94) expresion_alge1 -> NUMERO . EXPONENTE NUMERO

    CIERRA_P        shift and go to state 629
    SUMA            shift and go to state 126
    RESTA           shift and go to state 127
    MULTI           shift and go to state 128
    DIVISION        shift and go to state 129
    EXPONENTE       shift and go to state 130


state 562

    (161) Greater -> GREATER ABRE_P Var COMA expresion_alge1 . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 630


state 563

    (162) Greater -> GREATER ABRE_P Var COMA expresion_alge2 . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 631


state 564

    (169) Smaller -> SMALLER ABRE_P NUMERO COMA NUMERO . CIERRA_P PUNTOCOMA
    (90) expresion_alge1 -> NUMERO . SUMA NUMERO
    (91) expresion_alge1 -> NUMERO . RESTA NUMERO
    (92) expresion_alge1 -> NUMERO . MULTI NUMERO
    (93) expresion_alge1 -> NUMERO . DIVISION NUMERO
    (94) expresion_alge1 -> NUMERO . EXPONENTE NUMERO

    CIERRA_P        shift and go to state 632
    SUMA            shift and go to state 126
    RESTA           shift and go to state 127
    MULTI           shift and go to state 128
    DIVISION        shift and go to state 129
    EXPONENTE       shift and go to state 130


state 565

    (173) Smaller -> SMALLER ABRE_P NUMERO COMA Var . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 633


state 566

    (183) Smaller -> SMALLER ABRE_P NUMERO COMA expresion_alge1 . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 634


state 567

    (184) Smaller -> SMALLER ABRE_P NUMERO COMA expresion_alge2 . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 635


state 568

    (170) Smaller -> SMALLER ABRE_P expresion_alge1 COMA expresion_alge1 . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 636


state 569

    (175) Smaller -> SMALLER ABRE_P expresion_alge1 COMA Var . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 637


state 570

    (179) Smaller -> SMALLER ABRE_P expresion_alge1 COMA expresion_alge2 . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 638


state 571

    (181) Smaller -> SMALLER ABRE_P expresion_alge1 COMA NUMERO . CIERRA_P PUNTOCOMA
    (90) expresion_alge1 -> NUMERO . SUMA NUMERO
    (91) expresion_alge1 -> NUMERO . RESTA NUMERO
    (92) expresion_alge1 -> NUMERO . MULTI NUMERO
    (93) expresion_alge1 -> NUMERO . DIVISION NUMERO
    (94) expresion_alge1 -> NUMERO . EXPONENTE NUMERO

    CIERRA_P        shift and go to state 639
    SUMA            shift and go to state 126
    RESTA           shift and go to state 127
    MULTI           shift and go to state 128
    DIVISION        shift and go to state 129
    EXPONENTE       shift and go to state 130


state 572

    (171) Smaller -> SMALLER ABRE_P expresion_alge2 COMA expresion_alge2 . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 640


state 573

    (174) Smaller -> SMALLER ABRE_P expresion_alge2 COMA Var . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 641


state 574

    (180) Smaller -> SMALLER ABRE_P expresion_alge2 COMA expresion_alge1 . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 642


state 575

    (182) Smaller -> SMALLER ABRE_P expresion_alge2 COMA NUMERO . CIERRA_P PUNTOCOMA
    (90) expresion_alge1 -> NUMERO . SUMA NUMERO
    (91) expresion_alge1 -> NUMERO . RESTA NUMERO
    (92) expresion_alge1 -> NUMERO . MULTI NUMERO
    (93) expresion_alge1 -> NUMERO . DIVISION NUMERO
    (94) expresion_alge1 -> NUMERO . EXPONENTE NUMERO

    CIERRA_P        shift and go to state 643
    SUMA            shift and go to state 126
    RESTA           shift and go to state 127
    MULTI           shift and go to state 128
    DIVISION        shift and go to state 129
    EXPONENTE       shift and go to state 130


state 576

    (172) Smaller -> SMALLER ABRE_P Var COMA Var . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 644


state 577

    (176) Smaller -> SMALLER ABRE_P Var COMA NUMERO . CIERRA_P PUNTOCOMA
    (90) expresion_alge1 -> NUMERO . SUMA NUMERO
    (91) expresion_alge1 -> NUMERO . RESTA NUMERO
    (92) expresion_alge1 -> NUMERO . MULTI NUMERO
    (93) expresion_alge1 -> NUMERO . DIVISION NUMERO
    (94) expresion_alge1 -> NUMERO . EXPONENTE NUMERO

    CIERRA_P        shift and go to state 645
    SUMA            shift and go to state 126
    RESTA           shift and go to state 127
    MULTI           shift and go to state 128
    DIVISION        shift and go to state 129
    EXPONENTE       shift and go to state 130


state 578

    (177) Smaller -> SMALLER ABRE_P Var COMA expresion_alge1 . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 646


state 579

    (178) Smaller -> SMALLER ABRE_P Var COMA expresion_alge2 . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 647


state 580

    (188) IfElse -> IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 . BRACKET1 funcion BRACKET2

    BRACKET1        shift and go to state 648


state 581

    (191) Until -> UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2 .

    PUNTOCOMA       reduce using rule 191 (Until -> UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2 .)
    NUMERO          reduce using rule 191 (Until -> UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2 .)
    ABRE_P          reduce using rule 191 (Until -> UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2 .)
    SUM             reduce using rule 191 (Until -> UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2 .)
    SUBSTR          reduce using rule 191 (Until -> UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2 .)
    MULTI           reduce using rule 191 (Until -> UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2 .)
    DIV             reduce using rule 191 (Until -> UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2 .)
    RANDOM          reduce using rule 191 (Until -> UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2 .)
    RUN             reduce using rule 191 (Until -> UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2 .)
    IF              reduce using rule 191 (Until -> UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2 .)
    IFELSE          reduce using rule 191 (Until -> UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2 .)
    REPEAT          reduce using rule 191 (Until -> UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2 .)
    UNTIL           reduce using rule 191 (Until -> UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2 .)
    WHILE           reduce using rule 191 (Until -> UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2 .)
    PRINTLINE       reduce using rule 191 (Until -> UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2 .)
    AND             reduce using rule 191 (Until -> UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2 .)
    OR              reduce using rule 191 (Until -> UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2 .)
    ADD             reduce using rule 191 (Until -> UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2 .)
    PUT             reduce using rule 191 (Until -> UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2 .)
    FIN             reduce using rule 191 (Until -> UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2 .)
    COMA            reduce using rule 191 (Until -> UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2 .)
    CIERRA_P        reduce using rule 191 (Until -> UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2 .)
    BRACKET2        reduce using rule 191 (Until -> UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2 .)


state 582

    (189) While -> WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2 .

    PUNTOCOMA       reduce using rule 189 (While -> WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2 .)
    NUMERO          reduce using rule 189 (While -> WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2 .)
    ABRE_P          reduce using rule 189 (While -> WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2 .)
    SUM             reduce using rule 189 (While -> WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2 .)
    SUBSTR          reduce using rule 189 (While -> WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2 .)
    MULTI           reduce using rule 189 (While -> WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2 .)
    DIV             reduce using rule 189 (While -> WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2 .)
    RANDOM          reduce using rule 189 (While -> WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2 .)
    RUN             reduce using rule 189 (While -> WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2 .)
    IF              reduce using rule 189 (While -> WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2 .)
    IFELSE          reduce using rule 189 (While -> WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2 .)
    REPEAT          reduce using rule 189 (While -> WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2 .)
    UNTIL           reduce using rule 189 (While -> WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2 .)
    WHILE           reduce using rule 189 (While -> WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2 .)
    PRINTLINE       reduce using rule 189 (While -> WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2 .)
    AND             reduce using rule 189 (While -> WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2 .)
    OR              reduce using rule 189 (While -> WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2 .)
    ADD             reduce using rule 189 (While -> WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2 .)
    PUT             reduce using rule 189 (While -> WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2 .)
    FIN             reduce using rule 189 (While -> WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2 .)
    COMA            reduce using rule 189 (While -> WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2 .)
    CIERRA_P        reduce using rule 189 (While -> WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2 .)
    BRACKET2        reduce using rule 189 (While -> WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2 .)


state 583

    (185) And -> AND ABRE_P expresion COMA expresion CIERRA_P PUNTOCOMA .

    PUNTOCOMA       reduce using rule 185 (And -> AND ABRE_P expresion COMA expresion CIERRA_P PUNTOCOMA .)
    NUMERO          reduce using rule 185 (And -> AND ABRE_P expresion COMA expresion CIERRA_P PUNTOCOMA .)
    ABRE_P          reduce using rule 185 (And -> AND ABRE_P expresion COMA expresion CIERRA_P PUNTOCOMA .)
    SUM             reduce using rule 185 (And -> AND ABRE_P expresion COMA expresion CIERRA_P PUNTOCOMA .)
    SUBSTR          reduce using rule 185 (And -> AND ABRE_P expresion COMA expresion CIERRA_P PUNTOCOMA .)
    MULTI           reduce using rule 185 (And -> AND ABRE_P expresion COMA expresion CIERRA_P PUNTOCOMA .)
    DIV             reduce using rule 185 (And -> AND ABRE_P expresion COMA expresion CIERRA_P PUNTOCOMA .)
    RANDOM          reduce using rule 185 (And -> AND ABRE_P expresion COMA expresion CIERRA_P PUNTOCOMA .)
    RUN             reduce using rule 185 (And -> AND ABRE_P expresion COMA expresion CIERRA_P PUNTOCOMA .)
    IF              reduce using rule 185 (And -> AND ABRE_P expresion COMA expresion CIERRA_P PUNTOCOMA .)
    IFELSE          reduce using rule 185 (And -> AND ABRE_P expresion COMA expresion CIERRA_P PUNTOCOMA .)
    REPEAT          reduce using rule 185 (And -> AND ABRE_P expresion COMA expresion CIERRA_P PUNTOCOMA .)
    UNTIL           reduce using rule 185 (And -> AND ABRE_P expresion COMA expresion CIERRA_P PUNTOCOMA .)
    WHILE           reduce using rule 185 (And -> AND ABRE_P expresion COMA expresion CIERRA_P PUNTOCOMA .)
    PRINTLINE       reduce using rule 185 (And -> AND ABRE_P expresion COMA expresion CIERRA_P PUNTOCOMA .)
    AND             reduce using rule 185 (And -> AND ABRE_P expresion COMA expresion CIERRA_P PUNTOCOMA .)
    OR              reduce using rule 185 (And -> AND ABRE_P expresion COMA expresion CIERRA_P PUNTOCOMA .)
    ADD             reduce using rule 185 (And -> AND ABRE_P expresion COMA expresion CIERRA_P PUNTOCOMA .)
    PUT             reduce using rule 185 (And -> AND ABRE_P expresion COMA expresion CIERRA_P PUNTOCOMA .)
    FIN             reduce using rule 185 (And -> AND ABRE_P expresion COMA expresion CIERRA_P PUNTOCOMA .)
    COMA            reduce using rule 185 (And -> AND ABRE_P expresion COMA expresion CIERRA_P PUNTOCOMA .)
    CIERRA_P        reduce using rule 185 (And -> AND ABRE_P expresion COMA expresion CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 185 (And -> AND ABRE_P expresion COMA expresion CIERRA_P PUNTOCOMA .)


state 584

    (186) Or -> OR ABRE_P expresion COMA expresion CIERRA_P PUNTOCOMA .

    PUNTOCOMA       reduce using rule 186 (Or -> OR ABRE_P expresion COMA expresion CIERRA_P PUNTOCOMA .)
    NUMERO          reduce using rule 186 (Or -> OR ABRE_P expresion COMA expresion CIERRA_P PUNTOCOMA .)
    ABRE_P          reduce using rule 186 (Or -> OR ABRE_P expresion COMA expresion CIERRA_P PUNTOCOMA .)
    SUM             reduce using rule 186 (Or -> OR ABRE_P expresion COMA expresion CIERRA_P PUNTOCOMA .)
    SUBSTR          reduce using rule 186 (Or -> OR ABRE_P expresion COMA expresion CIERRA_P PUNTOCOMA .)
    MULTI           reduce using rule 186 (Or -> OR ABRE_P expresion COMA expresion CIERRA_P PUNTOCOMA .)
    DIV             reduce using rule 186 (Or -> OR ABRE_P expresion COMA expresion CIERRA_P PUNTOCOMA .)
    RANDOM          reduce using rule 186 (Or -> OR ABRE_P expresion COMA expresion CIERRA_P PUNTOCOMA .)
    RUN             reduce using rule 186 (Or -> OR ABRE_P expresion COMA expresion CIERRA_P PUNTOCOMA .)
    IF              reduce using rule 186 (Or -> OR ABRE_P expresion COMA expresion CIERRA_P PUNTOCOMA .)
    IFELSE          reduce using rule 186 (Or -> OR ABRE_P expresion COMA expresion CIERRA_P PUNTOCOMA .)
    REPEAT          reduce using rule 186 (Or -> OR ABRE_P expresion COMA expresion CIERRA_P PUNTOCOMA .)
    UNTIL           reduce using rule 186 (Or -> OR ABRE_P expresion COMA expresion CIERRA_P PUNTOCOMA .)
    WHILE           reduce using rule 186 (Or -> OR ABRE_P expresion COMA expresion CIERRA_P PUNTOCOMA .)
    PRINTLINE       reduce using rule 186 (Or -> OR ABRE_P expresion COMA expresion CIERRA_P PUNTOCOMA .)
    AND             reduce using rule 186 (Or -> OR ABRE_P expresion COMA expresion CIERRA_P PUNTOCOMA .)
    OR              reduce using rule 186 (Or -> OR ABRE_P expresion COMA expresion CIERRA_P PUNTOCOMA .)
    ADD             reduce using rule 186 (Or -> OR ABRE_P expresion COMA expresion CIERRA_P PUNTOCOMA .)
    PUT             reduce using rule 186 (Or -> OR ABRE_P expresion COMA expresion CIERRA_P PUNTOCOMA .)
    FIN             reduce using rule 186 (Or -> OR ABRE_P expresion COMA expresion CIERRA_P PUNTOCOMA .)
    COMA            reduce using rule 186 (Or -> OR ABRE_P expresion COMA expresion CIERRA_P PUNTOCOMA .)
    CIERRA_P        reduce using rule 186 (Or -> OR ABRE_P expresion COMA expresion CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 186 (Or -> OR ABRE_P expresion COMA expresion CIERRA_P PUNTOCOMA .)


state 585

    (192) Add -> ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA .

    PUNTOCOMA       reduce using rule 192 (Add -> ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA .)
    NUMERO          reduce using rule 192 (Add -> ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA .)
    ABRE_P          reduce using rule 192 (Add -> ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA .)
    SUM             reduce using rule 192 (Add -> ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA .)
    SUBSTR          reduce using rule 192 (Add -> ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA .)
    MULTI           reduce using rule 192 (Add -> ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA .)
    DIV             reduce using rule 192 (Add -> ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA .)
    RANDOM          reduce using rule 192 (Add -> ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA .)
    RUN             reduce using rule 192 (Add -> ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA .)
    IF              reduce using rule 192 (Add -> ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA .)
    IFELSE          reduce using rule 192 (Add -> ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA .)
    REPEAT          reduce using rule 192 (Add -> ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA .)
    UNTIL           reduce using rule 192 (Add -> ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA .)
    WHILE           reduce using rule 192 (Add -> ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA .)
    PRINTLINE       reduce using rule 192 (Add -> ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA .)
    AND             reduce using rule 192 (Add -> ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA .)
    OR              reduce using rule 192 (Add -> ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA .)
    ADD             reduce using rule 192 (Add -> ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA .)
    PUT             reduce using rule 192 (Add -> ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA .)
    FIN             reduce using rule 192 (Add -> ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA .)
    COMA            reduce using rule 192 (Add -> ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA .)
    CIERRA_P        reduce using rule 192 (Add -> ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 192 (Add -> ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA .)


state 586

    (195) Add -> ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA .

    PUNTOCOMA       reduce using rule 195 (Add -> ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA .)
    NUMERO          reduce using rule 195 (Add -> ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA .)
    ABRE_P          reduce using rule 195 (Add -> ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA .)
    SUM             reduce using rule 195 (Add -> ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA .)
    SUBSTR          reduce using rule 195 (Add -> ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA .)
    MULTI           reduce using rule 195 (Add -> ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA .)
    DIV             reduce using rule 195 (Add -> ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA .)
    RANDOM          reduce using rule 195 (Add -> ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA .)
    RUN             reduce using rule 195 (Add -> ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA .)
    IF              reduce using rule 195 (Add -> ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA .)
    IFELSE          reduce using rule 195 (Add -> ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA .)
    REPEAT          reduce using rule 195 (Add -> ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA .)
    UNTIL           reduce using rule 195 (Add -> ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA .)
    WHILE           reduce using rule 195 (Add -> ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA .)
    PRINTLINE       reduce using rule 195 (Add -> ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA .)
    AND             reduce using rule 195 (Add -> ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA .)
    OR              reduce using rule 195 (Add -> ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA .)
    ADD             reduce using rule 195 (Add -> ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA .)
    PUT             reduce using rule 195 (Add -> ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA .)
    FIN             reduce using rule 195 (Add -> ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA .)
    COMA            reduce using rule 195 (Add -> ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA .)
    CIERRA_P        reduce using rule 195 (Add -> ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 195 (Add -> ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA .)


state 587

    (193) Add -> ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA .

    PUNTOCOMA       reduce using rule 193 (Add -> ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA .)
    NUMERO          reduce using rule 193 (Add -> ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA .)
    ABRE_P          reduce using rule 193 (Add -> ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA .)
    SUM             reduce using rule 193 (Add -> ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA .)
    SUBSTR          reduce using rule 193 (Add -> ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA .)
    MULTI           reduce using rule 193 (Add -> ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA .)
    DIV             reduce using rule 193 (Add -> ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA .)
    RANDOM          reduce using rule 193 (Add -> ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA .)
    RUN             reduce using rule 193 (Add -> ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA .)
    IF              reduce using rule 193 (Add -> ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA .)
    IFELSE          reduce using rule 193 (Add -> ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA .)
    REPEAT          reduce using rule 193 (Add -> ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA .)
    UNTIL           reduce using rule 193 (Add -> ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA .)
    WHILE           reduce using rule 193 (Add -> ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA .)
    PRINTLINE       reduce using rule 193 (Add -> ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA .)
    AND             reduce using rule 193 (Add -> ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA .)
    OR              reduce using rule 193 (Add -> ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA .)
    ADD             reduce using rule 193 (Add -> ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA .)
    PUT             reduce using rule 193 (Add -> ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA .)
    FIN             reduce using rule 193 (Add -> ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA .)
    COMA            reduce using rule 193 (Add -> ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA .)
    CIERRA_P        reduce using rule 193 (Add -> ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 193 (Add -> ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA .)


state 588

    (194) Add -> ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA .

    PUNTOCOMA       reduce using rule 194 (Add -> ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    NUMERO          reduce using rule 194 (Add -> ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    ABRE_P          reduce using rule 194 (Add -> ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    SUM             reduce using rule 194 (Add -> ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    SUBSTR          reduce using rule 194 (Add -> ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    MULTI           reduce using rule 194 (Add -> ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    DIV             reduce using rule 194 (Add -> ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    RANDOM          reduce using rule 194 (Add -> ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    RUN             reduce using rule 194 (Add -> ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    IF              reduce using rule 194 (Add -> ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    IFELSE          reduce using rule 194 (Add -> ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    REPEAT          reduce using rule 194 (Add -> ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    UNTIL           reduce using rule 194 (Add -> ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    WHILE           reduce using rule 194 (Add -> ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    PRINTLINE       reduce using rule 194 (Add -> ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    AND             reduce using rule 194 (Add -> ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    OR              reduce using rule 194 (Add -> ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    ADD             reduce using rule 194 (Add -> ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    PUT             reduce using rule 194 (Add -> ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    FIN             reduce using rule 194 (Add -> ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    COMA            reduce using rule 194 (Add -> ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    CIERRA_P        reduce using rule 194 (Add -> ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 194 (Add -> ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA .)


state 589

    (196) Add -> ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA .

    PUNTOCOMA       reduce using rule 196 (Add -> ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    NUMERO          reduce using rule 196 (Add -> ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    ABRE_P          reduce using rule 196 (Add -> ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    SUM             reduce using rule 196 (Add -> ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    SUBSTR          reduce using rule 196 (Add -> ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    MULTI           reduce using rule 196 (Add -> ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    DIV             reduce using rule 196 (Add -> ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    RANDOM          reduce using rule 196 (Add -> ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    RUN             reduce using rule 196 (Add -> ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    IF              reduce using rule 196 (Add -> ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    IFELSE          reduce using rule 196 (Add -> ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    REPEAT          reduce using rule 196 (Add -> ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    UNTIL           reduce using rule 196 (Add -> ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    WHILE           reduce using rule 196 (Add -> ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    PRINTLINE       reduce using rule 196 (Add -> ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    AND             reduce using rule 196 (Add -> ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    OR              reduce using rule 196 (Add -> ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    ADD             reduce using rule 196 (Add -> ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    PUT             reduce using rule 196 (Add -> ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    FIN             reduce using rule 196 (Add -> ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    COMA            reduce using rule 196 (Add -> ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    CIERRA_P        reduce using rule 196 (Add -> ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 196 (Add -> ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA .)


state 590

    (25) llamadoproc -> PARA id BRACKET1 parametro BRACKET2 PUNTOCOMA .

    FIN             reduce using rule 25 (llamadoproc -> PARA id BRACKET1 parametro BRACKET2 PUNTOCOMA .)


state 591

    (221) Pos -> POS ABRE_P NUMERO COMA NUMERO CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 649


state 592

    (223) Pos -> POS ABRE_P NUMERO COMA expresion_alge1 CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 650


state 593

    (226) Pos -> POS ABRE_P NUMERO COMA Var CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 651


state 594

    (224) Pos -> POS ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 652


state 595

    (222) Pos -> POS ABRE_P expresion_alge1 COMA NUMERO CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 653


state 596

    (228) Pos -> POS ABRE_P expresion_alge1 COMA Var CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 654


state 597

    (227) Pos -> POS ABRE_P Var COMA Var CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 655


state 598

    (225) Pos -> POS ABRE_P Var COMA NUMERO CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 656


state 599

    (229) Pos -> POS ABRE_P Var COMA expresion_alge1 CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 657


state 600

    (137) Equal -> EQUAL ABRE_P NUMERO COMA NUMERO CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 658


state 601

    (141) Equal -> EQUAL ABRE_P NUMERO COMA Var CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 659


state 602

    (151) Equal -> EQUAL ABRE_P NUMERO COMA expresion_alge1 CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 660


state 603

    (152) Equal -> EQUAL ABRE_P NUMERO COMA expresion_alge2 CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 661


state 604

    (138) Equal -> EQUAL ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 662


state 605

    (143) Equal -> EQUAL ABRE_P expresion_alge1 COMA Var CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 663


state 606

    (147) Equal -> EQUAL ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 664


state 607

    (149) Equal -> EQUAL ABRE_P expresion_alge1 COMA NUMERO CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 665


state 608

    (139) Equal -> EQUAL ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 666


state 609

    (142) Equal -> EQUAL ABRE_P expresion_alge2 COMA Var CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 667


state 610

    (148) Equal -> EQUAL ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 668


state 611

    (150) Equal -> EQUAL ABRE_P expresion_alge2 COMA NUMERO CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 669


state 612

    (140) Equal -> EQUAL ABRE_P Var COMA Var CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 670


state 613

    (144) Equal -> EQUAL ABRE_P Var COMA NUMERO CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 671


state 614

    (145) Equal -> EQUAL ABRE_P Var COMA expresion_alge1 CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 672


state 615

    (146) Equal -> EQUAL ABRE_P Var COMA expresion_alge2 CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 673


state 616

    (153) Greater -> GREATER ABRE_P NUMERO COMA NUMERO CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 674


state 617

    (157) Greater -> GREATER ABRE_P NUMERO COMA Var CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 675


state 618

    (167) Greater -> GREATER ABRE_P NUMERO COMA expresion_alge1 CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 676


state 619

    (168) Greater -> GREATER ABRE_P NUMERO COMA expresion_alge2 CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 677


state 620

    (154) Greater -> GREATER ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 678


state 621

    (159) Greater -> GREATER ABRE_P expresion_alge1 COMA Var CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 679


state 622

    (163) Greater -> GREATER ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 680


state 623

    (165) Greater -> GREATER ABRE_P expresion_alge1 COMA NUMERO CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 681


state 624

    (155) Greater -> GREATER ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 682


state 625

    (158) Greater -> GREATER ABRE_P expresion_alge2 COMA Var CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 683


state 626

    (164) Greater -> GREATER ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 684


state 627

    (166) Greater -> GREATER ABRE_P expresion_alge2 COMA NUMERO CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 685


state 628

    (156) Greater -> GREATER ABRE_P Var COMA Var CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 686


state 629

    (160) Greater -> GREATER ABRE_P Var COMA NUMERO CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 687


state 630

    (161) Greater -> GREATER ABRE_P Var COMA expresion_alge1 CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 688


state 631

    (162) Greater -> GREATER ABRE_P Var COMA expresion_alge2 CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 689


state 632

    (169) Smaller -> SMALLER ABRE_P NUMERO COMA NUMERO CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 690


state 633

    (173) Smaller -> SMALLER ABRE_P NUMERO COMA Var CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 691


state 634

    (183) Smaller -> SMALLER ABRE_P NUMERO COMA expresion_alge1 CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 692


state 635

    (184) Smaller -> SMALLER ABRE_P NUMERO COMA expresion_alge2 CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 693


state 636

    (170) Smaller -> SMALLER ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 694


state 637

    (175) Smaller -> SMALLER ABRE_P expresion_alge1 COMA Var CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 695


state 638

    (179) Smaller -> SMALLER ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 696


state 639

    (181) Smaller -> SMALLER ABRE_P expresion_alge1 COMA NUMERO CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 697


state 640

    (171) Smaller -> SMALLER ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 698


state 641

    (174) Smaller -> SMALLER ABRE_P expresion_alge2 COMA Var CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 699


state 642

    (180) Smaller -> SMALLER ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 700


state 643

    (182) Smaller -> SMALLER ABRE_P expresion_alge2 COMA NUMERO CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 701


state 644

    (172) Smaller -> SMALLER ABRE_P Var COMA Var CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 702


state 645

    (176) Smaller -> SMALLER ABRE_P Var COMA NUMERO CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 703


state 646

    (177) Smaller -> SMALLER ABRE_P Var COMA expresion_alge1 CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 704


state 647

    (178) Smaller -> SMALLER ABRE_P Var COMA expresion_alge2 CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 705


state 648

    (188) IfElse -> IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 . funcion BRACKET2
    (67) funcion -> . Random empty
    (68) funcion -> . Run empty
    (69) funcion -> . If empty
    (70) funcion -> . IfElse empty
    (71) funcion -> . Repeat empty
    (72) funcion -> . Until empty
    (73) funcion -> . While empty
    (74) funcion -> . PrintLine empty
    (75) funcion -> . And empty
    (76) funcion -> . Or empty
    (77) funcion -> . Add empty
    (78) funcion -> . Put2 empty
    (79) funcion -> . Put empty
    (80) funcion -> . PUNTOCOMA funcion
    (81) funcion -> . empty empty
    (201) Random -> . RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA
    (241) Run -> . RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA
    (187) If -> . IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2
    (188) IfElse -> . IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2
    (190) Repeat -> . REPEAT NUMERO BRACKET1 ordenes BRACKET2
    (191) Until -> . UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2
    (189) While -> . WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2
    (248) PrintLine -> . PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA
    (185) And -> . AND ABRE_P expresion COMA expresion CIERRA_P PUNTOCOMA
    (186) Or -> . OR ABRE_P expresion COMA expresion CIERRA_P PUNTOCOMA
    (192) Add -> . ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA
    (193) Add -> . ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (194) Add -> . ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (195) Add -> . ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (196) Add -> . ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (83) Put2 -> . PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (84) Put2 -> . PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (85) Put2 -> . PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (86) Put2 -> . PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA
    (82) Put -> . PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA
    (249) empty -> .

    PUNTOCOMA       shift and go to state 62
    RANDOM          shift and go to state 69
    RUN             shift and go to state 70
    IF              shift and go to state 71
    IFELSE          shift and go to state 72
    REPEAT          shift and go to state 73
    UNTIL           shift and go to state 74
    WHILE           shift and go to state 75
    PRINTLINE       shift and go to state 76
    AND             shift and go to state 77
    OR              shift and go to state 78
    ADD             shift and go to state 79
    PUT             shift and go to state 94
    BRACKET2        reduce using rule 249 (empty -> .)

    funcion                        shift and go to state 706
    Random                         shift and go to state 51
    empty                          shift and go to state 124
    Run                            shift and go to state 52
    If                             shift and go to state 53
    IfElse                         shift and go to state 54
    Repeat                         shift and go to state 55
    Until                          shift and go to state 56
    While                          shift and go to state 57
    PrintLine                      shift and go to state 58
    And                            shift and go to state 59
    Or                             shift and go to state 60
    Add                            shift and go to state 61
    Put2                           shift and go to state 92
    Put                            shift and go to state 93

state 649

    (221) Pos -> POS ABRE_P NUMERO COMA NUMERO CIERRA_P PUNTOCOMA .

    BRACKET2        reduce using rule 221 (Pos -> POS ABRE_P NUMERO COMA NUMERO CIERRA_P PUNTOCOMA .)


state 650

    (223) Pos -> POS ABRE_P NUMERO COMA expresion_alge1 CIERRA_P PUNTOCOMA .

    BRACKET2        reduce using rule 223 (Pos -> POS ABRE_P NUMERO COMA expresion_alge1 CIERRA_P PUNTOCOMA .)


state 651

    (226) Pos -> POS ABRE_P NUMERO COMA Var CIERRA_P PUNTOCOMA .

    BRACKET2        reduce using rule 226 (Pos -> POS ABRE_P NUMERO COMA Var CIERRA_P PUNTOCOMA .)


state 652

    (224) Pos -> POS ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA .

    BRACKET2        reduce using rule 224 (Pos -> POS ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)


state 653

    (222) Pos -> POS ABRE_P expresion_alge1 COMA NUMERO CIERRA_P PUNTOCOMA .

    BRACKET2        reduce using rule 222 (Pos -> POS ABRE_P expresion_alge1 COMA NUMERO CIERRA_P PUNTOCOMA .)


state 654

    (228) Pos -> POS ABRE_P expresion_alge1 COMA Var CIERRA_P PUNTOCOMA .

    BRACKET2        reduce using rule 228 (Pos -> POS ABRE_P expresion_alge1 COMA Var CIERRA_P PUNTOCOMA .)


state 655

    (227) Pos -> POS ABRE_P Var COMA Var CIERRA_P PUNTOCOMA .

    BRACKET2        reduce using rule 227 (Pos -> POS ABRE_P Var COMA Var CIERRA_P PUNTOCOMA .)


state 656

    (225) Pos -> POS ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA .

    BRACKET2        reduce using rule 225 (Pos -> POS ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA .)


state 657

    (229) Pos -> POS ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA .

    BRACKET2        reduce using rule 229 (Pos -> POS ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA .)


state 658

    (137) Equal -> EQUAL ABRE_P NUMERO COMA NUMERO CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 137 (Equal -> EQUAL ABRE_P NUMERO COMA NUMERO CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 137 (Equal -> EQUAL ABRE_P NUMERO COMA NUMERO CIERRA_P PUNTOCOMA .)


state 659

    (141) Equal -> EQUAL ABRE_P NUMERO COMA Var CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 141 (Equal -> EQUAL ABRE_P NUMERO COMA Var CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 141 (Equal -> EQUAL ABRE_P NUMERO COMA Var CIERRA_P PUNTOCOMA .)


state 660

    (151) Equal -> EQUAL ABRE_P NUMERO COMA expresion_alge1 CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 151 (Equal -> EQUAL ABRE_P NUMERO COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 151 (Equal -> EQUAL ABRE_P NUMERO COMA expresion_alge1 CIERRA_P PUNTOCOMA .)


state 661

    (152) Equal -> EQUAL ABRE_P NUMERO COMA expresion_alge2 CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 152 (Equal -> EQUAL ABRE_P NUMERO COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 152 (Equal -> EQUAL ABRE_P NUMERO COMA expresion_alge2 CIERRA_P PUNTOCOMA .)


state 662

    (138) Equal -> EQUAL ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 138 (Equal -> EQUAL ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 138 (Equal -> EQUAL ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)


state 663

    (143) Equal -> EQUAL ABRE_P expresion_alge1 COMA Var CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 143 (Equal -> EQUAL ABRE_P expresion_alge1 COMA Var CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 143 (Equal -> EQUAL ABRE_P expresion_alge1 COMA Var CIERRA_P PUNTOCOMA .)


state 664

    (147) Equal -> EQUAL ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 147 (Equal -> EQUAL ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 147 (Equal -> EQUAL ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)


state 665

    (149) Equal -> EQUAL ABRE_P expresion_alge1 COMA NUMERO CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 149 (Equal -> EQUAL ABRE_P expresion_alge1 COMA NUMERO CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 149 (Equal -> EQUAL ABRE_P expresion_alge1 COMA NUMERO CIERRA_P PUNTOCOMA .)


state 666

    (139) Equal -> EQUAL ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 139 (Equal -> EQUAL ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 139 (Equal -> EQUAL ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)


state 667

    (142) Equal -> EQUAL ABRE_P expresion_alge2 COMA Var CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 142 (Equal -> EQUAL ABRE_P expresion_alge2 COMA Var CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 142 (Equal -> EQUAL ABRE_P expresion_alge2 COMA Var CIERRA_P PUNTOCOMA .)


state 668

    (148) Equal -> EQUAL ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 148 (Equal -> EQUAL ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 148 (Equal -> EQUAL ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)


state 669

    (150) Equal -> EQUAL ABRE_P expresion_alge2 COMA NUMERO CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 150 (Equal -> EQUAL ABRE_P expresion_alge2 COMA NUMERO CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 150 (Equal -> EQUAL ABRE_P expresion_alge2 COMA NUMERO CIERRA_P PUNTOCOMA .)


state 670

    (140) Equal -> EQUAL ABRE_P Var COMA Var CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 140 (Equal -> EQUAL ABRE_P Var COMA Var CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 140 (Equal -> EQUAL ABRE_P Var COMA Var CIERRA_P PUNTOCOMA .)


state 671

    (144) Equal -> EQUAL ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 144 (Equal -> EQUAL ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 144 (Equal -> EQUAL ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA .)


state 672

    (145) Equal -> EQUAL ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 145 (Equal -> EQUAL ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 145 (Equal -> EQUAL ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA .)


state 673

    (146) Equal -> EQUAL ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 146 (Equal -> EQUAL ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 146 (Equal -> EQUAL ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA .)


state 674

    (153) Greater -> GREATER ABRE_P NUMERO COMA NUMERO CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 153 (Greater -> GREATER ABRE_P NUMERO COMA NUMERO CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 153 (Greater -> GREATER ABRE_P NUMERO COMA NUMERO CIERRA_P PUNTOCOMA .)


state 675

    (157) Greater -> GREATER ABRE_P NUMERO COMA Var CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 157 (Greater -> GREATER ABRE_P NUMERO COMA Var CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 157 (Greater -> GREATER ABRE_P NUMERO COMA Var CIERRA_P PUNTOCOMA .)


state 676

    (167) Greater -> GREATER ABRE_P NUMERO COMA expresion_alge1 CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 167 (Greater -> GREATER ABRE_P NUMERO COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 167 (Greater -> GREATER ABRE_P NUMERO COMA expresion_alge1 CIERRA_P PUNTOCOMA .)


state 677

    (168) Greater -> GREATER ABRE_P NUMERO COMA expresion_alge2 CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 168 (Greater -> GREATER ABRE_P NUMERO COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 168 (Greater -> GREATER ABRE_P NUMERO COMA expresion_alge2 CIERRA_P PUNTOCOMA .)


state 678

    (154) Greater -> GREATER ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 154 (Greater -> GREATER ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 154 (Greater -> GREATER ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)


state 679

    (159) Greater -> GREATER ABRE_P expresion_alge1 COMA Var CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 159 (Greater -> GREATER ABRE_P expresion_alge1 COMA Var CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 159 (Greater -> GREATER ABRE_P expresion_alge1 COMA Var CIERRA_P PUNTOCOMA .)


state 680

    (163) Greater -> GREATER ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 163 (Greater -> GREATER ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 163 (Greater -> GREATER ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)


state 681

    (165) Greater -> GREATER ABRE_P expresion_alge1 COMA NUMERO CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 165 (Greater -> GREATER ABRE_P expresion_alge1 COMA NUMERO CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 165 (Greater -> GREATER ABRE_P expresion_alge1 COMA NUMERO CIERRA_P PUNTOCOMA .)


state 682

    (155) Greater -> GREATER ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 155 (Greater -> GREATER ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 155 (Greater -> GREATER ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)


state 683

    (158) Greater -> GREATER ABRE_P expresion_alge2 COMA Var CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 158 (Greater -> GREATER ABRE_P expresion_alge2 COMA Var CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 158 (Greater -> GREATER ABRE_P expresion_alge2 COMA Var CIERRA_P PUNTOCOMA .)


state 684

    (164) Greater -> GREATER ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 164 (Greater -> GREATER ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 164 (Greater -> GREATER ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)


state 685

    (166) Greater -> GREATER ABRE_P expresion_alge2 COMA NUMERO CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 166 (Greater -> GREATER ABRE_P expresion_alge2 COMA NUMERO CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 166 (Greater -> GREATER ABRE_P expresion_alge2 COMA NUMERO CIERRA_P PUNTOCOMA .)


state 686

    (156) Greater -> GREATER ABRE_P Var COMA Var CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 156 (Greater -> GREATER ABRE_P Var COMA Var CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 156 (Greater -> GREATER ABRE_P Var COMA Var CIERRA_P PUNTOCOMA .)


state 687

    (160) Greater -> GREATER ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 160 (Greater -> GREATER ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 160 (Greater -> GREATER ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA .)


state 688

    (161) Greater -> GREATER ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 161 (Greater -> GREATER ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 161 (Greater -> GREATER ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA .)


state 689

    (162) Greater -> GREATER ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 162 (Greater -> GREATER ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 162 (Greater -> GREATER ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA .)


state 690

    (169) Smaller -> SMALLER ABRE_P NUMERO COMA NUMERO CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 169 (Smaller -> SMALLER ABRE_P NUMERO COMA NUMERO CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 169 (Smaller -> SMALLER ABRE_P NUMERO COMA NUMERO CIERRA_P PUNTOCOMA .)


state 691

    (173) Smaller -> SMALLER ABRE_P NUMERO COMA Var CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 173 (Smaller -> SMALLER ABRE_P NUMERO COMA Var CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 173 (Smaller -> SMALLER ABRE_P NUMERO COMA Var CIERRA_P PUNTOCOMA .)


state 692

    (183) Smaller -> SMALLER ABRE_P NUMERO COMA expresion_alge1 CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 183 (Smaller -> SMALLER ABRE_P NUMERO COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 183 (Smaller -> SMALLER ABRE_P NUMERO COMA expresion_alge1 CIERRA_P PUNTOCOMA .)


state 693

    (184) Smaller -> SMALLER ABRE_P NUMERO COMA expresion_alge2 CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 184 (Smaller -> SMALLER ABRE_P NUMERO COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 184 (Smaller -> SMALLER ABRE_P NUMERO COMA expresion_alge2 CIERRA_P PUNTOCOMA .)


state 694

    (170) Smaller -> SMALLER ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 170 (Smaller -> SMALLER ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 170 (Smaller -> SMALLER ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)


state 695

    (175) Smaller -> SMALLER ABRE_P expresion_alge1 COMA Var CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 175 (Smaller -> SMALLER ABRE_P expresion_alge1 COMA Var CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 175 (Smaller -> SMALLER ABRE_P expresion_alge1 COMA Var CIERRA_P PUNTOCOMA .)


state 696

    (179) Smaller -> SMALLER ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 179 (Smaller -> SMALLER ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 179 (Smaller -> SMALLER ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)


state 697

    (181) Smaller -> SMALLER ABRE_P expresion_alge1 COMA NUMERO CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 181 (Smaller -> SMALLER ABRE_P expresion_alge1 COMA NUMERO CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 181 (Smaller -> SMALLER ABRE_P expresion_alge1 COMA NUMERO CIERRA_P PUNTOCOMA .)


state 698

    (171) Smaller -> SMALLER ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 171 (Smaller -> SMALLER ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 171 (Smaller -> SMALLER ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)


state 699

    (174) Smaller -> SMALLER ABRE_P expresion_alge2 COMA Var CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 174 (Smaller -> SMALLER ABRE_P expresion_alge2 COMA Var CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 174 (Smaller -> SMALLER ABRE_P expresion_alge2 COMA Var CIERRA_P PUNTOCOMA .)


state 700

    (180) Smaller -> SMALLER ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 180 (Smaller -> SMALLER ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 180 (Smaller -> SMALLER ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)


state 701

    (182) Smaller -> SMALLER ABRE_P expresion_alge2 COMA NUMERO CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 182 (Smaller -> SMALLER ABRE_P expresion_alge2 COMA NUMERO CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 182 (Smaller -> SMALLER ABRE_P expresion_alge2 COMA NUMERO CIERRA_P PUNTOCOMA .)


state 702

    (172) Smaller -> SMALLER ABRE_P Var COMA Var CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 172 (Smaller -> SMALLER ABRE_P Var COMA Var CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 172 (Smaller -> SMALLER ABRE_P Var COMA Var CIERRA_P PUNTOCOMA .)


state 703

    (176) Smaller -> SMALLER ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 176 (Smaller -> SMALLER ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 176 (Smaller -> SMALLER ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA .)


state 704

    (177) Smaller -> SMALLER ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 177 (Smaller -> SMALLER ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 177 (Smaller -> SMALLER ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA .)


state 705

    (178) Smaller -> SMALLER ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 178 (Smaller -> SMALLER ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 178 (Smaller -> SMALLER ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA .)


state 706

    (188) IfElse -> IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion . BRACKET2

    BRACKET2        shift and go to state 707


state 707

    (188) IfElse -> IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2 .

    PUNTOCOMA       reduce using rule 188 (IfElse -> IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2 .)
    NUMERO          reduce using rule 188 (IfElse -> IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2 .)
    ABRE_P          reduce using rule 188 (IfElse -> IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2 .)
    SUM             reduce using rule 188 (IfElse -> IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2 .)
    SUBSTR          reduce using rule 188 (IfElse -> IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2 .)
    MULTI           reduce using rule 188 (IfElse -> IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2 .)
    DIV             reduce using rule 188 (IfElse -> IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2 .)
    RANDOM          reduce using rule 188 (IfElse -> IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2 .)
    RUN             reduce using rule 188 (IfElse -> IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2 .)
    IF              reduce using rule 188 (IfElse -> IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2 .)
    IFELSE          reduce using rule 188 (IfElse -> IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2 .)
    REPEAT          reduce using rule 188 (IfElse -> IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2 .)
    UNTIL           reduce using rule 188 (IfElse -> IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2 .)
    WHILE           reduce using rule 188 (IfElse -> IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2 .)
    PRINTLINE       reduce using rule 188 (IfElse -> IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2 .)
    AND             reduce using rule 188 (IfElse -> IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2 .)
    OR              reduce using rule 188 (IfElse -> IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2 .)
    ADD             reduce using rule 188 (IfElse -> IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2 .)
    PUT             reduce using rule 188 (IfElse -> IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2 .)
    FIN             reduce using rule 188 (IfElse -> IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2 .)
    COMA            reduce using rule 188 (IfElse -> IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2 .)
    CIERRA_P        reduce using rule 188 (IfElse -> IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2 .)
    BRACKET2        reduce using rule 188 (IfElse -> IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2 .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PUNTOCOMA in state 27 resolved as shift
WARNING: shift/reduce conflict for PUT in state 27 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 27 resolved as shift
WARNING: shift/reduce conflict for ABRE_P in state 27 resolved as shift
WARNING: shift/reduce conflict for SUM in state 27 resolved as shift
WARNING: shift/reduce conflict for SUBSTR in state 27 resolved as shift
WARNING: shift/reduce conflict for MULTI in state 27 resolved as shift
WARNING: shift/reduce conflict for DIV in state 27 resolved as shift
WARNING: shift/reduce conflict for RANDOM in state 27 resolved as shift
WARNING: shift/reduce conflict for RUN in state 27 resolved as shift
WARNING: shift/reduce conflict for IF in state 27 resolved as shift
WARNING: shift/reduce conflict for IFELSE in state 27 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 27 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 27 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 27 resolved as shift
WARNING: shift/reduce conflict for PRINTLINE in state 27 resolved as shift
WARNING: shift/reduce conflict for AND in state 27 resolved as shift
WARNING: shift/reduce conflict for OR in state 27 resolved as shift
WARNING: shift/reduce conflict for ADD in state 27 resolved as shift
WARNING: shift/reduce conflict for BRACKET2 in state 31 resolved as shift
WARNING: shift/reduce conflict for PUNTOCOMA in state 37 resolved as shift
WARNING: shift/reduce conflict for PUT in state 37 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 37 resolved as shift
WARNING: shift/reduce conflict for ABRE_P in state 37 resolved as shift
WARNING: shift/reduce conflict for SUM in state 37 resolved as shift
WARNING: shift/reduce conflict for SUBSTR in state 37 resolved as shift
WARNING: shift/reduce conflict for MULTI in state 37 resolved as shift
WARNING: shift/reduce conflict for DIV in state 37 resolved as shift
WARNING: shift/reduce conflict for RANDOM in state 37 resolved as shift
WARNING: shift/reduce conflict for RUN in state 37 resolved as shift
WARNING: shift/reduce conflict for IF in state 37 resolved as shift
WARNING: shift/reduce conflict for IFELSE in state 37 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 37 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 37 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 37 resolved as shift
WARNING: shift/reduce conflict for PRINTLINE in state 37 resolved as shift
WARNING: shift/reduce conflict for AND in state 37 resolved as shift
WARNING: shift/reduce conflict for OR in state 37 resolved as shift
WARNING: shift/reduce conflict for ADD in state 37 resolved as shift
WARNING: shift/reduce conflict for PUNTOCOMA in state 39 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 39 resolved as shift
WARNING: shift/reduce conflict for ABRE_P in state 39 resolved as shift
WARNING: shift/reduce conflict for SUM in state 39 resolved as shift
WARNING: shift/reduce conflict for SUBSTR in state 39 resolved as shift
WARNING: shift/reduce conflict for MULTI in state 39 resolved as shift
WARNING: shift/reduce conflict for DIV in state 39 resolved as shift
WARNING: shift/reduce conflict for RANDOM in state 39 resolved as shift
WARNING: shift/reduce conflict for RUN in state 39 resolved as shift
WARNING: shift/reduce conflict for IF in state 39 resolved as shift
WARNING: shift/reduce conflict for IFELSE in state 39 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 39 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 39 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 39 resolved as shift
WARNING: shift/reduce conflict for PRINTLINE in state 39 resolved as shift
WARNING: shift/reduce conflict for AND in state 39 resolved as shift
WARNING: shift/reduce conflict for OR in state 39 resolved as shift
WARNING: shift/reduce conflict for ADD in state 39 resolved as shift
WARNING: shift/reduce conflict for PUT in state 39 resolved as shift
WARNING: shift/reduce conflict for PUNTOCOMA in state 43 resolved as shift
WARNING: shift/reduce conflict for PUT in state 43 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 43 resolved as shift
WARNING: shift/reduce conflict for ABRE_P in state 43 resolved as shift
WARNING: shift/reduce conflict for SUM in state 43 resolved as shift
WARNING: shift/reduce conflict for SUBSTR in state 43 resolved as shift
WARNING: shift/reduce conflict for MULTI in state 43 resolved as shift
WARNING: shift/reduce conflict for DIV in state 43 resolved as shift
WARNING: shift/reduce conflict for RANDOM in state 43 resolved as shift
WARNING: shift/reduce conflict for RUN in state 43 resolved as shift
WARNING: shift/reduce conflict for IF in state 43 resolved as shift
WARNING: shift/reduce conflict for IFELSE in state 43 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 43 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 43 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 43 resolved as shift
WARNING: shift/reduce conflict for PRINTLINE in state 43 resolved as shift
WARNING: shift/reduce conflict for AND in state 43 resolved as shift
WARNING: shift/reduce conflict for OR in state 43 resolved as shift
WARNING: shift/reduce conflict for ADD in state 43 resolved as shift
WARNING: shift/reduce conflict for PUNTOCOMA in state 44 resolved as shift
WARNING: shift/reduce conflict for PUT in state 44 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 44 resolved as shift
WARNING: shift/reduce conflict for ABRE_P in state 44 resolved as shift
WARNING: shift/reduce conflict for SUM in state 44 resolved as shift
WARNING: shift/reduce conflict for SUBSTR in state 44 resolved as shift
WARNING: shift/reduce conflict for MULTI in state 44 resolved as shift
WARNING: shift/reduce conflict for DIV in state 44 resolved as shift
WARNING: shift/reduce conflict for RANDOM in state 44 resolved as shift
WARNING: shift/reduce conflict for RUN in state 44 resolved as shift
WARNING: shift/reduce conflict for IF in state 44 resolved as shift
WARNING: shift/reduce conflict for IFELSE in state 44 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 44 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 44 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 44 resolved as shift
WARNING: shift/reduce conflict for PRINTLINE in state 44 resolved as shift
WARNING: shift/reduce conflict for AND in state 44 resolved as shift
WARNING: shift/reduce conflict for OR in state 44 resolved as shift
WARNING: shift/reduce conflict for ADD in state 44 resolved as shift
WARNING: shift/reduce conflict for PUNTOCOMA in state 45 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 45 resolved as shift
WARNING: shift/reduce conflict for ABRE_P in state 45 resolved as shift
WARNING: shift/reduce conflict for SUM in state 45 resolved as shift
WARNING: shift/reduce conflict for SUBSTR in state 45 resolved as shift
WARNING: shift/reduce conflict for MULTI in state 45 resolved as shift
WARNING: shift/reduce conflict for DIV in state 45 resolved as shift
WARNING: shift/reduce conflict for RANDOM in state 45 resolved as shift
WARNING: shift/reduce conflict for RUN in state 45 resolved as shift
WARNING: shift/reduce conflict for IF in state 45 resolved as shift
WARNING: shift/reduce conflict for IFELSE in state 45 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 45 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 45 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 45 resolved as shift
WARNING: shift/reduce conflict for PRINTLINE in state 45 resolved as shift
WARNING: shift/reduce conflict for AND in state 45 resolved as shift
WARNING: shift/reduce conflict for OR in state 45 resolved as shift
WARNING: shift/reduce conflict for ADD in state 45 resolved as shift
WARNING: shift/reduce conflict for PUT in state 45 resolved as shift
WARNING: shift/reduce conflict for PUNTOCOMA in state 46 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 46 resolved as shift
WARNING: shift/reduce conflict for ABRE_P in state 46 resolved as shift
WARNING: shift/reduce conflict for SUM in state 46 resolved as shift
WARNING: shift/reduce conflict for SUBSTR in state 46 resolved as shift
WARNING: shift/reduce conflict for MULTI in state 46 resolved as shift
WARNING: shift/reduce conflict for DIV in state 46 resolved as shift
WARNING: shift/reduce conflict for RANDOM in state 46 resolved as shift
WARNING: shift/reduce conflict for RUN in state 46 resolved as shift
WARNING: shift/reduce conflict for IF in state 46 resolved as shift
WARNING: shift/reduce conflict for IFELSE in state 46 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 46 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 46 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 46 resolved as shift
WARNING: shift/reduce conflict for PRINTLINE in state 46 resolved as shift
WARNING: shift/reduce conflict for AND in state 46 resolved as shift
WARNING: shift/reduce conflict for OR in state 46 resolved as shift
WARNING: shift/reduce conflict for ADD in state 46 resolved as shift
WARNING: shift/reduce conflict for PUT in state 46 resolved as shift
WARNING: shift/reduce conflict for PUNTOCOMA in state 47 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 47 resolved as shift
WARNING: shift/reduce conflict for ABRE_P in state 47 resolved as shift
WARNING: shift/reduce conflict for SUM in state 47 resolved as shift
WARNING: shift/reduce conflict for SUBSTR in state 47 resolved as shift
WARNING: shift/reduce conflict for MULTI in state 47 resolved as shift
WARNING: shift/reduce conflict for DIV in state 47 resolved as shift
WARNING: shift/reduce conflict for RANDOM in state 47 resolved as shift
WARNING: shift/reduce conflict for RUN in state 47 resolved as shift
WARNING: shift/reduce conflict for IF in state 47 resolved as shift
WARNING: shift/reduce conflict for IFELSE in state 47 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 47 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 47 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 47 resolved as shift
WARNING: shift/reduce conflict for PRINTLINE in state 47 resolved as shift
WARNING: shift/reduce conflict for AND in state 47 resolved as shift
WARNING: shift/reduce conflict for OR in state 47 resolved as shift
WARNING: shift/reduce conflict for ADD in state 47 resolved as shift
WARNING: shift/reduce conflict for PUT in state 47 resolved as shift
WARNING: shift/reduce conflict for PUNTOCOMA in state 48 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 48 resolved as shift
WARNING: shift/reduce conflict for ABRE_P in state 48 resolved as shift
WARNING: shift/reduce conflict for SUM in state 48 resolved as shift
WARNING: shift/reduce conflict for SUBSTR in state 48 resolved as shift
WARNING: shift/reduce conflict for MULTI in state 48 resolved as shift
WARNING: shift/reduce conflict for DIV in state 48 resolved as shift
WARNING: shift/reduce conflict for RANDOM in state 48 resolved as shift
WARNING: shift/reduce conflict for RUN in state 48 resolved as shift
WARNING: shift/reduce conflict for IF in state 48 resolved as shift
WARNING: shift/reduce conflict for IFELSE in state 48 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 48 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 48 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 48 resolved as shift
WARNING: shift/reduce conflict for PRINTLINE in state 48 resolved as shift
WARNING: shift/reduce conflict for AND in state 48 resolved as shift
WARNING: shift/reduce conflict for OR in state 48 resolved as shift
WARNING: shift/reduce conflict for ADD in state 48 resolved as shift
WARNING: shift/reduce conflict for PUT in state 48 resolved as shift
WARNING: shift/reduce conflict for PUNTOCOMA in state 49 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 49 resolved as shift
WARNING: shift/reduce conflict for ABRE_P in state 49 resolved as shift
WARNING: shift/reduce conflict for SUM in state 49 resolved as shift
WARNING: shift/reduce conflict for SUBSTR in state 49 resolved as shift
WARNING: shift/reduce conflict for MULTI in state 49 resolved as shift
WARNING: shift/reduce conflict for DIV in state 49 resolved as shift
WARNING: shift/reduce conflict for RANDOM in state 49 resolved as shift
WARNING: shift/reduce conflict for RUN in state 49 resolved as shift
WARNING: shift/reduce conflict for IF in state 49 resolved as shift
WARNING: shift/reduce conflict for IFELSE in state 49 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 49 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 49 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 49 resolved as shift
WARNING: shift/reduce conflict for PRINTLINE in state 49 resolved as shift
WARNING: shift/reduce conflict for AND in state 49 resolved as shift
WARNING: shift/reduce conflict for OR in state 49 resolved as shift
WARNING: shift/reduce conflict for ADD in state 49 resolved as shift
WARNING: shift/reduce conflict for PUT in state 49 resolved as shift
WARNING: shift/reduce conflict for PUNTOCOMA in state 50 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 50 resolved as shift
WARNING: shift/reduce conflict for ABRE_P in state 50 resolved as shift
WARNING: shift/reduce conflict for SUM in state 50 resolved as shift
WARNING: shift/reduce conflict for SUBSTR in state 50 resolved as shift
WARNING: shift/reduce conflict for MULTI in state 50 resolved as shift
WARNING: shift/reduce conflict for DIV in state 50 resolved as shift
WARNING: shift/reduce conflict for RANDOM in state 50 resolved as shift
WARNING: shift/reduce conflict for RUN in state 50 resolved as shift
WARNING: shift/reduce conflict for IF in state 50 resolved as shift
WARNING: shift/reduce conflict for IFELSE in state 50 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 50 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 50 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 50 resolved as shift
WARNING: shift/reduce conflict for PRINTLINE in state 50 resolved as shift
WARNING: shift/reduce conflict for AND in state 50 resolved as shift
WARNING: shift/reduce conflict for OR in state 50 resolved as shift
WARNING: shift/reduce conflict for ADD in state 50 resolved as shift
WARNING: shift/reduce conflict for PUT in state 50 resolved as shift
WARNING: shift/reduce conflict for PUNTOCOMA in state 62 resolved as shift
WARNING: shift/reduce conflict for RANDOM in state 62 resolved as shift
WARNING: shift/reduce conflict for RUN in state 62 resolved as shift
WARNING: shift/reduce conflict for IF in state 62 resolved as shift
WARNING: shift/reduce conflict for IFELSE in state 62 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 62 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 62 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 62 resolved as shift
WARNING: shift/reduce conflict for PRINTLINE in state 62 resolved as shift
WARNING: shift/reduce conflict for AND in state 62 resolved as shift
WARNING: shift/reduce conflict for OR in state 62 resolved as shift
WARNING: shift/reduce conflict for ADD in state 62 resolved as shift
WARNING: shift/reduce conflict for PUT in state 62 resolved as shift
WARNING: shift/reduce conflict for PUT in state 83 resolved as shift
WARNING: shift/reduce conflict for PUNTOCOMA in state 83 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 83 resolved as shift
WARNING: shift/reduce conflict for ABRE_P in state 83 resolved as shift
WARNING: shift/reduce conflict for SUM in state 83 resolved as shift
WARNING: shift/reduce conflict for SUBSTR in state 83 resolved as shift
WARNING: shift/reduce conflict for MULTI in state 83 resolved as shift
WARNING: shift/reduce conflict for DIV in state 83 resolved as shift
WARNING: shift/reduce conflict for RANDOM in state 83 resolved as shift
WARNING: shift/reduce conflict for RUN in state 83 resolved as shift
WARNING: shift/reduce conflict for IF in state 83 resolved as shift
WARNING: shift/reduce conflict for IFELSE in state 83 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 83 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 83 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 83 resolved as shift
WARNING: shift/reduce conflict for PRINTLINE in state 83 resolved as shift
WARNING: shift/reduce conflict for AND in state 83 resolved as shift
WARNING: shift/reduce conflict for OR in state 83 resolved as shift
WARNING: shift/reduce conflict for ADD in state 83 resolved as shift
WARNING: shift/reduce conflict for PUT in state 84 resolved as shift
WARNING: shift/reduce conflict for PUNTOCOMA in state 84 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 84 resolved as shift
WARNING: shift/reduce conflict for ABRE_P in state 84 resolved as shift
WARNING: shift/reduce conflict for SUM in state 84 resolved as shift
WARNING: shift/reduce conflict for SUBSTR in state 84 resolved as shift
WARNING: shift/reduce conflict for MULTI in state 84 resolved as shift
WARNING: shift/reduce conflict for DIV in state 84 resolved as shift
WARNING: shift/reduce conflict for RANDOM in state 84 resolved as shift
WARNING: shift/reduce conflict for RUN in state 84 resolved as shift
WARNING: shift/reduce conflict for IF in state 84 resolved as shift
WARNING: shift/reduce conflict for IFELSE in state 84 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 84 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 84 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 84 resolved as shift
WARNING: shift/reduce conflict for PRINTLINE in state 84 resolved as shift
WARNING: shift/reduce conflict for AND in state 84 resolved as shift
WARNING: shift/reduce conflict for OR in state 84 resolved as shift
WARNING: shift/reduce conflict for ADD in state 84 resolved as shift
WARNING: shift/reduce conflict for PUNTOCOMA in state 89 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 89 resolved as shift
WARNING: shift/reduce conflict for ABRE_P in state 89 resolved as shift
WARNING: shift/reduce conflict for SUM in state 89 resolved as shift
WARNING: shift/reduce conflict for SUBSTR in state 89 resolved as shift
WARNING: shift/reduce conflict for MULTI in state 89 resolved as shift
WARNING: shift/reduce conflict for DIV in state 89 resolved as shift
WARNING: shift/reduce conflict for RANDOM in state 89 resolved as shift
WARNING: shift/reduce conflict for RUN in state 89 resolved as shift
WARNING: shift/reduce conflict for IF in state 89 resolved as shift
WARNING: shift/reduce conflict for IFELSE in state 89 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 89 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 89 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 89 resolved as shift
WARNING: shift/reduce conflict for PRINTLINE in state 89 resolved as shift
WARNING: shift/reduce conflict for AND in state 89 resolved as shift
WARNING: shift/reduce conflict for OR in state 89 resolved as shift
WARNING: shift/reduce conflict for ADD in state 89 resolved as shift
WARNING: shift/reduce conflict for PUT in state 89 resolved as shift
WARNING: shift/reduce conflict for PUNTOCOMA in state 143 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 143 resolved as shift
WARNING: shift/reduce conflict for ABRE_P in state 143 resolved as shift
WARNING: shift/reduce conflict for SUM in state 143 resolved as shift
WARNING: shift/reduce conflict for SUBSTR in state 143 resolved as shift
WARNING: shift/reduce conflict for MULTI in state 143 resolved as shift
WARNING: shift/reduce conflict for DIV in state 143 resolved as shift
WARNING: shift/reduce conflict for RANDOM in state 143 resolved as shift
WARNING: shift/reduce conflict for RUN in state 143 resolved as shift
WARNING: shift/reduce conflict for IF in state 143 resolved as shift
WARNING: shift/reduce conflict for IFELSE in state 143 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 143 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 143 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 143 resolved as shift
WARNING: shift/reduce conflict for PRINTLINE in state 143 resolved as shift
WARNING: shift/reduce conflict for AND in state 143 resolved as shift
WARNING: shift/reduce conflict for OR in state 143 resolved as shift
WARNING: shift/reduce conflict for ADD in state 143 resolved as shift
WARNING: shift/reduce conflict for PUT in state 143 resolved as shift
WARNING: shift/reduce conflict for PUNTOCOMA in state 144 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 144 resolved as shift
WARNING: shift/reduce conflict for ABRE_P in state 144 resolved as shift
WARNING: shift/reduce conflict for SUM in state 144 resolved as shift
WARNING: shift/reduce conflict for SUBSTR in state 144 resolved as shift
WARNING: shift/reduce conflict for MULTI in state 144 resolved as shift
WARNING: shift/reduce conflict for DIV in state 144 resolved as shift
WARNING: shift/reduce conflict for RANDOM in state 144 resolved as shift
WARNING: shift/reduce conflict for RUN in state 144 resolved as shift
WARNING: shift/reduce conflict for IF in state 144 resolved as shift
WARNING: shift/reduce conflict for IFELSE in state 144 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 144 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 144 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 144 resolved as shift
WARNING: shift/reduce conflict for PRINTLINE in state 144 resolved as shift
WARNING: shift/reduce conflict for AND in state 144 resolved as shift
WARNING: shift/reduce conflict for OR in state 144 resolved as shift
WARNING: shift/reduce conflict for ADD in state 144 resolved as shift
WARNING: shift/reduce conflict for PUT in state 144 resolved as shift
WARNING: shift/reduce conflict for PUT in state 157 resolved as shift
WARNING: shift/reduce conflict for PUNTOCOMA in state 157 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 157 resolved as shift
WARNING: shift/reduce conflict for ABRE_P in state 157 resolved as shift
WARNING: shift/reduce conflict for SUM in state 157 resolved as shift
WARNING: shift/reduce conflict for SUBSTR in state 157 resolved as shift
WARNING: shift/reduce conflict for MULTI in state 157 resolved as shift
WARNING: shift/reduce conflict for DIV in state 157 resolved as shift
WARNING: shift/reduce conflict for RANDOM in state 157 resolved as shift
WARNING: shift/reduce conflict for RUN in state 157 resolved as shift
WARNING: shift/reduce conflict for IF in state 157 resolved as shift
WARNING: shift/reduce conflict for IFELSE in state 157 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 157 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 157 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 157 resolved as shift
WARNING: shift/reduce conflict for PRINTLINE in state 157 resolved as shift
WARNING: shift/reduce conflict for AND in state 157 resolved as shift
WARNING: shift/reduce conflict for OR in state 157 resolved as shift
WARNING: shift/reduce conflict for ADD in state 157 resolved as shift
WARNING: shift/reduce conflict for PUT in state 162 resolved as shift
WARNING: shift/reduce conflict for PUNTOCOMA in state 162 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 162 resolved as shift
WARNING: shift/reduce conflict for ABRE_P in state 162 resolved as shift
WARNING: shift/reduce conflict for SUM in state 162 resolved as shift
WARNING: shift/reduce conflict for SUBSTR in state 162 resolved as shift
WARNING: shift/reduce conflict for MULTI in state 162 resolved as shift
WARNING: shift/reduce conflict for DIV in state 162 resolved as shift
WARNING: shift/reduce conflict for RANDOM in state 162 resolved as shift
WARNING: shift/reduce conflict for RUN in state 162 resolved as shift
WARNING: shift/reduce conflict for IF in state 162 resolved as shift
WARNING: shift/reduce conflict for IFELSE in state 162 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 162 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 162 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 162 resolved as shift
WARNING: shift/reduce conflict for PRINTLINE in state 162 resolved as shift
WARNING: shift/reduce conflict for AND in state 162 resolved as shift
WARNING: shift/reduce conflict for OR in state 162 resolved as shift
WARNING: shift/reduce conflict for ADD in state 162 resolved as shift
WARNING: shift/reduce conflict for PUT in state 163 resolved as shift
WARNING: shift/reduce conflict for PUNTOCOMA in state 163 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 163 resolved as shift
WARNING: shift/reduce conflict for ABRE_P in state 163 resolved as shift
WARNING: shift/reduce conflict for SUM in state 163 resolved as shift
WARNING: shift/reduce conflict for SUBSTR in state 163 resolved as shift
WARNING: shift/reduce conflict for MULTI in state 163 resolved as shift
WARNING: shift/reduce conflict for DIV in state 163 resolved as shift
WARNING: shift/reduce conflict for RANDOM in state 163 resolved as shift
WARNING: shift/reduce conflict for RUN in state 163 resolved as shift
WARNING: shift/reduce conflict for IF in state 163 resolved as shift
WARNING: shift/reduce conflict for IFELSE in state 163 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 163 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 163 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 163 resolved as shift
WARNING: shift/reduce conflict for PRINTLINE in state 163 resolved as shift
WARNING: shift/reduce conflict for AND in state 163 resolved as shift
WARNING: shift/reduce conflict for OR in state 163 resolved as shift
WARNING: shift/reduce conflict for ADD in state 163 resolved as shift
WARNING: shift/reduce conflict for PUNTOCOMA in state 330 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 330 resolved as shift
WARNING: shift/reduce conflict for ABRE_P in state 330 resolved as shift
WARNING: shift/reduce conflict for SUM in state 330 resolved as shift
WARNING: shift/reduce conflict for SUBSTR in state 330 resolved as shift
WARNING: shift/reduce conflict for MULTI in state 330 resolved as shift
WARNING: shift/reduce conflict for DIV in state 330 resolved as shift
WARNING: shift/reduce conflict for RANDOM in state 330 resolved as shift
WARNING: shift/reduce conflict for RUN in state 330 resolved as shift
WARNING: shift/reduce conflict for IF in state 330 resolved as shift
WARNING: shift/reduce conflict for IFELSE in state 330 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 330 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 330 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 330 resolved as shift
WARNING: shift/reduce conflict for PRINTLINE in state 330 resolved as shift
WARNING: shift/reduce conflict for AND in state 330 resolved as shift
WARNING: shift/reduce conflict for OR in state 330 resolved as shift
WARNING: shift/reduce conflict for ADD in state 330 resolved as shift
WARNING: shift/reduce conflict for PUT in state 330 resolved as shift
WARNING: shift/reduce conflict for PUNTOCOMA in state 331 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 331 resolved as shift
WARNING: shift/reduce conflict for ABRE_P in state 331 resolved as shift
WARNING: shift/reduce conflict for SUM in state 331 resolved as shift
WARNING: shift/reduce conflict for SUBSTR in state 331 resolved as shift
WARNING: shift/reduce conflict for MULTI in state 331 resolved as shift
WARNING: shift/reduce conflict for DIV in state 331 resolved as shift
WARNING: shift/reduce conflict for RANDOM in state 331 resolved as shift
WARNING: shift/reduce conflict for RUN in state 331 resolved as shift
WARNING: shift/reduce conflict for IF in state 331 resolved as shift
WARNING: shift/reduce conflict for IFELSE in state 331 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 331 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 331 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 331 resolved as shift
WARNING: shift/reduce conflict for PRINTLINE in state 331 resolved as shift
WARNING: shift/reduce conflict for AND in state 331 resolved as shift
WARNING: shift/reduce conflict for OR in state 331 resolved as shift
WARNING: shift/reduce conflict for ADD in state 331 resolved as shift
WARNING: shift/reduce conflict for PUT in state 331 resolved as shift
WARNING: reduce/reduce conflict in state 39 resolved using rule (cuerpo3 -> funcion)
WARNING: rejected rule (empty -> <empty>) in state 39
WARNING: reduce/reduce conflict in state 40 resolved using rule (cuerpo3 -> empty)
WARNING: rejected rule (empty -> <empty>) in state 40
WARNING: reduce/reduce conflict in state 41 resolved using rule (cuerpo3 -> Put)
WARNING: rejected rule (empty -> <empty>) in state 41
WARNING: reduce/reduce conflict in state 42 resolved using rule (cuerpo3 -> Put2)
WARNING: rejected rule (empty -> <empty>) in state 42
WARNING: reduce/reduce conflict in state 91 resolved using rule (expresion -> funcion empty)
WARNING: rejected rule (empty -> <empty>) in state 91
WARNING: reduce/reduce conflict in state 95 resolved using rule (variablexdd -> empty empty)
WARNING: rejected rule (expresion -> empty empty) in state 95
WARNING: reduce/reduce conflict in state 95 resolved using rule (variablexdd -> empty empty)
WARNING: rejected rule (funcion -> empty empty) in state 95
WARNING: reduce/reduce conflict in state 101 resolved using rule (expresion -> expresion_alge1 empty)
WARNING: rejected rule (empty -> <empty>) in state 101
WARNING: reduce/reduce conflict in state 103 resolved using rule (expresion -> expresion_alge2 empty)
WARNING: rejected rule (empty -> <empty>) in state 103
WARNING: reduce/reduce conflict in state 105 resolved using rule (expresion -> Sum empty)
WARNING: rejected rule (empty -> <empty>) in state 105
WARNING: reduce/reduce conflict in state 107 resolved using rule (expresion -> Substr empty)
WARNING: rejected rule (empty -> <empty>) in state 107
WARNING: reduce/reduce conflict in state 109 resolved using rule (expresion -> Mult empty)
WARNING: rejected rule (empty -> <empty>) in state 109
WARNING: reduce/reduce conflict in state 111 resolved using rule (expresion -> Div empty)
WARNING: rejected rule (empty -> <empty>) in state 111
WARNING: reduce/reduce conflict in state 154 resolved using rule (cuerpo2 -> empty)
WARNING: rejected rule (empty -> <empty>) in state 154
WARNING: reduce/reduce conflict in state 160 resolved using rule (cuerpo2 -> Put2)
WARNING: rejected rule (empty -> <empty>) in state 160
WARNING: reduce/reduce conflict in state 161 resolved using rule (cuerpo2 -> Put)
WARNING: rejected rule (empty -> <empty>) in state 161
WARNING: reduce/reduce conflict in state 169 resolved using rule (expresion -> empty empty)
WARNING: rejected rule (funcion -> empty empty) in state 169
WARNING: reduce/reduce conflict in state 243 resolved using rule (variablexd -> empty empty)
WARNING: rejected rule (expresion -> empty empty) in state 243
WARNING: reduce/reduce conflict in state 243 resolved using rule (variablexd -> empty empty)
WARNING: rejected rule (funcion -> empty empty) in state 243
