Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ENDIF
    FALSE
    IGUAL_IGUAL
    START
    TRUE

Grammar

Rule 0     S' -> Start
Rule 1     Start -> COMMENT cuerpo
Rule 2     cuerpo -> variable
Rule 3     cuerpo -> procedimiento
Rule 4     cuerpo -> main
Rule 5     cuerpo -> COMMENT cuerpo
Rule 6     cuerpo -> Put
Rule 7     cuerpo -> Put2
Rule 8     cuerpo2 -> variablexd
Rule 9     cuerpo2 -> COMMENT cuerpo2
Rule 10    cuerpo2 -> expresion
Rule 11    cuerpo2 -> llamadoproc
Rule 12    cuerpo2 -> empty
Rule 13    cuerpo2 -> Put2
Rule 14    cuerpo2 -> Put
Rule 15    cuerpo3 -> variablexdd
Rule 16    cuerpo3 -> COMMENT cuerpo3
Rule 17    cuerpo3 -> expresion
Rule 18    cuerpo3 -> funcion
Rule 19    cuerpo3 -> empty
Rule 20    cuerpo3 -> Put
Rule 21    cuerpo3 -> Put2
Rule 22    id -> ID
Rule 23    procedimiento -> PARA id BRACKET1 empty BRACKET2 cuerpo2 FIN cuerpo
Rule 24    procedimiento -> PARA id BRACKET1 parametro BRACKET2 cuerpo2 FIN cuerpo
Rule 25    llamadoproc -> PARA id BRACKET1 parametro BRACKET2 PUNTOCOMA
Rule 26    main -> MAIN BRACKET1 BRACKET2 cuerpo3 FIN cuerpo
Rule 27    variable -> variable1 cuerpo
Rule 28    variable -> variable2 cuerpo
Rule 29    variable -> empty empty
Rule 30    variablexd -> variable1 cuerpo2
Rule 31    variablexd -> variable2 cuerpo2
Rule 32    variablexd -> empty empty
Rule 33    variablexdd -> variable1 cuerpo3
Rule 34    variablexdd -> variable2 cuerpo3
Rule 35    variablexdd -> empty empty
Rule 36    variable1 -> DEF VAR PUNTOCOMA
Rule 37    variable2 -> DEF VAR IGUAL NUMERO PUNTOCOMA
Rule 38    variable2 -> DEF VAR IGUAL RESTA NUMERO PUNTOCOMA
Rule 39    expresion -> funcion expresion
Rule 40    expresion -> expresion_alge1 expresion
Rule 41    expresion -> expresion_alge2 expresion
Rule 42    expresion -> Sum expresion
Rule 43    expresion -> Substr expresion
Rule 44    expresion -> Mult expresion
Rule 45    expresion -> Div expresion
Rule 46    expresion -> funcion empty
Rule 47    expresion -> expresion_alge1 empty
Rule 48    expresion -> expresion_alge2 empty
Rule 49    expresion -> Sum empty
Rule 50    expresion -> Substr empty
Rule 51    expresion -> Mult empty
Rule 52    expresion -> Div empty
Rule 53    expresion -> empty empty
Rule 54    ordenes -> Beginning empty
Rule 55    ordenes -> ContinueUp empty
Rule 56    ordenes -> ContinueDown empty
Rule 57    ordenes -> ContinueRight empty
Rule 58    ordenes -> ContinueLeft empty
Rule 59    ordenes -> Up empty
Rule 60    ordenes -> Down empty
Rule 61    ordenes -> Speed empty
Rule 62    ordenes -> Diag empty
Rule 63    ordenes -> Pos empty
Rule 64    ordenes -> PosX empty
Rule 65    ordenes -> PosY empty
Rule 66    ordenes -> UseColor empty
Rule 67    ordenes -> PUNTOCOMA ordenes
Rule 68    ordenes -> empty empty
Rule 69    funcion -> Random empty
Rule 70    funcion -> Run empty
Rule 71    funcion -> If empty
Rule 72    funcion -> IfElse empty
Rule 73    funcion -> Repeat empty
Rule 74    funcion -> Until empty
Rule 75    funcion -> While empty
Rule 76    funcion -> PrintLine empty
Rule 77    funcion -> And empty
Rule 78    funcion -> Or empty
Rule 79    funcion -> Add empty
Rule 80    funcion -> Put2 empty
Rule 81    funcion -> Put empty
Rule 82    funcion -> PUNTOCOMA funcion
Rule 83    funcion -> empty empty
Rule 84    Put -> PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA
Rule 85    Put2 -> PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
Rule 86    Put2 -> PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA
Rule 87    Put2 -> PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
Rule 88    Put2 -> PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
Rule 89    Put2 -> PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA
Rule 90    condicion -> Equal
Rule 91    condicion -> Greater
Rule 92    condicion -> Smaller
Rule 93    expresion_alge1 -> NUMERO SUMA NUMERO
Rule 94    expresion_alge1 -> NUMERO RESTA NUMERO
Rule 95    expresion_alge1 -> NUMERO MULTI NUMERO
Rule 96    expresion_alge1 -> NUMERO DIVISION NUMERO
Rule 97    expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
Rule 98    expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
Rule 99    expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
Rule 100   expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
Rule 101   Sum -> SUM ABRE_P NUMERO COMA NUMERO CIERRA_P
Rule 102   Sum -> SUM ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
Rule 103   Sum -> SUM ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
Rule 104   Sum -> SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
Rule 105   Sum -> SUM ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
Rule 106   Sum -> SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
Rule 107   Sum -> SUM ABRE_P NUMERO COMA Var CIERRA_P
Rule 108   Sum -> SUM ABRE_P RESTA NUMERO COMA Var CIERRA_P
Rule 109   Sum -> SUM ABRE_P Var COMA NUMERO CIERRA_P
Rule 110   Sum -> SUM ABRE_P Var COMA RESTA NUMERO CIERRA_P
Rule 111   Sum -> SUM ABRE_P Var COMA Var CIERRA_P
Rule 112   Sum -> SUM ABRE_P expresion_alge1 COMA Var CIERRA_P
Rule 113   Sum -> SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
Rule 114   Sum -> SUM ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
Rule 115   Sum -> SUM ABRE_P Var COMA expresion_alge1 CIERRA_P
Rule 116   Substr -> SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P
Rule 117   Substr -> SUBSTR ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
Rule 118   Substr -> SUBSTR ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
Rule 119   Substr -> SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
Rule 120   Substr -> SUBSTR ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
Rule 121   Substr -> SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
Rule 122   Substr -> SUBSTR ABRE_P NUMERO COMA Var CIERRA_P
Rule 123   Substr -> SUBSTR ABRE_P RESTA NUMERO COMA Var CIERRA_P
Rule 124   Substr -> SUBSTR ABRE_P Var COMA NUMERO CIERRA_P
Rule 125   Substr -> SUBSTR ABRE_P Var COMA RESTA NUMERO CIERRA_P
Rule 126   Substr -> SUBSTR ABRE_P Var COMA Var CIERRA_P
Rule 127   Substr -> SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P
Rule 128   Substr -> SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
Rule 129   Substr -> SUBSTR ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
Rule 130   Substr -> SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P
Rule 131   Mult -> MULTI ABRE_P NUMERO COMA NUMERO CIERRA_P
Rule 132   Mult -> MULTI ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
Rule 133   Mult -> MULTI ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
Rule 134   Mult -> MULTI ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
Rule 135   Mult -> MULTI ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
Rule 136   Mult -> MULTI ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
Rule 137   Mult -> MULTI ABRE_P NUMERO COMA Var CIERRA_P
Rule 138   Mult -> MULTI ABRE_P RESTA NUMERO COMA Var CIERRA_P
Rule 139   Mult -> MULTI ABRE_P Var COMA NUMERO CIERRA_P
Rule 140   Mult -> MULTI ABRE_P Var COMA RESTA NUMERO CIERRA_P
Rule 141   Mult -> MULTI ABRE_P Var COMA Var CIERRA_P
Rule 142   Mult -> MULTI ABRE_P expresion_alge1 COMA Var CIERRA_P
Rule 143   Mult -> MULTI ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
Rule 144   Mult -> MULTI ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
Rule 145   Mult -> MULTI ABRE_P Var COMA expresion_alge1 CIERRA_P
Rule 146   Div -> DIV ABRE_P NUMERO COMA NUMERO CIERRA_P
Rule 147   Div -> DIV ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
Rule 148   Div -> DIV ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
Rule 149   Div -> DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
Rule 150   Div -> DIV ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
Rule 151   Div -> DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
Rule 152   Div -> DIV ABRE_P NUMERO COMA Var CIERRA_P
Rule 153   Div -> DIV ABRE_P RESTA NUMERO COMA Var CIERRA_P
Rule 154   Div -> DIV ABRE_P Var COMA NUMERO CIERRA_P
Rule 155   Div -> DIV ABRE_P Var COMA RESTA NUMERO CIERRA_P
Rule 156   Div -> DIV ABRE_P Var COMA Var CIERRA_P
Rule 157   Div -> DIV ABRE_P expresion_alge1 COMA Var CIERRA_P
Rule 158   Div -> DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
Rule 159   Div -> DIV ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
Rule 160   Div -> DIV ABRE_P Var COMA expresion_alge1 CIERRA_P
Rule 161   Var -> VAR
Rule 162   Equal -> EQUAL ABRE_P NUMERO COMA NUMERO CIERRA_P PUNTOCOMA
Rule 163   Equal -> EQUAL ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P PUNTOCOMA
Rule 164   Equal -> EQUAL ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P PUNTOCOMA
Rule 165   Equal -> EQUAL ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA
Rule 166   Equal -> EQUAL ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA
Rule 167   Equal -> EQUAL ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
Rule 168   Equal -> EQUAL ABRE_P NUMERO COMA Var CIERRA_P PUNTOCOMA
Rule 169   Equal -> EQUAL ABRE_P RESTA NUMERO COMA Var CIERRA_P PUNTOCOMA
Rule 170   Equal -> EQUAL ABRE_P expresion_alge2 COMA Var CIERRA_P PUNTOCOMA
Rule 171   Equal -> EQUAL ABRE_P expresion_alge1 COMA Var CIERRA_P PUNTOCOMA
Rule 172   Equal -> EQUAL ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
Rule 173   Equal -> EQUAL ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA
Rule 174   Equal -> EQUAL ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
Rule 175   Equal -> EQUAL ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA
Rule 176   Equal -> EQUAL ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA
Rule 177   Equal -> EQUAL ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA
Rule 178   Equal -> EQUAL ABRE_P expresion_alge1 COMA NUMERO CIERRA_P PUNTOCOMA
Rule 179   Equal -> EQUAL ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P PUNTOCOMA
Rule 180   Equal -> EQUAL ABRE_P expresion_alge2 COMA NUMERO CIERRA_P PUNTOCOMA
Rule 181   Equal -> EQUAL ABRE_P expresion_alge2 COMA RESTA NUMERO CIERRA_P PUNTOCOMA
Rule 182   Equal -> EQUAL ABRE_P NUMERO COMA expresion_alge1 CIERRA_P PUNTOCOMA
Rule 183   Equal -> EQUAL ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P PUNTOCOMA
Rule 184   Equal -> EQUAL ABRE_P NUMERO COMA expresion_alge2 CIERRA_P PUNTOCOMA
Rule 185   Equal -> EQUAL ABRE_P RESTA NUMERO COMA expresion_alge2 CIERRA_P PUNTOCOMA
Rule 186   Greater -> GREATER ABRE_P NUMERO COMA NUMERO CIERRA_P PUNTOCOMA
Rule 187   Greater -> GREATER ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P PUNTOCOMA
Rule 188   Greater -> GREATER ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P PUNTOCOMA
Rule 189   Greater -> GREATER ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA
Rule 190   Greater -> GREATER ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA
Rule 191   Greater -> GREATER ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
Rule 192   Greater -> GREATER ABRE_P NUMERO COMA Var CIERRA_P PUNTOCOMA
Rule 193   Greater -> GREATER ABRE_P RESTA NUMERO COMA Var CIERRA_P PUNTOCOMA
Rule 194   Greater -> GREATER ABRE_P expresion_alge2 COMA Var CIERRA_P PUNTOCOMA
Rule 195   Greater -> GREATER ABRE_P expresion_alge1 COMA Var CIERRA_P PUNTOCOMA
Rule 196   Greater -> GREATER ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
Rule 197   Greater -> GREATER ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA
Rule 198   Greater -> GREATER ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
Rule 199   Greater -> GREATER ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA
Rule 200   Greater -> GREATER ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA
Rule 201   Greater -> GREATER ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA
Rule 202   Greater -> GREATER ABRE_P expresion_alge1 COMA NUMERO CIERRA_P PUNTOCOMA
Rule 203   Greater -> GREATER ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P PUNTOCOMA
Rule 204   Greater -> GREATER ABRE_P expresion_alge2 COMA NUMERO CIERRA_P PUNTOCOMA
Rule 205   Greater -> GREATER ABRE_P expresion_alge2 COMA RESTA NUMERO CIERRA_P PUNTOCOMA
Rule 206   Greater -> GREATER ABRE_P NUMERO COMA expresion_alge1 CIERRA_P PUNTOCOMA
Rule 207   Greater -> GREATER ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P PUNTOCOMA
Rule 208   Greater -> GREATER ABRE_P NUMERO COMA expresion_alge2 CIERRA_P PUNTOCOMA
Rule 209   Greater -> GREATER ABRE_P RESTA NUMERO COMA expresion_alge2 CIERRA_P PUNTOCOMA
Rule 210   Smaller -> SMALLER ABRE_P NUMERO COMA NUMERO CIERRA_P PUNTOCOMA
Rule 211   Smaller -> SMALLER ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P PUNTOCOMA
Rule 212   Smaller -> SMALLER ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P PUNTOCOMA
Rule 213   Smaller -> SMALLER ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA
Rule 214   Smaller -> SMALLER ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA
Rule 215   Smaller -> SMALLER ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
Rule 216   Smaller -> SMALLER ABRE_P NUMERO COMA Var CIERRA_P PUNTOCOMA
Rule 217   Smaller -> SMALLER ABRE_P RESTA NUMERO COMA Var CIERRA_P PUNTOCOMA
Rule 218   Smaller -> SMALLER ABRE_P expresion_alge2 COMA Var CIERRA_P PUNTOCOMA
Rule 219   Smaller -> SMALLER ABRE_P expresion_alge1 COMA Var CIERRA_P PUNTOCOMA
Rule 220   Smaller -> SMALLER ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
Rule 221   Smaller -> SMALLER ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA
Rule 222   Smaller -> SMALLER ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
Rule 223   Smaller -> SMALLER ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA
Rule 224   Smaller -> SMALLER ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA
Rule 225   Smaller -> SMALLER ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA
Rule 226   Smaller -> SMALLER ABRE_P expresion_alge1 COMA NUMERO CIERRA_P PUNTOCOMA
Rule 227   Smaller -> SMALLER ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P PUNTOCOMA
Rule 228   Smaller -> SMALLER ABRE_P expresion_alge2 COMA NUMERO CIERRA_P PUNTOCOMA
Rule 229   Smaller -> SMALLER ABRE_P expresion_alge2 COMA RESTA NUMERO CIERRA_P PUNTOCOMA
Rule 230   Smaller -> SMALLER ABRE_P NUMERO COMA expresion_alge1 CIERRA_P PUNTOCOMA
Rule 231   Smaller -> SMALLER ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P PUNTOCOMA
Rule 232   Smaller -> SMALLER ABRE_P NUMERO COMA expresion_alge2 CIERRA_P PUNTOCOMA
Rule 233   Smaller -> SMALLER ABRE_P RESTA NUMERO COMA expresion_alge2 CIERRA_P PUNTOCOMA
Rule 234   And -> AND ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA
Rule 235   And -> AND ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA
Rule 236   And -> AND ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA
Rule 237   And -> AND ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA
Rule 238   Or -> OR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA
Rule 239   Or -> OR ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA
Rule 240   Or -> OR ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA
Rule 241   Or -> OR ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA
Rule 242   If -> IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2
Rule 243   IfElse -> IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2
Rule 244   While -> WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2
Rule 245   Repeat -> REPEAT NUMERO BRACKET1 ordenes BRACKET2
Rule 246   Until -> UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2
Rule 247   Add -> ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA
Rule 248   Add -> ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
Rule 249   Add -> ADD ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA
Rule 250   Add -> ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
Rule 251   Add -> ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
Rule 252   Add -> ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA
Rule 253   parametro -> Var COMA parametro
Rule 254   parametro -> Var empty empty
Rule 255   parametro -> empty empty empty
Rule 256   Beginning -> BEGINNING PUNTOCOMA
Rule 257   Random -> RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA
Rule 258   ContinueUp -> CONTINUEUP NUMERO PUNTOCOMA
Rule 259   ContinueUp -> CONTINUEUP expresion_alge1 PUNTOCOMA
Rule 260   ContinueUp -> CONTINUEUP expresion_alge2 PUNTOCOMA
Rule 261   ContinueUp -> CONTINUEUP Var PUNTOCOMA
Rule 262   ContinueDown -> CONTINUEDOWN NUMERO PUNTOCOMA
Rule 263   ContinueDown -> CONTINUEDOWN expresion_alge1 PUNTOCOMA
Rule 264   ContinueDown -> CONTINUEDOWN expresion_alge2 PUNTOCOMA
Rule 265   ContinueDown -> CONTINUEDOWN Var PUNTOCOMA
Rule 266   ContinueRight -> CONTINUERIGHT NUMERO PUNTOCOMA
Rule 267   ContinueRight -> CONTINUERIGHT expresion_alge1 PUNTOCOMA
Rule 268   ContinueRight -> CONTINUERIGHT expresion_alge2 PUNTOCOMA
Rule 269   ContinueRight -> CONTINUERIGHT Var PUNTOCOMA
Rule 270   ContinueLeft -> CONTINUELEFT NUMERO PUNTOCOMA
Rule 271   ContinueLeft -> CONTINUELEFT expresion_alge1 PUNTOCOMA
Rule 272   ContinueLeft -> CONTINUELEFT expresion_alge2 PUNTOCOMA
Rule 273   ContinueLeft -> CONTINUELEFT Var PUNTOCOMA
Rule 274   Up -> UP PUNTOCOMA
Rule 275   Down -> DOWN PUNTOCOMA
Rule 276   Speed -> SPEED NUMERO PUNTOCOMA
Rule 277   Diag -> POS ABRE_P STRING COMA NUMERO CIERRA_P PUNTOCOMA
Rule 278   Pos -> POS ABRE_P NUMERO COMA NUMERO CIERRA_P PUNTOCOMA
Rule 279   Pos -> POS ABRE_P expresion_alge1 COMA NUMERO CIERRA_P PUNTOCOMA
Rule 280   Pos -> POS ABRE_P NUMERO COMA expresion_alge1 CIERRA_P PUNTOCOMA
Rule 281   Pos -> POS ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA
Rule 282   Pos -> POS ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
Rule 283   Pos -> POS ABRE_P NUMERO COMA Var CIERRA_P PUNTOCOMA
Rule 284   Pos -> POS ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
Rule 285   Pos -> POS ABRE_P expresion_alge1 COMA Var CIERRA_P PUNTOCOMA
Rule 286   Pos -> POS ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
Rule 287   PosX -> POSX NUMERO PUNTOCOMA
Rule 288   PosX -> POSX RESTA NUMERO PUNTOCOMA
Rule 289   PosX -> POSX expresion_alge1 PUNTOCOMA
Rule 290   PosX -> POSX expresion_alge2 PUNTOCOMA
Rule 291   PosX -> POSX Var PUNTOCOMA
Rule 292   PosY -> POSY NUMERO PUNTOCOMA
Rule 293   PosY -> POSY RESTA NUMERO PUNTOCOMA
Rule 294   PosY -> POSY expresion_alge1 PUNTOCOMA
Rule 295   PosY -> POSY expresion_alge2 PUNTOCOMA
Rule 296   PosY -> POSY Var PUNTOCOMA
Rule 297   UseColor -> USECOLOR NUMERO PUNTOCOMA
Rule 298   UseColor -> USECOLOR Var PUNTOCOMA
Rule 299   UseColor -> USECOLOR empty PUNTOCOMA
Rule 300   Run -> RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA
Rule 301   exp -> NUMERO COMA exp
Rule 302   exp -> STRING COMA exp
Rule 303   exp -> Var COMA exp
Rule 304   exp -> NUMERO empty empty
Rule 305   exp -> RESTA NUMERO empty empty
Rule 306   exp -> RESTA NUMERO COMA empty
Rule 307   exp -> STRING empty empty
Rule 308   exp -> Var empty empty
Rule 309   PrintLine -> PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA
Rule 310   empty -> <empty>

Terminals, with rules where they appear

ABRE_P               : 84 85 86 87 88 89 97 97 98 98 99 99 100 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 247 248 249 250 251 252 257 277 278 279 280 281 282 283 284 285 286 309
ADD                  : 247 248 249 250 251 252
AND                  : 234 235 236 237
BEGINNING            : 256
BRACKET1             : 23 24 25 26 242 243 243 244 244 245 246 246 300
BRACKET2             : 23 24 25 26 242 243 243 244 244 245 246 246 300
CIERRA_P             : 84 85 86 87 88 89 97 97 98 98 99 99 100 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 247 248 249 250 251 252 257 277 278 279 280 281 282 283 284 285 286 309
COMA                 : 84 85 86 87 88 89 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 248 249 250 251 252 253 277 278 279 280 281 282 283 284 285 286 301 302 303 306
COMMENT              : 1 5 9 16
CONTINUEDOWN         : 262 263 264 265
CONTINUELEFT         : 270 271 272 273
CONTINUERIGHT        : 266 267 268 269
CONTINUEUP           : 258 259 260 261
DEF                  : 36 37 38
DIV                  : 100 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160
DIVISION             : 96
DOWN                 : 275
ENDIF                : 
EQUAL                : 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185
FALSE                : 
FIN                  : 23 24 26
GREATER              : 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209
ID                   : 22
IF                   : 242
IFELSE               : 243
IGUAL                : 37 38
IGUAL_IGUAL          : 
MAIN                 : 26
MULT                 : 99
MULTI                : 95 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145
NUMERO               : 37 38 85 86 93 93 94 94 95 95 96 96 101 101 102 102 103 103 104 105 107 108 109 110 113 114 116 116 117 117 118 118 119 120 122 123 124 125 128 129 131 131 132 132 133 133 134 135 137 138 139 140 143 144 146 146 147 147 148 148 149 150 152 153 154 155 158 159 162 162 163 163 164 164 168 169 172 173 178 179 180 181 182 183 184 185 186 186 187 187 188 188 192 193 196 197 202 203 204 205 206 207 208 209 210 210 211 211 212 212 216 217 220 221 226 227 228 229 230 231 232 233 245 248 249 257 258 262 266 270 276 277 278 278 279 280 282 283 287 288 292 293 297 301 304 305 306
OR                   : 238 239 240 241
PARA                 : 23 24 25
POS                  : 277 278 279 280 281 282 283 284 285 286
POSX                 : 287 288 289 290 291
POSY                 : 292 293 294 295 296
PRINTLINE            : 309
PUNTOCOMA            : 25 36 37 38 67 82 84 85 86 87 88 89 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 247 248 249 250 251 252 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 309
PUT                  : 84 85 86 87 88 89
RANDOM               : 257
REPEAT               : 245
RESTA                : 38 86 94 98 102 103 105 108 110 114 117 118 120 123 125 129 132 133 135 138 140 144 147 148 150 153 155 159 163 164 169 173 179 181 183 185 187 188 193 197 203 205 207 209 211 212 217 221 227 229 231 233 249 288 293 305 306
RUN                  : 300
SMALLER              : 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233
SPEED                : 276
START                : 
STRING               : 277 302 307
SUBSTR               : 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130
SUM                  : 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115
SUMA                 : 93 97
TRUE                 : 
UNTIL                : 246
UP                   : 274
USECOLOR             : 297 298 299
VAR                  : 36 37 38 84 84 85 86 87 88 89 161
WHILE                : 244
error                : 

Nonterminals, with rules where they appear

Add                  : 79
And                  : 77
Beginning            : 54
ContinueDown         : 56
ContinueLeft         : 58
ContinueRight        : 57
ContinueUp           : 55
Diag                 : 62
Div                  : 45 52
Down                 : 60
Equal                : 90
Greater              : 91
If                   : 71
IfElse               : 72
Mult                 : 44 51
Or                   : 78
Pos                  : 63
PosX                 : 64
PosY                 : 65
PrintLine            : 76
Put                  : 6 14 20 81
Put2                 : 7 13 21 80
Random               : 69
Repeat               : 73
Run                  : 70
Smaller              : 92
Speed                : 61
Start                : 0
Substr               : 43 50
Sum                  : 42 49
Until                : 74
Up                   : 59
UseColor             : 66
Var                  : 107 108 109 110 111 111 112 115 122 123 124 125 126 126 127 130 137 138 139 140 141 141 142 145 152 153 154 155 156 156 157 160 167 167 168 169 170 171 172 173 174 175 191 191 192 193 194 195 196 197 198 199 215 215 216 217 218 219 220 221 222 223 247 248 249 250 251 251 252 253 254 261 265 269 273 282 283 284 284 285 286 291 296 298 303 308
While                : 75
condicion            : 242 243 244 246
cuerpo               : 1 5 23 24 26 27 28
cuerpo2              : 9 23 24 30 31
cuerpo3              : 16 26 33 34
empty                : 12 19 23 29 29 32 32 35 35 46 47 48 49 50 51 52 53 53 54 55 56 57 58 59 60 61 62 63 64 65 66 68 68 69 70 71 72 73 74 75 76 77 78 79 80 81 83 83 247 247 254 254 255 255 255 299 304 304 305 305 306 307 307 308 308
exp                  : 301 302 303 309
expresion            : 10 17 39 40 41 42 43 44 45
expresion_alge1      : 40 47 87 97 97 98 98 99 99 100 100 104 105 106 106 112 113 114 115 119 120 121 121 127 128 129 130 134 135 136 136 142 143 144 145 149 150 151 151 157 158 159 160 165 165 171 174 176 177 178 179 182 183 189 189 195 198 200 201 202 203 206 207 213 213 219 222 224 225 226 227 230 231 234 234 235 236 238 238 239 240 250 259 263 267 271 279 280 281 281 285 286 289 294
expresion_alge2      : 41 48 88 166 166 170 175 176 177 180 181 184 185 190 190 194 199 200 201 204 205 208 209 214 214 218 223 224 225 228 229 232 233 235 236 237 237 239 240 241 241 252 260 264 268 272 290 295
funcion              : 18 39 46 82 89 242 243 243 244 246
id                   : 23 24 25
llamadoproc          : 11
main                 : 4
ordenes              : 67 245 300
parametro            : 24 25 253
procedimiento        : 3
variable             : 2
variable1            : 27 30 33
variable2            : 28 31 34
variablexd           : 8
variablexdd          : 15

Parsing method: LALR

state 0

    (0) S' -> . Start
    (1) Start -> . COMMENT cuerpo

    COMMENT         shift and go to state 2

    Start                          shift and go to state 1

state 1

    (0) S' -> Start .



state 2

    (1) Start -> COMMENT . cuerpo
    (2) cuerpo -> . variable
    (3) cuerpo -> . procedimiento
    (4) cuerpo -> . main
    (5) cuerpo -> . COMMENT cuerpo
    (6) cuerpo -> . Put
    (7) cuerpo -> . Put2
    (27) variable -> . variable1 cuerpo
    (28) variable -> . variable2 cuerpo
    (29) variable -> . empty empty
    (23) procedimiento -> . PARA id BRACKET1 empty BRACKET2 cuerpo2 FIN cuerpo
    (24) procedimiento -> . PARA id BRACKET1 parametro BRACKET2 cuerpo2 FIN cuerpo
    (26) main -> . MAIN BRACKET1 BRACKET2 cuerpo3 FIN cuerpo
    (84) Put -> . PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA
    (85) Put2 -> . PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (86) Put2 -> . PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (87) Put2 -> . PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (88) Put2 -> . PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (89) Put2 -> . PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA
    (36) variable1 -> . DEF VAR PUNTOCOMA
    (37) variable2 -> . DEF VAR IGUAL NUMERO PUNTOCOMA
    (38) variable2 -> . DEF VAR IGUAL RESTA NUMERO PUNTOCOMA
    (310) empty -> .

    COMMENT         shift and go to state 3
    PARA            shift and go to state 13
    MAIN            shift and go to state 14
    PUT             shift and go to state 15
    DEF             shift and go to state 16
    $end            reduce using rule 310 (empty -> .)

    cuerpo                         shift and go to state 4
    variable                       shift and go to state 5
    procedimiento                  shift and go to state 6
    main                           shift and go to state 7
    Put                            shift and go to state 8
    Put2                           shift and go to state 9
    variable1                      shift and go to state 10
    variable2                      shift and go to state 11
    empty                          shift and go to state 12

state 3

    (5) cuerpo -> COMMENT . cuerpo
    (2) cuerpo -> . variable
    (3) cuerpo -> . procedimiento
    (4) cuerpo -> . main
    (5) cuerpo -> . COMMENT cuerpo
    (6) cuerpo -> . Put
    (7) cuerpo -> . Put2
    (27) variable -> . variable1 cuerpo
    (28) variable -> . variable2 cuerpo
    (29) variable -> . empty empty
    (23) procedimiento -> . PARA id BRACKET1 empty BRACKET2 cuerpo2 FIN cuerpo
    (24) procedimiento -> . PARA id BRACKET1 parametro BRACKET2 cuerpo2 FIN cuerpo
    (26) main -> . MAIN BRACKET1 BRACKET2 cuerpo3 FIN cuerpo
    (84) Put -> . PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA
    (85) Put2 -> . PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (86) Put2 -> . PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (87) Put2 -> . PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (88) Put2 -> . PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (89) Put2 -> . PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA
    (36) variable1 -> . DEF VAR PUNTOCOMA
    (37) variable2 -> . DEF VAR IGUAL NUMERO PUNTOCOMA
    (38) variable2 -> . DEF VAR IGUAL RESTA NUMERO PUNTOCOMA
    (310) empty -> .

    COMMENT         shift and go to state 3
    PARA            shift and go to state 13
    MAIN            shift and go to state 14
    PUT             shift and go to state 15
    DEF             shift and go to state 16
    $end            reduce using rule 310 (empty -> .)

    cuerpo                         shift and go to state 17
    variable                       shift and go to state 5
    procedimiento                  shift and go to state 6
    main                           shift and go to state 7
    Put                            shift and go to state 8
    Put2                           shift and go to state 9
    variable1                      shift and go to state 10
    variable2                      shift and go to state 11
    empty                          shift and go to state 12

state 4

    (1) Start -> COMMENT cuerpo .

    $end            reduce using rule 1 (Start -> COMMENT cuerpo .)


state 5

    (2) cuerpo -> variable .

    $end            reduce using rule 2 (cuerpo -> variable .)


state 6

    (3) cuerpo -> procedimiento .

    $end            reduce using rule 3 (cuerpo -> procedimiento .)


state 7

    (4) cuerpo -> main .

    $end            reduce using rule 4 (cuerpo -> main .)


state 8

    (6) cuerpo -> Put .

    $end            reduce using rule 6 (cuerpo -> Put .)


state 9

    (7) cuerpo -> Put2 .

    $end            reduce using rule 7 (cuerpo -> Put2 .)


state 10

    (27) variable -> variable1 . cuerpo
    (2) cuerpo -> . variable
    (3) cuerpo -> . procedimiento
    (4) cuerpo -> . main
    (5) cuerpo -> . COMMENT cuerpo
    (6) cuerpo -> . Put
    (7) cuerpo -> . Put2
    (27) variable -> . variable1 cuerpo
    (28) variable -> . variable2 cuerpo
    (29) variable -> . empty empty
    (23) procedimiento -> . PARA id BRACKET1 empty BRACKET2 cuerpo2 FIN cuerpo
    (24) procedimiento -> . PARA id BRACKET1 parametro BRACKET2 cuerpo2 FIN cuerpo
    (26) main -> . MAIN BRACKET1 BRACKET2 cuerpo3 FIN cuerpo
    (84) Put -> . PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA
    (85) Put2 -> . PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (86) Put2 -> . PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (87) Put2 -> . PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (88) Put2 -> . PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (89) Put2 -> . PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA
    (36) variable1 -> . DEF VAR PUNTOCOMA
    (37) variable2 -> . DEF VAR IGUAL NUMERO PUNTOCOMA
    (38) variable2 -> . DEF VAR IGUAL RESTA NUMERO PUNTOCOMA
    (310) empty -> .

    COMMENT         shift and go to state 3
    PARA            shift and go to state 13
    MAIN            shift and go to state 14
    PUT             shift and go to state 15
    DEF             shift and go to state 16
    $end            reduce using rule 310 (empty -> .)

    variable1                      shift and go to state 10
    cuerpo                         shift and go to state 18
    variable                       shift and go to state 5
    procedimiento                  shift and go to state 6
    main                           shift and go to state 7
    Put                            shift and go to state 8
    Put2                           shift and go to state 9
    variable2                      shift and go to state 11
    empty                          shift and go to state 12

state 11

    (28) variable -> variable2 . cuerpo
    (2) cuerpo -> . variable
    (3) cuerpo -> . procedimiento
    (4) cuerpo -> . main
    (5) cuerpo -> . COMMENT cuerpo
    (6) cuerpo -> . Put
    (7) cuerpo -> . Put2
    (27) variable -> . variable1 cuerpo
    (28) variable -> . variable2 cuerpo
    (29) variable -> . empty empty
    (23) procedimiento -> . PARA id BRACKET1 empty BRACKET2 cuerpo2 FIN cuerpo
    (24) procedimiento -> . PARA id BRACKET1 parametro BRACKET2 cuerpo2 FIN cuerpo
    (26) main -> . MAIN BRACKET1 BRACKET2 cuerpo3 FIN cuerpo
    (84) Put -> . PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA
    (85) Put2 -> . PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (86) Put2 -> . PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (87) Put2 -> . PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (88) Put2 -> . PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (89) Put2 -> . PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA
    (36) variable1 -> . DEF VAR PUNTOCOMA
    (37) variable2 -> . DEF VAR IGUAL NUMERO PUNTOCOMA
    (38) variable2 -> . DEF VAR IGUAL RESTA NUMERO PUNTOCOMA
    (310) empty -> .

    COMMENT         shift and go to state 3
    PARA            shift and go to state 13
    MAIN            shift and go to state 14
    PUT             shift and go to state 15
    DEF             shift and go to state 16
    $end            reduce using rule 310 (empty -> .)

    variable2                      shift and go to state 11
    cuerpo                         shift and go to state 19
    variable                       shift and go to state 5
    procedimiento                  shift and go to state 6
    main                           shift and go to state 7
    Put                            shift and go to state 8
    Put2                           shift and go to state 9
    variable1                      shift and go to state 10
    empty                          shift and go to state 12

state 12

    (29) variable -> empty . empty
    (310) empty -> .

    $end            reduce using rule 310 (empty -> .)

    empty                          shift and go to state 20

state 13

    (23) procedimiento -> PARA . id BRACKET1 empty BRACKET2 cuerpo2 FIN cuerpo
    (24) procedimiento -> PARA . id BRACKET1 parametro BRACKET2 cuerpo2 FIN cuerpo
    (22) id -> . ID

    ID              shift and go to state 22

    id                             shift and go to state 21

state 14

    (26) main -> MAIN . BRACKET1 BRACKET2 cuerpo3 FIN cuerpo

    BRACKET1        shift and go to state 23


state 15

    (84) Put -> PUT . ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA
    (85) Put2 -> PUT . ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (86) Put2 -> PUT . ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (87) Put2 -> PUT . ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (88) Put2 -> PUT . ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (89) Put2 -> PUT . ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA

    ABRE_P          shift and go to state 24


state 16

    (36) variable1 -> DEF . VAR PUNTOCOMA
    (37) variable2 -> DEF . VAR IGUAL NUMERO PUNTOCOMA
    (38) variable2 -> DEF . VAR IGUAL RESTA NUMERO PUNTOCOMA

    VAR             shift and go to state 25


state 17

    (5) cuerpo -> COMMENT cuerpo .

    $end            reduce using rule 5 (cuerpo -> COMMENT cuerpo .)


state 18

    (27) variable -> variable1 cuerpo .

    $end            reduce using rule 27 (variable -> variable1 cuerpo .)


state 19

    (28) variable -> variable2 cuerpo .

    $end            reduce using rule 28 (variable -> variable2 cuerpo .)


state 20

    (29) variable -> empty empty .

    $end            reduce using rule 29 (variable -> empty empty .)


state 21

    (23) procedimiento -> PARA id . BRACKET1 empty BRACKET2 cuerpo2 FIN cuerpo
    (24) procedimiento -> PARA id . BRACKET1 parametro BRACKET2 cuerpo2 FIN cuerpo

    BRACKET1        shift and go to state 26


state 22

    (22) id -> ID .

    BRACKET1        reduce using rule 22 (id -> ID .)


state 23

    (26) main -> MAIN BRACKET1 . BRACKET2 cuerpo3 FIN cuerpo

    BRACKET2        shift and go to state 27


state 24

    (84) Put -> PUT ABRE_P . VAR COMA VAR CIERRA_P PUNTOCOMA
    (85) Put2 -> PUT ABRE_P . VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (86) Put2 -> PUT ABRE_P . VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (87) Put2 -> PUT ABRE_P . VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (88) Put2 -> PUT ABRE_P . VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (89) Put2 -> PUT ABRE_P . VAR COMA funcion CIERRA_P PUNTOCOMA

    VAR             shift and go to state 28


state 25

    (36) variable1 -> DEF VAR . PUNTOCOMA
    (37) variable2 -> DEF VAR . IGUAL NUMERO PUNTOCOMA
    (38) variable2 -> DEF VAR . IGUAL RESTA NUMERO PUNTOCOMA

    PUNTOCOMA       shift and go to state 29
    IGUAL           shift and go to state 30


state 26

    (23) procedimiento -> PARA id BRACKET1 . empty BRACKET2 cuerpo2 FIN cuerpo
    (24) procedimiento -> PARA id BRACKET1 . parametro BRACKET2 cuerpo2 FIN cuerpo
    (310) empty -> .
    (253) parametro -> . Var COMA parametro
    (254) parametro -> . Var empty empty
    (255) parametro -> . empty empty empty
    (161) Var -> . VAR

    BRACKET2        reduce using rule 310 (empty -> .)
    VAR             shift and go to state 34

    empty                          shift and go to state 31
    parametro                      shift and go to state 32
    Var                            shift and go to state 33

state 27

    (26) main -> MAIN BRACKET1 BRACKET2 . cuerpo3 FIN cuerpo
    (15) cuerpo3 -> . variablexdd
    (16) cuerpo3 -> . COMMENT cuerpo3
    (17) cuerpo3 -> . expresion
    (18) cuerpo3 -> . funcion
    (19) cuerpo3 -> . empty
    (20) cuerpo3 -> . Put
    (21) cuerpo3 -> . Put2
    (33) variablexdd -> . variable1 cuerpo3
    (34) variablexdd -> . variable2 cuerpo3
    (35) variablexdd -> . empty empty
    (39) expresion -> . funcion expresion
    (40) expresion -> . expresion_alge1 expresion
    (41) expresion -> . expresion_alge2 expresion
    (42) expresion -> . Sum expresion
    (43) expresion -> . Substr expresion
    (44) expresion -> . Mult expresion
    (45) expresion -> . Div expresion
    (46) expresion -> . funcion empty
    (47) expresion -> . expresion_alge1 empty
    (48) expresion -> . expresion_alge2 empty
    (49) expresion -> . Sum empty
    (50) expresion -> . Substr empty
    (51) expresion -> . Mult empty
    (52) expresion -> . Div empty
    (53) expresion -> . empty empty
    (69) funcion -> . Random empty
    (70) funcion -> . Run empty
    (71) funcion -> . If empty
    (72) funcion -> . IfElse empty
    (73) funcion -> . Repeat empty
    (74) funcion -> . Until empty
    (75) funcion -> . While empty
    (76) funcion -> . PrintLine empty
    (77) funcion -> . And empty
    (78) funcion -> . Or empty
    (79) funcion -> . Add empty
    (80) funcion -> . Put2 empty
    (81) funcion -> . Put empty
    (82) funcion -> . PUNTOCOMA funcion
    (83) funcion -> . empty empty
    (310) empty -> .
    (84) Put -> . PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA
    (85) Put2 -> . PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (86) Put2 -> . PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (87) Put2 -> . PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (88) Put2 -> . PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (89) Put2 -> . PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA
    (36) variable1 -> . DEF VAR PUNTOCOMA
    (37) variable2 -> . DEF VAR IGUAL NUMERO PUNTOCOMA
    (38) variable2 -> . DEF VAR IGUAL RESTA NUMERO PUNTOCOMA
    (93) expresion_alge1 -> . NUMERO SUMA NUMERO
    (94) expresion_alge1 -> . NUMERO RESTA NUMERO
    (95) expresion_alge1 -> . NUMERO MULTI NUMERO
    (96) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (97) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (98) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (99) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (100) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (101) Sum -> . SUM ABRE_P NUMERO COMA NUMERO CIERRA_P
    (102) Sum -> . SUM ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (103) Sum -> . SUM ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (104) Sum -> . SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (105) Sum -> . SUM ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (106) Sum -> . SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (107) Sum -> . SUM ABRE_P NUMERO COMA Var CIERRA_P
    (108) Sum -> . SUM ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (109) Sum -> . SUM ABRE_P Var COMA NUMERO CIERRA_P
    (110) Sum -> . SUM ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (111) Sum -> . SUM ABRE_P Var COMA Var CIERRA_P
    (112) Sum -> . SUM ABRE_P expresion_alge1 COMA Var CIERRA_P
    (113) Sum -> . SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (114) Sum -> . SUM ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (115) Sum -> . SUM ABRE_P Var COMA expresion_alge1 CIERRA_P
    (116) Substr -> . SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P
    (117) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (118) Substr -> . SUBSTR ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (119) Substr -> . SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (120) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (121) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (122) Substr -> . SUBSTR ABRE_P NUMERO COMA Var CIERRA_P
    (123) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (124) Substr -> . SUBSTR ABRE_P Var COMA NUMERO CIERRA_P
    (125) Substr -> . SUBSTR ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (126) Substr -> . SUBSTR ABRE_P Var COMA Var CIERRA_P
    (127) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P
    (128) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (129) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (130) Substr -> . SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P
    (131) Mult -> . MULTI ABRE_P NUMERO COMA NUMERO CIERRA_P
    (132) Mult -> . MULTI ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (133) Mult -> . MULTI ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (134) Mult -> . MULTI ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (135) Mult -> . MULTI ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (136) Mult -> . MULTI ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (137) Mult -> . MULTI ABRE_P NUMERO COMA Var CIERRA_P
    (138) Mult -> . MULTI ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (139) Mult -> . MULTI ABRE_P Var COMA NUMERO CIERRA_P
    (140) Mult -> . MULTI ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (141) Mult -> . MULTI ABRE_P Var COMA Var CIERRA_P
    (142) Mult -> . MULTI ABRE_P expresion_alge1 COMA Var CIERRA_P
    (143) Mult -> . MULTI ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (144) Mult -> . MULTI ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (145) Mult -> . MULTI ABRE_P Var COMA expresion_alge1 CIERRA_P
    (146) Div -> . DIV ABRE_P NUMERO COMA NUMERO CIERRA_P
    (147) Div -> . DIV ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (148) Div -> . DIV ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (149) Div -> . DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (150) Div -> . DIV ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (151) Div -> . DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (152) Div -> . DIV ABRE_P NUMERO COMA Var CIERRA_P
    (153) Div -> . DIV ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (154) Div -> . DIV ABRE_P Var COMA NUMERO CIERRA_P
    (155) Div -> . DIV ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (156) Div -> . DIV ABRE_P Var COMA Var CIERRA_P
    (157) Div -> . DIV ABRE_P expresion_alge1 COMA Var CIERRA_P
    (158) Div -> . DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (159) Div -> . DIV ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (160) Div -> . DIV ABRE_P Var COMA expresion_alge1 CIERRA_P
    (257) Random -> . RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA
    (300) Run -> . RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA
    (242) If -> . IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2
    (243) IfElse -> . IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2
    (245) Repeat -> . REPEAT NUMERO BRACKET1 ordenes BRACKET2
    (246) Until -> . UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2
    (244) While -> . WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2
    (309) PrintLine -> . PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA
    (234) And -> . AND ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (235) And -> . AND ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (236) And -> . AND ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (237) And -> . AND ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (238) Or -> . OR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (239) Or -> . OR ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (240) Or -> . OR ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (241) Or -> . OR ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (247) Add -> . ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA
    (248) Add -> . ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (249) Add -> . ADD ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (250) Add -> . ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (251) Add -> . ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (252) Add -> . ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA

  ! shift/reduce conflict for PUNTOCOMA resolved as shift
  ! shift/reduce conflict for PUT resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for ABRE_P resolved as shift
  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for SUBSTR resolved as shift
  ! shift/reduce conflict for MULTI resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for RANDOM resolved as shift
  ! shift/reduce conflict for RUN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for IFELSE resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for PRINTLINE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
    COMMENT         shift and go to state 37
    PUNTOCOMA       shift and go to state 62
    FIN             reduce using rule 310 (empty -> .)
    PUT             shift and go to state 15
    DEF             shift and go to state 16
    NUMERO          shift and go to state 64
    ABRE_P          shift and go to state 63
    SUM             shift and go to state 67
    SUBSTR          shift and go to state 68
    MULTI           shift and go to state 65
    DIV             shift and go to state 66
    RANDOM          shift and go to state 69
    RUN             shift and go to state 70
    IF              shift and go to state 71
    IFELSE          shift and go to state 72
    REPEAT          shift and go to state 73
    UNTIL           shift and go to state 74
    WHILE           shift and go to state 75
    PRINTLINE       shift and go to state 76
    AND             shift and go to state 77
    OR              shift and go to state 78
    ADD             shift and go to state 79

  ! PUNTOCOMA       [ reduce using rule 310 (empty -> .) ]
  ! NUMERO          [ reduce using rule 310 (empty -> .) ]
  ! ABRE_P          [ reduce using rule 310 (empty -> .) ]
  ! SUM             [ reduce using rule 310 (empty -> .) ]
  ! SUBSTR          [ reduce using rule 310 (empty -> .) ]
  ! MULTI           [ reduce using rule 310 (empty -> .) ]
  ! DIV             [ reduce using rule 310 (empty -> .) ]
  ! RANDOM          [ reduce using rule 310 (empty -> .) ]
  ! RUN             [ reduce using rule 310 (empty -> .) ]
  ! IF              [ reduce using rule 310 (empty -> .) ]
  ! IFELSE          [ reduce using rule 310 (empty -> .) ]
  ! REPEAT          [ reduce using rule 310 (empty -> .) ]
  ! UNTIL           [ reduce using rule 310 (empty -> .) ]
  ! WHILE           [ reduce using rule 310 (empty -> .) ]
  ! PRINTLINE       [ reduce using rule 310 (empty -> .) ]
  ! AND             [ reduce using rule 310 (empty -> .) ]
  ! OR              [ reduce using rule 310 (empty -> .) ]
  ! ADD             [ reduce using rule 310 (empty -> .) ]
  ! PUT             [ reduce using rule 310 (empty -> .) ]

    cuerpo3                        shift and go to state 35
    variablexdd                    shift and go to state 36
    expresion                      shift and go to state 38
    funcion                        shift and go to state 39
    empty                          shift and go to state 40
    Put                            shift and go to state 41
    Put2                           shift and go to state 42
    variable1                      shift and go to state 43
    variable2                      shift and go to state 44
    expresion_alge1                shift and go to state 45
    expresion_alge2                shift and go to state 46
    Sum                            shift and go to state 47
    Substr                         shift and go to state 48
    Mult                           shift and go to state 49
    Div                            shift and go to state 50
    Random                         shift and go to state 51
    Run                            shift and go to state 52
    If                             shift and go to state 53
    IfElse                         shift and go to state 54
    Repeat                         shift and go to state 55
    Until                          shift and go to state 56
    While                          shift and go to state 57
    PrintLine                      shift and go to state 58
    And                            shift and go to state 59
    Or                             shift and go to state 60
    Add                            shift and go to state 61

state 28

    (84) Put -> PUT ABRE_P VAR . COMA VAR CIERRA_P PUNTOCOMA
    (85) Put2 -> PUT ABRE_P VAR . COMA NUMERO CIERRA_P PUNTOCOMA
    (86) Put2 -> PUT ABRE_P VAR . COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (87) Put2 -> PUT ABRE_P VAR . COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (88) Put2 -> PUT ABRE_P VAR . COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (89) Put2 -> PUT ABRE_P VAR . COMA funcion CIERRA_P PUNTOCOMA

    COMA            shift and go to state 80


state 29

    (36) variable1 -> DEF VAR PUNTOCOMA .

    COMMENT         reduce using rule 36 (variable1 -> DEF VAR PUNTOCOMA .)
    PARA            reduce using rule 36 (variable1 -> DEF VAR PUNTOCOMA .)
    MAIN            reduce using rule 36 (variable1 -> DEF VAR PUNTOCOMA .)
    PUT             reduce using rule 36 (variable1 -> DEF VAR PUNTOCOMA .)
    DEF             reduce using rule 36 (variable1 -> DEF VAR PUNTOCOMA .)
    $end            reduce using rule 36 (variable1 -> DEF VAR PUNTOCOMA .)
    PUNTOCOMA       reduce using rule 36 (variable1 -> DEF VAR PUNTOCOMA .)
    NUMERO          reduce using rule 36 (variable1 -> DEF VAR PUNTOCOMA .)
    ABRE_P          reduce using rule 36 (variable1 -> DEF VAR PUNTOCOMA .)
    SUM             reduce using rule 36 (variable1 -> DEF VAR PUNTOCOMA .)
    SUBSTR          reduce using rule 36 (variable1 -> DEF VAR PUNTOCOMA .)
    MULTI           reduce using rule 36 (variable1 -> DEF VAR PUNTOCOMA .)
    DIV             reduce using rule 36 (variable1 -> DEF VAR PUNTOCOMA .)
    RANDOM          reduce using rule 36 (variable1 -> DEF VAR PUNTOCOMA .)
    RUN             reduce using rule 36 (variable1 -> DEF VAR PUNTOCOMA .)
    IF              reduce using rule 36 (variable1 -> DEF VAR PUNTOCOMA .)
    IFELSE          reduce using rule 36 (variable1 -> DEF VAR PUNTOCOMA .)
    REPEAT          reduce using rule 36 (variable1 -> DEF VAR PUNTOCOMA .)
    UNTIL           reduce using rule 36 (variable1 -> DEF VAR PUNTOCOMA .)
    WHILE           reduce using rule 36 (variable1 -> DEF VAR PUNTOCOMA .)
    PRINTLINE       reduce using rule 36 (variable1 -> DEF VAR PUNTOCOMA .)
    AND             reduce using rule 36 (variable1 -> DEF VAR PUNTOCOMA .)
    OR              reduce using rule 36 (variable1 -> DEF VAR PUNTOCOMA .)
    ADD             reduce using rule 36 (variable1 -> DEF VAR PUNTOCOMA .)
    FIN             reduce using rule 36 (variable1 -> DEF VAR PUNTOCOMA .)


state 30

    (37) variable2 -> DEF VAR IGUAL . NUMERO PUNTOCOMA
    (38) variable2 -> DEF VAR IGUAL . RESTA NUMERO PUNTOCOMA

    NUMERO          shift and go to state 81
    RESTA           shift and go to state 82


state 31

    (23) procedimiento -> PARA id BRACKET1 empty . BRACKET2 cuerpo2 FIN cuerpo
    (255) parametro -> empty . empty empty
    (310) empty -> .

  ! shift/reduce conflict for BRACKET2 resolved as shift
    BRACKET2        shift and go to state 84

  ! BRACKET2        [ reduce using rule 310 (empty -> .) ]

    empty                          shift and go to state 83

state 32

    (24) procedimiento -> PARA id BRACKET1 parametro . BRACKET2 cuerpo2 FIN cuerpo

    BRACKET2        shift and go to state 85


state 33

    (253) parametro -> Var . COMA parametro
    (254) parametro -> Var . empty empty
    (310) empty -> .

    COMA            shift and go to state 86
    BRACKET2        reduce using rule 310 (empty -> .)

    empty                          shift and go to state 87

state 34

    (161) Var -> VAR .

    COMA            reduce using rule 161 (Var -> VAR .)
    BRACKET2        reduce using rule 161 (Var -> VAR .)
    CIERRA_P        reduce using rule 161 (Var -> VAR .)
    PUNTOCOMA       reduce using rule 161 (Var -> VAR .)


state 35

    (26) main -> MAIN BRACKET1 BRACKET2 cuerpo3 . FIN cuerpo

    FIN             shift and go to state 88


state 36

    (15) cuerpo3 -> variablexdd .

    FIN             reduce using rule 15 (cuerpo3 -> variablexdd .)


state 37

    (16) cuerpo3 -> COMMENT . cuerpo3
    (15) cuerpo3 -> . variablexdd
    (16) cuerpo3 -> . COMMENT cuerpo3
    (17) cuerpo3 -> . expresion
    (18) cuerpo3 -> . funcion
    (19) cuerpo3 -> . empty
    (20) cuerpo3 -> . Put
    (21) cuerpo3 -> . Put2
    (33) variablexdd -> . variable1 cuerpo3
    (34) variablexdd -> . variable2 cuerpo3
    (35) variablexdd -> . empty empty
    (39) expresion -> . funcion expresion
    (40) expresion -> . expresion_alge1 expresion
    (41) expresion -> . expresion_alge2 expresion
    (42) expresion -> . Sum expresion
    (43) expresion -> . Substr expresion
    (44) expresion -> . Mult expresion
    (45) expresion -> . Div expresion
    (46) expresion -> . funcion empty
    (47) expresion -> . expresion_alge1 empty
    (48) expresion -> . expresion_alge2 empty
    (49) expresion -> . Sum empty
    (50) expresion -> . Substr empty
    (51) expresion -> . Mult empty
    (52) expresion -> . Div empty
    (53) expresion -> . empty empty
    (69) funcion -> . Random empty
    (70) funcion -> . Run empty
    (71) funcion -> . If empty
    (72) funcion -> . IfElse empty
    (73) funcion -> . Repeat empty
    (74) funcion -> . Until empty
    (75) funcion -> . While empty
    (76) funcion -> . PrintLine empty
    (77) funcion -> . And empty
    (78) funcion -> . Or empty
    (79) funcion -> . Add empty
    (80) funcion -> . Put2 empty
    (81) funcion -> . Put empty
    (82) funcion -> . PUNTOCOMA funcion
    (83) funcion -> . empty empty
    (310) empty -> .
    (84) Put -> . PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA
    (85) Put2 -> . PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (86) Put2 -> . PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (87) Put2 -> . PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (88) Put2 -> . PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (89) Put2 -> . PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA
    (36) variable1 -> . DEF VAR PUNTOCOMA
    (37) variable2 -> . DEF VAR IGUAL NUMERO PUNTOCOMA
    (38) variable2 -> . DEF VAR IGUAL RESTA NUMERO PUNTOCOMA
    (93) expresion_alge1 -> . NUMERO SUMA NUMERO
    (94) expresion_alge1 -> . NUMERO RESTA NUMERO
    (95) expresion_alge1 -> . NUMERO MULTI NUMERO
    (96) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (97) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (98) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (99) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (100) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (101) Sum -> . SUM ABRE_P NUMERO COMA NUMERO CIERRA_P
    (102) Sum -> . SUM ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (103) Sum -> . SUM ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (104) Sum -> . SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (105) Sum -> . SUM ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (106) Sum -> . SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (107) Sum -> . SUM ABRE_P NUMERO COMA Var CIERRA_P
    (108) Sum -> . SUM ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (109) Sum -> . SUM ABRE_P Var COMA NUMERO CIERRA_P
    (110) Sum -> . SUM ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (111) Sum -> . SUM ABRE_P Var COMA Var CIERRA_P
    (112) Sum -> . SUM ABRE_P expresion_alge1 COMA Var CIERRA_P
    (113) Sum -> . SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (114) Sum -> . SUM ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (115) Sum -> . SUM ABRE_P Var COMA expresion_alge1 CIERRA_P
    (116) Substr -> . SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P
    (117) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (118) Substr -> . SUBSTR ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (119) Substr -> . SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (120) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (121) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (122) Substr -> . SUBSTR ABRE_P NUMERO COMA Var CIERRA_P
    (123) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (124) Substr -> . SUBSTR ABRE_P Var COMA NUMERO CIERRA_P
    (125) Substr -> . SUBSTR ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (126) Substr -> . SUBSTR ABRE_P Var COMA Var CIERRA_P
    (127) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P
    (128) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (129) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (130) Substr -> . SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P
    (131) Mult -> . MULTI ABRE_P NUMERO COMA NUMERO CIERRA_P
    (132) Mult -> . MULTI ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (133) Mult -> . MULTI ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (134) Mult -> . MULTI ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (135) Mult -> . MULTI ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (136) Mult -> . MULTI ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (137) Mult -> . MULTI ABRE_P NUMERO COMA Var CIERRA_P
    (138) Mult -> . MULTI ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (139) Mult -> . MULTI ABRE_P Var COMA NUMERO CIERRA_P
    (140) Mult -> . MULTI ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (141) Mult -> . MULTI ABRE_P Var COMA Var CIERRA_P
    (142) Mult -> . MULTI ABRE_P expresion_alge1 COMA Var CIERRA_P
    (143) Mult -> . MULTI ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (144) Mult -> . MULTI ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (145) Mult -> . MULTI ABRE_P Var COMA expresion_alge1 CIERRA_P
    (146) Div -> . DIV ABRE_P NUMERO COMA NUMERO CIERRA_P
    (147) Div -> . DIV ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (148) Div -> . DIV ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (149) Div -> . DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (150) Div -> . DIV ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (151) Div -> . DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (152) Div -> . DIV ABRE_P NUMERO COMA Var CIERRA_P
    (153) Div -> . DIV ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (154) Div -> . DIV ABRE_P Var COMA NUMERO CIERRA_P
    (155) Div -> . DIV ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (156) Div -> . DIV ABRE_P Var COMA Var CIERRA_P
    (157) Div -> . DIV ABRE_P expresion_alge1 COMA Var CIERRA_P
    (158) Div -> . DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (159) Div -> . DIV ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (160) Div -> . DIV ABRE_P Var COMA expresion_alge1 CIERRA_P
    (257) Random -> . RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA
    (300) Run -> . RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA
    (242) If -> . IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2
    (243) IfElse -> . IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2
    (245) Repeat -> . REPEAT NUMERO BRACKET1 ordenes BRACKET2
    (246) Until -> . UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2
    (244) While -> . WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2
    (309) PrintLine -> . PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA
    (234) And -> . AND ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (235) And -> . AND ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (236) And -> . AND ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (237) And -> . AND ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (238) Or -> . OR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (239) Or -> . OR ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (240) Or -> . OR ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (241) Or -> . OR ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (247) Add -> . ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA
    (248) Add -> . ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (249) Add -> . ADD ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (250) Add -> . ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (251) Add -> . ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (252) Add -> . ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA

  ! shift/reduce conflict for PUNTOCOMA resolved as shift
  ! shift/reduce conflict for PUT resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for ABRE_P resolved as shift
  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for SUBSTR resolved as shift
  ! shift/reduce conflict for MULTI resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for RANDOM resolved as shift
  ! shift/reduce conflict for RUN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for IFELSE resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for PRINTLINE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
    COMMENT         shift and go to state 37
    PUNTOCOMA       shift and go to state 62
    FIN             reduce using rule 310 (empty -> .)
    PUT             shift and go to state 15
    DEF             shift and go to state 16
    NUMERO          shift and go to state 64
    ABRE_P          shift and go to state 63
    SUM             shift and go to state 67
    SUBSTR          shift and go to state 68
    MULTI           shift and go to state 65
    DIV             shift and go to state 66
    RANDOM          shift and go to state 69
    RUN             shift and go to state 70
    IF              shift and go to state 71
    IFELSE          shift and go to state 72
    REPEAT          shift and go to state 73
    UNTIL           shift and go to state 74
    WHILE           shift and go to state 75
    PRINTLINE       shift and go to state 76
    AND             shift and go to state 77
    OR              shift and go to state 78
    ADD             shift and go to state 79

  ! PUNTOCOMA       [ reduce using rule 310 (empty -> .) ]
  ! NUMERO          [ reduce using rule 310 (empty -> .) ]
  ! ABRE_P          [ reduce using rule 310 (empty -> .) ]
  ! SUM             [ reduce using rule 310 (empty -> .) ]
  ! SUBSTR          [ reduce using rule 310 (empty -> .) ]
  ! MULTI           [ reduce using rule 310 (empty -> .) ]
  ! DIV             [ reduce using rule 310 (empty -> .) ]
  ! RANDOM          [ reduce using rule 310 (empty -> .) ]
  ! RUN             [ reduce using rule 310 (empty -> .) ]
  ! IF              [ reduce using rule 310 (empty -> .) ]
  ! IFELSE          [ reduce using rule 310 (empty -> .) ]
  ! REPEAT          [ reduce using rule 310 (empty -> .) ]
  ! UNTIL           [ reduce using rule 310 (empty -> .) ]
  ! WHILE           [ reduce using rule 310 (empty -> .) ]
  ! PRINTLINE       [ reduce using rule 310 (empty -> .) ]
  ! AND             [ reduce using rule 310 (empty -> .) ]
  ! OR              [ reduce using rule 310 (empty -> .) ]
  ! ADD             [ reduce using rule 310 (empty -> .) ]
  ! PUT             [ reduce using rule 310 (empty -> .) ]

    cuerpo3                        shift and go to state 89
    variablexdd                    shift and go to state 36
    expresion                      shift and go to state 38
    funcion                        shift and go to state 39
    empty                          shift and go to state 40
    Put                            shift and go to state 41
    Put2                           shift and go to state 42
    variable1                      shift and go to state 43
    variable2                      shift and go to state 44
    expresion_alge1                shift and go to state 45
    expresion_alge2                shift and go to state 46
    Sum                            shift and go to state 47
    Substr                         shift and go to state 48
    Mult                           shift and go to state 49
    Div                            shift and go to state 50
    Random                         shift and go to state 51
    Run                            shift and go to state 52
    If                             shift and go to state 53
    IfElse                         shift and go to state 54
    Repeat                         shift and go to state 55
    Until                          shift and go to state 56
    While                          shift and go to state 57
    PrintLine                      shift and go to state 58
    And                            shift and go to state 59
    Or                             shift and go to state 60
    Add                            shift and go to state 61

state 38

    (17) cuerpo3 -> expresion .

    FIN             reduce using rule 17 (cuerpo3 -> expresion .)


state 39

    (18) cuerpo3 -> funcion .
    (39) expresion -> funcion . expresion
    (46) expresion -> funcion . empty
    (39) expresion -> . funcion expresion
    (40) expresion -> . expresion_alge1 expresion
    (41) expresion -> . expresion_alge2 expresion
    (42) expresion -> . Sum expresion
    (43) expresion -> . Substr expresion
    (44) expresion -> . Mult expresion
    (45) expresion -> . Div expresion
    (46) expresion -> . funcion empty
    (47) expresion -> . expresion_alge1 empty
    (48) expresion -> . expresion_alge2 empty
    (49) expresion -> . Sum empty
    (50) expresion -> . Substr empty
    (51) expresion -> . Mult empty
    (52) expresion -> . Div empty
    (53) expresion -> . empty empty
    (310) empty -> .
    (69) funcion -> . Random empty
    (70) funcion -> . Run empty
    (71) funcion -> . If empty
    (72) funcion -> . IfElse empty
    (73) funcion -> . Repeat empty
    (74) funcion -> . Until empty
    (75) funcion -> . While empty
    (76) funcion -> . PrintLine empty
    (77) funcion -> . And empty
    (78) funcion -> . Or empty
    (79) funcion -> . Add empty
    (80) funcion -> . Put2 empty
    (81) funcion -> . Put empty
    (82) funcion -> . PUNTOCOMA funcion
    (83) funcion -> . empty empty
    (93) expresion_alge1 -> . NUMERO SUMA NUMERO
    (94) expresion_alge1 -> . NUMERO RESTA NUMERO
    (95) expresion_alge1 -> . NUMERO MULTI NUMERO
    (96) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (97) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (98) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (99) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (100) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (101) Sum -> . SUM ABRE_P NUMERO COMA NUMERO CIERRA_P
    (102) Sum -> . SUM ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (103) Sum -> . SUM ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (104) Sum -> . SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (105) Sum -> . SUM ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (106) Sum -> . SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (107) Sum -> . SUM ABRE_P NUMERO COMA Var CIERRA_P
    (108) Sum -> . SUM ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (109) Sum -> . SUM ABRE_P Var COMA NUMERO CIERRA_P
    (110) Sum -> . SUM ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (111) Sum -> . SUM ABRE_P Var COMA Var CIERRA_P
    (112) Sum -> . SUM ABRE_P expresion_alge1 COMA Var CIERRA_P
    (113) Sum -> . SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (114) Sum -> . SUM ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (115) Sum -> . SUM ABRE_P Var COMA expresion_alge1 CIERRA_P
    (116) Substr -> . SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P
    (117) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (118) Substr -> . SUBSTR ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (119) Substr -> . SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (120) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (121) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (122) Substr -> . SUBSTR ABRE_P NUMERO COMA Var CIERRA_P
    (123) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (124) Substr -> . SUBSTR ABRE_P Var COMA NUMERO CIERRA_P
    (125) Substr -> . SUBSTR ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (126) Substr -> . SUBSTR ABRE_P Var COMA Var CIERRA_P
    (127) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P
    (128) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (129) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (130) Substr -> . SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P
    (131) Mult -> . MULTI ABRE_P NUMERO COMA NUMERO CIERRA_P
    (132) Mult -> . MULTI ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (133) Mult -> . MULTI ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (134) Mult -> . MULTI ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (135) Mult -> . MULTI ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (136) Mult -> . MULTI ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (137) Mult -> . MULTI ABRE_P NUMERO COMA Var CIERRA_P
    (138) Mult -> . MULTI ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (139) Mult -> . MULTI ABRE_P Var COMA NUMERO CIERRA_P
    (140) Mult -> . MULTI ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (141) Mult -> . MULTI ABRE_P Var COMA Var CIERRA_P
    (142) Mult -> . MULTI ABRE_P expresion_alge1 COMA Var CIERRA_P
    (143) Mult -> . MULTI ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (144) Mult -> . MULTI ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (145) Mult -> . MULTI ABRE_P Var COMA expresion_alge1 CIERRA_P
    (146) Div -> . DIV ABRE_P NUMERO COMA NUMERO CIERRA_P
    (147) Div -> . DIV ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (148) Div -> . DIV ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (149) Div -> . DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (150) Div -> . DIV ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (151) Div -> . DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (152) Div -> . DIV ABRE_P NUMERO COMA Var CIERRA_P
    (153) Div -> . DIV ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (154) Div -> . DIV ABRE_P Var COMA NUMERO CIERRA_P
    (155) Div -> . DIV ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (156) Div -> . DIV ABRE_P Var COMA Var CIERRA_P
    (157) Div -> . DIV ABRE_P expresion_alge1 COMA Var CIERRA_P
    (158) Div -> . DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (159) Div -> . DIV ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (160) Div -> . DIV ABRE_P Var COMA expresion_alge1 CIERRA_P
    (257) Random -> . RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA
    (300) Run -> . RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA
    (242) If -> . IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2
    (243) IfElse -> . IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2
    (245) Repeat -> . REPEAT NUMERO BRACKET1 ordenes BRACKET2
    (246) Until -> . UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2
    (244) While -> . WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2
    (309) PrintLine -> . PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA
    (234) And -> . AND ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (235) And -> . AND ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (236) And -> . AND ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (237) And -> . AND ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (238) Or -> . OR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (239) Or -> . OR ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (240) Or -> . OR ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (241) Or -> . OR ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (247) Add -> . ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA
    (248) Add -> . ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (249) Add -> . ADD ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (250) Add -> . ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (251) Add -> . ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (252) Add -> . ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (85) Put2 -> . PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (86) Put2 -> . PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (87) Put2 -> . PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (88) Put2 -> . PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (89) Put2 -> . PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA
    (84) Put -> . PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA

  ! reduce/reduce conflict for FIN resolved using rule 18 (cuerpo3 -> funcion .)
  ! shift/reduce conflict for PUNTOCOMA resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for ABRE_P resolved as shift
  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for SUBSTR resolved as shift
  ! shift/reduce conflict for MULTI resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for RANDOM resolved as shift
  ! shift/reduce conflict for RUN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for IFELSE resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for PRINTLINE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for PUT resolved as shift
    FIN             reduce using rule 18 (cuerpo3 -> funcion .)
    PUNTOCOMA       shift and go to state 62
    NUMERO          shift and go to state 64
    ABRE_P          shift and go to state 63
    SUM             shift and go to state 67
    SUBSTR          shift and go to state 68
    MULTI           shift and go to state 65
    DIV             shift and go to state 66
    RANDOM          shift and go to state 69
    RUN             shift and go to state 70
    IF              shift and go to state 71
    IFELSE          shift and go to state 72
    REPEAT          shift and go to state 73
    UNTIL           shift and go to state 74
    WHILE           shift and go to state 75
    PRINTLINE       shift and go to state 76
    AND             shift and go to state 77
    OR              shift and go to state 78
    ADD             shift and go to state 79
    PUT             shift and go to state 95

  ! FIN             [ reduce using rule 310 (empty -> .) ]
  ! PUNTOCOMA       [ reduce using rule 310 (empty -> .) ]
  ! NUMERO          [ reduce using rule 310 (empty -> .) ]
  ! ABRE_P          [ reduce using rule 310 (empty -> .) ]
  ! SUM             [ reduce using rule 310 (empty -> .) ]
  ! SUBSTR          [ reduce using rule 310 (empty -> .) ]
  ! MULTI           [ reduce using rule 310 (empty -> .) ]
  ! DIV             [ reduce using rule 310 (empty -> .) ]
  ! RANDOM          [ reduce using rule 310 (empty -> .) ]
  ! RUN             [ reduce using rule 310 (empty -> .) ]
  ! IF              [ reduce using rule 310 (empty -> .) ]
  ! IFELSE          [ reduce using rule 310 (empty -> .) ]
  ! REPEAT          [ reduce using rule 310 (empty -> .) ]
  ! UNTIL           [ reduce using rule 310 (empty -> .) ]
  ! WHILE           [ reduce using rule 310 (empty -> .) ]
  ! PRINTLINE       [ reduce using rule 310 (empty -> .) ]
  ! AND             [ reduce using rule 310 (empty -> .) ]
  ! OR              [ reduce using rule 310 (empty -> .) ]
  ! ADD             [ reduce using rule 310 (empty -> .) ]
  ! PUT             [ reduce using rule 310 (empty -> .) ]

    funcion                        shift and go to state 90
    expresion                      shift and go to state 91
    empty                          shift and go to state 92
    expresion_alge1                shift and go to state 45
    expresion_alge2                shift and go to state 46
    Sum                            shift and go to state 47
    Substr                         shift and go to state 48
    Mult                           shift and go to state 49
    Div                            shift and go to state 50
    Random                         shift and go to state 51
    Run                            shift and go to state 52
    If                             shift and go to state 53
    IfElse                         shift and go to state 54
    Repeat                         shift and go to state 55
    Until                          shift and go to state 56
    While                          shift and go to state 57
    PrintLine                      shift and go to state 58
    And                            shift and go to state 59
    Or                             shift and go to state 60
    Add                            shift and go to state 61
    Put2                           shift and go to state 93
    Put                            shift and go to state 94

state 40

    (19) cuerpo3 -> empty .
    (35) variablexdd -> empty . empty
    (53) expresion -> empty . empty
    (83) funcion -> empty . empty
    (310) empty -> .

  ! reduce/reduce conflict for FIN resolved using rule 19 (cuerpo3 -> empty .)
    FIN             reduce using rule 19 (cuerpo3 -> empty .)
    PUNTOCOMA       reduce using rule 310 (empty -> .)
    NUMERO          reduce using rule 310 (empty -> .)
    ABRE_P          reduce using rule 310 (empty -> .)
    SUM             reduce using rule 310 (empty -> .)
    SUBSTR          reduce using rule 310 (empty -> .)
    MULTI           reduce using rule 310 (empty -> .)
    DIV             reduce using rule 310 (empty -> .)
    RANDOM          reduce using rule 310 (empty -> .)
    RUN             reduce using rule 310 (empty -> .)
    IF              reduce using rule 310 (empty -> .)
    IFELSE          reduce using rule 310 (empty -> .)
    REPEAT          reduce using rule 310 (empty -> .)
    UNTIL           reduce using rule 310 (empty -> .)
    WHILE           reduce using rule 310 (empty -> .)
    PRINTLINE       reduce using rule 310 (empty -> .)
    AND             reduce using rule 310 (empty -> .)
    OR              reduce using rule 310 (empty -> .)
    ADD             reduce using rule 310 (empty -> .)
    PUT             reduce using rule 310 (empty -> .)

  ! FIN             [ reduce using rule 310 (empty -> .) ]

    empty                          shift and go to state 96

state 41

    (20) cuerpo3 -> Put .
    (81) funcion -> Put . empty
    (310) empty -> .

  ! reduce/reduce conflict for FIN resolved using rule 20 (cuerpo3 -> Put .)
    FIN             reduce using rule 20 (cuerpo3 -> Put .)
    PUNTOCOMA       reduce using rule 310 (empty -> .)
    NUMERO          reduce using rule 310 (empty -> .)
    ABRE_P          reduce using rule 310 (empty -> .)
    SUM             reduce using rule 310 (empty -> .)
    SUBSTR          reduce using rule 310 (empty -> .)
    MULTI           reduce using rule 310 (empty -> .)
    DIV             reduce using rule 310 (empty -> .)
    RANDOM          reduce using rule 310 (empty -> .)
    RUN             reduce using rule 310 (empty -> .)
    IF              reduce using rule 310 (empty -> .)
    IFELSE          reduce using rule 310 (empty -> .)
    REPEAT          reduce using rule 310 (empty -> .)
    UNTIL           reduce using rule 310 (empty -> .)
    WHILE           reduce using rule 310 (empty -> .)
    PRINTLINE       reduce using rule 310 (empty -> .)
    AND             reduce using rule 310 (empty -> .)
    OR              reduce using rule 310 (empty -> .)
    ADD             reduce using rule 310 (empty -> .)
    PUT             reduce using rule 310 (empty -> .)

  ! FIN             [ reduce using rule 310 (empty -> .) ]

    empty                          shift and go to state 97

state 42

    (21) cuerpo3 -> Put2 .
    (80) funcion -> Put2 . empty
    (310) empty -> .

  ! reduce/reduce conflict for FIN resolved using rule 21 (cuerpo3 -> Put2 .)
    FIN             reduce using rule 21 (cuerpo3 -> Put2 .)
    PUNTOCOMA       reduce using rule 310 (empty -> .)
    NUMERO          reduce using rule 310 (empty -> .)
    ABRE_P          reduce using rule 310 (empty -> .)
    SUM             reduce using rule 310 (empty -> .)
    SUBSTR          reduce using rule 310 (empty -> .)
    MULTI           reduce using rule 310 (empty -> .)
    DIV             reduce using rule 310 (empty -> .)
    RANDOM          reduce using rule 310 (empty -> .)
    RUN             reduce using rule 310 (empty -> .)
    IF              reduce using rule 310 (empty -> .)
    IFELSE          reduce using rule 310 (empty -> .)
    REPEAT          reduce using rule 310 (empty -> .)
    UNTIL           reduce using rule 310 (empty -> .)
    WHILE           reduce using rule 310 (empty -> .)
    PRINTLINE       reduce using rule 310 (empty -> .)
    AND             reduce using rule 310 (empty -> .)
    OR              reduce using rule 310 (empty -> .)
    ADD             reduce using rule 310 (empty -> .)
    PUT             reduce using rule 310 (empty -> .)

  ! FIN             [ reduce using rule 310 (empty -> .) ]

    empty                          shift and go to state 98

state 43

    (33) variablexdd -> variable1 . cuerpo3
    (15) cuerpo3 -> . variablexdd
    (16) cuerpo3 -> . COMMENT cuerpo3
    (17) cuerpo3 -> . expresion
    (18) cuerpo3 -> . funcion
    (19) cuerpo3 -> . empty
    (20) cuerpo3 -> . Put
    (21) cuerpo3 -> . Put2
    (33) variablexdd -> . variable1 cuerpo3
    (34) variablexdd -> . variable2 cuerpo3
    (35) variablexdd -> . empty empty
    (39) expresion -> . funcion expresion
    (40) expresion -> . expresion_alge1 expresion
    (41) expresion -> . expresion_alge2 expresion
    (42) expresion -> . Sum expresion
    (43) expresion -> . Substr expresion
    (44) expresion -> . Mult expresion
    (45) expresion -> . Div expresion
    (46) expresion -> . funcion empty
    (47) expresion -> . expresion_alge1 empty
    (48) expresion -> . expresion_alge2 empty
    (49) expresion -> . Sum empty
    (50) expresion -> . Substr empty
    (51) expresion -> . Mult empty
    (52) expresion -> . Div empty
    (53) expresion -> . empty empty
    (69) funcion -> . Random empty
    (70) funcion -> . Run empty
    (71) funcion -> . If empty
    (72) funcion -> . IfElse empty
    (73) funcion -> . Repeat empty
    (74) funcion -> . Until empty
    (75) funcion -> . While empty
    (76) funcion -> . PrintLine empty
    (77) funcion -> . And empty
    (78) funcion -> . Or empty
    (79) funcion -> . Add empty
    (80) funcion -> . Put2 empty
    (81) funcion -> . Put empty
    (82) funcion -> . PUNTOCOMA funcion
    (83) funcion -> . empty empty
    (310) empty -> .
    (84) Put -> . PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA
    (85) Put2 -> . PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (86) Put2 -> . PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (87) Put2 -> . PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (88) Put2 -> . PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (89) Put2 -> . PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA
    (36) variable1 -> . DEF VAR PUNTOCOMA
    (37) variable2 -> . DEF VAR IGUAL NUMERO PUNTOCOMA
    (38) variable2 -> . DEF VAR IGUAL RESTA NUMERO PUNTOCOMA
    (93) expresion_alge1 -> . NUMERO SUMA NUMERO
    (94) expresion_alge1 -> . NUMERO RESTA NUMERO
    (95) expresion_alge1 -> . NUMERO MULTI NUMERO
    (96) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (97) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (98) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (99) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (100) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (101) Sum -> . SUM ABRE_P NUMERO COMA NUMERO CIERRA_P
    (102) Sum -> . SUM ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (103) Sum -> . SUM ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (104) Sum -> . SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (105) Sum -> . SUM ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (106) Sum -> . SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (107) Sum -> . SUM ABRE_P NUMERO COMA Var CIERRA_P
    (108) Sum -> . SUM ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (109) Sum -> . SUM ABRE_P Var COMA NUMERO CIERRA_P
    (110) Sum -> . SUM ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (111) Sum -> . SUM ABRE_P Var COMA Var CIERRA_P
    (112) Sum -> . SUM ABRE_P expresion_alge1 COMA Var CIERRA_P
    (113) Sum -> . SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (114) Sum -> . SUM ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (115) Sum -> . SUM ABRE_P Var COMA expresion_alge1 CIERRA_P
    (116) Substr -> . SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P
    (117) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (118) Substr -> . SUBSTR ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (119) Substr -> . SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (120) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (121) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (122) Substr -> . SUBSTR ABRE_P NUMERO COMA Var CIERRA_P
    (123) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (124) Substr -> . SUBSTR ABRE_P Var COMA NUMERO CIERRA_P
    (125) Substr -> . SUBSTR ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (126) Substr -> . SUBSTR ABRE_P Var COMA Var CIERRA_P
    (127) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P
    (128) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (129) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (130) Substr -> . SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P
    (131) Mult -> . MULTI ABRE_P NUMERO COMA NUMERO CIERRA_P
    (132) Mult -> . MULTI ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (133) Mult -> . MULTI ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (134) Mult -> . MULTI ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (135) Mult -> . MULTI ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (136) Mult -> . MULTI ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (137) Mult -> . MULTI ABRE_P NUMERO COMA Var CIERRA_P
    (138) Mult -> . MULTI ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (139) Mult -> . MULTI ABRE_P Var COMA NUMERO CIERRA_P
    (140) Mult -> . MULTI ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (141) Mult -> . MULTI ABRE_P Var COMA Var CIERRA_P
    (142) Mult -> . MULTI ABRE_P expresion_alge1 COMA Var CIERRA_P
    (143) Mult -> . MULTI ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (144) Mult -> . MULTI ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (145) Mult -> . MULTI ABRE_P Var COMA expresion_alge1 CIERRA_P
    (146) Div -> . DIV ABRE_P NUMERO COMA NUMERO CIERRA_P
    (147) Div -> . DIV ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (148) Div -> . DIV ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (149) Div -> . DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (150) Div -> . DIV ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (151) Div -> . DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (152) Div -> . DIV ABRE_P NUMERO COMA Var CIERRA_P
    (153) Div -> . DIV ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (154) Div -> . DIV ABRE_P Var COMA NUMERO CIERRA_P
    (155) Div -> . DIV ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (156) Div -> . DIV ABRE_P Var COMA Var CIERRA_P
    (157) Div -> . DIV ABRE_P expresion_alge1 COMA Var CIERRA_P
    (158) Div -> . DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (159) Div -> . DIV ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (160) Div -> . DIV ABRE_P Var COMA expresion_alge1 CIERRA_P
    (257) Random -> . RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA
    (300) Run -> . RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA
    (242) If -> . IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2
    (243) IfElse -> . IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2
    (245) Repeat -> . REPEAT NUMERO BRACKET1 ordenes BRACKET2
    (246) Until -> . UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2
    (244) While -> . WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2
    (309) PrintLine -> . PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA
    (234) And -> . AND ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (235) And -> . AND ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (236) And -> . AND ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (237) And -> . AND ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (238) Or -> . OR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (239) Or -> . OR ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (240) Or -> . OR ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (241) Or -> . OR ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (247) Add -> . ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA
    (248) Add -> . ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (249) Add -> . ADD ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (250) Add -> . ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (251) Add -> . ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (252) Add -> . ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA

  ! shift/reduce conflict for PUNTOCOMA resolved as shift
  ! shift/reduce conflict for PUT resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for ABRE_P resolved as shift
  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for SUBSTR resolved as shift
  ! shift/reduce conflict for MULTI resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for RANDOM resolved as shift
  ! shift/reduce conflict for RUN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for IFELSE resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for PRINTLINE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
    COMMENT         shift and go to state 37
    PUNTOCOMA       shift and go to state 62
    FIN             reduce using rule 310 (empty -> .)
    PUT             shift and go to state 15
    DEF             shift and go to state 16
    NUMERO          shift and go to state 64
    ABRE_P          shift and go to state 63
    SUM             shift and go to state 67
    SUBSTR          shift and go to state 68
    MULTI           shift and go to state 65
    DIV             shift and go to state 66
    RANDOM          shift and go to state 69
    RUN             shift and go to state 70
    IF              shift and go to state 71
    IFELSE          shift and go to state 72
    REPEAT          shift and go to state 73
    UNTIL           shift and go to state 74
    WHILE           shift and go to state 75
    PRINTLINE       shift and go to state 76
    AND             shift and go to state 77
    OR              shift and go to state 78
    ADD             shift and go to state 79

  ! PUNTOCOMA       [ reduce using rule 310 (empty -> .) ]
  ! NUMERO          [ reduce using rule 310 (empty -> .) ]
  ! ABRE_P          [ reduce using rule 310 (empty -> .) ]
  ! SUM             [ reduce using rule 310 (empty -> .) ]
  ! SUBSTR          [ reduce using rule 310 (empty -> .) ]
  ! MULTI           [ reduce using rule 310 (empty -> .) ]
  ! DIV             [ reduce using rule 310 (empty -> .) ]
  ! RANDOM          [ reduce using rule 310 (empty -> .) ]
  ! RUN             [ reduce using rule 310 (empty -> .) ]
  ! IF              [ reduce using rule 310 (empty -> .) ]
  ! IFELSE          [ reduce using rule 310 (empty -> .) ]
  ! REPEAT          [ reduce using rule 310 (empty -> .) ]
  ! UNTIL           [ reduce using rule 310 (empty -> .) ]
  ! WHILE           [ reduce using rule 310 (empty -> .) ]
  ! PRINTLINE       [ reduce using rule 310 (empty -> .) ]
  ! AND             [ reduce using rule 310 (empty -> .) ]
  ! OR              [ reduce using rule 310 (empty -> .) ]
  ! ADD             [ reduce using rule 310 (empty -> .) ]
  ! PUT             [ reduce using rule 310 (empty -> .) ]

    variable1                      shift and go to state 43
    cuerpo3                        shift and go to state 99
    variablexdd                    shift and go to state 36
    expresion                      shift and go to state 38
    funcion                        shift and go to state 39
    empty                          shift and go to state 40
    Put                            shift and go to state 41
    Put2                           shift and go to state 42
    variable2                      shift and go to state 44
    expresion_alge1                shift and go to state 45
    expresion_alge2                shift and go to state 46
    Sum                            shift and go to state 47
    Substr                         shift and go to state 48
    Mult                           shift and go to state 49
    Div                            shift and go to state 50
    Random                         shift and go to state 51
    Run                            shift and go to state 52
    If                             shift and go to state 53
    IfElse                         shift and go to state 54
    Repeat                         shift and go to state 55
    Until                          shift and go to state 56
    While                          shift and go to state 57
    PrintLine                      shift and go to state 58
    And                            shift and go to state 59
    Or                             shift and go to state 60
    Add                            shift and go to state 61

state 44

    (34) variablexdd -> variable2 . cuerpo3
    (15) cuerpo3 -> . variablexdd
    (16) cuerpo3 -> . COMMENT cuerpo3
    (17) cuerpo3 -> . expresion
    (18) cuerpo3 -> . funcion
    (19) cuerpo3 -> . empty
    (20) cuerpo3 -> . Put
    (21) cuerpo3 -> . Put2
    (33) variablexdd -> . variable1 cuerpo3
    (34) variablexdd -> . variable2 cuerpo3
    (35) variablexdd -> . empty empty
    (39) expresion -> . funcion expresion
    (40) expresion -> . expresion_alge1 expresion
    (41) expresion -> . expresion_alge2 expresion
    (42) expresion -> . Sum expresion
    (43) expresion -> . Substr expresion
    (44) expresion -> . Mult expresion
    (45) expresion -> . Div expresion
    (46) expresion -> . funcion empty
    (47) expresion -> . expresion_alge1 empty
    (48) expresion -> . expresion_alge2 empty
    (49) expresion -> . Sum empty
    (50) expresion -> . Substr empty
    (51) expresion -> . Mult empty
    (52) expresion -> . Div empty
    (53) expresion -> . empty empty
    (69) funcion -> . Random empty
    (70) funcion -> . Run empty
    (71) funcion -> . If empty
    (72) funcion -> . IfElse empty
    (73) funcion -> . Repeat empty
    (74) funcion -> . Until empty
    (75) funcion -> . While empty
    (76) funcion -> . PrintLine empty
    (77) funcion -> . And empty
    (78) funcion -> . Or empty
    (79) funcion -> . Add empty
    (80) funcion -> . Put2 empty
    (81) funcion -> . Put empty
    (82) funcion -> . PUNTOCOMA funcion
    (83) funcion -> . empty empty
    (310) empty -> .
    (84) Put -> . PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA
    (85) Put2 -> . PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (86) Put2 -> . PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (87) Put2 -> . PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (88) Put2 -> . PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (89) Put2 -> . PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA
    (36) variable1 -> . DEF VAR PUNTOCOMA
    (37) variable2 -> . DEF VAR IGUAL NUMERO PUNTOCOMA
    (38) variable2 -> . DEF VAR IGUAL RESTA NUMERO PUNTOCOMA
    (93) expresion_alge1 -> . NUMERO SUMA NUMERO
    (94) expresion_alge1 -> . NUMERO RESTA NUMERO
    (95) expresion_alge1 -> . NUMERO MULTI NUMERO
    (96) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (97) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (98) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (99) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (100) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (101) Sum -> . SUM ABRE_P NUMERO COMA NUMERO CIERRA_P
    (102) Sum -> . SUM ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (103) Sum -> . SUM ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (104) Sum -> . SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (105) Sum -> . SUM ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (106) Sum -> . SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (107) Sum -> . SUM ABRE_P NUMERO COMA Var CIERRA_P
    (108) Sum -> . SUM ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (109) Sum -> . SUM ABRE_P Var COMA NUMERO CIERRA_P
    (110) Sum -> . SUM ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (111) Sum -> . SUM ABRE_P Var COMA Var CIERRA_P
    (112) Sum -> . SUM ABRE_P expresion_alge1 COMA Var CIERRA_P
    (113) Sum -> . SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (114) Sum -> . SUM ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (115) Sum -> . SUM ABRE_P Var COMA expresion_alge1 CIERRA_P
    (116) Substr -> . SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P
    (117) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (118) Substr -> . SUBSTR ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (119) Substr -> . SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (120) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (121) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (122) Substr -> . SUBSTR ABRE_P NUMERO COMA Var CIERRA_P
    (123) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (124) Substr -> . SUBSTR ABRE_P Var COMA NUMERO CIERRA_P
    (125) Substr -> . SUBSTR ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (126) Substr -> . SUBSTR ABRE_P Var COMA Var CIERRA_P
    (127) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P
    (128) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (129) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (130) Substr -> . SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P
    (131) Mult -> . MULTI ABRE_P NUMERO COMA NUMERO CIERRA_P
    (132) Mult -> . MULTI ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (133) Mult -> . MULTI ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (134) Mult -> . MULTI ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (135) Mult -> . MULTI ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (136) Mult -> . MULTI ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (137) Mult -> . MULTI ABRE_P NUMERO COMA Var CIERRA_P
    (138) Mult -> . MULTI ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (139) Mult -> . MULTI ABRE_P Var COMA NUMERO CIERRA_P
    (140) Mult -> . MULTI ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (141) Mult -> . MULTI ABRE_P Var COMA Var CIERRA_P
    (142) Mult -> . MULTI ABRE_P expresion_alge1 COMA Var CIERRA_P
    (143) Mult -> . MULTI ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (144) Mult -> . MULTI ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (145) Mult -> . MULTI ABRE_P Var COMA expresion_alge1 CIERRA_P
    (146) Div -> . DIV ABRE_P NUMERO COMA NUMERO CIERRA_P
    (147) Div -> . DIV ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (148) Div -> . DIV ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (149) Div -> . DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (150) Div -> . DIV ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (151) Div -> . DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (152) Div -> . DIV ABRE_P NUMERO COMA Var CIERRA_P
    (153) Div -> . DIV ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (154) Div -> . DIV ABRE_P Var COMA NUMERO CIERRA_P
    (155) Div -> . DIV ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (156) Div -> . DIV ABRE_P Var COMA Var CIERRA_P
    (157) Div -> . DIV ABRE_P expresion_alge1 COMA Var CIERRA_P
    (158) Div -> . DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (159) Div -> . DIV ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (160) Div -> . DIV ABRE_P Var COMA expresion_alge1 CIERRA_P
    (257) Random -> . RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA
    (300) Run -> . RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA
    (242) If -> . IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2
    (243) IfElse -> . IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2
    (245) Repeat -> . REPEAT NUMERO BRACKET1 ordenes BRACKET2
    (246) Until -> . UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2
    (244) While -> . WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2
    (309) PrintLine -> . PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA
    (234) And -> . AND ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (235) And -> . AND ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (236) And -> . AND ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (237) And -> . AND ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (238) Or -> . OR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (239) Or -> . OR ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (240) Or -> . OR ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (241) Or -> . OR ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (247) Add -> . ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA
    (248) Add -> . ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (249) Add -> . ADD ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (250) Add -> . ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (251) Add -> . ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (252) Add -> . ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA

  ! shift/reduce conflict for PUNTOCOMA resolved as shift
  ! shift/reduce conflict for PUT resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for ABRE_P resolved as shift
  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for SUBSTR resolved as shift
  ! shift/reduce conflict for MULTI resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for RANDOM resolved as shift
  ! shift/reduce conflict for RUN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for IFELSE resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for PRINTLINE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
    COMMENT         shift and go to state 37
    PUNTOCOMA       shift and go to state 62
    FIN             reduce using rule 310 (empty -> .)
    PUT             shift and go to state 15
    DEF             shift and go to state 16
    NUMERO          shift and go to state 64
    ABRE_P          shift and go to state 63
    SUM             shift and go to state 67
    SUBSTR          shift and go to state 68
    MULTI           shift and go to state 65
    DIV             shift and go to state 66
    RANDOM          shift and go to state 69
    RUN             shift and go to state 70
    IF              shift and go to state 71
    IFELSE          shift and go to state 72
    REPEAT          shift and go to state 73
    UNTIL           shift and go to state 74
    WHILE           shift and go to state 75
    PRINTLINE       shift and go to state 76
    AND             shift and go to state 77
    OR              shift and go to state 78
    ADD             shift and go to state 79

  ! PUNTOCOMA       [ reduce using rule 310 (empty -> .) ]
  ! NUMERO          [ reduce using rule 310 (empty -> .) ]
  ! ABRE_P          [ reduce using rule 310 (empty -> .) ]
  ! SUM             [ reduce using rule 310 (empty -> .) ]
  ! SUBSTR          [ reduce using rule 310 (empty -> .) ]
  ! MULTI           [ reduce using rule 310 (empty -> .) ]
  ! DIV             [ reduce using rule 310 (empty -> .) ]
  ! RANDOM          [ reduce using rule 310 (empty -> .) ]
  ! RUN             [ reduce using rule 310 (empty -> .) ]
  ! IF              [ reduce using rule 310 (empty -> .) ]
  ! IFELSE          [ reduce using rule 310 (empty -> .) ]
  ! REPEAT          [ reduce using rule 310 (empty -> .) ]
  ! UNTIL           [ reduce using rule 310 (empty -> .) ]
  ! WHILE           [ reduce using rule 310 (empty -> .) ]
  ! PRINTLINE       [ reduce using rule 310 (empty -> .) ]
  ! AND             [ reduce using rule 310 (empty -> .) ]
  ! OR              [ reduce using rule 310 (empty -> .) ]
  ! ADD             [ reduce using rule 310 (empty -> .) ]
  ! PUT             [ reduce using rule 310 (empty -> .) ]

    variable2                      shift and go to state 44
    cuerpo3                        shift and go to state 100
    variablexdd                    shift and go to state 36
    expresion                      shift and go to state 38
    funcion                        shift and go to state 39
    empty                          shift and go to state 40
    Put                            shift and go to state 41
    Put2                           shift and go to state 42
    variable1                      shift and go to state 43
    expresion_alge1                shift and go to state 45
    expresion_alge2                shift and go to state 46
    Sum                            shift and go to state 47
    Substr                         shift and go to state 48
    Mult                           shift and go to state 49
    Div                            shift and go to state 50
    Random                         shift and go to state 51
    Run                            shift and go to state 52
    If                             shift and go to state 53
    IfElse                         shift and go to state 54
    Repeat                         shift and go to state 55
    Until                          shift and go to state 56
    While                          shift and go to state 57
    PrintLine                      shift and go to state 58
    And                            shift and go to state 59
    Or                             shift and go to state 60
    Add                            shift and go to state 61

state 45

    (40) expresion -> expresion_alge1 . expresion
    (47) expresion -> expresion_alge1 . empty
    (39) expresion -> . funcion expresion
    (40) expresion -> . expresion_alge1 expresion
    (41) expresion -> . expresion_alge2 expresion
    (42) expresion -> . Sum expresion
    (43) expresion -> . Substr expresion
    (44) expresion -> . Mult expresion
    (45) expresion -> . Div expresion
    (46) expresion -> . funcion empty
    (47) expresion -> . expresion_alge1 empty
    (48) expresion -> . expresion_alge2 empty
    (49) expresion -> . Sum empty
    (50) expresion -> . Substr empty
    (51) expresion -> . Mult empty
    (52) expresion -> . Div empty
    (53) expresion -> . empty empty
    (310) empty -> .
    (69) funcion -> . Random empty
    (70) funcion -> . Run empty
    (71) funcion -> . If empty
    (72) funcion -> . IfElse empty
    (73) funcion -> . Repeat empty
    (74) funcion -> . Until empty
    (75) funcion -> . While empty
    (76) funcion -> . PrintLine empty
    (77) funcion -> . And empty
    (78) funcion -> . Or empty
    (79) funcion -> . Add empty
    (80) funcion -> . Put2 empty
    (81) funcion -> . Put empty
    (82) funcion -> . PUNTOCOMA funcion
    (83) funcion -> . empty empty
    (93) expresion_alge1 -> . NUMERO SUMA NUMERO
    (94) expresion_alge1 -> . NUMERO RESTA NUMERO
    (95) expresion_alge1 -> . NUMERO MULTI NUMERO
    (96) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (97) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (98) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (99) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (100) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (101) Sum -> . SUM ABRE_P NUMERO COMA NUMERO CIERRA_P
    (102) Sum -> . SUM ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (103) Sum -> . SUM ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (104) Sum -> . SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (105) Sum -> . SUM ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (106) Sum -> . SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (107) Sum -> . SUM ABRE_P NUMERO COMA Var CIERRA_P
    (108) Sum -> . SUM ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (109) Sum -> . SUM ABRE_P Var COMA NUMERO CIERRA_P
    (110) Sum -> . SUM ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (111) Sum -> . SUM ABRE_P Var COMA Var CIERRA_P
    (112) Sum -> . SUM ABRE_P expresion_alge1 COMA Var CIERRA_P
    (113) Sum -> . SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (114) Sum -> . SUM ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (115) Sum -> . SUM ABRE_P Var COMA expresion_alge1 CIERRA_P
    (116) Substr -> . SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P
    (117) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (118) Substr -> . SUBSTR ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (119) Substr -> . SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (120) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (121) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (122) Substr -> . SUBSTR ABRE_P NUMERO COMA Var CIERRA_P
    (123) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (124) Substr -> . SUBSTR ABRE_P Var COMA NUMERO CIERRA_P
    (125) Substr -> . SUBSTR ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (126) Substr -> . SUBSTR ABRE_P Var COMA Var CIERRA_P
    (127) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P
    (128) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (129) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (130) Substr -> . SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P
    (131) Mult -> . MULTI ABRE_P NUMERO COMA NUMERO CIERRA_P
    (132) Mult -> . MULTI ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (133) Mult -> . MULTI ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (134) Mult -> . MULTI ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (135) Mult -> . MULTI ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (136) Mult -> . MULTI ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (137) Mult -> . MULTI ABRE_P NUMERO COMA Var CIERRA_P
    (138) Mult -> . MULTI ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (139) Mult -> . MULTI ABRE_P Var COMA NUMERO CIERRA_P
    (140) Mult -> . MULTI ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (141) Mult -> . MULTI ABRE_P Var COMA Var CIERRA_P
    (142) Mult -> . MULTI ABRE_P expresion_alge1 COMA Var CIERRA_P
    (143) Mult -> . MULTI ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (144) Mult -> . MULTI ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (145) Mult -> . MULTI ABRE_P Var COMA expresion_alge1 CIERRA_P
    (146) Div -> . DIV ABRE_P NUMERO COMA NUMERO CIERRA_P
    (147) Div -> . DIV ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (148) Div -> . DIV ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (149) Div -> . DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (150) Div -> . DIV ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (151) Div -> . DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (152) Div -> . DIV ABRE_P NUMERO COMA Var CIERRA_P
    (153) Div -> . DIV ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (154) Div -> . DIV ABRE_P Var COMA NUMERO CIERRA_P
    (155) Div -> . DIV ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (156) Div -> . DIV ABRE_P Var COMA Var CIERRA_P
    (157) Div -> . DIV ABRE_P expresion_alge1 COMA Var CIERRA_P
    (158) Div -> . DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (159) Div -> . DIV ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (160) Div -> . DIV ABRE_P Var COMA expresion_alge1 CIERRA_P
    (257) Random -> . RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA
    (300) Run -> . RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA
    (242) If -> . IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2
    (243) IfElse -> . IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2
    (245) Repeat -> . REPEAT NUMERO BRACKET1 ordenes BRACKET2
    (246) Until -> . UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2
    (244) While -> . WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2
    (309) PrintLine -> . PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA
    (234) And -> . AND ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (235) And -> . AND ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (236) And -> . AND ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (237) And -> . AND ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (238) Or -> . OR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (239) Or -> . OR ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (240) Or -> . OR ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (241) Or -> . OR ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (247) Add -> . ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA
    (248) Add -> . ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (249) Add -> . ADD ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (250) Add -> . ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (251) Add -> . ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (252) Add -> . ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (85) Put2 -> . PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (86) Put2 -> . PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (87) Put2 -> . PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (88) Put2 -> . PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (89) Put2 -> . PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA
    (84) Put -> . PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA

  ! shift/reduce conflict for PUNTOCOMA resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for ABRE_P resolved as shift
  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for SUBSTR resolved as shift
  ! shift/reduce conflict for MULTI resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for RANDOM resolved as shift
  ! shift/reduce conflict for RUN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for IFELSE resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for PRINTLINE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for PUT resolved as shift
    FIN             reduce using rule 310 (empty -> .)
    PUNTOCOMA       shift and go to state 62
    NUMERO          shift and go to state 64
    ABRE_P          shift and go to state 63
    SUM             shift and go to state 67
    SUBSTR          shift and go to state 68
    MULTI           shift and go to state 65
    DIV             shift and go to state 66
    RANDOM          shift and go to state 69
    RUN             shift and go to state 70
    IF              shift and go to state 71
    IFELSE          shift and go to state 72
    REPEAT          shift and go to state 73
    UNTIL           shift and go to state 74
    WHILE           shift and go to state 75
    PRINTLINE       shift and go to state 76
    AND             shift and go to state 77
    OR              shift and go to state 78
    ADD             shift and go to state 79
    PUT             shift and go to state 95

  ! PUNTOCOMA       [ reduce using rule 310 (empty -> .) ]
  ! NUMERO          [ reduce using rule 310 (empty -> .) ]
  ! ABRE_P          [ reduce using rule 310 (empty -> .) ]
  ! SUM             [ reduce using rule 310 (empty -> .) ]
  ! SUBSTR          [ reduce using rule 310 (empty -> .) ]
  ! MULTI           [ reduce using rule 310 (empty -> .) ]
  ! DIV             [ reduce using rule 310 (empty -> .) ]
  ! RANDOM          [ reduce using rule 310 (empty -> .) ]
  ! RUN             [ reduce using rule 310 (empty -> .) ]
  ! IF              [ reduce using rule 310 (empty -> .) ]
  ! IFELSE          [ reduce using rule 310 (empty -> .) ]
  ! REPEAT          [ reduce using rule 310 (empty -> .) ]
  ! UNTIL           [ reduce using rule 310 (empty -> .) ]
  ! WHILE           [ reduce using rule 310 (empty -> .) ]
  ! PRINTLINE       [ reduce using rule 310 (empty -> .) ]
  ! AND             [ reduce using rule 310 (empty -> .) ]
  ! OR              [ reduce using rule 310 (empty -> .) ]
  ! ADD             [ reduce using rule 310 (empty -> .) ]
  ! PUT             [ reduce using rule 310 (empty -> .) ]

    expresion_alge1                shift and go to state 45
    expresion                      shift and go to state 101
    empty                          shift and go to state 102
    funcion                        shift and go to state 90
    expresion_alge2                shift and go to state 46
    Sum                            shift and go to state 47
    Substr                         shift and go to state 48
    Mult                           shift and go to state 49
    Div                            shift and go to state 50
    Random                         shift and go to state 51
    Run                            shift and go to state 52
    If                             shift and go to state 53
    IfElse                         shift and go to state 54
    Repeat                         shift and go to state 55
    Until                          shift and go to state 56
    While                          shift and go to state 57
    PrintLine                      shift and go to state 58
    And                            shift and go to state 59
    Or                             shift and go to state 60
    Add                            shift and go to state 61
    Put2                           shift and go to state 93
    Put                            shift and go to state 94

state 46

    (41) expresion -> expresion_alge2 . expresion
    (48) expresion -> expresion_alge2 . empty
    (39) expresion -> . funcion expresion
    (40) expresion -> . expresion_alge1 expresion
    (41) expresion -> . expresion_alge2 expresion
    (42) expresion -> . Sum expresion
    (43) expresion -> . Substr expresion
    (44) expresion -> . Mult expresion
    (45) expresion -> . Div expresion
    (46) expresion -> . funcion empty
    (47) expresion -> . expresion_alge1 empty
    (48) expresion -> . expresion_alge2 empty
    (49) expresion -> . Sum empty
    (50) expresion -> . Substr empty
    (51) expresion -> . Mult empty
    (52) expresion -> . Div empty
    (53) expresion -> . empty empty
    (310) empty -> .
    (69) funcion -> . Random empty
    (70) funcion -> . Run empty
    (71) funcion -> . If empty
    (72) funcion -> . IfElse empty
    (73) funcion -> . Repeat empty
    (74) funcion -> . Until empty
    (75) funcion -> . While empty
    (76) funcion -> . PrintLine empty
    (77) funcion -> . And empty
    (78) funcion -> . Or empty
    (79) funcion -> . Add empty
    (80) funcion -> . Put2 empty
    (81) funcion -> . Put empty
    (82) funcion -> . PUNTOCOMA funcion
    (83) funcion -> . empty empty
    (93) expresion_alge1 -> . NUMERO SUMA NUMERO
    (94) expresion_alge1 -> . NUMERO RESTA NUMERO
    (95) expresion_alge1 -> . NUMERO MULTI NUMERO
    (96) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (97) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (98) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (99) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (100) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (101) Sum -> . SUM ABRE_P NUMERO COMA NUMERO CIERRA_P
    (102) Sum -> . SUM ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (103) Sum -> . SUM ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (104) Sum -> . SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (105) Sum -> . SUM ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (106) Sum -> . SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (107) Sum -> . SUM ABRE_P NUMERO COMA Var CIERRA_P
    (108) Sum -> . SUM ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (109) Sum -> . SUM ABRE_P Var COMA NUMERO CIERRA_P
    (110) Sum -> . SUM ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (111) Sum -> . SUM ABRE_P Var COMA Var CIERRA_P
    (112) Sum -> . SUM ABRE_P expresion_alge1 COMA Var CIERRA_P
    (113) Sum -> . SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (114) Sum -> . SUM ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (115) Sum -> . SUM ABRE_P Var COMA expresion_alge1 CIERRA_P
    (116) Substr -> . SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P
    (117) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (118) Substr -> . SUBSTR ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (119) Substr -> . SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (120) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (121) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (122) Substr -> . SUBSTR ABRE_P NUMERO COMA Var CIERRA_P
    (123) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (124) Substr -> . SUBSTR ABRE_P Var COMA NUMERO CIERRA_P
    (125) Substr -> . SUBSTR ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (126) Substr -> . SUBSTR ABRE_P Var COMA Var CIERRA_P
    (127) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P
    (128) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (129) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (130) Substr -> . SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P
    (131) Mult -> . MULTI ABRE_P NUMERO COMA NUMERO CIERRA_P
    (132) Mult -> . MULTI ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (133) Mult -> . MULTI ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (134) Mult -> . MULTI ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (135) Mult -> . MULTI ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (136) Mult -> . MULTI ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (137) Mult -> . MULTI ABRE_P NUMERO COMA Var CIERRA_P
    (138) Mult -> . MULTI ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (139) Mult -> . MULTI ABRE_P Var COMA NUMERO CIERRA_P
    (140) Mult -> . MULTI ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (141) Mult -> . MULTI ABRE_P Var COMA Var CIERRA_P
    (142) Mult -> . MULTI ABRE_P expresion_alge1 COMA Var CIERRA_P
    (143) Mult -> . MULTI ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (144) Mult -> . MULTI ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (145) Mult -> . MULTI ABRE_P Var COMA expresion_alge1 CIERRA_P
    (146) Div -> . DIV ABRE_P NUMERO COMA NUMERO CIERRA_P
    (147) Div -> . DIV ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (148) Div -> . DIV ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (149) Div -> . DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (150) Div -> . DIV ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (151) Div -> . DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (152) Div -> . DIV ABRE_P NUMERO COMA Var CIERRA_P
    (153) Div -> . DIV ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (154) Div -> . DIV ABRE_P Var COMA NUMERO CIERRA_P
    (155) Div -> . DIV ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (156) Div -> . DIV ABRE_P Var COMA Var CIERRA_P
    (157) Div -> . DIV ABRE_P expresion_alge1 COMA Var CIERRA_P
    (158) Div -> . DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (159) Div -> . DIV ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (160) Div -> . DIV ABRE_P Var COMA expresion_alge1 CIERRA_P
    (257) Random -> . RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA
    (300) Run -> . RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA
    (242) If -> . IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2
    (243) IfElse -> . IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2
    (245) Repeat -> . REPEAT NUMERO BRACKET1 ordenes BRACKET2
    (246) Until -> . UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2
    (244) While -> . WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2
    (309) PrintLine -> . PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA
    (234) And -> . AND ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (235) And -> . AND ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (236) And -> . AND ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (237) And -> . AND ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (238) Or -> . OR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (239) Or -> . OR ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (240) Or -> . OR ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (241) Or -> . OR ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (247) Add -> . ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA
    (248) Add -> . ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (249) Add -> . ADD ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (250) Add -> . ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (251) Add -> . ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (252) Add -> . ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (85) Put2 -> . PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (86) Put2 -> . PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (87) Put2 -> . PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (88) Put2 -> . PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (89) Put2 -> . PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA
    (84) Put -> . PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA

  ! shift/reduce conflict for PUNTOCOMA resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for ABRE_P resolved as shift
  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for SUBSTR resolved as shift
  ! shift/reduce conflict for MULTI resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for RANDOM resolved as shift
  ! shift/reduce conflict for RUN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for IFELSE resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for PRINTLINE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for PUT resolved as shift
    FIN             reduce using rule 310 (empty -> .)
    PUNTOCOMA       shift and go to state 62
    NUMERO          shift and go to state 64
    ABRE_P          shift and go to state 63
    SUM             shift and go to state 67
    SUBSTR          shift and go to state 68
    MULTI           shift and go to state 65
    DIV             shift and go to state 66
    RANDOM          shift and go to state 69
    RUN             shift and go to state 70
    IF              shift and go to state 71
    IFELSE          shift and go to state 72
    REPEAT          shift and go to state 73
    UNTIL           shift and go to state 74
    WHILE           shift and go to state 75
    PRINTLINE       shift and go to state 76
    AND             shift and go to state 77
    OR              shift and go to state 78
    ADD             shift and go to state 79
    PUT             shift and go to state 95

  ! PUNTOCOMA       [ reduce using rule 310 (empty -> .) ]
  ! NUMERO          [ reduce using rule 310 (empty -> .) ]
  ! ABRE_P          [ reduce using rule 310 (empty -> .) ]
  ! SUM             [ reduce using rule 310 (empty -> .) ]
  ! SUBSTR          [ reduce using rule 310 (empty -> .) ]
  ! MULTI           [ reduce using rule 310 (empty -> .) ]
  ! DIV             [ reduce using rule 310 (empty -> .) ]
  ! RANDOM          [ reduce using rule 310 (empty -> .) ]
  ! RUN             [ reduce using rule 310 (empty -> .) ]
  ! IF              [ reduce using rule 310 (empty -> .) ]
  ! IFELSE          [ reduce using rule 310 (empty -> .) ]
  ! REPEAT          [ reduce using rule 310 (empty -> .) ]
  ! UNTIL           [ reduce using rule 310 (empty -> .) ]
  ! WHILE           [ reduce using rule 310 (empty -> .) ]
  ! PRINTLINE       [ reduce using rule 310 (empty -> .) ]
  ! AND             [ reduce using rule 310 (empty -> .) ]
  ! OR              [ reduce using rule 310 (empty -> .) ]
  ! ADD             [ reduce using rule 310 (empty -> .) ]
  ! PUT             [ reduce using rule 310 (empty -> .) ]

    expresion_alge2                shift and go to state 46
    expresion                      shift and go to state 103
    empty                          shift and go to state 104
    funcion                        shift and go to state 90
    expresion_alge1                shift and go to state 45
    Sum                            shift and go to state 47
    Substr                         shift and go to state 48
    Mult                           shift and go to state 49
    Div                            shift and go to state 50
    Random                         shift and go to state 51
    Run                            shift and go to state 52
    If                             shift and go to state 53
    IfElse                         shift and go to state 54
    Repeat                         shift and go to state 55
    Until                          shift and go to state 56
    While                          shift and go to state 57
    PrintLine                      shift and go to state 58
    And                            shift and go to state 59
    Or                             shift and go to state 60
    Add                            shift and go to state 61
    Put2                           shift and go to state 93
    Put                            shift and go to state 94

state 47

    (42) expresion -> Sum . expresion
    (49) expresion -> Sum . empty
    (39) expresion -> . funcion expresion
    (40) expresion -> . expresion_alge1 expresion
    (41) expresion -> . expresion_alge2 expresion
    (42) expresion -> . Sum expresion
    (43) expresion -> . Substr expresion
    (44) expresion -> . Mult expresion
    (45) expresion -> . Div expresion
    (46) expresion -> . funcion empty
    (47) expresion -> . expresion_alge1 empty
    (48) expresion -> . expresion_alge2 empty
    (49) expresion -> . Sum empty
    (50) expresion -> . Substr empty
    (51) expresion -> . Mult empty
    (52) expresion -> . Div empty
    (53) expresion -> . empty empty
    (310) empty -> .
    (69) funcion -> . Random empty
    (70) funcion -> . Run empty
    (71) funcion -> . If empty
    (72) funcion -> . IfElse empty
    (73) funcion -> . Repeat empty
    (74) funcion -> . Until empty
    (75) funcion -> . While empty
    (76) funcion -> . PrintLine empty
    (77) funcion -> . And empty
    (78) funcion -> . Or empty
    (79) funcion -> . Add empty
    (80) funcion -> . Put2 empty
    (81) funcion -> . Put empty
    (82) funcion -> . PUNTOCOMA funcion
    (83) funcion -> . empty empty
    (93) expresion_alge1 -> . NUMERO SUMA NUMERO
    (94) expresion_alge1 -> . NUMERO RESTA NUMERO
    (95) expresion_alge1 -> . NUMERO MULTI NUMERO
    (96) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (97) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (98) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (99) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (100) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (101) Sum -> . SUM ABRE_P NUMERO COMA NUMERO CIERRA_P
    (102) Sum -> . SUM ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (103) Sum -> . SUM ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (104) Sum -> . SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (105) Sum -> . SUM ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (106) Sum -> . SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (107) Sum -> . SUM ABRE_P NUMERO COMA Var CIERRA_P
    (108) Sum -> . SUM ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (109) Sum -> . SUM ABRE_P Var COMA NUMERO CIERRA_P
    (110) Sum -> . SUM ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (111) Sum -> . SUM ABRE_P Var COMA Var CIERRA_P
    (112) Sum -> . SUM ABRE_P expresion_alge1 COMA Var CIERRA_P
    (113) Sum -> . SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (114) Sum -> . SUM ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (115) Sum -> . SUM ABRE_P Var COMA expresion_alge1 CIERRA_P
    (116) Substr -> . SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P
    (117) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (118) Substr -> . SUBSTR ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (119) Substr -> . SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (120) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (121) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (122) Substr -> . SUBSTR ABRE_P NUMERO COMA Var CIERRA_P
    (123) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (124) Substr -> . SUBSTR ABRE_P Var COMA NUMERO CIERRA_P
    (125) Substr -> . SUBSTR ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (126) Substr -> . SUBSTR ABRE_P Var COMA Var CIERRA_P
    (127) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P
    (128) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (129) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (130) Substr -> . SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P
    (131) Mult -> . MULTI ABRE_P NUMERO COMA NUMERO CIERRA_P
    (132) Mult -> . MULTI ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (133) Mult -> . MULTI ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (134) Mult -> . MULTI ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (135) Mult -> . MULTI ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (136) Mult -> . MULTI ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (137) Mult -> . MULTI ABRE_P NUMERO COMA Var CIERRA_P
    (138) Mult -> . MULTI ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (139) Mult -> . MULTI ABRE_P Var COMA NUMERO CIERRA_P
    (140) Mult -> . MULTI ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (141) Mult -> . MULTI ABRE_P Var COMA Var CIERRA_P
    (142) Mult -> . MULTI ABRE_P expresion_alge1 COMA Var CIERRA_P
    (143) Mult -> . MULTI ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (144) Mult -> . MULTI ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (145) Mult -> . MULTI ABRE_P Var COMA expresion_alge1 CIERRA_P
    (146) Div -> . DIV ABRE_P NUMERO COMA NUMERO CIERRA_P
    (147) Div -> . DIV ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (148) Div -> . DIV ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (149) Div -> . DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (150) Div -> . DIV ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (151) Div -> . DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (152) Div -> . DIV ABRE_P NUMERO COMA Var CIERRA_P
    (153) Div -> . DIV ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (154) Div -> . DIV ABRE_P Var COMA NUMERO CIERRA_P
    (155) Div -> . DIV ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (156) Div -> . DIV ABRE_P Var COMA Var CIERRA_P
    (157) Div -> . DIV ABRE_P expresion_alge1 COMA Var CIERRA_P
    (158) Div -> . DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (159) Div -> . DIV ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (160) Div -> . DIV ABRE_P Var COMA expresion_alge1 CIERRA_P
    (257) Random -> . RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA
    (300) Run -> . RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA
    (242) If -> . IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2
    (243) IfElse -> . IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2
    (245) Repeat -> . REPEAT NUMERO BRACKET1 ordenes BRACKET2
    (246) Until -> . UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2
    (244) While -> . WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2
    (309) PrintLine -> . PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA
    (234) And -> . AND ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (235) And -> . AND ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (236) And -> . AND ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (237) And -> . AND ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (238) Or -> . OR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (239) Or -> . OR ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (240) Or -> . OR ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (241) Or -> . OR ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (247) Add -> . ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA
    (248) Add -> . ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (249) Add -> . ADD ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (250) Add -> . ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (251) Add -> . ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (252) Add -> . ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (85) Put2 -> . PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (86) Put2 -> . PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (87) Put2 -> . PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (88) Put2 -> . PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (89) Put2 -> . PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA
    (84) Put -> . PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA

  ! shift/reduce conflict for PUNTOCOMA resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for ABRE_P resolved as shift
  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for SUBSTR resolved as shift
  ! shift/reduce conflict for MULTI resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for RANDOM resolved as shift
  ! shift/reduce conflict for RUN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for IFELSE resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for PRINTLINE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for PUT resolved as shift
    FIN             reduce using rule 310 (empty -> .)
    PUNTOCOMA       shift and go to state 62
    NUMERO          shift and go to state 64
    ABRE_P          shift and go to state 63
    SUM             shift and go to state 67
    SUBSTR          shift and go to state 68
    MULTI           shift and go to state 65
    DIV             shift and go to state 66
    RANDOM          shift and go to state 69
    RUN             shift and go to state 70
    IF              shift and go to state 71
    IFELSE          shift and go to state 72
    REPEAT          shift and go to state 73
    UNTIL           shift and go to state 74
    WHILE           shift and go to state 75
    PRINTLINE       shift and go to state 76
    AND             shift and go to state 77
    OR              shift and go to state 78
    ADD             shift and go to state 79
    PUT             shift and go to state 95

  ! PUNTOCOMA       [ reduce using rule 310 (empty -> .) ]
  ! NUMERO          [ reduce using rule 310 (empty -> .) ]
  ! ABRE_P          [ reduce using rule 310 (empty -> .) ]
  ! SUM             [ reduce using rule 310 (empty -> .) ]
  ! SUBSTR          [ reduce using rule 310 (empty -> .) ]
  ! MULTI           [ reduce using rule 310 (empty -> .) ]
  ! DIV             [ reduce using rule 310 (empty -> .) ]
  ! RANDOM          [ reduce using rule 310 (empty -> .) ]
  ! RUN             [ reduce using rule 310 (empty -> .) ]
  ! IF              [ reduce using rule 310 (empty -> .) ]
  ! IFELSE          [ reduce using rule 310 (empty -> .) ]
  ! REPEAT          [ reduce using rule 310 (empty -> .) ]
  ! UNTIL           [ reduce using rule 310 (empty -> .) ]
  ! WHILE           [ reduce using rule 310 (empty -> .) ]
  ! PRINTLINE       [ reduce using rule 310 (empty -> .) ]
  ! AND             [ reduce using rule 310 (empty -> .) ]
  ! OR              [ reduce using rule 310 (empty -> .) ]
  ! ADD             [ reduce using rule 310 (empty -> .) ]
  ! PUT             [ reduce using rule 310 (empty -> .) ]

    Sum                            shift and go to state 47
    expresion                      shift and go to state 105
    empty                          shift and go to state 106
    funcion                        shift and go to state 90
    expresion_alge1                shift and go to state 45
    expresion_alge2                shift and go to state 46
    Substr                         shift and go to state 48
    Mult                           shift and go to state 49
    Div                            shift and go to state 50
    Random                         shift and go to state 51
    Run                            shift and go to state 52
    If                             shift and go to state 53
    IfElse                         shift and go to state 54
    Repeat                         shift and go to state 55
    Until                          shift and go to state 56
    While                          shift and go to state 57
    PrintLine                      shift and go to state 58
    And                            shift and go to state 59
    Or                             shift and go to state 60
    Add                            shift and go to state 61
    Put2                           shift and go to state 93
    Put                            shift and go to state 94

state 48

    (43) expresion -> Substr . expresion
    (50) expresion -> Substr . empty
    (39) expresion -> . funcion expresion
    (40) expresion -> . expresion_alge1 expresion
    (41) expresion -> . expresion_alge2 expresion
    (42) expresion -> . Sum expresion
    (43) expresion -> . Substr expresion
    (44) expresion -> . Mult expresion
    (45) expresion -> . Div expresion
    (46) expresion -> . funcion empty
    (47) expresion -> . expresion_alge1 empty
    (48) expresion -> . expresion_alge2 empty
    (49) expresion -> . Sum empty
    (50) expresion -> . Substr empty
    (51) expresion -> . Mult empty
    (52) expresion -> . Div empty
    (53) expresion -> . empty empty
    (310) empty -> .
    (69) funcion -> . Random empty
    (70) funcion -> . Run empty
    (71) funcion -> . If empty
    (72) funcion -> . IfElse empty
    (73) funcion -> . Repeat empty
    (74) funcion -> . Until empty
    (75) funcion -> . While empty
    (76) funcion -> . PrintLine empty
    (77) funcion -> . And empty
    (78) funcion -> . Or empty
    (79) funcion -> . Add empty
    (80) funcion -> . Put2 empty
    (81) funcion -> . Put empty
    (82) funcion -> . PUNTOCOMA funcion
    (83) funcion -> . empty empty
    (93) expresion_alge1 -> . NUMERO SUMA NUMERO
    (94) expresion_alge1 -> . NUMERO RESTA NUMERO
    (95) expresion_alge1 -> . NUMERO MULTI NUMERO
    (96) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (97) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (98) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (99) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (100) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (101) Sum -> . SUM ABRE_P NUMERO COMA NUMERO CIERRA_P
    (102) Sum -> . SUM ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (103) Sum -> . SUM ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (104) Sum -> . SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (105) Sum -> . SUM ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (106) Sum -> . SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (107) Sum -> . SUM ABRE_P NUMERO COMA Var CIERRA_P
    (108) Sum -> . SUM ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (109) Sum -> . SUM ABRE_P Var COMA NUMERO CIERRA_P
    (110) Sum -> . SUM ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (111) Sum -> . SUM ABRE_P Var COMA Var CIERRA_P
    (112) Sum -> . SUM ABRE_P expresion_alge1 COMA Var CIERRA_P
    (113) Sum -> . SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (114) Sum -> . SUM ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (115) Sum -> . SUM ABRE_P Var COMA expresion_alge1 CIERRA_P
    (116) Substr -> . SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P
    (117) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (118) Substr -> . SUBSTR ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (119) Substr -> . SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (120) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (121) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (122) Substr -> . SUBSTR ABRE_P NUMERO COMA Var CIERRA_P
    (123) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (124) Substr -> . SUBSTR ABRE_P Var COMA NUMERO CIERRA_P
    (125) Substr -> . SUBSTR ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (126) Substr -> . SUBSTR ABRE_P Var COMA Var CIERRA_P
    (127) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P
    (128) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (129) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (130) Substr -> . SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P
    (131) Mult -> . MULTI ABRE_P NUMERO COMA NUMERO CIERRA_P
    (132) Mult -> . MULTI ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (133) Mult -> . MULTI ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (134) Mult -> . MULTI ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (135) Mult -> . MULTI ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (136) Mult -> . MULTI ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (137) Mult -> . MULTI ABRE_P NUMERO COMA Var CIERRA_P
    (138) Mult -> . MULTI ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (139) Mult -> . MULTI ABRE_P Var COMA NUMERO CIERRA_P
    (140) Mult -> . MULTI ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (141) Mult -> . MULTI ABRE_P Var COMA Var CIERRA_P
    (142) Mult -> . MULTI ABRE_P expresion_alge1 COMA Var CIERRA_P
    (143) Mult -> . MULTI ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (144) Mult -> . MULTI ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (145) Mult -> . MULTI ABRE_P Var COMA expresion_alge1 CIERRA_P
    (146) Div -> . DIV ABRE_P NUMERO COMA NUMERO CIERRA_P
    (147) Div -> . DIV ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (148) Div -> . DIV ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (149) Div -> . DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (150) Div -> . DIV ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (151) Div -> . DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (152) Div -> . DIV ABRE_P NUMERO COMA Var CIERRA_P
    (153) Div -> . DIV ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (154) Div -> . DIV ABRE_P Var COMA NUMERO CIERRA_P
    (155) Div -> . DIV ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (156) Div -> . DIV ABRE_P Var COMA Var CIERRA_P
    (157) Div -> . DIV ABRE_P expresion_alge1 COMA Var CIERRA_P
    (158) Div -> . DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (159) Div -> . DIV ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (160) Div -> . DIV ABRE_P Var COMA expresion_alge1 CIERRA_P
    (257) Random -> . RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA
    (300) Run -> . RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA
    (242) If -> . IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2
    (243) IfElse -> . IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2
    (245) Repeat -> . REPEAT NUMERO BRACKET1 ordenes BRACKET2
    (246) Until -> . UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2
    (244) While -> . WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2
    (309) PrintLine -> . PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA
    (234) And -> . AND ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (235) And -> . AND ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (236) And -> . AND ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (237) And -> . AND ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (238) Or -> . OR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (239) Or -> . OR ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (240) Or -> . OR ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (241) Or -> . OR ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (247) Add -> . ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA
    (248) Add -> . ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (249) Add -> . ADD ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (250) Add -> . ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (251) Add -> . ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (252) Add -> . ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (85) Put2 -> . PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (86) Put2 -> . PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (87) Put2 -> . PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (88) Put2 -> . PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (89) Put2 -> . PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA
    (84) Put -> . PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA

  ! shift/reduce conflict for PUNTOCOMA resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for ABRE_P resolved as shift
  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for SUBSTR resolved as shift
  ! shift/reduce conflict for MULTI resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for RANDOM resolved as shift
  ! shift/reduce conflict for RUN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for IFELSE resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for PRINTLINE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for PUT resolved as shift
    FIN             reduce using rule 310 (empty -> .)
    PUNTOCOMA       shift and go to state 62
    NUMERO          shift and go to state 64
    ABRE_P          shift and go to state 63
    SUM             shift and go to state 67
    SUBSTR          shift and go to state 68
    MULTI           shift and go to state 65
    DIV             shift and go to state 66
    RANDOM          shift and go to state 69
    RUN             shift and go to state 70
    IF              shift and go to state 71
    IFELSE          shift and go to state 72
    REPEAT          shift and go to state 73
    UNTIL           shift and go to state 74
    WHILE           shift and go to state 75
    PRINTLINE       shift and go to state 76
    AND             shift and go to state 77
    OR              shift and go to state 78
    ADD             shift and go to state 79
    PUT             shift and go to state 95

  ! PUNTOCOMA       [ reduce using rule 310 (empty -> .) ]
  ! NUMERO          [ reduce using rule 310 (empty -> .) ]
  ! ABRE_P          [ reduce using rule 310 (empty -> .) ]
  ! SUM             [ reduce using rule 310 (empty -> .) ]
  ! SUBSTR          [ reduce using rule 310 (empty -> .) ]
  ! MULTI           [ reduce using rule 310 (empty -> .) ]
  ! DIV             [ reduce using rule 310 (empty -> .) ]
  ! RANDOM          [ reduce using rule 310 (empty -> .) ]
  ! RUN             [ reduce using rule 310 (empty -> .) ]
  ! IF              [ reduce using rule 310 (empty -> .) ]
  ! IFELSE          [ reduce using rule 310 (empty -> .) ]
  ! REPEAT          [ reduce using rule 310 (empty -> .) ]
  ! UNTIL           [ reduce using rule 310 (empty -> .) ]
  ! WHILE           [ reduce using rule 310 (empty -> .) ]
  ! PRINTLINE       [ reduce using rule 310 (empty -> .) ]
  ! AND             [ reduce using rule 310 (empty -> .) ]
  ! OR              [ reduce using rule 310 (empty -> .) ]
  ! ADD             [ reduce using rule 310 (empty -> .) ]
  ! PUT             [ reduce using rule 310 (empty -> .) ]

    Substr                         shift and go to state 48
    expresion                      shift and go to state 107
    empty                          shift and go to state 108
    funcion                        shift and go to state 90
    expresion_alge1                shift and go to state 45
    expresion_alge2                shift and go to state 46
    Sum                            shift and go to state 47
    Mult                           shift and go to state 49
    Div                            shift and go to state 50
    Random                         shift and go to state 51
    Run                            shift and go to state 52
    If                             shift and go to state 53
    IfElse                         shift and go to state 54
    Repeat                         shift and go to state 55
    Until                          shift and go to state 56
    While                          shift and go to state 57
    PrintLine                      shift and go to state 58
    And                            shift and go to state 59
    Or                             shift and go to state 60
    Add                            shift and go to state 61
    Put2                           shift and go to state 93
    Put                            shift and go to state 94

state 49

    (44) expresion -> Mult . expresion
    (51) expresion -> Mult . empty
    (39) expresion -> . funcion expresion
    (40) expresion -> . expresion_alge1 expresion
    (41) expresion -> . expresion_alge2 expresion
    (42) expresion -> . Sum expresion
    (43) expresion -> . Substr expresion
    (44) expresion -> . Mult expresion
    (45) expresion -> . Div expresion
    (46) expresion -> . funcion empty
    (47) expresion -> . expresion_alge1 empty
    (48) expresion -> . expresion_alge2 empty
    (49) expresion -> . Sum empty
    (50) expresion -> . Substr empty
    (51) expresion -> . Mult empty
    (52) expresion -> . Div empty
    (53) expresion -> . empty empty
    (310) empty -> .
    (69) funcion -> . Random empty
    (70) funcion -> . Run empty
    (71) funcion -> . If empty
    (72) funcion -> . IfElse empty
    (73) funcion -> . Repeat empty
    (74) funcion -> . Until empty
    (75) funcion -> . While empty
    (76) funcion -> . PrintLine empty
    (77) funcion -> . And empty
    (78) funcion -> . Or empty
    (79) funcion -> . Add empty
    (80) funcion -> . Put2 empty
    (81) funcion -> . Put empty
    (82) funcion -> . PUNTOCOMA funcion
    (83) funcion -> . empty empty
    (93) expresion_alge1 -> . NUMERO SUMA NUMERO
    (94) expresion_alge1 -> . NUMERO RESTA NUMERO
    (95) expresion_alge1 -> . NUMERO MULTI NUMERO
    (96) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (97) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (98) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (99) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (100) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (101) Sum -> . SUM ABRE_P NUMERO COMA NUMERO CIERRA_P
    (102) Sum -> . SUM ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (103) Sum -> . SUM ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (104) Sum -> . SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (105) Sum -> . SUM ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (106) Sum -> . SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (107) Sum -> . SUM ABRE_P NUMERO COMA Var CIERRA_P
    (108) Sum -> . SUM ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (109) Sum -> . SUM ABRE_P Var COMA NUMERO CIERRA_P
    (110) Sum -> . SUM ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (111) Sum -> . SUM ABRE_P Var COMA Var CIERRA_P
    (112) Sum -> . SUM ABRE_P expresion_alge1 COMA Var CIERRA_P
    (113) Sum -> . SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (114) Sum -> . SUM ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (115) Sum -> . SUM ABRE_P Var COMA expresion_alge1 CIERRA_P
    (116) Substr -> . SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P
    (117) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (118) Substr -> . SUBSTR ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (119) Substr -> . SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (120) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (121) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (122) Substr -> . SUBSTR ABRE_P NUMERO COMA Var CIERRA_P
    (123) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (124) Substr -> . SUBSTR ABRE_P Var COMA NUMERO CIERRA_P
    (125) Substr -> . SUBSTR ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (126) Substr -> . SUBSTR ABRE_P Var COMA Var CIERRA_P
    (127) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P
    (128) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (129) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (130) Substr -> . SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P
    (131) Mult -> . MULTI ABRE_P NUMERO COMA NUMERO CIERRA_P
    (132) Mult -> . MULTI ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (133) Mult -> . MULTI ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (134) Mult -> . MULTI ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (135) Mult -> . MULTI ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (136) Mult -> . MULTI ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (137) Mult -> . MULTI ABRE_P NUMERO COMA Var CIERRA_P
    (138) Mult -> . MULTI ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (139) Mult -> . MULTI ABRE_P Var COMA NUMERO CIERRA_P
    (140) Mult -> . MULTI ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (141) Mult -> . MULTI ABRE_P Var COMA Var CIERRA_P
    (142) Mult -> . MULTI ABRE_P expresion_alge1 COMA Var CIERRA_P
    (143) Mult -> . MULTI ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (144) Mult -> . MULTI ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (145) Mult -> . MULTI ABRE_P Var COMA expresion_alge1 CIERRA_P
    (146) Div -> . DIV ABRE_P NUMERO COMA NUMERO CIERRA_P
    (147) Div -> . DIV ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (148) Div -> . DIV ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (149) Div -> . DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (150) Div -> . DIV ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (151) Div -> . DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (152) Div -> . DIV ABRE_P NUMERO COMA Var CIERRA_P
    (153) Div -> . DIV ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (154) Div -> . DIV ABRE_P Var COMA NUMERO CIERRA_P
    (155) Div -> . DIV ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (156) Div -> . DIV ABRE_P Var COMA Var CIERRA_P
    (157) Div -> . DIV ABRE_P expresion_alge1 COMA Var CIERRA_P
    (158) Div -> . DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (159) Div -> . DIV ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (160) Div -> . DIV ABRE_P Var COMA expresion_alge1 CIERRA_P
    (257) Random -> . RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA
    (300) Run -> . RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA
    (242) If -> . IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2
    (243) IfElse -> . IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2
    (245) Repeat -> . REPEAT NUMERO BRACKET1 ordenes BRACKET2
    (246) Until -> . UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2
    (244) While -> . WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2
    (309) PrintLine -> . PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA
    (234) And -> . AND ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (235) And -> . AND ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (236) And -> . AND ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (237) And -> . AND ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (238) Or -> . OR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (239) Or -> . OR ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (240) Or -> . OR ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (241) Or -> . OR ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (247) Add -> . ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA
    (248) Add -> . ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (249) Add -> . ADD ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (250) Add -> . ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (251) Add -> . ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (252) Add -> . ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (85) Put2 -> . PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (86) Put2 -> . PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (87) Put2 -> . PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (88) Put2 -> . PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (89) Put2 -> . PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA
    (84) Put -> . PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA

  ! shift/reduce conflict for PUNTOCOMA resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for ABRE_P resolved as shift
  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for SUBSTR resolved as shift
  ! shift/reduce conflict for MULTI resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for RANDOM resolved as shift
  ! shift/reduce conflict for RUN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for IFELSE resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for PRINTLINE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for PUT resolved as shift
    FIN             reduce using rule 310 (empty -> .)
    PUNTOCOMA       shift and go to state 62
    NUMERO          shift and go to state 64
    ABRE_P          shift and go to state 63
    SUM             shift and go to state 67
    SUBSTR          shift and go to state 68
    MULTI           shift and go to state 65
    DIV             shift and go to state 66
    RANDOM          shift and go to state 69
    RUN             shift and go to state 70
    IF              shift and go to state 71
    IFELSE          shift and go to state 72
    REPEAT          shift and go to state 73
    UNTIL           shift and go to state 74
    WHILE           shift and go to state 75
    PRINTLINE       shift and go to state 76
    AND             shift and go to state 77
    OR              shift and go to state 78
    ADD             shift and go to state 79
    PUT             shift and go to state 95

  ! PUNTOCOMA       [ reduce using rule 310 (empty -> .) ]
  ! NUMERO          [ reduce using rule 310 (empty -> .) ]
  ! ABRE_P          [ reduce using rule 310 (empty -> .) ]
  ! SUM             [ reduce using rule 310 (empty -> .) ]
  ! SUBSTR          [ reduce using rule 310 (empty -> .) ]
  ! MULTI           [ reduce using rule 310 (empty -> .) ]
  ! DIV             [ reduce using rule 310 (empty -> .) ]
  ! RANDOM          [ reduce using rule 310 (empty -> .) ]
  ! RUN             [ reduce using rule 310 (empty -> .) ]
  ! IF              [ reduce using rule 310 (empty -> .) ]
  ! IFELSE          [ reduce using rule 310 (empty -> .) ]
  ! REPEAT          [ reduce using rule 310 (empty -> .) ]
  ! UNTIL           [ reduce using rule 310 (empty -> .) ]
  ! WHILE           [ reduce using rule 310 (empty -> .) ]
  ! PRINTLINE       [ reduce using rule 310 (empty -> .) ]
  ! AND             [ reduce using rule 310 (empty -> .) ]
  ! OR              [ reduce using rule 310 (empty -> .) ]
  ! ADD             [ reduce using rule 310 (empty -> .) ]
  ! PUT             [ reduce using rule 310 (empty -> .) ]

    Mult                           shift and go to state 49
    expresion                      shift and go to state 109
    empty                          shift and go to state 110
    funcion                        shift and go to state 90
    expresion_alge1                shift and go to state 45
    expresion_alge2                shift and go to state 46
    Sum                            shift and go to state 47
    Substr                         shift and go to state 48
    Div                            shift and go to state 50
    Random                         shift and go to state 51
    Run                            shift and go to state 52
    If                             shift and go to state 53
    IfElse                         shift and go to state 54
    Repeat                         shift and go to state 55
    Until                          shift and go to state 56
    While                          shift and go to state 57
    PrintLine                      shift and go to state 58
    And                            shift and go to state 59
    Or                             shift and go to state 60
    Add                            shift and go to state 61
    Put2                           shift and go to state 93
    Put                            shift and go to state 94

state 50

    (45) expresion -> Div . expresion
    (52) expresion -> Div . empty
    (39) expresion -> . funcion expresion
    (40) expresion -> . expresion_alge1 expresion
    (41) expresion -> . expresion_alge2 expresion
    (42) expresion -> . Sum expresion
    (43) expresion -> . Substr expresion
    (44) expresion -> . Mult expresion
    (45) expresion -> . Div expresion
    (46) expresion -> . funcion empty
    (47) expresion -> . expresion_alge1 empty
    (48) expresion -> . expresion_alge2 empty
    (49) expresion -> . Sum empty
    (50) expresion -> . Substr empty
    (51) expresion -> . Mult empty
    (52) expresion -> . Div empty
    (53) expresion -> . empty empty
    (310) empty -> .
    (69) funcion -> . Random empty
    (70) funcion -> . Run empty
    (71) funcion -> . If empty
    (72) funcion -> . IfElse empty
    (73) funcion -> . Repeat empty
    (74) funcion -> . Until empty
    (75) funcion -> . While empty
    (76) funcion -> . PrintLine empty
    (77) funcion -> . And empty
    (78) funcion -> . Or empty
    (79) funcion -> . Add empty
    (80) funcion -> . Put2 empty
    (81) funcion -> . Put empty
    (82) funcion -> . PUNTOCOMA funcion
    (83) funcion -> . empty empty
    (93) expresion_alge1 -> . NUMERO SUMA NUMERO
    (94) expresion_alge1 -> . NUMERO RESTA NUMERO
    (95) expresion_alge1 -> . NUMERO MULTI NUMERO
    (96) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (97) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (98) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (99) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (100) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (101) Sum -> . SUM ABRE_P NUMERO COMA NUMERO CIERRA_P
    (102) Sum -> . SUM ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (103) Sum -> . SUM ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (104) Sum -> . SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (105) Sum -> . SUM ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (106) Sum -> . SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (107) Sum -> . SUM ABRE_P NUMERO COMA Var CIERRA_P
    (108) Sum -> . SUM ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (109) Sum -> . SUM ABRE_P Var COMA NUMERO CIERRA_P
    (110) Sum -> . SUM ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (111) Sum -> . SUM ABRE_P Var COMA Var CIERRA_P
    (112) Sum -> . SUM ABRE_P expresion_alge1 COMA Var CIERRA_P
    (113) Sum -> . SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (114) Sum -> . SUM ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (115) Sum -> . SUM ABRE_P Var COMA expresion_alge1 CIERRA_P
    (116) Substr -> . SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P
    (117) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (118) Substr -> . SUBSTR ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (119) Substr -> . SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (120) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (121) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (122) Substr -> . SUBSTR ABRE_P NUMERO COMA Var CIERRA_P
    (123) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (124) Substr -> . SUBSTR ABRE_P Var COMA NUMERO CIERRA_P
    (125) Substr -> . SUBSTR ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (126) Substr -> . SUBSTR ABRE_P Var COMA Var CIERRA_P
    (127) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P
    (128) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (129) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (130) Substr -> . SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P
    (131) Mult -> . MULTI ABRE_P NUMERO COMA NUMERO CIERRA_P
    (132) Mult -> . MULTI ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (133) Mult -> . MULTI ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (134) Mult -> . MULTI ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (135) Mult -> . MULTI ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (136) Mult -> . MULTI ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (137) Mult -> . MULTI ABRE_P NUMERO COMA Var CIERRA_P
    (138) Mult -> . MULTI ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (139) Mult -> . MULTI ABRE_P Var COMA NUMERO CIERRA_P
    (140) Mult -> . MULTI ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (141) Mult -> . MULTI ABRE_P Var COMA Var CIERRA_P
    (142) Mult -> . MULTI ABRE_P expresion_alge1 COMA Var CIERRA_P
    (143) Mult -> . MULTI ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (144) Mult -> . MULTI ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (145) Mult -> . MULTI ABRE_P Var COMA expresion_alge1 CIERRA_P
    (146) Div -> . DIV ABRE_P NUMERO COMA NUMERO CIERRA_P
    (147) Div -> . DIV ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (148) Div -> . DIV ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (149) Div -> . DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (150) Div -> . DIV ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (151) Div -> . DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (152) Div -> . DIV ABRE_P NUMERO COMA Var CIERRA_P
    (153) Div -> . DIV ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (154) Div -> . DIV ABRE_P Var COMA NUMERO CIERRA_P
    (155) Div -> . DIV ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (156) Div -> . DIV ABRE_P Var COMA Var CIERRA_P
    (157) Div -> . DIV ABRE_P expresion_alge1 COMA Var CIERRA_P
    (158) Div -> . DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (159) Div -> . DIV ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (160) Div -> . DIV ABRE_P Var COMA expresion_alge1 CIERRA_P
    (257) Random -> . RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA
    (300) Run -> . RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA
    (242) If -> . IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2
    (243) IfElse -> . IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2
    (245) Repeat -> . REPEAT NUMERO BRACKET1 ordenes BRACKET2
    (246) Until -> . UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2
    (244) While -> . WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2
    (309) PrintLine -> . PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA
    (234) And -> . AND ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (235) And -> . AND ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (236) And -> . AND ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (237) And -> . AND ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (238) Or -> . OR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (239) Or -> . OR ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (240) Or -> . OR ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (241) Or -> . OR ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (247) Add -> . ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA
    (248) Add -> . ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (249) Add -> . ADD ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (250) Add -> . ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (251) Add -> . ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (252) Add -> . ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (85) Put2 -> . PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (86) Put2 -> . PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (87) Put2 -> . PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (88) Put2 -> . PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (89) Put2 -> . PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA
    (84) Put -> . PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA

  ! shift/reduce conflict for PUNTOCOMA resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for ABRE_P resolved as shift
  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for SUBSTR resolved as shift
  ! shift/reduce conflict for MULTI resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for RANDOM resolved as shift
  ! shift/reduce conflict for RUN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for IFELSE resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for PRINTLINE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for PUT resolved as shift
    FIN             reduce using rule 310 (empty -> .)
    PUNTOCOMA       shift and go to state 62
    NUMERO          shift and go to state 64
    ABRE_P          shift and go to state 63
    SUM             shift and go to state 67
    SUBSTR          shift and go to state 68
    MULTI           shift and go to state 65
    DIV             shift and go to state 66
    RANDOM          shift and go to state 69
    RUN             shift and go to state 70
    IF              shift and go to state 71
    IFELSE          shift and go to state 72
    REPEAT          shift and go to state 73
    UNTIL           shift and go to state 74
    WHILE           shift and go to state 75
    PRINTLINE       shift and go to state 76
    AND             shift and go to state 77
    OR              shift and go to state 78
    ADD             shift and go to state 79
    PUT             shift and go to state 95

  ! PUNTOCOMA       [ reduce using rule 310 (empty -> .) ]
  ! NUMERO          [ reduce using rule 310 (empty -> .) ]
  ! ABRE_P          [ reduce using rule 310 (empty -> .) ]
  ! SUM             [ reduce using rule 310 (empty -> .) ]
  ! SUBSTR          [ reduce using rule 310 (empty -> .) ]
  ! MULTI           [ reduce using rule 310 (empty -> .) ]
  ! DIV             [ reduce using rule 310 (empty -> .) ]
  ! RANDOM          [ reduce using rule 310 (empty -> .) ]
  ! RUN             [ reduce using rule 310 (empty -> .) ]
  ! IF              [ reduce using rule 310 (empty -> .) ]
  ! IFELSE          [ reduce using rule 310 (empty -> .) ]
  ! REPEAT          [ reduce using rule 310 (empty -> .) ]
  ! UNTIL           [ reduce using rule 310 (empty -> .) ]
  ! WHILE           [ reduce using rule 310 (empty -> .) ]
  ! PRINTLINE       [ reduce using rule 310 (empty -> .) ]
  ! AND             [ reduce using rule 310 (empty -> .) ]
  ! OR              [ reduce using rule 310 (empty -> .) ]
  ! ADD             [ reduce using rule 310 (empty -> .) ]
  ! PUT             [ reduce using rule 310 (empty -> .) ]

    Div                            shift and go to state 50
    expresion                      shift and go to state 111
    empty                          shift and go to state 112
    funcion                        shift and go to state 90
    expresion_alge1                shift and go to state 45
    expresion_alge2                shift and go to state 46
    Sum                            shift and go to state 47
    Substr                         shift and go to state 48
    Mult                           shift and go to state 49
    Random                         shift and go to state 51
    Run                            shift and go to state 52
    If                             shift and go to state 53
    IfElse                         shift and go to state 54
    Repeat                         shift and go to state 55
    Until                          shift and go to state 56
    While                          shift and go to state 57
    PrintLine                      shift and go to state 58
    And                            shift and go to state 59
    Or                             shift and go to state 60
    Add                            shift and go to state 61
    Put2                           shift and go to state 93
    Put                            shift and go to state 94

state 51

    (69) funcion -> Random . empty
    (310) empty -> .

    PUNTOCOMA       reduce using rule 310 (empty -> .)
    NUMERO          reduce using rule 310 (empty -> .)
    ABRE_P          reduce using rule 310 (empty -> .)
    SUM             reduce using rule 310 (empty -> .)
    SUBSTR          reduce using rule 310 (empty -> .)
    MULTI           reduce using rule 310 (empty -> .)
    DIV             reduce using rule 310 (empty -> .)
    RANDOM          reduce using rule 310 (empty -> .)
    RUN             reduce using rule 310 (empty -> .)
    IF              reduce using rule 310 (empty -> .)
    IFELSE          reduce using rule 310 (empty -> .)
    REPEAT          reduce using rule 310 (empty -> .)
    UNTIL           reduce using rule 310 (empty -> .)
    WHILE           reduce using rule 310 (empty -> .)
    PRINTLINE       reduce using rule 310 (empty -> .)
    AND             reduce using rule 310 (empty -> .)
    OR              reduce using rule 310 (empty -> .)
    ADD             reduce using rule 310 (empty -> .)
    PUT             reduce using rule 310 (empty -> .)
    FIN             reduce using rule 310 (empty -> .)
    CIERRA_P        reduce using rule 310 (empty -> .)
    BRACKET2        reduce using rule 310 (empty -> .)

    empty                          shift and go to state 113

state 52

    (70) funcion -> Run . empty
    (310) empty -> .

    PUNTOCOMA       reduce using rule 310 (empty -> .)
    NUMERO          reduce using rule 310 (empty -> .)
    ABRE_P          reduce using rule 310 (empty -> .)
    SUM             reduce using rule 310 (empty -> .)
    SUBSTR          reduce using rule 310 (empty -> .)
    MULTI           reduce using rule 310 (empty -> .)
    DIV             reduce using rule 310 (empty -> .)
    RANDOM          reduce using rule 310 (empty -> .)
    RUN             reduce using rule 310 (empty -> .)
    IF              reduce using rule 310 (empty -> .)
    IFELSE          reduce using rule 310 (empty -> .)
    REPEAT          reduce using rule 310 (empty -> .)
    UNTIL           reduce using rule 310 (empty -> .)
    WHILE           reduce using rule 310 (empty -> .)
    PRINTLINE       reduce using rule 310 (empty -> .)
    AND             reduce using rule 310 (empty -> .)
    OR              reduce using rule 310 (empty -> .)
    ADD             reduce using rule 310 (empty -> .)
    PUT             reduce using rule 310 (empty -> .)
    FIN             reduce using rule 310 (empty -> .)
    CIERRA_P        reduce using rule 310 (empty -> .)
    BRACKET2        reduce using rule 310 (empty -> .)

    empty                          shift and go to state 114

state 53

    (71) funcion -> If . empty
    (310) empty -> .

    PUNTOCOMA       reduce using rule 310 (empty -> .)
    NUMERO          reduce using rule 310 (empty -> .)
    ABRE_P          reduce using rule 310 (empty -> .)
    SUM             reduce using rule 310 (empty -> .)
    SUBSTR          reduce using rule 310 (empty -> .)
    MULTI           reduce using rule 310 (empty -> .)
    DIV             reduce using rule 310 (empty -> .)
    RANDOM          reduce using rule 310 (empty -> .)
    RUN             reduce using rule 310 (empty -> .)
    IF              reduce using rule 310 (empty -> .)
    IFELSE          reduce using rule 310 (empty -> .)
    REPEAT          reduce using rule 310 (empty -> .)
    UNTIL           reduce using rule 310 (empty -> .)
    WHILE           reduce using rule 310 (empty -> .)
    PRINTLINE       reduce using rule 310 (empty -> .)
    AND             reduce using rule 310 (empty -> .)
    OR              reduce using rule 310 (empty -> .)
    ADD             reduce using rule 310 (empty -> .)
    PUT             reduce using rule 310 (empty -> .)
    FIN             reduce using rule 310 (empty -> .)
    CIERRA_P        reduce using rule 310 (empty -> .)
    BRACKET2        reduce using rule 310 (empty -> .)

    empty                          shift and go to state 115

state 54

    (72) funcion -> IfElse . empty
    (310) empty -> .

    PUNTOCOMA       reduce using rule 310 (empty -> .)
    NUMERO          reduce using rule 310 (empty -> .)
    ABRE_P          reduce using rule 310 (empty -> .)
    SUM             reduce using rule 310 (empty -> .)
    SUBSTR          reduce using rule 310 (empty -> .)
    MULTI           reduce using rule 310 (empty -> .)
    DIV             reduce using rule 310 (empty -> .)
    RANDOM          reduce using rule 310 (empty -> .)
    RUN             reduce using rule 310 (empty -> .)
    IF              reduce using rule 310 (empty -> .)
    IFELSE          reduce using rule 310 (empty -> .)
    REPEAT          reduce using rule 310 (empty -> .)
    UNTIL           reduce using rule 310 (empty -> .)
    WHILE           reduce using rule 310 (empty -> .)
    PRINTLINE       reduce using rule 310 (empty -> .)
    AND             reduce using rule 310 (empty -> .)
    OR              reduce using rule 310 (empty -> .)
    ADD             reduce using rule 310 (empty -> .)
    PUT             reduce using rule 310 (empty -> .)
    FIN             reduce using rule 310 (empty -> .)
    CIERRA_P        reduce using rule 310 (empty -> .)
    BRACKET2        reduce using rule 310 (empty -> .)

    empty                          shift and go to state 116

state 55

    (73) funcion -> Repeat . empty
    (310) empty -> .

    PUNTOCOMA       reduce using rule 310 (empty -> .)
    NUMERO          reduce using rule 310 (empty -> .)
    ABRE_P          reduce using rule 310 (empty -> .)
    SUM             reduce using rule 310 (empty -> .)
    SUBSTR          reduce using rule 310 (empty -> .)
    MULTI           reduce using rule 310 (empty -> .)
    DIV             reduce using rule 310 (empty -> .)
    RANDOM          reduce using rule 310 (empty -> .)
    RUN             reduce using rule 310 (empty -> .)
    IF              reduce using rule 310 (empty -> .)
    IFELSE          reduce using rule 310 (empty -> .)
    REPEAT          reduce using rule 310 (empty -> .)
    UNTIL           reduce using rule 310 (empty -> .)
    WHILE           reduce using rule 310 (empty -> .)
    PRINTLINE       reduce using rule 310 (empty -> .)
    AND             reduce using rule 310 (empty -> .)
    OR              reduce using rule 310 (empty -> .)
    ADD             reduce using rule 310 (empty -> .)
    PUT             reduce using rule 310 (empty -> .)
    FIN             reduce using rule 310 (empty -> .)
    CIERRA_P        reduce using rule 310 (empty -> .)
    BRACKET2        reduce using rule 310 (empty -> .)

    empty                          shift and go to state 117

state 56

    (74) funcion -> Until . empty
    (310) empty -> .

    PUNTOCOMA       reduce using rule 310 (empty -> .)
    NUMERO          reduce using rule 310 (empty -> .)
    ABRE_P          reduce using rule 310 (empty -> .)
    SUM             reduce using rule 310 (empty -> .)
    SUBSTR          reduce using rule 310 (empty -> .)
    MULTI           reduce using rule 310 (empty -> .)
    DIV             reduce using rule 310 (empty -> .)
    RANDOM          reduce using rule 310 (empty -> .)
    RUN             reduce using rule 310 (empty -> .)
    IF              reduce using rule 310 (empty -> .)
    IFELSE          reduce using rule 310 (empty -> .)
    REPEAT          reduce using rule 310 (empty -> .)
    UNTIL           reduce using rule 310 (empty -> .)
    WHILE           reduce using rule 310 (empty -> .)
    PRINTLINE       reduce using rule 310 (empty -> .)
    AND             reduce using rule 310 (empty -> .)
    OR              reduce using rule 310 (empty -> .)
    ADD             reduce using rule 310 (empty -> .)
    PUT             reduce using rule 310 (empty -> .)
    FIN             reduce using rule 310 (empty -> .)
    CIERRA_P        reduce using rule 310 (empty -> .)
    BRACKET2        reduce using rule 310 (empty -> .)

    empty                          shift and go to state 118

state 57

    (75) funcion -> While . empty
    (310) empty -> .

    PUNTOCOMA       reduce using rule 310 (empty -> .)
    NUMERO          reduce using rule 310 (empty -> .)
    ABRE_P          reduce using rule 310 (empty -> .)
    SUM             reduce using rule 310 (empty -> .)
    SUBSTR          reduce using rule 310 (empty -> .)
    MULTI           reduce using rule 310 (empty -> .)
    DIV             reduce using rule 310 (empty -> .)
    RANDOM          reduce using rule 310 (empty -> .)
    RUN             reduce using rule 310 (empty -> .)
    IF              reduce using rule 310 (empty -> .)
    IFELSE          reduce using rule 310 (empty -> .)
    REPEAT          reduce using rule 310 (empty -> .)
    UNTIL           reduce using rule 310 (empty -> .)
    WHILE           reduce using rule 310 (empty -> .)
    PRINTLINE       reduce using rule 310 (empty -> .)
    AND             reduce using rule 310 (empty -> .)
    OR              reduce using rule 310 (empty -> .)
    ADD             reduce using rule 310 (empty -> .)
    PUT             reduce using rule 310 (empty -> .)
    FIN             reduce using rule 310 (empty -> .)
    CIERRA_P        reduce using rule 310 (empty -> .)
    BRACKET2        reduce using rule 310 (empty -> .)

    empty                          shift and go to state 119

state 58

    (76) funcion -> PrintLine . empty
    (310) empty -> .

    PUNTOCOMA       reduce using rule 310 (empty -> .)
    NUMERO          reduce using rule 310 (empty -> .)
    ABRE_P          reduce using rule 310 (empty -> .)
    SUM             reduce using rule 310 (empty -> .)
    SUBSTR          reduce using rule 310 (empty -> .)
    MULTI           reduce using rule 310 (empty -> .)
    DIV             reduce using rule 310 (empty -> .)
    RANDOM          reduce using rule 310 (empty -> .)
    RUN             reduce using rule 310 (empty -> .)
    IF              reduce using rule 310 (empty -> .)
    IFELSE          reduce using rule 310 (empty -> .)
    REPEAT          reduce using rule 310 (empty -> .)
    UNTIL           reduce using rule 310 (empty -> .)
    WHILE           reduce using rule 310 (empty -> .)
    PRINTLINE       reduce using rule 310 (empty -> .)
    AND             reduce using rule 310 (empty -> .)
    OR              reduce using rule 310 (empty -> .)
    ADD             reduce using rule 310 (empty -> .)
    PUT             reduce using rule 310 (empty -> .)
    FIN             reduce using rule 310 (empty -> .)
    CIERRA_P        reduce using rule 310 (empty -> .)
    BRACKET2        reduce using rule 310 (empty -> .)

    empty                          shift and go to state 120

state 59

    (77) funcion -> And . empty
    (310) empty -> .

    PUNTOCOMA       reduce using rule 310 (empty -> .)
    NUMERO          reduce using rule 310 (empty -> .)
    ABRE_P          reduce using rule 310 (empty -> .)
    SUM             reduce using rule 310 (empty -> .)
    SUBSTR          reduce using rule 310 (empty -> .)
    MULTI           reduce using rule 310 (empty -> .)
    DIV             reduce using rule 310 (empty -> .)
    RANDOM          reduce using rule 310 (empty -> .)
    RUN             reduce using rule 310 (empty -> .)
    IF              reduce using rule 310 (empty -> .)
    IFELSE          reduce using rule 310 (empty -> .)
    REPEAT          reduce using rule 310 (empty -> .)
    UNTIL           reduce using rule 310 (empty -> .)
    WHILE           reduce using rule 310 (empty -> .)
    PRINTLINE       reduce using rule 310 (empty -> .)
    AND             reduce using rule 310 (empty -> .)
    OR              reduce using rule 310 (empty -> .)
    ADD             reduce using rule 310 (empty -> .)
    PUT             reduce using rule 310 (empty -> .)
    FIN             reduce using rule 310 (empty -> .)
    CIERRA_P        reduce using rule 310 (empty -> .)
    BRACKET2        reduce using rule 310 (empty -> .)

    empty                          shift and go to state 121

state 60

    (78) funcion -> Or . empty
    (310) empty -> .

    PUNTOCOMA       reduce using rule 310 (empty -> .)
    NUMERO          reduce using rule 310 (empty -> .)
    ABRE_P          reduce using rule 310 (empty -> .)
    SUM             reduce using rule 310 (empty -> .)
    SUBSTR          reduce using rule 310 (empty -> .)
    MULTI           reduce using rule 310 (empty -> .)
    DIV             reduce using rule 310 (empty -> .)
    RANDOM          reduce using rule 310 (empty -> .)
    RUN             reduce using rule 310 (empty -> .)
    IF              reduce using rule 310 (empty -> .)
    IFELSE          reduce using rule 310 (empty -> .)
    REPEAT          reduce using rule 310 (empty -> .)
    UNTIL           reduce using rule 310 (empty -> .)
    WHILE           reduce using rule 310 (empty -> .)
    PRINTLINE       reduce using rule 310 (empty -> .)
    AND             reduce using rule 310 (empty -> .)
    OR              reduce using rule 310 (empty -> .)
    ADD             reduce using rule 310 (empty -> .)
    PUT             reduce using rule 310 (empty -> .)
    FIN             reduce using rule 310 (empty -> .)
    CIERRA_P        reduce using rule 310 (empty -> .)
    BRACKET2        reduce using rule 310 (empty -> .)

    empty                          shift and go to state 122

state 61

    (79) funcion -> Add . empty
    (310) empty -> .

    PUNTOCOMA       reduce using rule 310 (empty -> .)
    NUMERO          reduce using rule 310 (empty -> .)
    ABRE_P          reduce using rule 310 (empty -> .)
    SUM             reduce using rule 310 (empty -> .)
    SUBSTR          reduce using rule 310 (empty -> .)
    MULTI           reduce using rule 310 (empty -> .)
    DIV             reduce using rule 310 (empty -> .)
    RANDOM          reduce using rule 310 (empty -> .)
    RUN             reduce using rule 310 (empty -> .)
    IF              reduce using rule 310 (empty -> .)
    IFELSE          reduce using rule 310 (empty -> .)
    REPEAT          reduce using rule 310 (empty -> .)
    UNTIL           reduce using rule 310 (empty -> .)
    WHILE           reduce using rule 310 (empty -> .)
    PRINTLINE       reduce using rule 310 (empty -> .)
    AND             reduce using rule 310 (empty -> .)
    OR              reduce using rule 310 (empty -> .)
    ADD             reduce using rule 310 (empty -> .)
    PUT             reduce using rule 310 (empty -> .)
    FIN             reduce using rule 310 (empty -> .)
    CIERRA_P        reduce using rule 310 (empty -> .)
    BRACKET2        reduce using rule 310 (empty -> .)

    empty                          shift and go to state 123

state 62

    (82) funcion -> PUNTOCOMA . funcion
    (69) funcion -> . Random empty
    (70) funcion -> . Run empty
    (71) funcion -> . If empty
    (72) funcion -> . IfElse empty
    (73) funcion -> . Repeat empty
    (74) funcion -> . Until empty
    (75) funcion -> . While empty
    (76) funcion -> . PrintLine empty
    (77) funcion -> . And empty
    (78) funcion -> . Or empty
    (79) funcion -> . Add empty
    (80) funcion -> . Put2 empty
    (81) funcion -> . Put empty
    (82) funcion -> . PUNTOCOMA funcion
    (83) funcion -> . empty empty
    (257) Random -> . RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA
    (300) Run -> . RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA
    (242) If -> . IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2
    (243) IfElse -> . IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2
    (245) Repeat -> . REPEAT NUMERO BRACKET1 ordenes BRACKET2
    (246) Until -> . UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2
    (244) While -> . WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2
    (309) PrintLine -> . PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA
    (234) And -> . AND ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (235) And -> . AND ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (236) And -> . AND ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (237) And -> . AND ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (238) Or -> . OR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (239) Or -> . OR ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (240) Or -> . OR ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (241) Or -> . OR ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (247) Add -> . ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA
    (248) Add -> . ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (249) Add -> . ADD ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (250) Add -> . ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (251) Add -> . ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (252) Add -> . ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (85) Put2 -> . PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (86) Put2 -> . PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (87) Put2 -> . PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (88) Put2 -> . PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (89) Put2 -> . PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA
    (84) Put -> . PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA
    (310) empty -> .

  ! shift/reduce conflict for PUNTOCOMA resolved as shift
  ! shift/reduce conflict for RANDOM resolved as shift
  ! shift/reduce conflict for RUN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for IFELSE resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for PRINTLINE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for PUT resolved as shift
    PUNTOCOMA       shift and go to state 62
    RANDOM          shift and go to state 69
    RUN             shift and go to state 70
    IF              shift and go to state 71
    IFELSE          shift and go to state 72
    REPEAT          shift and go to state 73
    UNTIL           shift and go to state 74
    WHILE           shift and go to state 75
    PRINTLINE       shift and go to state 76
    AND             shift and go to state 77
    OR              shift and go to state 78
    ADD             shift and go to state 79
    PUT             shift and go to state 95
    NUMERO          reduce using rule 310 (empty -> .)
    ABRE_P          reduce using rule 310 (empty -> .)
    SUM             reduce using rule 310 (empty -> .)
    SUBSTR          reduce using rule 310 (empty -> .)
    MULTI           reduce using rule 310 (empty -> .)
    DIV             reduce using rule 310 (empty -> .)
    FIN             reduce using rule 310 (empty -> .)
    CIERRA_P        reduce using rule 310 (empty -> .)
    BRACKET2        reduce using rule 310 (empty -> .)

  ! PUNTOCOMA       [ reduce using rule 310 (empty -> .) ]
  ! RANDOM          [ reduce using rule 310 (empty -> .) ]
  ! RUN             [ reduce using rule 310 (empty -> .) ]
  ! IF              [ reduce using rule 310 (empty -> .) ]
  ! IFELSE          [ reduce using rule 310 (empty -> .) ]
  ! REPEAT          [ reduce using rule 310 (empty -> .) ]
  ! UNTIL           [ reduce using rule 310 (empty -> .) ]
  ! WHILE           [ reduce using rule 310 (empty -> .) ]
  ! PRINTLINE       [ reduce using rule 310 (empty -> .) ]
  ! AND             [ reduce using rule 310 (empty -> .) ]
  ! OR              [ reduce using rule 310 (empty -> .) ]
  ! ADD             [ reduce using rule 310 (empty -> .) ]
  ! PUT             [ reduce using rule 310 (empty -> .) ]

    funcion                        shift and go to state 124
    Random                         shift and go to state 51
    empty                          shift and go to state 125
    Run                            shift and go to state 52
    If                             shift and go to state 53
    IfElse                         shift and go to state 54
    Repeat                         shift and go to state 55
    Until                          shift and go to state 56
    While                          shift and go to state 57
    PrintLine                      shift and go to state 58
    And                            shift and go to state 59
    Or                             shift and go to state 60
    Add                            shift and go to state 61
    Put2                           shift and go to state 93
    Put                            shift and go to state 94

state 63

    (97) expresion_alge2 -> ABRE_P . expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (98) expresion_alge2 -> ABRE_P . expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (99) expresion_alge2 -> ABRE_P . expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (100) expresion_alge2 -> ABRE_P . expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (93) expresion_alge1 -> . NUMERO SUMA NUMERO
    (94) expresion_alge1 -> . NUMERO RESTA NUMERO
    (95) expresion_alge1 -> . NUMERO MULTI NUMERO
    (96) expresion_alge1 -> . NUMERO DIVISION NUMERO

    NUMERO          shift and go to state 64

    expresion_alge1                shift and go to state 126

state 64

    (93) expresion_alge1 -> NUMERO . SUMA NUMERO
    (94) expresion_alge1 -> NUMERO . RESTA NUMERO
    (95) expresion_alge1 -> NUMERO . MULTI NUMERO
    (96) expresion_alge1 -> NUMERO . DIVISION NUMERO

    SUMA            shift and go to state 127
    RESTA           shift and go to state 128
    MULTI           shift and go to state 129
    DIVISION        shift and go to state 130


state 65

    (131) Mult -> MULTI . ABRE_P NUMERO COMA NUMERO CIERRA_P
    (132) Mult -> MULTI . ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (133) Mult -> MULTI . ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (134) Mult -> MULTI . ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (135) Mult -> MULTI . ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (136) Mult -> MULTI . ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (137) Mult -> MULTI . ABRE_P NUMERO COMA Var CIERRA_P
    (138) Mult -> MULTI . ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (139) Mult -> MULTI . ABRE_P Var COMA NUMERO CIERRA_P
    (140) Mult -> MULTI . ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (141) Mult -> MULTI . ABRE_P Var COMA Var CIERRA_P
    (142) Mult -> MULTI . ABRE_P expresion_alge1 COMA Var CIERRA_P
    (143) Mult -> MULTI . ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (144) Mult -> MULTI . ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (145) Mult -> MULTI . ABRE_P Var COMA expresion_alge1 CIERRA_P

    ABRE_P          shift and go to state 131


state 66

    (146) Div -> DIV . ABRE_P NUMERO COMA NUMERO CIERRA_P
    (147) Div -> DIV . ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (148) Div -> DIV . ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (149) Div -> DIV . ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (150) Div -> DIV . ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (151) Div -> DIV . ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (152) Div -> DIV . ABRE_P NUMERO COMA Var CIERRA_P
    (153) Div -> DIV . ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (154) Div -> DIV . ABRE_P Var COMA NUMERO CIERRA_P
    (155) Div -> DIV . ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (156) Div -> DIV . ABRE_P Var COMA Var CIERRA_P
    (157) Div -> DIV . ABRE_P expresion_alge1 COMA Var CIERRA_P
    (158) Div -> DIV . ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (159) Div -> DIV . ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (160) Div -> DIV . ABRE_P Var COMA expresion_alge1 CIERRA_P

    ABRE_P          shift and go to state 132


state 67

    (101) Sum -> SUM . ABRE_P NUMERO COMA NUMERO CIERRA_P
    (102) Sum -> SUM . ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (103) Sum -> SUM . ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (104) Sum -> SUM . ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (105) Sum -> SUM . ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (106) Sum -> SUM . ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (107) Sum -> SUM . ABRE_P NUMERO COMA Var CIERRA_P
    (108) Sum -> SUM . ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (109) Sum -> SUM . ABRE_P Var COMA NUMERO CIERRA_P
    (110) Sum -> SUM . ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (111) Sum -> SUM . ABRE_P Var COMA Var CIERRA_P
    (112) Sum -> SUM . ABRE_P expresion_alge1 COMA Var CIERRA_P
    (113) Sum -> SUM . ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (114) Sum -> SUM . ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (115) Sum -> SUM . ABRE_P Var COMA expresion_alge1 CIERRA_P

    ABRE_P          shift and go to state 133


state 68

    (116) Substr -> SUBSTR . ABRE_P NUMERO COMA NUMERO CIERRA_P
    (117) Substr -> SUBSTR . ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (118) Substr -> SUBSTR . ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (119) Substr -> SUBSTR . ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (120) Substr -> SUBSTR . ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (121) Substr -> SUBSTR . ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (122) Substr -> SUBSTR . ABRE_P NUMERO COMA Var CIERRA_P
    (123) Substr -> SUBSTR . ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (124) Substr -> SUBSTR . ABRE_P Var COMA NUMERO CIERRA_P
    (125) Substr -> SUBSTR . ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (126) Substr -> SUBSTR . ABRE_P Var COMA Var CIERRA_P
    (127) Substr -> SUBSTR . ABRE_P expresion_alge1 COMA Var CIERRA_P
    (128) Substr -> SUBSTR . ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (129) Substr -> SUBSTR . ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (130) Substr -> SUBSTR . ABRE_P Var COMA expresion_alge1 CIERRA_P

    ABRE_P          shift and go to state 134


state 69

    (257) Random -> RANDOM . ABRE_P NUMERO CIERRA_P PUNTOCOMA

    ABRE_P          shift and go to state 135


state 70

    (300) Run -> RUN . BRACKET1 ordenes BRACKET2 PUNTOCOMA

    BRACKET1        shift and go to state 136


state 71

    (242) If -> IF . ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2

    ABRE_P          shift and go to state 137


state 72

    (243) IfElse -> IFELSE . ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2

    ABRE_P          shift and go to state 138


state 73

    (245) Repeat -> REPEAT . NUMERO BRACKET1 ordenes BRACKET2

    NUMERO          shift and go to state 139


state 74

    (246) Until -> UNTIL . BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2

    BRACKET1        shift and go to state 140


state 75

    (244) While -> WHILE . BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2

    BRACKET1        shift and go to state 141


state 76

    (309) PrintLine -> PRINTLINE . ABRE_P exp CIERRA_P PUNTOCOMA

    ABRE_P          shift and go to state 142


state 77

    (234) And -> AND . ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (235) And -> AND . ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (236) And -> AND . ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (237) And -> AND . ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA

    ABRE_P          shift and go to state 143


state 78

    (238) Or -> OR . ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (239) Or -> OR . ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (240) Or -> OR . ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (241) Or -> OR . ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA

    ABRE_P          shift and go to state 144


state 79

    (247) Add -> ADD . ABRE_P Var empty empty CIERRA_P PUNTOCOMA
    (248) Add -> ADD . ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (249) Add -> ADD . ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (250) Add -> ADD . ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (251) Add -> ADD . ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (252) Add -> ADD . ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA

    ABRE_P          shift and go to state 145


state 80

    (84) Put -> PUT ABRE_P VAR COMA . VAR CIERRA_P PUNTOCOMA
    (85) Put2 -> PUT ABRE_P VAR COMA . NUMERO CIERRA_P PUNTOCOMA
    (86) Put2 -> PUT ABRE_P VAR COMA . RESTA NUMERO CIERRA_P PUNTOCOMA
    (87) Put2 -> PUT ABRE_P VAR COMA . expresion_alge1 CIERRA_P PUNTOCOMA
    (88) Put2 -> PUT ABRE_P VAR COMA . expresion_alge2 CIERRA_P PUNTOCOMA
    (89) Put2 -> PUT ABRE_P VAR COMA . funcion CIERRA_P PUNTOCOMA
    (93) expresion_alge1 -> . NUMERO SUMA NUMERO
    (94) expresion_alge1 -> . NUMERO RESTA NUMERO
    (95) expresion_alge1 -> . NUMERO MULTI NUMERO
    (96) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (97) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (98) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (99) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (100) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (69) funcion -> . Random empty
    (70) funcion -> . Run empty
    (71) funcion -> . If empty
    (72) funcion -> . IfElse empty
    (73) funcion -> . Repeat empty
    (74) funcion -> . Until empty
    (75) funcion -> . While empty
    (76) funcion -> . PrintLine empty
    (77) funcion -> . And empty
    (78) funcion -> . Or empty
    (79) funcion -> . Add empty
    (80) funcion -> . Put2 empty
    (81) funcion -> . Put empty
    (82) funcion -> . PUNTOCOMA funcion
    (83) funcion -> . empty empty
    (257) Random -> . RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA
    (300) Run -> . RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA
    (242) If -> . IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2
    (243) IfElse -> . IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2
    (245) Repeat -> . REPEAT NUMERO BRACKET1 ordenes BRACKET2
    (246) Until -> . UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2
    (244) While -> . WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2
    (309) PrintLine -> . PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA
    (234) And -> . AND ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (235) And -> . AND ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (236) And -> . AND ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (237) And -> . AND ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (238) Or -> . OR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (239) Or -> . OR ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (240) Or -> . OR ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (241) Or -> . OR ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (247) Add -> . ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA
    (248) Add -> . ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (249) Add -> . ADD ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (250) Add -> . ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (251) Add -> . ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (252) Add -> . ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (85) Put2 -> . PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (86) Put2 -> . PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (87) Put2 -> . PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (88) Put2 -> . PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (89) Put2 -> . PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA
    (84) Put -> . PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA
    (310) empty -> .

    VAR             shift and go to state 146
    NUMERO          shift and go to state 147
    RESTA           shift and go to state 148
    ABRE_P          shift and go to state 63
    PUNTOCOMA       shift and go to state 62
    RANDOM          shift and go to state 69
    RUN             shift and go to state 70
    IF              shift and go to state 71
    IFELSE          shift and go to state 72
    REPEAT          shift and go to state 73
    UNTIL           shift and go to state 74
    WHILE           shift and go to state 75
    PRINTLINE       shift and go to state 76
    AND             shift and go to state 77
    OR              shift and go to state 78
    ADD             shift and go to state 79
    PUT             shift and go to state 95
    CIERRA_P        reduce using rule 310 (empty -> .)

    expresion_alge1                shift and go to state 149
    expresion_alge2                shift and go to state 150
    funcion                        shift and go to state 151
    Random                         shift and go to state 51
    empty                          shift and go to state 125
    Run                            shift and go to state 52
    If                             shift and go to state 53
    IfElse                         shift and go to state 54
    Repeat                         shift and go to state 55
    Until                          shift and go to state 56
    While                          shift and go to state 57
    PrintLine                      shift and go to state 58
    And                            shift and go to state 59
    Or                             shift and go to state 60
    Add                            shift and go to state 61
    Put2                           shift and go to state 93
    Put                            shift and go to state 94

state 81

    (37) variable2 -> DEF VAR IGUAL NUMERO . PUNTOCOMA

    PUNTOCOMA       shift and go to state 152


state 82

    (38) variable2 -> DEF VAR IGUAL RESTA . NUMERO PUNTOCOMA

    NUMERO          shift and go to state 153


state 83

    (255) parametro -> empty empty . empty
    (310) empty -> .

    BRACKET2        reduce using rule 310 (empty -> .)

    empty                          shift and go to state 154

state 84

    (23) procedimiento -> PARA id BRACKET1 empty BRACKET2 . cuerpo2 FIN cuerpo
    (8) cuerpo2 -> . variablexd
    (9) cuerpo2 -> . COMMENT cuerpo2
    (10) cuerpo2 -> . expresion
    (11) cuerpo2 -> . llamadoproc
    (12) cuerpo2 -> . empty
    (13) cuerpo2 -> . Put2
    (14) cuerpo2 -> . Put
    (30) variablexd -> . variable1 cuerpo2
    (31) variablexd -> . variable2 cuerpo2
    (32) variablexd -> . empty empty
    (39) expresion -> . funcion expresion
    (40) expresion -> . expresion_alge1 expresion
    (41) expresion -> . expresion_alge2 expresion
    (42) expresion -> . Sum expresion
    (43) expresion -> . Substr expresion
    (44) expresion -> . Mult expresion
    (45) expresion -> . Div expresion
    (46) expresion -> . funcion empty
    (47) expresion -> . expresion_alge1 empty
    (48) expresion -> . expresion_alge2 empty
    (49) expresion -> . Sum empty
    (50) expresion -> . Substr empty
    (51) expresion -> . Mult empty
    (52) expresion -> . Div empty
    (53) expresion -> . empty empty
    (25) llamadoproc -> . PARA id BRACKET1 parametro BRACKET2 PUNTOCOMA
    (310) empty -> .
    (85) Put2 -> . PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (86) Put2 -> . PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (87) Put2 -> . PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (88) Put2 -> . PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (89) Put2 -> . PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA
    (84) Put -> . PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA
    (36) variable1 -> . DEF VAR PUNTOCOMA
    (37) variable2 -> . DEF VAR IGUAL NUMERO PUNTOCOMA
    (38) variable2 -> . DEF VAR IGUAL RESTA NUMERO PUNTOCOMA
    (69) funcion -> . Random empty
    (70) funcion -> . Run empty
    (71) funcion -> . If empty
    (72) funcion -> . IfElse empty
    (73) funcion -> . Repeat empty
    (74) funcion -> . Until empty
    (75) funcion -> . While empty
    (76) funcion -> . PrintLine empty
    (77) funcion -> . And empty
    (78) funcion -> . Or empty
    (79) funcion -> . Add empty
    (80) funcion -> . Put2 empty
    (81) funcion -> . Put empty
    (82) funcion -> . PUNTOCOMA funcion
    (83) funcion -> . empty empty
    (93) expresion_alge1 -> . NUMERO SUMA NUMERO
    (94) expresion_alge1 -> . NUMERO RESTA NUMERO
    (95) expresion_alge1 -> . NUMERO MULTI NUMERO
    (96) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (97) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (98) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (99) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (100) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (101) Sum -> . SUM ABRE_P NUMERO COMA NUMERO CIERRA_P
    (102) Sum -> . SUM ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (103) Sum -> . SUM ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (104) Sum -> . SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (105) Sum -> . SUM ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (106) Sum -> . SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (107) Sum -> . SUM ABRE_P NUMERO COMA Var CIERRA_P
    (108) Sum -> . SUM ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (109) Sum -> . SUM ABRE_P Var COMA NUMERO CIERRA_P
    (110) Sum -> . SUM ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (111) Sum -> . SUM ABRE_P Var COMA Var CIERRA_P
    (112) Sum -> . SUM ABRE_P expresion_alge1 COMA Var CIERRA_P
    (113) Sum -> . SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (114) Sum -> . SUM ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (115) Sum -> . SUM ABRE_P Var COMA expresion_alge1 CIERRA_P
    (116) Substr -> . SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P
    (117) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (118) Substr -> . SUBSTR ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (119) Substr -> . SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (120) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (121) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (122) Substr -> . SUBSTR ABRE_P NUMERO COMA Var CIERRA_P
    (123) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (124) Substr -> . SUBSTR ABRE_P Var COMA NUMERO CIERRA_P
    (125) Substr -> . SUBSTR ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (126) Substr -> . SUBSTR ABRE_P Var COMA Var CIERRA_P
    (127) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P
    (128) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (129) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (130) Substr -> . SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P
    (131) Mult -> . MULTI ABRE_P NUMERO COMA NUMERO CIERRA_P
    (132) Mult -> . MULTI ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (133) Mult -> . MULTI ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (134) Mult -> . MULTI ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (135) Mult -> . MULTI ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (136) Mult -> . MULTI ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (137) Mult -> . MULTI ABRE_P NUMERO COMA Var CIERRA_P
    (138) Mult -> . MULTI ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (139) Mult -> . MULTI ABRE_P Var COMA NUMERO CIERRA_P
    (140) Mult -> . MULTI ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (141) Mult -> . MULTI ABRE_P Var COMA Var CIERRA_P
    (142) Mult -> . MULTI ABRE_P expresion_alge1 COMA Var CIERRA_P
    (143) Mult -> . MULTI ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (144) Mult -> . MULTI ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (145) Mult -> . MULTI ABRE_P Var COMA expresion_alge1 CIERRA_P
    (146) Div -> . DIV ABRE_P NUMERO COMA NUMERO CIERRA_P
    (147) Div -> . DIV ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (148) Div -> . DIV ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (149) Div -> . DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (150) Div -> . DIV ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (151) Div -> . DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (152) Div -> . DIV ABRE_P NUMERO COMA Var CIERRA_P
    (153) Div -> . DIV ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (154) Div -> . DIV ABRE_P Var COMA NUMERO CIERRA_P
    (155) Div -> . DIV ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (156) Div -> . DIV ABRE_P Var COMA Var CIERRA_P
    (157) Div -> . DIV ABRE_P expresion_alge1 COMA Var CIERRA_P
    (158) Div -> . DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (159) Div -> . DIV ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (160) Div -> . DIV ABRE_P Var COMA expresion_alge1 CIERRA_P
    (257) Random -> . RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA
    (300) Run -> . RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA
    (242) If -> . IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2
    (243) IfElse -> . IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2
    (245) Repeat -> . REPEAT NUMERO BRACKET1 ordenes BRACKET2
    (246) Until -> . UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2
    (244) While -> . WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2
    (309) PrintLine -> . PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA
    (234) And -> . AND ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (235) And -> . AND ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (236) And -> . AND ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (237) And -> . AND ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (238) Or -> . OR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (239) Or -> . OR ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (240) Or -> . OR ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (241) Or -> . OR ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (247) Add -> . ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA
    (248) Add -> . ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (249) Add -> . ADD ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (250) Add -> . ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (251) Add -> . ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (252) Add -> . ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA

  ! shift/reduce conflict for PUT resolved as shift
  ! shift/reduce conflict for PUNTOCOMA resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for ABRE_P resolved as shift
  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for SUBSTR resolved as shift
  ! shift/reduce conflict for MULTI resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for RANDOM resolved as shift
  ! shift/reduce conflict for RUN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for IFELSE resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for PRINTLINE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
    COMMENT         shift and go to state 159
    PARA            shift and go to state 155
    FIN             reduce using rule 310 (empty -> .)
    PUT             shift and go to state 95
    DEF             shift and go to state 16
    PUNTOCOMA       shift and go to state 62
    NUMERO          shift and go to state 64
    ABRE_P          shift and go to state 63
    SUM             shift and go to state 67
    SUBSTR          shift and go to state 68
    MULTI           shift and go to state 65
    DIV             shift and go to state 66
    RANDOM          shift and go to state 69
    RUN             shift and go to state 70
    IF              shift and go to state 71
    IFELSE          shift and go to state 72
    REPEAT          shift and go to state 73
    UNTIL           shift and go to state 74
    WHILE           shift and go to state 75
    PRINTLINE       shift and go to state 76
    AND             shift and go to state 77
    OR              shift and go to state 78
    ADD             shift and go to state 79

  ! PUNTOCOMA       [ reduce using rule 310 (empty -> .) ]
  ! NUMERO          [ reduce using rule 310 (empty -> .) ]
  ! ABRE_P          [ reduce using rule 310 (empty -> .) ]
  ! SUM             [ reduce using rule 310 (empty -> .) ]
  ! SUBSTR          [ reduce using rule 310 (empty -> .) ]
  ! MULTI           [ reduce using rule 310 (empty -> .) ]
  ! DIV             [ reduce using rule 310 (empty -> .) ]
  ! RANDOM          [ reduce using rule 310 (empty -> .) ]
  ! RUN             [ reduce using rule 310 (empty -> .) ]
  ! IF              [ reduce using rule 310 (empty -> .) ]
  ! IFELSE          [ reduce using rule 310 (empty -> .) ]
  ! REPEAT          [ reduce using rule 310 (empty -> .) ]
  ! UNTIL           [ reduce using rule 310 (empty -> .) ]
  ! WHILE           [ reduce using rule 310 (empty -> .) ]
  ! PRINTLINE       [ reduce using rule 310 (empty -> .) ]
  ! AND             [ reduce using rule 310 (empty -> .) ]
  ! OR              [ reduce using rule 310 (empty -> .) ]
  ! ADD             [ reduce using rule 310 (empty -> .) ]
  ! PUT             [ reduce using rule 310 (empty -> .) ]

    empty                          shift and go to state 156
    cuerpo2                        shift and go to state 157
    variablexd                     shift and go to state 158
    expresion                      shift and go to state 160
    llamadoproc                    shift and go to state 161
    Put2                           shift and go to state 162
    Put                            shift and go to state 163
    variable1                      shift and go to state 164
    variable2                      shift and go to state 165
    funcion                        shift and go to state 90
    expresion_alge1                shift and go to state 45
    expresion_alge2                shift and go to state 46
    Sum                            shift and go to state 47
    Substr                         shift and go to state 48
    Mult                           shift and go to state 49
    Div                            shift and go to state 50
    Random                         shift and go to state 51
    Run                            shift and go to state 52
    If                             shift and go to state 53
    IfElse                         shift and go to state 54
    Repeat                         shift and go to state 55
    Until                          shift and go to state 56
    While                          shift and go to state 57
    PrintLine                      shift and go to state 58
    And                            shift and go to state 59
    Or                             shift and go to state 60
    Add                            shift and go to state 61

state 85

    (24) procedimiento -> PARA id BRACKET1 parametro BRACKET2 . cuerpo2 FIN cuerpo
    (8) cuerpo2 -> . variablexd
    (9) cuerpo2 -> . COMMENT cuerpo2
    (10) cuerpo2 -> . expresion
    (11) cuerpo2 -> . llamadoproc
    (12) cuerpo2 -> . empty
    (13) cuerpo2 -> . Put2
    (14) cuerpo2 -> . Put
    (30) variablexd -> . variable1 cuerpo2
    (31) variablexd -> . variable2 cuerpo2
    (32) variablexd -> . empty empty
    (39) expresion -> . funcion expresion
    (40) expresion -> . expresion_alge1 expresion
    (41) expresion -> . expresion_alge2 expresion
    (42) expresion -> . Sum expresion
    (43) expresion -> . Substr expresion
    (44) expresion -> . Mult expresion
    (45) expresion -> . Div expresion
    (46) expresion -> . funcion empty
    (47) expresion -> . expresion_alge1 empty
    (48) expresion -> . expresion_alge2 empty
    (49) expresion -> . Sum empty
    (50) expresion -> . Substr empty
    (51) expresion -> . Mult empty
    (52) expresion -> . Div empty
    (53) expresion -> . empty empty
    (25) llamadoproc -> . PARA id BRACKET1 parametro BRACKET2 PUNTOCOMA
    (310) empty -> .
    (85) Put2 -> . PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (86) Put2 -> . PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (87) Put2 -> . PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (88) Put2 -> . PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (89) Put2 -> . PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA
    (84) Put -> . PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA
    (36) variable1 -> . DEF VAR PUNTOCOMA
    (37) variable2 -> . DEF VAR IGUAL NUMERO PUNTOCOMA
    (38) variable2 -> . DEF VAR IGUAL RESTA NUMERO PUNTOCOMA
    (69) funcion -> . Random empty
    (70) funcion -> . Run empty
    (71) funcion -> . If empty
    (72) funcion -> . IfElse empty
    (73) funcion -> . Repeat empty
    (74) funcion -> . Until empty
    (75) funcion -> . While empty
    (76) funcion -> . PrintLine empty
    (77) funcion -> . And empty
    (78) funcion -> . Or empty
    (79) funcion -> . Add empty
    (80) funcion -> . Put2 empty
    (81) funcion -> . Put empty
    (82) funcion -> . PUNTOCOMA funcion
    (83) funcion -> . empty empty
    (93) expresion_alge1 -> . NUMERO SUMA NUMERO
    (94) expresion_alge1 -> . NUMERO RESTA NUMERO
    (95) expresion_alge1 -> . NUMERO MULTI NUMERO
    (96) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (97) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (98) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (99) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (100) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (101) Sum -> . SUM ABRE_P NUMERO COMA NUMERO CIERRA_P
    (102) Sum -> . SUM ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (103) Sum -> . SUM ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (104) Sum -> . SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (105) Sum -> . SUM ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (106) Sum -> . SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (107) Sum -> . SUM ABRE_P NUMERO COMA Var CIERRA_P
    (108) Sum -> . SUM ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (109) Sum -> . SUM ABRE_P Var COMA NUMERO CIERRA_P
    (110) Sum -> . SUM ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (111) Sum -> . SUM ABRE_P Var COMA Var CIERRA_P
    (112) Sum -> . SUM ABRE_P expresion_alge1 COMA Var CIERRA_P
    (113) Sum -> . SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (114) Sum -> . SUM ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (115) Sum -> . SUM ABRE_P Var COMA expresion_alge1 CIERRA_P
    (116) Substr -> . SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P
    (117) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (118) Substr -> . SUBSTR ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (119) Substr -> . SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (120) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (121) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (122) Substr -> . SUBSTR ABRE_P NUMERO COMA Var CIERRA_P
    (123) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (124) Substr -> . SUBSTR ABRE_P Var COMA NUMERO CIERRA_P
    (125) Substr -> . SUBSTR ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (126) Substr -> . SUBSTR ABRE_P Var COMA Var CIERRA_P
    (127) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P
    (128) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (129) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (130) Substr -> . SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P
    (131) Mult -> . MULTI ABRE_P NUMERO COMA NUMERO CIERRA_P
    (132) Mult -> . MULTI ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (133) Mult -> . MULTI ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (134) Mult -> . MULTI ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (135) Mult -> . MULTI ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (136) Mult -> . MULTI ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (137) Mult -> . MULTI ABRE_P NUMERO COMA Var CIERRA_P
    (138) Mult -> . MULTI ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (139) Mult -> . MULTI ABRE_P Var COMA NUMERO CIERRA_P
    (140) Mult -> . MULTI ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (141) Mult -> . MULTI ABRE_P Var COMA Var CIERRA_P
    (142) Mult -> . MULTI ABRE_P expresion_alge1 COMA Var CIERRA_P
    (143) Mult -> . MULTI ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (144) Mult -> . MULTI ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (145) Mult -> . MULTI ABRE_P Var COMA expresion_alge1 CIERRA_P
    (146) Div -> . DIV ABRE_P NUMERO COMA NUMERO CIERRA_P
    (147) Div -> . DIV ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (148) Div -> . DIV ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (149) Div -> . DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (150) Div -> . DIV ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (151) Div -> . DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (152) Div -> . DIV ABRE_P NUMERO COMA Var CIERRA_P
    (153) Div -> . DIV ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (154) Div -> . DIV ABRE_P Var COMA NUMERO CIERRA_P
    (155) Div -> . DIV ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (156) Div -> . DIV ABRE_P Var COMA Var CIERRA_P
    (157) Div -> . DIV ABRE_P expresion_alge1 COMA Var CIERRA_P
    (158) Div -> . DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (159) Div -> . DIV ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (160) Div -> . DIV ABRE_P Var COMA expresion_alge1 CIERRA_P
    (257) Random -> . RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA
    (300) Run -> . RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA
    (242) If -> . IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2
    (243) IfElse -> . IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2
    (245) Repeat -> . REPEAT NUMERO BRACKET1 ordenes BRACKET2
    (246) Until -> . UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2
    (244) While -> . WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2
    (309) PrintLine -> . PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA
    (234) And -> . AND ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (235) And -> . AND ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (236) And -> . AND ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (237) And -> . AND ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (238) Or -> . OR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (239) Or -> . OR ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (240) Or -> . OR ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (241) Or -> . OR ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (247) Add -> . ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA
    (248) Add -> . ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (249) Add -> . ADD ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (250) Add -> . ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (251) Add -> . ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (252) Add -> . ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA

  ! shift/reduce conflict for PUT resolved as shift
  ! shift/reduce conflict for PUNTOCOMA resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for ABRE_P resolved as shift
  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for SUBSTR resolved as shift
  ! shift/reduce conflict for MULTI resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for RANDOM resolved as shift
  ! shift/reduce conflict for RUN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for IFELSE resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for PRINTLINE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
    COMMENT         shift and go to state 159
    PARA            shift and go to state 155
    FIN             reduce using rule 310 (empty -> .)
    PUT             shift and go to state 95
    DEF             shift and go to state 16
    PUNTOCOMA       shift and go to state 62
    NUMERO          shift and go to state 64
    ABRE_P          shift and go to state 63
    SUM             shift and go to state 67
    SUBSTR          shift and go to state 68
    MULTI           shift and go to state 65
    DIV             shift and go to state 66
    RANDOM          shift and go to state 69
    RUN             shift and go to state 70
    IF              shift and go to state 71
    IFELSE          shift and go to state 72
    REPEAT          shift and go to state 73
    UNTIL           shift and go to state 74
    WHILE           shift and go to state 75
    PRINTLINE       shift and go to state 76
    AND             shift and go to state 77
    OR              shift and go to state 78
    ADD             shift and go to state 79

  ! PUNTOCOMA       [ reduce using rule 310 (empty -> .) ]
  ! NUMERO          [ reduce using rule 310 (empty -> .) ]
  ! ABRE_P          [ reduce using rule 310 (empty -> .) ]
  ! SUM             [ reduce using rule 310 (empty -> .) ]
  ! SUBSTR          [ reduce using rule 310 (empty -> .) ]
  ! MULTI           [ reduce using rule 310 (empty -> .) ]
  ! DIV             [ reduce using rule 310 (empty -> .) ]
  ! RANDOM          [ reduce using rule 310 (empty -> .) ]
  ! RUN             [ reduce using rule 310 (empty -> .) ]
  ! IF              [ reduce using rule 310 (empty -> .) ]
  ! IFELSE          [ reduce using rule 310 (empty -> .) ]
  ! REPEAT          [ reduce using rule 310 (empty -> .) ]
  ! UNTIL           [ reduce using rule 310 (empty -> .) ]
  ! WHILE           [ reduce using rule 310 (empty -> .) ]
  ! PRINTLINE       [ reduce using rule 310 (empty -> .) ]
  ! AND             [ reduce using rule 310 (empty -> .) ]
  ! OR              [ reduce using rule 310 (empty -> .) ]
  ! ADD             [ reduce using rule 310 (empty -> .) ]
  ! PUT             [ reduce using rule 310 (empty -> .) ]

    cuerpo2                        shift and go to state 166
    variablexd                     shift and go to state 158
    expresion                      shift and go to state 160
    llamadoproc                    shift and go to state 161
    empty                          shift and go to state 156
    Put2                           shift and go to state 162
    Put                            shift and go to state 163
    variable1                      shift and go to state 164
    variable2                      shift and go to state 165
    funcion                        shift and go to state 90
    expresion_alge1                shift and go to state 45
    expresion_alge2                shift and go to state 46
    Sum                            shift and go to state 47
    Substr                         shift and go to state 48
    Mult                           shift and go to state 49
    Div                            shift and go to state 50
    Random                         shift and go to state 51
    Run                            shift and go to state 52
    If                             shift and go to state 53
    IfElse                         shift and go to state 54
    Repeat                         shift and go to state 55
    Until                          shift and go to state 56
    While                          shift and go to state 57
    PrintLine                      shift and go to state 58
    And                            shift and go to state 59
    Or                             shift and go to state 60
    Add                            shift and go to state 61

state 86

    (253) parametro -> Var COMA . parametro
    (253) parametro -> . Var COMA parametro
    (254) parametro -> . Var empty empty
    (255) parametro -> . empty empty empty
    (161) Var -> . VAR
    (310) empty -> .

    VAR             shift and go to state 34
    BRACKET2        reduce using rule 310 (empty -> .)

    Var                            shift and go to state 33
    parametro                      shift and go to state 167
    empty                          shift and go to state 168

state 87

    (254) parametro -> Var empty . empty
    (310) empty -> .

    BRACKET2        reduce using rule 310 (empty -> .)

    empty                          shift and go to state 169

state 88

    (26) main -> MAIN BRACKET1 BRACKET2 cuerpo3 FIN . cuerpo
    (2) cuerpo -> . variable
    (3) cuerpo -> . procedimiento
    (4) cuerpo -> . main
    (5) cuerpo -> . COMMENT cuerpo
    (6) cuerpo -> . Put
    (7) cuerpo -> . Put2
    (27) variable -> . variable1 cuerpo
    (28) variable -> . variable2 cuerpo
    (29) variable -> . empty empty
    (23) procedimiento -> . PARA id BRACKET1 empty BRACKET2 cuerpo2 FIN cuerpo
    (24) procedimiento -> . PARA id BRACKET1 parametro BRACKET2 cuerpo2 FIN cuerpo
    (26) main -> . MAIN BRACKET1 BRACKET2 cuerpo3 FIN cuerpo
    (84) Put -> . PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA
    (85) Put2 -> . PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (86) Put2 -> . PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (87) Put2 -> . PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (88) Put2 -> . PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (89) Put2 -> . PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA
    (36) variable1 -> . DEF VAR PUNTOCOMA
    (37) variable2 -> . DEF VAR IGUAL NUMERO PUNTOCOMA
    (38) variable2 -> . DEF VAR IGUAL RESTA NUMERO PUNTOCOMA
    (310) empty -> .

    COMMENT         shift and go to state 3
    PARA            shift and go to state 13
    MAIN            shift and go to state 14
    PUT             shift and go to state 15
    DEF             shift and go to state 16
    $end            reduce using rule 310 (empty -> .)

    cuerpo                         shift and go to state 170
    variable                       shift and go to state 5
    procedimiento                  shift and go to state 6
    main                           shift and go to state 7
    Put                            shift and go to state 8
    Put2                           shift and go to state 9
    variable1                      shift and go to state 10
    variable2                      shift and go to state 11
    empty                          shift and go to state 12

state 89

    (16) cuerpo3 -> COMMENT cuerpo3 .

    FIN             reduce using rule 16 (cuerpo3 -> COMMENT cuerpo3 .)


state 90

    (39) expresion -> funcion . expresion
    (46) expresion -> funcion . empty
    (39) expresion -> . funcion expresion
    (40) expresion -> . expresion_alge1 expresion
    (41) expresion -> . expresion_alge2 expresion
    (42) expresion -> . Sum expresion
    (43) expresion -> . Substr expresion
    (44) expresion -> . Mult expresion
    (45) expresion -> . Div expresion
    (46) expresion -> . funcion empty
    (47) expresion -> . expresion_alge1 empty
    (48) expresion -> . expresion_alge2 empty
    (49) expresion -> . Sum empty
    (50) expresion -> . Substr empty
    (51) expresion -> . Mult empty
    (52) expresion -> . Div empty
    (53) expresion -> . empty empty
    (310) empty -> .
    (69) funcion -> . Random empty
    (70) funcion -> . Run empty
    (71) funcion -> . If empty
    (72) funcion -> . IfElse empty
    (73) funcion -> . Repeat empty
    (74) funcion -> . Until empty
    (75) funcion -> . While empty
    (76) funcion -> . PrintLine empty
    (77) funcion -> . And empty
    (78) funcion -> . Or empty
    (79) funcion -> . Add empty
    (80) funcion -> . Put2 empty
    (81) funcion -> . Put empty
    (82) funcion -> . PUNTOCOMA funcion
    (83) funcion -> . empty empty
    (93) expresion_alge1 -> . NUMERO SUMA NUMERO
    (94) expresion_alge1 -> . NUMERO RESTA NUMERO
    (95) expresion_alge1 -> . NUMERO MULTI NUMERO
    (96) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (97) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (98) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (99) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (100) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (101) Sum -> . SUM ABRE_P NUMERO COMA NUMERO CIERRA_P
    (102) Sum -> . SUM ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (103) Sum -> . SUM ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (104) Sum -> . SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (105) Sum -> . SUM ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (106) Sum -> . SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (107) Sum -> . SUM ABRE_P NUMERO COMA Var CIERRA_P
    (108) Sum -> . SUM ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (109) Sum -> . SUM ABRE_P Var COMA NUMERO CIERRA_P
    (110) Sum -> . SUM ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (111) Sum -> . SUM ABRE_P Var COMA Var CIERRA_P
    (112) Sum -> . SUM ABRE_P expresion_alge1 COMA Var CIERRA_P
    (113) Sum -> . SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (114) Sum -> . SUM ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (115) Sum -> . SUM ABRE_P Var COMA expresion_alge1 CIERRA_P
    (116) Substr -> . SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P
    (117) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (118) Substr -> . SUBSTR ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (119) Substr -> . SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (120) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (121) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (122) Substr -> . SUBSTR ABRE_P NUMERO COMA Var CIERRA_P
    (123) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (124) Substr -> . SUBSTR ABRE_P Var COMA NUMERO CIERRA_P
    (125) Substr -> . SUBSTR ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (126) Substr -> . SUBSTR ABRE_P Var COMA Var CIERRA_P
    (127) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P
    (128) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (129) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (130) Substr -> . SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P
    (131) Mult -> . MULTI ABRE_P NUMERO COMA NUMERO CIERRA_P
    (132) Mult -> . MULTI ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (133) Mult -> . MULTI ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (134) Mult -> . MULTI ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (135) Mult -> . MULTI ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (136) Mult -> . MULTI ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (137) Mult -> . MULTI ABRE_P NUMERO COMA Var CIERRA_P
    (138) Mult -> . MULTI ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (139) Mult -> . MULTI ABRE_P Var COMA NUMERO CIERRA_P
    (140) Mult -> . MULTI ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (141) Mult -> . MULTI ABRE_P Var COMA Var CIERRA_P
    (142) Mult -> . MULTI ABRE_P expresion_alge1 COMA Var CIERRA_P
    (143) Mult -> . MULTI ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (144) Mult -> . MULTI ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (145) Mult -> . MULTI ABRE_P Var COMA expresion_alge1 CIERRA_P
    (146) Div -> . DIV ABRE_P NUMERO COMA NUMERO CIERRA_P
    (147) Div -> . DIV ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (148) Div -> . DIV ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (149) Div -> . DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (150) Div -> . DIV ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (151) Div -> . DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (152) Div -> . DIV ABRE_P NUMERO COMA Var CIERRA_P
    (153) Div -> . DIV ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (154) Div -> . DIV ABRE_P Var COMA NUMERO CIERRA_P
    (155) Div -> . DIV ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (156) Div -> . DIV ABRE_P Var COMA Var CIERRA_P
    (157) Div -> . DIV ABRE_P expresion_alge1 COMA Var CIERRA_P
    (158) Div -> . DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (159) Div -> . DIV ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (160) Div -> . DIV ABRE_P Var COMA expresion_alge1 CIERRA_P
    (257) Random -> . RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA
    (300) Run -> . RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA
    (242) If -> . IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2
    (243) IfElse -> . IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2
    (245) Repeat -> . REPEAT NUMERO BRACKET1 ordenes BRACKET2
    (246) Until -> . UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2
    (244) While -> . WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2
    (309) PrintLine -> . PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA
    (234) And -> . AND ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (235) And -> . AND ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (236) And -> . AND ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (237) And -> . AND ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (238) Or -> . OR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (239) Or -> . OR ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (240) Or -> . OR ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (241) Or -> . OR ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (247) Add -> . ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA
    (248) Add -> . ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (249) Add -> . ADD ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (250) Add -> . ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (251) Add -> . ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (252) Add -> . ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (85) Put2 -> . PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (86) Put2 -> . PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (87) Put2 -> . PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (88) Put2 -> . PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (89) Put2 -> . PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA
    (84) Put -> . PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA

  ! shift/reduce conflict for PUNTOCOMA resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for ABRE_P resolved as shift
  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for SUBSTR resolved as shift
  ! shift/reduce conflict for MULTI resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for RANDOM resolved as shift
  ! shift/reduce conflict for RUN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for IFELSE resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for PRINTLINE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for PUT resolved as shift
    FIN             reduce using rule 310 (empty -> .)
    PUNTOCOMA       shift and go to state 62
    NUMERO          shift and go to state 64
    ABRE_P          shift and go to state 63
    SUM             shift and go to state 67
    SUBSTR          shift and go to state 68
    MULTI           shift and go to state 65
    DIV             shift and go to state 66
    RANDOM          shift and go to state 69
    RUN             shift and go to state 70
    IF              shift and go to state 71
    IFELSE          shift and go to state 72
    REPEAT          shift and go to state 73
    UNTIL           shift and go to state 74
    WHILE           shift and go to state 75
    PRINTLINE       shift and go to state 76
    AND             shift and go to state 77
    OR              shift and go to state 78
    ADD             shift and go to state 79
    PUT             shift and go to state 95

  ! PUNTOCOMA       [ reduce using rule 310 (empty -> .) ]
  ! NUMERO          [ reduce using rule 310 (empty -> .) ]
  ! ABRE_P          [ reduce using rule 310 (empty -> .) ]
  ! SUM             [ reduce using rule 310 (empty -> .) ]
  ! SUBSTR          [ reduce using rule 310 (empty -> .) ]
  ! MULTI           [ reduce using rule 310 (empty -> .) ]
  ! DIV             [ reduce using rule 310 (empty -> .) ]
  ! RANDOM          [ reduce using rule 310 (empty -> .) ]
  ! RUN             [ reduce using rule 310 (empty -> .) ]
  ! IF              [ reduce using rule 310 (empty -> .) ]
  ! IFELSE          [ reduce using rule 310 (empty -> .) ]
  ! REPEAT          [ reduce using rule 310 (empty -> .) ]
  ! UNTIL           [ reduce using rule 310 (empty -> .) ]
  ! WHILE           [ reduce using rule 310 (empty -> .) ]
  ! PRINTLINE       [ reduce using rule 310 (empty -> .) ]
  ! AND             [ reduce using rule 310 (empty -> .) ]
  ! OR              [ reduce using rule 310 (empty -> .) ]
  ! ADD             [ reduce using rule 310 (empty -> .) ]
  ! PUT             [ reduce using rule 310 (empty -> .) ]

    funcion                        shift and go to state 90
    expresion                      shift and go to state 91
    empty                          shift and go to state 92
    expresion_alge1                shift and go to state 45
    expresion_alge2                shift and go to state 46
    Sum                            shift and go to state 47
    Substr                         shift and go to state 48
    Mult                           shift and go to state 49
    Div                            shift and go to state 50
    Random                         shift and go to state 51
    Run                            shift and go to state 52
    If                             shift and go to state 53
    IfElse                         shift and go to state 54
    Repeat                         shift and go to state 55
    Until                          shift and go to state 56
    While                          shift and go to state 57
    PrintLine                      shift and go to state 58
    And                            shift and go to state 59
    Or                             shift and go to state 60
    Add                            shift and go to state 61
    Put2                           shift and go to state 93
    Put                            shift and go to state 94

state 91

    (39) expresion -> funcion expresion .

    FIN             reduce using rule 39 (expresion -> funcion expresion .)


state 92

    (46) expresion -> funcion empty .
    (53) expresion -> empty . empty
    (83) funcion -> empty . empty
    (310) empty -> .

  ! reduce/reduce conflict for FIN resolved using rule 46 (expresion -> funcion empty .)
    FIN             reduce using rule 46 (expresion -> funcion empty .)
    PUNTOCOMA       reduce using rule 310 (empty -> .)
    NUMERO          reduce using rule 310 (empty -> .)
    ABRE_P          reduce using rule 310 (empty -> .)
    SUM             reduce using rule 310 (empty -> .)
    SUBSTR          reduce using rule 310 (empty -> .)
    MULTI           reduce using rule 310 (empty -> .)
    DIV             reduce using rule 310 (empty -> .)
    RANDOM          reduce using rule 310 (empty -> .)
    RUN             reduce using rule 310 (empty -> .)
    IF              reduce using rule 310 (empty -> .)
    IFELSE          reduce using rule 310 (empty -> .)
    REPEAT          reduce using rule 310 (empty -> .)
    UNTIL           reduce using rule 310 (empty -> .)
    WHILE           reduce using rule 310 (empty -> .)
    PRINTLINE       reduce using rule 310 (empty -> .)
    AND             reduce using rule 310 (empty -> .)
    OR              reduce using rule 310 (empty -> .)
    ADD             reduce using rule 310 (empty -> .)
    PUT             reduce using rule 310 (empty -> .)

  ! FIN             [ reduce using rule 310 (empty -> .) ]

    empty                          shift and go to state 171

state 93

    (80) funcion -> Put2 . empty
    (310) empty -> .

    PUNTOCOMA       reduce using rule 310 (empty -> .)
    NUMERO          reduce using rule 310 (empty -> .)
    ABRE_P          reduce using rule 310 (empty -> .)
    SUM             reduce using rule 310 (empty -> .)
    SUBSTR          reduce using rule 310 (empty -> .)
    MULTI           reduce using rule 310 (empty -> .)
    DIV             reduce using rule 310 (empty -> .)
    RANDOM          reduce using rule 310 (empty -> .)
    RUN             reduce using rule 310 (empty -> .)
    IF              reduce using rule 310 (empty -> .)
    IFELSE          reduce using rule 310 (empty -> .)
    REPEAT          reduce using rule 310 (empty -> .)
    UNTIL           reduce using rule 310 (empty -> .)
    WHILE           reduce using rule 310 (empty -> .)
    PRINTLINE       reduce using rule 310 (empty -> .)
    AND             reduce using rule 310 (empty -> .)
    OR              reduce using rule 310 (empty -> .)
    ADD             reduce using rule 310 (empty -> .)
    PUT             reduce using rule 310 (empty -> .)
    FIN             reduce using rule 310 (empty -> .)
    CIERRA_P        reduce using rule 310 (empty -> .)
    BRACKET2        reduce using rule 310 (empty -> .)

    empty                          shift and go to state 98

state 94

    (81) funcion -> Put . empty
    (310) empty -> .

    PUNTOCOMA       reduce using rule 310 (empty -> .)
    NUMERO          reduce using rule 310 (empty -> .)
    ABRE_P          reduce using rule 310 (empty -> .)
    SUM             reduce using rule 310 (empty -> .)
    SUBSTR          reduce using rule 310 (empty -> .)
    MULTI           reduce using rule 310 (empty -> .)
    DIV             reduce using rule 310 (empty -> .)
    RANDOM          reduce using rule 310 (empty -> .)
    RUN             reduce using rule 310 (empty -> .)
    IF              reduce using rule 310 (empty -> .)
    IFELSE          reduce using rule 310 (empty -> .)
    REPEAT          reduce using rule 310 (empty -> .)
    UNTIL           reduce using rule 310 (empty -> .)
    WHILE           reduce using rule 310 (empty -> .)
    PRINTLINE       reduce using rule 310 (empty -> .)
    AND             reduce using rule 310 (empty -> .)
    OR              reduce using rule 310 (empty -> .)
    ADD             reduce using rule 310 (empty -> .)
    PUT             reduce using rule 310 (empty -> .)
    FIN             reduce using rule 310 (empty -> .)
    CIERRA_P        reduce using rule 310 (empty -> .)
    BRACKET2        reduce using rule 310 (empty -> .)

    empty                          shift and go to state 97

state 95

    (85) Put2 -> PUT . ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (86) Put2 -> PUT . ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (87) Put2 -> PUT . ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (88) Put2 -> PUT . ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (89) Put2 -> PUT . ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA
    (84) Put -> PUT . ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA

    ABRE_P          shift and go to state 172


state 96

    (35) variablexdd -> empty empty .
    (53) expresion -> empty empty .
    (83) funcion -> empty empty .

  ! reduce/reduce conflict for FIN resolved using rule 35 (variablexdd -> empty empty .)
  ! reduce/reduce conflict for FIN resolved using rule 35 (variablexdd -> empty empty .)
    FIN             reduce using rule 35 (variablexdd -> empty empty .)
    PUNTOCOMA       reduce using rule 83 (funcion -> empty empty .)
    NUMERO          reduce using rule 83 (funcion -> empty empty .)
    ABRE_P          reduce using rule 83 (funcion -> empty empty .)
    SUM             reduce using rule 83 (funcion -> empty empty .)
    SUBSTR          reduce using rule 83 (funcion -> empty empty .)
    MULTI           reduce using rule 83 (funcion -> empty empty .)
    DIV             reduce using rule 83 (funcion -> empty empty .)
    RANDOM          reduce using rule 83 (funcion -> empty empty .)
    RUN             reduce using rule 83 (funcion -> empty empty .)
    IF              reduce using rule 83 (funcion -> empty empty .)
    IFELSE          reduce using rule 83 (funcion -> empty empty .)
    REPEAT          reduce using rule 83 (funcion -> empty empty .)
    UNTIL           reduce using rule 83 (funcion -> empty empty .)
    WHILE           reduce using rule 83 (funcion -> empty empty .)
    PRINTLINE       reduce using rule 83 (funcion -> empty empty .)
    AND             reduce using rule 83 (funcion -> empty empty .)
    OR              reduce using rule 83 (funcion -> empty empty .)
    ADD             reduce using rule 83 (funcion -> empty empty .)
    PUT             reduce using rule 83 (funcion -> empty empty .)

  ! FIN             [ reduce using rule 53 (expresion -> empty empty .) ]
  ! FIN             [ reduce using rule 83 (funcion -> empty empty .) ]


state 97

    (81) funcion -> Put empty .

    PUNTOCOMA       reduce using rule 81 (funcion -> Put empty .)
    NUMERO          reduce using rule 81 (funcion -> Put empty .)
    ABRE_P          reduce using rule 81 (funcion -> Put empty .)
    SUM             reduce using rule 81 (funcion -> Put empty .)
    SUBSTR          reduce using rule 81 (funcion -> Put empty .)
    MULTI           reduce using rule 81 (funcion -> Put empty .)
    DIV             reduce using rule 81 (funcion -> Put empty .)
    RANDOM          reduce using rule 81 (funcion -> Put empty .)
    RUN             reduce using rule 81 (funcion -> Put empty .)
    IF              reduce using rule 81 (funcion -> Put empty .)
    IFELSE          reduce using rule 81 (funcion -> Put empty .)
    REPEAT          reduce using rule 81 (funcion -> Put empty .)
    UNTIL           reduce using rule 81 (funcion -> Put empty .)
    WHILE           reduce using rule 81 (funcion -> Put empty .)
    PRINTLINE       reduce using rule 81 (funcion -> Put empty .)
    AND             reduce using rule 81 (funcion -> Put empty .)
    OR              reduce using rule 81 (funcion -> Put empty .)
    ADD             reduce using rule 81 (funcion -> Put empty .)
    PUT             reduce using rule 81 (funcion -> Put empty .)
    FIN             reduce using rule 81 (funcion -> Put empty .)
    CIERRA_P        reduce using rule 81 (funcion -> Put empty .)
    BRACKET2        reduce using rule 81 (funcion -> Put empty .)


state 98

    (80) funcion -> Put2 empty .

    PUNTOCOMA       reduce using rule 80 (funcion -> Put2 empty .)
    NUMERO          reduce using rule 80 (funcion -> Put2 empty .)
    ABRE_P          reduce using rule 80 (funcion -> Put2 empty .)
    SUM             reduce using rule 80 (funcion -> Put2 empty .)
    SUBSTR          reduce using rule 80 (funcion -> Put2 empty .)
    MULTI           reduce using rule 80 (funcion -> Put2 empty .)
    DIV             reduce using rule 80 (funcion -> Put2 empty .)
    RANDOM          reduce using rule 80 (funcion -> Put2 empty .)
    RUN             reduce using rule 80 (funcion -> Put2 empty .)
    IF              reduce using rule 80 (funcion -> Put2 empty .)
    IFELSE          reduce using rule 80 (funcion -> Put2 empty .)
    REPEAT          reduce using rule 80 (funcion -> Put2 empty .)
    UNTIL           reduce using rule 80 (funcion -> Put2 empty .)
    WHILE           reduce using rule 80 (funcion -> Put2 empty .)
    PRINTLINE       reduce using rule 80 (funcion -> Put2 empty .)
    AND             reduce using rule 80 (funcion -> Put2 empty .)
    OR              reduce using rule 80 (funcion -> Put2 empty .)
    ADD             reduce using rule 80 (funcion -> Put2 empty .)
    PUT             reduce using rule 80 (funcion -> Put2 empty .)
    FIN             reduce using rule 80 (funcion -> Put2 empty .)
    CIERRA_P        reduce using rule 80 (funcion -> Put2 empty .)
    BRACKET2        reduce using rule 80 (funcion -> Put2 empty .)


state 99

    (33) variablexdd -> variable1 cuerpo3 .

    FIN             reduce using rule 33 (variablexdd -> variable1 cuerpo3 .)


state 100

    (34) variablexdd -> variable2 cuerpo3 .

    FIN             reduce using rule 34 (variablexdd -> variable2 cuerpo3 .)


state 101

    (40) expresion -> expresion_alge1 expresion .

    FIN             reduce using rule 40 (expresion -> expresion_alge1 expresion .)


state 102

    (47) expresion -> expresion_alge1 empty .
    (53) expresion -> empty . empty
    (83) funcion -> empty . empty
    (310) empty -> .

  ! reduce/reduce conflict for FIN resolved using rule 47 (expresion -> expresion_alge1 empty .)
    FIN             reduce using rule 47 (expresion -> expresion_alge1 empty .)
    PUNTOCOMA       reduce using rule 310 (empty -> .)
    NUMERO          reduce using rule 310 (empty -> .)
    ABRE_P          reduce using rule 310 (empty -> .)
    SUM             reduce using rule 310 (empty -> .)
    SUBSTR          reduce using rule 310 (empty -> .)
    MULTI           reduce using rule 310 (empty -> .)
    DIV             reduce using rule 310 (empty -> .)
    RANDOM          reduce using rule 310 (empty -> .)
    RUN             reduce using rule 310 (empty -> .)
    IF              reduce using rule 310 (empty -> .)
    IFELSE          reduce using rule 310 (empty -> .)
    REPEAT          reduce using rule 310 (empty -> .)
    UNTIL           reduce using rule 310 (empty -> .)
    WHILE           reduce using rule 310 (empty -> .)
    PRINTLINE       reduce using rule 310 (empty -> .)
    AND             reduce using rule 310 (empty -> .)
    OR              reduce using rule 310 (empty -> .)
    ADD             reduce using rule 310 (empty -> .)
    PUT             reduce using rule 310 (empty -> .)

  ! FIN             [ reduce using rule 310 (empty -> .) ]

    empty                          shift and go to state 171

state 103

    (41) expresion -> expresion_alge2 expresion .

    FIN             reduce using rule 41 (expresion -> expresion_alge2 expresion .)


state 104

    (48) expresion -> expresion_alge2 empty .
    (53) expresion -> empty . empty
    (83) funcion -> empty . empty
    (310) empty -> .

  ! reduce/reduce conflict for FIN resolved using rule 48 (expresion -> expresion_alge2 empty .)
    FIN             reduce using rule 48 (expresion -> expresion_alge2 empty .)
    PUNTOCOMA       reduce using rule 310 (empty -> .)
    NUMERO          reduce using rule 310 (empty -> .)
    ABRE_P          reduce using rule 310 (empty -> .)
    SUM             reduce using rule 310 (empty -> .)
    SUBSTR          reduce using rule 310 (empty -> .)
    MULTI           reduce using rule 310 (empty -> .)
    DIV             reduce using rule 310 (empty -> .)
    RANDOM          reduce using rule 310 (empty -> .)
    RUN             reduce using rule 310 (empty -> .)
    IF              reduce using rule 310 (empty -> .)
    IFELSE          reduce using rule 310 (empty -> .)
    REPEAT          reduce using rule 310 (empty -> .)
    UNTIL           reduce using rule 310 (empty -> .)
    WHILE           reduce using rule 310 (empty -> .)
    PRINTLINE       reduce using rule 310 (empty -> .)
    AND             reduce using rule 310 (empty -> .)
    OR              reduce using rule 310 (empty -> .)
    ADD             reduce using rule 310 (empty -> .)
    PUT             reduce using rule 310 (empty -> .)

  ! FIN             [ reduce using rule 310 (empty -> .) ]

    empty                          shift and go to state 171

state 105

    (42) expresion -> Sum expresion .

    FIN             reduce using rule 42 (expresion -> Sum expresion .)


state 106

    (49) expresion -> Sum empty .
    (53) expresion -> empty . empty
    (83) funcion -> empty . empty
    (310) empty -> .

  ! reduce/reduce conflict for FIN resolved using rule 49 (expresion -> Sum empty .)
    FIN             reduce using rule 49 (expresion -> Sum empty .)
    PUNTOCOMA       reduce using rule 310 (empty -> .)
    NUMERO          reduce using rule 310 (empty -> .)
    ABRE_P          reduce using rule 310 (empty -> .)
    SUM             reduce using rule 310 (empty -> .)
    SUBSTR          reduce using rule 310 (empty -> .)
    MULTI           reduce using rule 310 (empty -> .)
    DIV             reduce using rule 310 (empty -> .)
    RANDOM          reduce using rule 310 (empty -> .)
    RUN             reduce using rule 310 (empty -> .)
    IF              reduce using rule 310 (empty -> .)
    IFELSE          reduce using rule 310 (empty -> .)
    REPEAT          reduce using rule 310 (empty -> .)
    UNTIL           reduce using rule 310 (empty -> .)
    WHILE           reduce using rule 310 (empty -> .)
    PRINTLINE       reduce using rule 310 (empty -> .)
    AND             reduce using rule 310 (empty -> .)
    OR              reduce using rule 310 (empty -> .)
    ADD             reduce using rule 310 (empty -> .)
    PUT             reduce using rule 310 (empty -> .)

  ! FIN             [ reduce using rule 310 (empty -> .) ]

    empty                          shift and go to state 171

state 107

    (43) expresion -> Substr expresion .

    FIN             reduce using rule 43 (expresion -> Substr expresion .)


state 108

    (50) expresion -> Substr empty .
    (53) expresion -> empty . empty
    (83) funcion -> empty . empty
    (310) empty -> .

  ! reduce/reduce conflict for FIN resolved using rule 50 (expresion -> Substr empty .)
    FIN             reduce using rule 50 (expresion -> Substr empty .)
    PUNTOCOMA       reduce using rule 310 (empty -> .)
    NUMERO          reduce using rule 310 (empty -> .)
    ABRE_P          reduce using rule 310 (empty -> .)
    SUM             reduce using rule 310 (empty -> .)
    SUBSTR          reduce using rule 310 (empty -> .)
    MULTI           reduce using rule 310 (empty -> .)
    DIV             reduce using rule 310 (empty -> .)
    RANDOM          reduce using rule 310 (empty -> .)
    RUN             reduce using rule 310 (empty -> .)
    IF              reduce using rule 310 (empty -> .)
    IFELSE          reduce using rule 310 (empty -> .)
    REPEAT          reduce using rule 310 (empty -> .)
    UNTIL           reduce using rule 310 (empty -> .)
    WHILE           reduce using rule 310 (empty -> .)
    PRINTLINE       reduce using rule 310 (empty -> .)
    AND             reduce using rule 310 (empty -> .)
    OR              reduce using rule 310 (empty -> .)
    ADD             reduce using rule 310 (empty -> .)
    PUT             reduce using rule 310 (empty -> .)

  ! FIN             [ reduce using rule 310 (empty -> .) ]

    empty                          shift and go to state 171

state 109

    (44) expresion -> Mult expresion .

    FIN             reduce using rule 44 (expresion -> Mult expresion .)


state 110

    (51) expresion -> Mult empty .
    (53) expresion -> empty . empty
    (83) funcion -> empty . empty
    (310) empty -> .

  ! reduce/reduce conflict for FIN resolved using rule 51 (expresion -> Mult empty .)
    FIN             reduce using rule 51 (expresion -> Mult empty .)
    PUNTOCOMA       reduce using rule 310 (empty -> .)
    NUMERO          reduce using rule 310 (empty -> .)
    ABRE_P          reduce using rule 310 (empty -> .)
    SUM             reduce using rule 310 (empty -> .)
    SUBSTR          reduce using rule 310 (empty -> .)
    MULTI           reduce using rule 310 (empty -> .)
    DIV             reduce using rule 310 (empty -> .)
    RANDOM          reduce using rule 310 (empty -> .)
    RUN             reduce using rule 310 (empty -> .)
    IF              reduce using rule 310 (empty -> .)
    IFELSE          reduce using rule 310 (empty -> .)
    REPEAT          reduce using rule 310 (empty -> .)
    UNTIL           reduce using rule 310 (empty -> .)
    WHILE           reduce using rule 310 (empty -> .)
    PRINTLINE       reduce using rule 310 (empty -> .)
    AND             reduce using rule 310 (empty -> .)
    OR              reduce using rule 310 (empty -> .)
    ADD             reduce using rule 310 (empty -> .)
    PUT             reduce using rule 310 (empty -> .)

  ! FIN             [ reduce using rule 310 (empty -> .) ]

    empty                          shift and go to state 171

state 111

    (45) expresion -> Div expresion .

    FIN             reduce using rule 45 (expresion -> Div expresion .)


state 112

    (52) expresion -> Div empty .
    (53) expresion -> empty . empty
    (83) funcion -> empty . empty
    (310) empty -> .

  ! reduce/reduce conflict for FIN resolved using rule 52 (expresion -> Div empty .)
    FIN             reduce using rule 52 (expresion -> Div empty .)
    PUNTOCOMA       reduce using rule 310 (empty -> .)
    NUMERO          reduce using rule 310 (empty -> .)
    ABRE_P          reduce using rule 310 (empty -> .)
    SUM             reduce using rule 310 (empty -> .)
    SUBSTR          reduce using rule 310 (empty -> .)
    MULTI           reduce using rule 310 (empty -> .)
    DIV             reduce using rule 310 (empty -> .)
    RANDOM          reduce using rule 310 (empty -> .)
    RUN             reduce using rule 310 (empty -> .)
    IF              reduce using rule 310 (empty -> .)
    IFELSE          reduce using rule 310 (empty -> .)
    REPEAT          reduce using rule 310 (empty -> .)
    UNTIL           reduce using rule 310 (empty -> .)
    WHILE           reduce using rule 310 (empty -> .)
    PRINTLINE       reduce using rule 310 (empty -> .)
    AND             reduce using rule 310 (empty -> .)
    OR              reduce using rule 310 (empty -> .)
    ADD             reduce using rule 310 (empty -> .)
    PUT             reduce using rule 310 (empty -> .)

  ! FIN             [ reduce using rule 310 (empty -> .) ]

    empty                          shift and go to state 171

state 113

    (69) funcion -> Random empty .

    PUNTOCOMA       reduce using rule 69 (funcion -> Random empty .)
    NUMERO          reduce using rule 69 (funcion -> Random empty .)
    ABRE_P          reduce using rule 69 (funcion -> Random empty .)
    SUM             reduce using rule 69 (funcion -> Random empty .)
    SUBSTR          reduce using rule 69 (funcion -> Random empty .)
    MULTI           reduce using rule 69 (funcion -> Random empty .)
    DIV             reduce using rule 69 (funcion -> Random empty .)
    RANDOM          reduce using rule 69 (funcion -> Random empty .)
    RUN             reduce using rule 69 (funcion -> Random empty .)
    IF              reduce using rule 69 (funcion -> Random empty .)
    IFELSE          reduce using rule 69 (funcion -> Random empty .)
    REPEAT          reduce using rule 69 (funcion -> Random empty .)
    UNTIL           reduce using rule 69 (funcion -> Random empty .)
    WHILE           reduce using rule 69 (funcion -> Random empty .)
    PRINTLINE       reduce using rule 69 (funcion -> Random empty .)
    AND             reduce using rule 69 (funcion -> Random empty .)
    OR              reduce using rule 69 (funcion -> Random empty .)
    ADD             reduce using rule 69 (funcion -> Random empty .)
    PUT             reduce using rule 69 (funcion -> Random empty .)
    FIN             reduce using rule 69 (funcion -> Random empty .)
    CIERRA_P        reduce using rule 69 (funcion -> Random empty .)
    BRACKET2        reduce using rule 69 (funcion -> Random empty .)


state 114

    (70) funcion -> Run empty .

    PUNTOCOMA       reduce using rule 70 (funcion -> Run empty .)
    NUMERO          reduce using rule 70 (funcion -> Run empty .)
    ABRE_P          reduce using rule 70 (funcion -> Run empty .)
    SUM             reduce using rule 70 (funcion -> Run empty .)
    SUBSTR          reduce using rule 70 (funcion -> Run empty .)
    MULTI           reduce using rule 70 (funcion -> Run empty .)
    DIV             reduce using rule 70 (funcion -> Run empty .)
    RANDOM          reduce using rule 70 (funcion -> Run empty .)
    RUN             reduce using rule 70 (funcion -> Run empty .)
    IF              reduce using rule 70 (funcion -> Run empty .)
    IFELSE          reduce using rule 70 (funcion -> Run empty .)
    REPEAT          reduce using rule 70 (funcion -> Run empty .)
    UNTIL           reduce using rule 70 (funcion -> Run empty .)
    WHILE           reduce using rule 70 (funcion -> Run empty .)
    PRINTLINE       reduce using rule 70 (funcion -> Run empty .)
    AND             reduce using rule 70 (funcion -> Run empty .)
    OR              reduce using rule 70 (funcion -> Run empty .)
    ADD             reduce using rule 70 (funcion -> Run empty .)
    PUT             reduce using rule 70 (funcion -> Run empty .)
    FIN             reduce using rule 70 (funcion -> Run empty .)
    CIERRA_P        reduce using rule 70 (funcion -> Run empty .)
    BRACKET2        reduce using rule 70 (funcion -> Run empty .)


state 115

    (71) funcion -> If empty .

    PUNTOCOMA       reduce using rule 71 (funcion -> If empty .)
    NUMERO          reduce using rule 71 (funcion -> If empty .)
    ABRE_P          reduce using rule 71 (funcion -> If empty .)
    SUM             reduce using rule 71 (funcion -> If empty .)
    SUBSTR          reduce using rule 71 (funcion -> If empty .)
    MULTI           reduce using rule 71 (funcion -> If empty .)
    DIV             reduce using rule 71 (funcion -> If empty .)
    RANDOM          reduce using rule 71 (funcion -> If empty .)
    RUN             reduce using rule 71 (funcion -> If empty .)
    IF              reduce using rule 71 (funcion -> If empty .)
    IFELSE          reduce using rule 71 (funcion -> If empty .)
    REPEAT          reduce using rule 71 (funcion -> If empty .)
    UNTIL           reduce using rule 71 (funcion -> If empty .)
    WHILE           reduce using rule 71 (funcion -> If empty .)
    PRINTLINE       reduce using rule 71 (funcion -> If empty .)
    AND             reduce using rule 71 (funcion -> If empty .)
    OR              reduce using rule 71 (funcion -> If empty .)
    ADD             reduce using rule 71 (funcion -> If empty .)
    PUT             reduce using rule 71 (funcion -> If empty .)
    FIN             reduce using rule 71 (funcion -> If empty .)
    CIERRA_P        reduce using rule 71 (funcion -> If empty .)
    BRACKET2        reduce using rule 71 (funcion -> If empty .)


state 116

    (72) funcion -> IfElse empty .

    PUNTOCOMA       reduce using rule 72 (funcion -> IfElse empty .)
    NUMERO          reduce using rule 72 (funcion -> IfElse empty .)
    ABRE_P          reduce using rule 72 (funcion -> IfElse empty .)
    SUM             reduce using rule 72 (funcion -> IfElse empty .)
    SUBSTR          reduce using rule 72 (funcion -> IfElse empty .)
    MULTI           reduce using rule 72 (funcion -> IfElse empty .)
    DIV             reduce using rule 72 (funcion -> IfElse empty .)
    RANDOM          reduce using rule 72 (funcion -> IfElse empty .)
    RUN             reduce using rule 72 (funcion -> IfElse empty .)
    IF              reduce using rule 72 (funcion -> IfElse empty .)
    IFELSE          reduce using rule 72 (funcion -> IfElse empty .)
    REPEAT          reduce using rule 72 (funcion -> IfElse empty .)
    UNTIL           reduce using rule 72 (funcion -> IfElse empty .)
    WHILE           reduce using rule 72 (funcion -> IfElse empty .)
    PRINTLINE       reduce using rule 72 (funcion -> IfElse empty .)
    AND             reduce using rule 72 (funcion -> IfElse empty .)
    OR              reduce using rule 72 (funcion -> IfElse empty .)
    ADD             reduce using rule 72 (funcion -> IfElse empty .)
    PUT             reduce using rule 72 (funcion -> IfElse empty .)
    FIN             reduce using rule 72 (funcion -> IfElse empty .)
    CIERRA_P        reduce using rule 72 (funcion -> IfElse empty .)
    BRACKET2        reduce using rule 72 (funcion -> IfElse empty .)


state 117

    (73) funcion -> Repeat empty .

    PUNTOCOMA       reduce using rule 73 (funcion -> Repeat empty .)
    NUMERO          reduce using rule 73 (funcion -> Repeat empty .)
    ABRE_P          reduce using rule 73 (funcion -> Repeat empty .)
    SUM             reduce using rule 73 (funcion -> Repeat empty .)
    SUBSTR          reduce using rule 73 (funcion -> Repeat empty .)
    MULTI           reduce using rule 73 (funcion -> Repeat empty .)
    DIV             reduce using rule 73 (funcion -> Repeat empty .)
    RANDOM          reduce using rule 73 (funcion -> Repeat empty .)
    RUN             reduce using rule 73 (funcion -> Repeat empty .)
    IF              reduce using rule 73 (funcion -> Repeat empty .)
    IFELSE          reduce using rule 73 (funcion -> Repeat empty .)
    REPEAT          reduce using rule 73 (funcion -> Repeat empty .)
    UNTIL           reduce using rule 73 (funcion -> Repeat empty .)
    WHILE           reduce using rule 73 (funcion -> Repeat empty .)
    PRINTLINE       reduce using rule 73 (funcion -> Repeat empty .)
    AND             reduce using rule 73 (funcion -> Repeat empty .)
    OR              reduce using rule 73 (funcion -> Repeat empty .)
    ADD             reduce using rule 73 (funcion -> Repeat empty .)
    PUT             reduce using rule 73 (funcion -> Repeat empty .)
    FIN             reduce using rule 73 (funcion -> Repeat empty .)
    CIERRA_P        reduce using rule 73 (funcion -> Repeat empty .)
    BRACKET2        reduce using rule 73 (funcion -> Repeat empty .)


state 118

    (74) funcion -> Until empty .

    PUNTOCOMA       reduce using rule 74 (funcion -> Until empty .)
    NUMERO          reduce using rule 74 (funcion -> Until empty .)
    ABRE_P          reduce using rule 74 (funcion -> Until empty .)
    SUM             reduce using rule 74 (funcion -> Until empty .)
    SUBSTR          reduce using rule 74 (funcion -> Until empty .)
    MULTI           reduce using rule 74 (funcion -> Until empty .)
    DIV             reduce using rule 74 (funcion -> Until empty .)
    RANDOM          reduce using rule 74 (funcion -> Until empty .)
    RUN             reduce using rule 74 (funcion -> Until empty .)
    IF              reduce using rule 74 (funcion -> Until empty .)
    IFELSE          reduce using rule 74 (funcion -> Until empty .)
    REPEAT          reduce using rule 74 (funcion -> Until empty .)
    UNTIL           reduce using rule 74 (funcion -> Until empty .)
    WHILE           reduce using rule 74 (funcion -> Until empty .)
    PRINTLINE       reduce using rule 74 (funcion -> Until empty .)
    AND             reduce using rule 74 (funcion -> Until empty .)
    OR              reduce using rule 74 (funcion -> Until empty .)
    ADD             reduce using rule 74 (funcion -> Until empty .)
    PUT             reduce using rule 74 (funcion -> Until empty .)
    FIN             reduce using rule 74 (funcion -> Until empty .)
    CIERRA_P        reduce using rule 74 (funcion -> Until empty .)
    BRACKET2        reduce using rule 74 (funcion -> Until empty .)


state 119

    (75) funcion -> While empty .

    PUNTOCOMA       reduce using rule 75 (funcion -> While empty .)
    NUMERO          reduce using rule 75 (funcion -> While empty .)
    ABRE_P          reduce using rule 75 (funcion -> While empty .)
    SUM             reduce using rule 75 (funcion -> While empty .)
    SUBSTR          reduce using rule 75 (funcion -> While empty .)
    MULTI           reduce using rule 75 (funcion -> While empty .)
    DIV             reduce using rule 75 (funcion -> While empty .)
    RANDOM          reduce using rule 75 (funcion -> While empty .)
    RUN             reduce using rule 75 (funcion -> While empty .)
    IF              reduce using rule 75 (funcion -> While empty .)
    IFELSE          reduce using rule 75 (funcion -> While empty .)
    REPEAT          reduce using rule 75 (funcion -> While empty .)
    UNTIL           reduce using rule 75 (funcion -> While empty .)
    WHILE           reduce using rule 75 (funcion -> While empty .)
    PRINTLINE       reduce using rule 75 (funcion -> While empty .)
    AND             reduce using rule 75 (funcion -> While empty .)
    OR              reduce using rule 75 (funcion -> While empty .)
    ADD             reduce using rule 75 (funcion -> While empty .)
    PUT             reduce using rule 75 (funcion -> While empty .)
    FIN             reduce using rule 75 (funcion -> While empty .)
    CIERRA_P        reduce using rule 75 (funcion -> While empty .)
    BRACKET2        reduce using rule 75 (funcion -> While empty .)


state 120

    (76) funcion -> PrintLine empty .

    PUNTOCOMA       reduce using rule 76 (funcion -> PrintLine empty .)
    NUMERO          reduce using rule 76 (funcion -> PrintLine empty .)
    ABRE_P          reduce using rule 76 (funcion -> PrintLine empty .)
    SUM             reduce using rule 76 (funcion -> PrintLine empty .)
    SUBSTR          reduce using rule 76 (funcion -> PrintLine empty .)
    MULTI           reduce using rule 76 (funcion -> PrintLine empty .)
    DIV             reduce using rule 76 (funcion -> PrintLine empty .)
    RANDOM          reduce using rule 76 (funcion -> PrintLine empty .)
    RUN             reduce using rule 76 (funcion -> PrintLine empty .)
    IF              reduce using rule 76 (funcion -> PrintLine empty .)
    IFELSE          reduce using rule 76 (funcion -> PrintLine empty .)
    REPEAT          reduce using rule 76 (funcion -> PrintLine empty .)
    UNTIL           reduce using rule 76 (funcion -> PrintLine empty .)
    WHILE           reduce using rule 76 (funcion -> PrintLine empty .)
    PRINTLINE       reduce using rule 76 (funcion -> PrintLine empty .)
    AND             reduce using rule 76 (funcion -> PrintLine empty .)
    OR              reduce using rule 76 (funcion -> PrintLine empty .)
    ADD             reduce using rule 76 (funcion -> PrintLine empty .)
    PUT             reduce using rule 76 (funcion -> PrintLine empty .)
    FIN             reduce using rule 76 (funcion -> PrintLine empty .)
    CIERRA_P        reduce using rule 76 (funcion -> PrintLine empty .)
    BRACKET2        reduce using rule 76 (funcion -> PrintLine empty .)


state 121

    (77) funcion -> And empty .

    PUNTOCOMA       reduce using rule 77 (funcion -> And empty .)
    NUMERO          reduce using rule 77 (funcion -> And empty .)
    ABRE_P          reduce using rule 77 (funcion -> And empty .)
    SUM             reduce using rule 77 (funcion -> And empty .)
    SUBSTR          reduce using rule 77 (funcion -> And empty .)
    MULTI           reduce using rule 77 (funcion -> And empty .)
    DIV             reduce using rule 77 (funcion -> And empty .)
    RANDOM          reduce using rule 77 (funcion -> And empty .)
    RUN             reduce using rule 77 (funcion -> And empty .)
    IF              reduce using rule 77 (funcion -> And empty .)
    IFELSE          reduce using rule 77 (funcion -> And empty .)
    REPEAT          reduce using rule 77 (funcion -> And empty .)
    UNTIL           reduce using rule 77 (funcion -> And empty .)
    WHILE           reduce using rule 77 (funcion -> And empty .)
    PRINTLINE       reduce using rule 77 (funcion -> And empty .)
    AND             reduce using rule 77 (funcion -> And empty .)
    OR              reduce using rule 77 (funcion -> And empty .)
    ADD             reduce using rule 77 (funcion -> And empty .)
    PUT             reduce using rule 77 (funcion -> And empty .)
    FIN             reduce using rule 77 (funcion -> And empty .)
    CIERRA_P        reduce using rule 77 (funcion -> And empty .)
    BRACKET2        reduce using rule 77 (funcion -> And empty .)


state 122

    (78) funcion -> Or empty .

    PUNTOCOMA       reduce using rule 78 (funcion -> Or empty .)
    NUMERO          reduce using rule 78 (funcion -> Or empty .)
    ABRE_P          reduce using rule 78 (funcion -> Or empty .)
    SUM             reduce using rule 78 (funcion -> Or empty .)
    SUBSTR          reduce using rule 78 (funcion -> Or empty .)
    MULTI           reduce using rule 78 (funcion -> Or empty .)
    DIV             reduce using rule 78 (funcion -> Or empty .)
    RANDOM          reduce using rule 78 (funcion -> Or empty .)
    RUN             reduce using rule 78 (funcion -> Or empty .)
    IF              reduce using rule 78 (funcion -> Or empty .)
    IFELSE          reduce using rule 78 (funcion -> Or empty .)
    REPEAT          reduce using rule 78 (funcion -> Or empty .)
    UNTIL           reduce using rule 78 (funcion -> Or empty .)
    WHILE           reduce using rule 78 (funcion -> Or empty .)
    PRINTLINE       reduce using rule 78 (funcion -> Or empty .)
    AND             reduce using rule 78 (funcion -> Or empty .)
    OR              reduce using rule 78 (funcion -> Or empty .)
    ADD             reduce using rule 78 (funcion -> Or empty .)
    PUT             reduce using rule 78 (funcion -> Or empty .)
    FIN             reduce using rule 78 (funcion -> Or empty .)
    CIERRA_P        reduce using rule 78 (funcion -> Or empty .)
    BRACKET2        reduce using rule 78 (funcion -> Or empty .)


state 123

    (79) funcion -> Add empty .

    PUNTOCOMA       reduce using rule 79 (funcion -> Add empty .)
    NUMERO          reduce using rule 79 (funcion -> Add empty .)
    ABRE_P          reduce using rule 79 (funcion -> Add empty .)
    SUM             reduce using rule 79 (funcion -> Add empty .)
    SUBSTR          reduce using rule 79 (funcion -> Add empty .)
    MULTI           reduce using rule 79 (funcion -> Add empty .)
    DIV             reduce using rule 79 (funcion -> Add empty .)
    RANDOM          reduce using rule 79 (funcion -> Add empty .)
    RUN             reduce using rule 79 (funcion -> Add empty .)
    IF              reduce using rule 79 (funcion -> Add empty .)
    IFELSE          reduce using rule 79 (funcion -> Add empty .)
    REPEAT          reduce using rule 79 (funcion -> Add empty .)
    UNTIL           reduce using rule 79 (funcion -> Add empty .)
    WHILE           reduce using rule 79 (funcion -> Add empty .)
    PRINTLINE       reduce using rule 79 (funcion -> Add empty .)
    AND             reduce using rule 79 (funcion -> Add empty .)
    OR              reduce using rule 79 (funcion -> Add empty .)
    ADD             reduce using rule 79 (funcion -> Add empty .)
    PUT             reduce using rule 79 (funcion -> Add empty .)
    FIN             reduce using rule 79 (funcion -> Add empty .)
    CIERRA_P        reduce using rule 79 (funcion -> Add empty .)
    BRACKET2        reduce using rule 79 (funcion -> Add empty .)


state 124

    (82) funcion -> PUNTOCOMA funcion .

    PUNTOCOMA       reduce using rule 82 (funcion -> PUNTOCOMA funcion .)
    NUMERO          reduce using rule 82 (funcion -> PUNTOCOMA funcion .)
    ABRE_P          reduce using rule 82 (funcion -> PUNTOCOMA funcion .)
    SUM             reduce using rule 82 (funcion -> PUNTOCOMA funcion .)
    SUBSTR          reduce using rule 82 (funcion -> PUNTOCOMA funcion .)
    MULTI           reduce using rule 82 (funcion -> PUNTOCOMA funcion .)
    DIV             reduce using rule 82 (funcion -> PUNTOCOMA funcion .)
    RANDOM          reduce using rule 82 (funcion -> PUNTOCOMA funcion .)
    RUN             reduce using rule 82 (funcion -> PUNTOCOMA funcion .)
    IF              reduce using rule 82 (funcion -> PUNTOCOMA funcion .)
    IFELSE          reduce using rule 82 (funcion -> PUNTOCOMA funcion .)
    REPEAT          reduce using rule 82 (funcion -> PUNTOCOMA funcion .)
    UNTIL           reduce using rule 82 (funcion -> PUNTOCOMA funcion .)
    WHILE           reduce using rule 82 (funcion -> PUNTOCOMA funcion .)
    PRINTLINE       reduce using rule 82 (funcion -> PUNTOCOMA funcion .)
    AND             reduce using rule 82 (funcion -> PUNTOCOMA funcion .)
    OR              reduce using rule 82 (funcion -> PUNTOCOMA funcion .)
    ADD             reduce using rule 82 (funcion -> PUNTOCOMA funcion .)
    PUT             reduce using rule 82 (funcion -> PUNTOCOMA funcion .)
    FIN             reduce using rule 82 (funcion -> PUNTOCOMA funcion .)
    CIERRA_P        reduce using rule 82 (funcion -> PUNTOCOMA funcion .)
    BRACKET2        reduce using rule 82 (funcion -> PUNTOCOMA funcion .)


state 125

    (83) funcion -> empty . empty
    (310) empty -> .

    PUNTOCOMA       reduce using rule 310 (empty -> .)
    NUMERO          reduce using rule 310 (empty -> .)
    ABRE_P          reduce using rule 310 (empty -> .)
    SUM             reduce using rule 310 (empty -> .)
    SUBSTR          reduce using rule 310 (empty -> .)
    MULTI           reduce using rule 310 (empty -> .)
    DIV             reduce using rule 310 (empty -> .)
    RANDOM          reduce using rule 310 (empty -> .)
    RUN             reduce using rule 310 (empty -> .)
    IF              reduce using rule 310 (empty -> .)
    IFELSE          reduce using rule 310 (empty -> .)
    REPEAT          reduce using rule 310 (empty -> .)
    UNTIL           reduce using rule 310 (empty -> .)
    WHILE           reduce using rule 310 (empty -> .)
    PRINTLINE       reduce using rule 310 (empty -> .)
    AND             reduce using rule 310 (empty -> .)
    OR              reduce using rule 310 (empty -> .)
    ADD             reduce using rule 310 (empty -> .)
    PUT             reduce using rule 310 (empty -> .)
    FIN             reduce using rule 310 (empty -> .)
    CIERRA_P        reduce using rule 310 (empty -> .)
    BRACKET2        reduce using rule 310 (empty -> .)

    empty                          shift and go to state 173

state 126

    (97) expresion_alge2 -> ABRE_P expresion_alge1 . CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (98) expresion_alge2 -> ABRE_P expresion_alge1 . CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (99) expresion_alge2 -> ABRE_P expresion_alge1 . CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (100) expresion_alge2 -> ABRE_P expresion_alge1 . CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P

    CIERRA_P        shift and go to state 174


state 127

    (93) expresion_alge1 -> NUMERO SUMA . NUMERO

    NUMERO          shift and go to state 175


state 128

    (94) expresion_alge1 -> NUMERO RESTA . NUMERO

    NUMERO          shift and go to state 176


state 129

    (95) expresion_alge1 -> NUMERO MULTI . NUMERO

    NUMERO          shift and go to state 177


state 130

    (96) expresion_alge1 -> NUMERO DIVISION . NUMERO

    NUMERO          shift and go to state 178


state 131

    (131) Mult -> MULTI ABRE_P . NUMERO COMA NUMERO CIERRA_P
    (132) Mult -> MULTI ABRE_P . RESTA NUMERO COMA NUMERO CIERRA_P
    (133) Mult -> MULTI ABRE_P . NUMERO COMA RESTA NUMERO CIERRA_P
    (134) Mult -> MULTI ABRE_P . NUMERO COMA expresion_alge1 CIERRA_P
    (135) Mult -> MULTI ABRE_P . RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (136) Mult -> MULTI ABRE_P . expresion_alge1 COMA expresion_alge1 CIERRA_P
    (137) Mult -> MULTI ABRE_P . NUMERO COMA Var CIERRA_P
    (138) Mult -> MULTI ABRE_P . RESTA NUMERO COMA Var CIERRA_P
    (139) Mult -> MULTI ABRE_P . Var COMA NUMERO CIERRA_P
    (140) Mult -> MULTI ABRE_P . Var COMA RESTA NUMERO CIERRA_P
    (141) Mult -> MULTI ABRE_P . Var COMA Var CIERRA_P
    (142) Mult -> MULTI ABRE_P . expresion_alge1 COMA Var CIERRA_P
    (143) Mult -> MULTI ABRE_P . expresion_alge1 COMA NUMERO CIERRA_P
    (144) Mult -> MULTI ABRE_P . expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (145) Mult -> MULTI ABRE_P . Var COMA expresion_alge1 CIERRA_P
    (93) expresion_alge1 -> . NUMERO SUMA NUMERO
    (94) expresion_alge1 -> . NUMERO RESTA NUMERO
    (95) expresion_alge1 -> . NUMERO MULTI NUMERO
    (96) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (161) Var -> . VAR

    NUMERO          shift and go to state 179
    RESTA           shift and go to state 180
    VAR             shift and go to state 34

    expresion_alge1                shift and go to state 181
    Var                            shift and go to state 182

state 132

    (146) Div -> DIV ABRE_P . NUMERO COMA NUMERO CIERRA_P
    (147) Div -> DIV ABRE_P . RESTA NUMERO COMA NUMERO CIERRA_P
    (148) Div -> DIV ABRE_P . NUMERO COMA RESTA NUMERO CIERRA_P
    (149) Div -> DIV ABRE_P . NUMERO COMA expresion_alge1 CIERRA_P
    (150) Div -> DIV ABRE_P . RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (151) Div -> DIV ABRE_P . expresion_alge1 COMA expresion_alge1 CIERRA_P
    (152) Div -> DIV ABRE_P . NUMERO COMA Var CIERRA_P
    (153) Div -> DIV ABRE_P . RESTA NUMERO COMA Var CIERRA_P
    (154) Div -> DIV ABRE_P . Var COMA NUMERO CIERRA_P
    (155) Div -> DIV ABRE_P . Var COMA RESTA NUMERO CIERRA_P
    (156) Div -> DIV ABRE_P . Var COMA Var CIERRA_P
    (157) Div -> DIV ABRE_P . expresion_alge1 COMA Var CIERRA_P
    (158) Div -> DIV ABRE_P . expresion_alge1 COMA NUMERO CIERRA_P
    (159) Div -> DIV ABRE_P . expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (160) Div -> DIV ABRE_P . Var COMA expresion_alge1 CIERRA_P
    (93) expresion_alge1 -> . NUMERO SUMA NUMERO
    (94) expresion_alge1 -> . NUMERO RESTA NUMERO
    (95) expresion_alge1 -> . NUMERO MULTI NUMERO
    (96) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (161) Var -> . VAR

    NUMERO          shift and go to state 183
    RESTA           shift and go to state 184
    VAR             shift and go to state 34

    expresion_alge1                shift and go to state 185
    Var                            shift and go to state 186

state 133

    (101) Sum -> SUM ABRE_P . NUMERO COMA NUMERO CIERRA_P
    (102) Sum -> SUM ABRE_P . RESTA NUMERO COMA NUMERO CIERRA_P
    (103) Sum -> SUM ABRE_P . NUMERO COMA RESTA NUMERO CIERRA_P
    (104) Sum -> SUM ABRE_P . NUMERO COMA expresion_alge1 CIERRA_P
    (105) Sum -> SUM ABRE_P . RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (106) Sum -> SUM ABRE_P . expresion_alge1 COMA expresion_alge1 CIERRA_P
    (107) Sum -> SUM ABRE_P . NUMERO COMA Var CIERRA_P
    (108) Sum -> SUM ABRE_P . RESTA NUMERO COMA Var CIERRA_P
    (109) Sum -> SUM ABRE_P . Var COMA NUMERO CIERRA_P
    (110) Sum -> SUM ABRE_P . Var COMA RESTA NUMERO CIERRA_P
    (111) Sum -> SUM ABRE_P . Var COMA Var CIERRA_P
    (112) Sum -> SUM ABRE_P . expresion_alge1 COMA Var CIERRA_P
    (113) Sum -> SUM ABRE_P . expresion_alge1 COMA NUMERO CIERRA_P
    (114) Sum -> SUM ABRE_P . expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (115) Sum -> SUM ABRE_P . Var COMA expresion_alge1 CIERRA_P
    (93) expresion_alge1 -> . NUMERO SUMA NUMERO
    (94) expresion_alge1 -> . NUMERO RESTA NUMERO
    (95) expresion_alge1 -> . NUMERO MULTI NUMERO
    (96) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (161) Var -> . VAR

    NUMERO          shift and go to state 187
    RESTA           shift and go to state 188
    VAR             shift and go to state 34

    expresion_alge1                shift and go to state 189
    Var                            shift and go to state 190

state 134

    (116) Substr -> SUBSTR ABRE_P . NUMERO COMA NUMERO CIERRA_P
    (117) Substr -> SUBSTR ABRE_P . RESTA NUMERO COMA NUMERO CIERRA_P
    (118) Substr -> SUBSTR ABRE_P . NUMERO COMA RESTA NUMERO CIERRA_P
    (119) Substr -> SUBSTR ABRE_P . NUMERO COMA expresion_alge1 CIERRA_P
    (120) Substr -> SUBSTR ABRE_P . RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (121) Substr -> SUBSTR ABRE_P . expresion_alge1 COMA expresion_alge1 CIERRA_P
    (122) Substr -> SUBSTR ABRE_P . NUMERO COMA Var CIERRA_P
    (123) Substr -> SUBSTR ABRE_P . RESTA NUMERO COMA Var CIERRA_P
    (124) Substr -> SUBSTR ABRE_P . Var COMA NUMERO CIERRA_P
    (125) Substr -> SUBSTR ABRE_P . Var COMA RESTA NUMERO CIERRA_P
    (126) Substr -> SUBSTR ABRE_P . Var COMA Var CIERRA_P
    (127) Substr -> SUBSTR ABRE_P . expresion_alge1 COMA Var CIERRA_P
    (128) Substr -> SUBSTR ABRE_P . expresion_alge1 COMA NUMERO CIERRA_P
    (129) Substr -> SUBSTR ABRE_P . expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (130) Substr -> SUBSTR ABRE_P . Var COMA expresion_alge1 CIERRA_P
    (93) expresion_alge1 -> . NUMERO SUMA NUMERO
    (94) expresion_alge1 -> . NUMERO RESTA NUMERO
    (95) expresion_alge1 -> . NUMERO MULTI NUMERO
    (96) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (161) Var -> . VAR

    NUMERO          shift and go to state 191
    RESTA           shift and go to state 192
    VAR             shift and go to state 34

    expresion_alge1                shift and go to state 193
    Var                            shift and go to state 194

state 135

    (257) Random -> RANDOM ABRE_P . NUMERO CIERRA_P PUNTOCOMA

    NUMERO          shift and go to state 195


state 136

    (300) Run -> RUN BRACKET1 . ordenes BRACKET2 PUNTOCOMA
    (54) ordenes -> . Beginning empty
    (55) ordenes -> . ContinueUp empty
    (56) ordenes -> . ContinueDown empty
    (57) ordenes -> . ContinueRight empty
    (58) ordenes -> . ContinueLeft empty
    (59) ordenes -> . Up empty
    (60) ordenes -> . Down empty
    (61) ordenes -> . Speed empty
    (62) ordenes -> . Diag empty
    (63) ordenes -> . Pos empty
    (64) ordenes -> . PosX empty
    (65) ordenes -> . PosY empty
    (66) ordenes -> . UseColor empty
    (67) ordenes -> . PUNTOCOMA ordenes
    (68) ordenes -> . empty empty
    (256) Beginning -> . BEGINNING PUNTOCOMA
    (258) ContinueUp -> . CONTINUEUP NUMERO PUNTOCOMA
    (259) ContinueUp -> . CONTINUEUP expresion_alge1 PUNTOCOMA
    (260) ContinueUp -> . CONTINUEUP expresion_alge2 PUNTOCOMA
    (261) ContinueUp -> . CONTINUEUP Var PUNTOCOMA
    (262) ContinueDown -> . CONTINUEDOWN NUMERO PUNTOCOMA
    (263) ContinueDown -> . CONTINUEDOWN expresion_alge1 PUNTOCOMA
    (264) ContinueDown -> . CONTINUEDOWN expresion_alge2 PUNTOCOMA
    (265) ContinueDown -> . CONTINUEDOWN Var PUNTOCOMA
    (266) ContinueRight -> . CONTINUERIGHT NUMERO PUNTOCOMA
    (267) ContinueRight -> . CONTINUERIGHT expresion_alge1 PUNTOCOMA
    (268) ContinueRight -> . CONTINUERIGHT expresion_alge2 PUNTOCOMA
    (269) ContinueRight -> . CONTINUERIGHT Var PUNTOCOMA
    (270) ContinueLeft -> . CONTINUELEFT NUMERO PUNTOCOMA
    (271) ContinueLeft -> . CONTINUELEFT expresion_alge1 PUNTOCOMA
    (272) ContinueLeft -> . CONTINUELEFT expresion_alge2 PUNTOCOMA
    (273) ContinueLeft -> . CONTINUELEFT Var PUNTOCOMA
    (274) Up -> . UP PUNTOCOMA
    (275) Down -> . DOWN PUNTOCOMA
    (276) Speed -> . SPEED NUMERO PUNTOCOMA
    (277) Diag -> . POS ABRE_P STRING COMA NUMERO CIERRA_P PUNTOCOMA
    (278) Pos -> . POS ABRE_P NUMERO COMA NUMERO CIERRA_P PUNTOCOMA
    (279) Pos -> . POS ABRE_P expresion_alge1 COMA NUMERO CIERRA_P PUNTOCOMA
    (280) Pos -> . POS ABRE_P NUMERO COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (281) Pos -> . POS ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (282) Pos -> . POS ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (283) Pos -> . POS ABRE_P NUMERO COMA Var CIERRA_P PUNTOCOMA
    (284) Pos -> . POS ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (285) Pos -> . POS ABRE_P expresion_alge1 COMA Var CIERRA_P PUNTOCOMA
    (286) Pos -> . POS ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (287) PosX -> . POSX NUMERO PUNTOCOMA
    (288) PosX -> . POSX RESTA NUMERO PUNTOCOMA
    (289) PosX -> . POSX expresion_alge1 PUNTOCOMA
    (290) PosX -> . POSX expresion_alge2 PUNTOCOMA
    (291) PosX -> . POSX Var PUNTOCOMA
    (292) PosY -> . POSY NUMERO PUNTOCOMA
    (293) PosY -> . POSY RESTA NUMERO PUNTOCOMA
    (294) PosY -> . POSY expresion_alge1 PUNTOCOMA
    (295) PosY -> . POSY expresion_alge2 PUNTOCOMA
    (296) PosY -> . POSY Var PUNTOCOMA
    (297) UseColor -> . USECOLOR NUMERO PUNTOCOMA
    (298) UseColor -> . USECOLOR Var PUNTOCOMA
    (299) UseColor -> . USECOLOR empty PUNTOCOMA
    (310) empty -> .

    PUNTOCOMA       shift and go to state 197
    BEGINNING       shift and go to state 212
    CONTINUEUP      shift and go to state 213
    CONTINUEDOWN    shift and go to state 214
    CONTINUERIGHT   shift and go to state 215
    CONTINUELEFT    shift and go to state 216
    UP              shift and go to state 217
    DOWN            shift and go to state 218
    SPEED           shift and go to state 219
    POS             shift and go to state 220
    POSX            shift and go to state 221
    POSY            shift and go to state 222
    USECOLOR        shift and go to state 223
    BRACKET2        reduce using rule 310 (empty -> .)

    ordenes                        shift and go to state 196
    Beginning                      shift and go to state 198
    empty                          shift and go to state 199
    ContinueUp                     shift and go to state 200
    ContinueDown                   shift and go to state 201
    ContinueRight                  shift and go to state 202
    ContinueLeft                   shift and go to state 203
    Up                             shift and go to state 204
    Down                           shift and go to state 205
    Speed                          shift and go to state 206
    Diag                           shift and go to state 207
    Pos                            shift and go to state 208
    PosX                           shift and go to state 209
    PosY                           shift and go to state 210
    UseColor                       shift and go to state 211

state 137

    (242) If -> IF ABRE_P . condicion CIERRA_P BRACKET1 funcion BRACKET2
    (90) condicion -> . Equal
    (91) condicion -> . Greater
    (92) condicion -> . Smaller
    (162) Equal -> . EQUAL ABRE_P NUMERO COMA NUMERO CIERRA_P PUNTOCOMA
    (163) Equal -> . EQUAL ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P PUNTOCOMA
    (164) Equal -> . EQUAL ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (165) Equal -> . EQUAL ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (166) Equal -> . EQUAL ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (167) Equal -> . EQUAL ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (168) Equal -> . EQUAL ABRE_P NUMERO COMA Var CIERRA_P PUNTOCOMA
    (169) Equal -> . EQUAL ABRE_P RESTA NUMERO COMA Var CIERRA_P PUNTOCOMA
    (170) Equal -> . EQUAL ABRE_P expresion_alge2 COMA Var CIERRA_P PUNTOCOMA
    (171) Equal -> . EQUAL ABRE_P expresion_alge1 COMA Var CIERRA_P PUNTOCOMA
    (172) Equal -> . EQUAL ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (173) Equal -> . EQUAL ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (174) Equal -> . EQUAL ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (175) Equal -> . EQUAL ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (176) Equal -> . EQUAL ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (177) Equal -> . EQUAL ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (178) Equal -> . EQUAL ABRE_P expresion_alge1 COMA NUMERO CIERRA_P PUNTOCOMA
    (179) Equal -> . EQUAL ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (180) Equal -> . EQUAL ABRE_P expresion_alge2 COMA NUMERO CIERRA_P PUNTOCOMA
    (181) Equal -> . EQUAL ABRE_P expresion_alge2 COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (182) Equal -> . EQUAL ABRE_P NUMERO COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (183) Equal -> . EQUAL ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (184) Equal -> . EQUAL ABRE_P NUMERO COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (185) Equal -> . EQUAL ABRE_P RESTA NUMERO COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (186) Greater -> . GREATER ABRE_P NUMERO COMA NUMERO CIERRA_P PUNTOCOMA
    (187) Greater -> . GREATER ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P PUNTOCOMA
    (188) Greater -> . GREATER ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (189) Greater -> . GREATER ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (190) Greater -> . GREATER ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (191) Greater -> . GREATER ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (192) Greater -> . GREATER ABRE_P NUMERO COMA Var CIERRA_P PUNTOCOMA
    (193) Greater -> . GREATER ABRE_P RESTA NUMERO COMA Var CIERRA_P PUNTOCOMA
    (194) Greater -> . GREATER ABRE_P expresion_alge2 COMA Var CIERRA_P PUNTOCOMA
    (195) Greater -> . GREATER ABRE_P expresion_alge1 COMA Var CIERRA_P PUNTOCOMA
    (196) Greater -> . GREATER ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (197) Greater -> . GREATER ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (198) Greater -> . GREATER ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (199) Greater -> . GREATER ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (200) Greater -> . GREATER ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (201) Greater -> . GREATER ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (202) Greater -> . GREATER ABRE_P expresion_alge1 COMA NUMERO CIERRA_P PUNTOCOMA
    (203) Greater -> . GREATER ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (204) Greater -> . GREATER ABRE_P expresion_alge2 COMA NUMERO CIERRA_P PUNTOCOMA
    (205) Greater -> . GREATER ABRE_P expresion_alge2 COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (206) Greater -> . GREATER ABRE_P NUMERO COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (207) Greater -> . GREATER ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (208) Greater -> . GREATER ABRE_P NUMERO COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (209) Greater -> . GREATER ABRE_P RESTA NUMERO COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (210) Smaller -> . SMALLER ABRE_P NUMERO COMA NUMERO CIERRA_P PUNTOCOMA
    (211) Smaller -> . SMALLER ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P PUNTOCOMA
    (212) Smaller -> . SMALLER ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (213) Smaller -> . SMALLER ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (214) Smaller -> . SMALLER ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (215) Smaller -> . SMALLER ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (216) Smaller -> . SMALLER ABRE_P NUMERO COMA Var CIERRA_P PUNTOCOMA
    (217) Smaller -> . SMALLER ABRE_P RESTA NUMERO COMA Var CIERRA_P PUNTOCOMA
    (218) Smaller -> . SMALLER ABRE_P expresion_alge2 COMA Var CIERRA_P PUNTOCOMA
    (219) Smaller -> . SMALLER ABRE_P expresion_alge1 COMA Var CIERRA_P PUNTOCOMA
    (220) Smaller -> . SMALLER ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (221) Smaller -> . SMALLER ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (222) Smaller -> . SMALLER ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (223) Smaller -> . SMALLER ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (224) Smaller -> . SMALLER ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (225) Smaller -> . SMALLER ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (226) Smaller -> . SMALLER ABRE_P expresion_alge1 COMA NUMERO CIERRA_P PUNTOCOMA
    (227) Smaller -> . SMALLER ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (228) Smaller -> . SMALLER ABRE_P expresion_alge2 COMA NUMERO CIERRA_P PUNTOCOMA
    (229) Smaller -> . SMALLER ABRE_P expresion_alge2 COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (230) Smaller -> . SMALLER ABRE_P NUMERO COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (231) Smaller -> . SMALLER ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (232) Smaller -> . SMALLER ABRE_P NUMERO COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (233) Smaller -> . SMALLER ABRE_P RESTA NUMERO COMA expresion_alge2 CIERRA_P PUNTOCOMA

    EQUAL           shift and go to state 228
    GREATER         shift and go to state 229
    SMALLER         shift and go to state 230

    condicion                      shift and go to state 224
    Equal                          shift and go to state 225
    Greater                        shift and go to state 226
    Smaller                        shift and go to state 227

state 138

    (243) IfElse -> IFELSE ABRE_P . condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2
    (90) condicion -> . Equal
    (91) condicion -> . Greater
    (92) condicion -> . Smaller
    (162) Equal -> . EQUAL ABRE_P NUMERO COMA NUMERO CIERRA_P PUNTOCOMA
    (163) Equal -> . EQUAL ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P PUNTOCOMA
    (164) Equal -> . EQUAL ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (165) Equal -> . EQUAL ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (166) Equal -> . EQUAL ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (167) Equal -> . EQUAL ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (168) Equal -> . EQUAL ABRE_P NUMERO COMA Var CIERRA_P PUNTOCOMA
    (169) Equal -> . EQUAL ABRE_P RESTA NUMERO COMA Var CIERRA_P PUNTOCOMA
    (170) Equal -> . EQUAL ABRE_P expresion_alge2 COMA Var CIERRA_P PUNTOCOMA
    (171) Equal -> . EQUAL ABRE_P expresion_alge1 COMA Var CIERRA_P PUNTOCOMA
    (172) Equal -> . EQUAL ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (173) Equal -> . EQUAL ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (174) Equal -> . EQUAL ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (175) Equal -> . EQUAL ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (176) Equal -> . EQUAL ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (177) Equal -> . EQUAL ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (178) Equal -> . EQUAL ABRE_P expresion_alge1 COMA NUMERO CIERRA_P PUNTOCOMA
    (179) Equal -> . EQUAL ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (180) Equal -> . EQUAL ABRE_P expresion_alge2 COMA NUMERO CIERRA_P PUNTOCOMA
    (181) Equal -> . EQUAL ABRE_P expresion_alge2 COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (182) Equal -> . EQUAL ABRE_P NUMERO COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (183) Equal -> . EQUAL ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (184) Equal -> . EQUAL ABRE_P NUMERO COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (185) Equal -> . EQUAL ABRE_P RESTA NUMERO COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (186) Greater -> . GREATER ABRE_P NUMERO COMA NUMERO CIERRA_P PUNTOCOMA
    (187) Greater -> . GREATER ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P PUNTOCOMA
    (188) Greater -> . GREATER ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (189) Greater -> . GREATER ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (190) Greater -> . GREATER ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (191) Greater -> . GREATER ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (192) Greater -> . GREATER ABRE_P NUMERO COMA Var CIERRA_P PUNTOCOMA
    (193) Greater -> . GREATER ABRE_P RESTA NUMERO COMA Var CIERRA_P PUNTOCOMA
    (194) Greater -> . GREATER ABRE_P expresion_alge2 COMA Var CIERRA_P PUNTOCOMA
    (195) Greater -> . GREATER ABRE_P expresion_alge1 COMA Var CIERRA_P PUNTOCOMA
    (196) Greater -> . GREATER ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (197) Greater -> . GREATER ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (198) Greater -> . GREATER ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (199) Greater -> . GREATER ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (200) Greater -> . GREATER ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (201) Greater -> . GREATER ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (202) Greater -> . GREATER ABRE_P expresion_alge1 COMA NUMERO CIERRA_P PUNTOCOMA
    (203) Greater -> . GREATER ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (204) Greater -> . GREATER ABRE_P expresion_alge2 COMA NUMERO CIERRA_P PUNTOCOMA
    (205) Greater -> . GREATER ABRE_P expresion_alge2 COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (206) Greater -> . GREATER ABRE_P NUMERO COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (207) Greater -> . GREATER ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (208) Greater -> . GREATER ABRE_P NUMERO COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (209) Greater -> . GREATER ABRE_P RESTA NUMERO COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (210) Smaller -> . SMALLER ABRE_P NUMERO COMA NUMERO CIERRA_P PUNTOCOMA
    (211) Smaller -> . SMALLER ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P PUNTOCOMA
    (212) Smaller -> . SMALLER ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (213) Smaller -> . SMALLER ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (214) Smaller -> . SMALLER ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (215) Smaller -> . SMALLER ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (216) Smaller -> . SMALLER ABRE_P NUMERO COMA Var CIERRA_P PUNTOCOMA
    (217) Smaller -> . SMALLER ABRE_P RESTA NUMERO COMA Var CIERRA_P PUNTOCOMA
    (218) Smaller -> . SMALLER ABRE_P expresion_alge2 COMA Var CIERRA_P PUNTOCOMA
    (219) Smaller -> . SMALLER ABRE_P expresion_alge1 COMA Var CIERRA_P PUNTOCOMA
    (220) Smaller -> . SMALLER ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (221) Smaller -> . SMALLER ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (222) Smaller -> . SMALLER ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (223) Smaller -> . SMALLER ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (224) Smaller -> . SMALLER ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (225) Smaller -> . SMALLER ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (226) Smaller -> . SMALLER ABRE_P expresion_alge1 COMA NUMERO CIERRA_P PUNTOCOMA
    (227) Smaller -> . SMALLER ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (228) Smaller -> . SMALLER ABRE_P expresion_alge2 COMA NUMERO CIERRA_P PUNTOCOMA
    (229) Smaller -> . SMALLER ABRE_P expresion_alge2 COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (230) Smaller -> . SMALLER ABRE_P NUMERO COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (231) Smaller -> . SMALLER ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (232) Smaller -> . SMALLER ABRE_P NUMERO COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (233) Smaller -> . SMALLER ABRE_P RESTA NUMERO COMA expresion_alge2 CIERRA_P PUNTOCOMA

    EQUAL           shift and go to state 228
    GREATER         shift and go to state 229
    SMALLER         shift and go to state 230

    condicion                      shift and go to state 231
    Equal                          shift and go to state 225
    Greater                        shift and go to state 226
    Smaller                        shift and go to state 227

state 139

    (245) Repeat -> REPEAT NUMERO . BRACKET1 ordenes BRACKET2

    BRACKET1        shift and go to state 232


state 140

    (246) Until -> UNTIL BRACKET1 . funcion BRACKET2 BRACKET1 condicion BRACKET2
    (69) funcion -> . Random empty
    (70) funcion -> . Run empty
    (71) funcion -> . If empty
    (72) funcion -> . IfElse empty
    (73) funcion -> . Repeat empty
    (74) funcion -> . Until empty
    (75) funcion -> . While empty
    (76) funcion -> . PrintLine empty
    (77) funcion -> . And empty
    (78) funcion -> . Or empty
    (79) funcion -> . Add empty
    (80) funcion -> . Put2 empty
    (81) funcion -> . Put empty
    (82) funcion -> . PUNTOCOMA funcion
    (83) funcion -> . empty empty
    (257) Random -> . RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA
    (300) Run -> . RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA
    (242) If -> . IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2
    (243) IfElse -> . IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2
    (245) Repeat -> . REPEAT NUMERO BRACKET1 ordenes BRACKET2
    (246) Until -> . UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2
    (244) While -> . WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2
    (309) PrintLine -> . PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA
    (234) And -> . AND ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (235) And -> . AND ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (236) And -> . AND ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (237) And -> . AND ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (238) Or -> . OR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (239) Or -> . OR ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (240) Or -> . OR ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (241) Or -> . OR ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (247) Add -> . ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA
    (248) Add -> . ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (249) Add -> . ADD ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (250) Add -> . ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (251) Add -> . ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (252) Add -> . ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (85) Put2 -> . PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (86) Put2 -> . PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (87) Put2 -> . PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (88) Put2 -> . PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (89) Put2 -> . PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA
    (84) Put -> . PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA
    (310) empty -> .

    PUNTOCOMA       shift and go to state 62
    RANDOM          shift and go to state 69
    RUN             shift and go to state 70
    IF              shift and go to state 71
    IFELSE          shift and go to state 72
    REPEAT          shift and go to state 73
    UNTIL           shift and go to state 74
    WHILE           shift and go to state 75
    PRINTLINE       shift and go to state 76
    AND             shift and go to state 77
    OR              shift and go to state 78
    ADD             shift and go to state 79
    PUT             shift and go to state 95
    BRACKET2        reduce using rule 310 (empty -> .)

    funcion                        shift and go to state 233
    Random                         shift and go to state 51
    empty                          shift and go to state 125
    Run                            shift and go to state 52
    If                             shift and go to state 53
    IfElse                         shift and go to state 54
    Repeat                         shift and go to state 55
    Until                          shift and go to state 56
    While                          shift and go to state 57
    PrintLine                      shift and go to state 58
    And                            shift and go to state 59
    Or                             shift and go to state 60
    Add                            shift and go to state 61
    Put2                           shift and go to state 93
    Put                            shift and go to state 94

state 141

    (244) While -> WHILE BRACKET1 . condicion BRACKET2 BRACKET1 funcion BRACKET2
    (90) condicion -> . Equal
    (91) condicion -> . Greater
    (92) condicion -> . Smaller
    (162) Equal -> . EQUAL ABRE_P NUMERO COMA NUMERO CIERRA_P PUNTOCOMA
    (163) Equal -> . EQUAL ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P PUNTOCOMA
    (164) Equal -> . EQUAL ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (165) Equal -> . EQUAL ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (166) Equal -> . EQUAL ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (167) Equal -> . EQUAL ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (168) Equal -> . EQUAL ABRE_P NUMERO COMA Var CIERRA_P PUNTOCOMA
    (169) Equal -> . EQUAL ABRE_P RESTA NUMERO COMA Var CIERRA_P PUNTOCOMA
    (170) Equal -> . EQUAL ABRE_P expresion_alge2 COMA Var CIERRA_P PUNTOCOMA
    (171) Equal -> . EQUAL ABRE_P expresion_alge1 COMA Var CIERRA_P PUNTOCOMA
    (172) Equal -> . EQUAL ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (173) Equal -> . EQUAL ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (174) Equal -> . EQUAL ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (175) Equal -> . EQUAL ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (176) Equal -> . EQUAL ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (177) Equal -> . EQUAL ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (178) Equal -> . EQUAL ABRE_P expresion_alge1 COMA NUMERO CIERRA_P PUNTOCOMA
    (179) Equal -> . EQUAL ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (180) Equal -> . EQUAL ABRE_P expresion_alge2 COMA NUMERO CIERRA_P PUNTOCOMA
    (181) Equal -> . EQUAL ABRE_P expresion_alge2 COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (182) Equal -> . EQUAL ABRE_P NUMERO COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (183) Equal -> . EQUAL ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (184) Equal -> . EQUAL ABRE_P NUMERO COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (185) Equal -> . EQUAL ABRE_P RESTA NUMERO COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (186) Greater -> . GREATER ABRE_P NUMERO COMA NUMERO CIERRA_P PUNTOCOMA
    (187) Greater -> . GREATER ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P PUNTOCOMA
    (188) Greater -> . GREATER ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (189) Greater -> . GREATER ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (190) Greater -> . GREATER ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (191) Greater -> . GREATER ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (192) Greater -> . GREATER ABRE_P NUMERO COMA Var CIERRA_P PUNTOCOMA
    (193) Greater -> . GREATER ABRE_P RESTA NUMERO COMA Var CIERRA_P PUNTOCOMA
    (194) Greater -> . GREATER ABRE_P expresion_alge2 COMA Var CIERRA_P PUNTOCOMA
    (195) Greater -> . GREATER ABRE_P expresion_alge1 COMA Var CIERRA_P PUNTOCOMA
    (196) Greater -> . GREATER ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (197) Greater -> . GREATER ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (198) Greater -> . GREATER ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (199) Greater -> . GREATER ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (200) Greater -> . GREATER ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (201) Greater -> . GREATER ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (202) Greater -> . GREATER ABRE_P expresion_alge1 COMA NUMERO CIERRA_P PUNTOCOMA
    (203) Greater -> . GREATER ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (204) Greater -> . GREATER ABRE_P expresion_alge2 COMA NUMERO CIERRA_P PUNTOCOMA
    (205) Greater -> . GREATER ABRE_P expresion_alge2 COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (206) Greater -> . GREATER ABRE_P NUMERO COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (207) Greater -> . GREATER ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (208) Greater -> . GREATER ABRE_P NUMERO COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (209) Greater -> . GREATER ABRE_P RESTA NUMERO COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (210) Smaller -> . SMALLER ABRE_P NUMERO COMA NUMERO CIERRA_P PUNTOCOMA
    (211) Smaller -> . SMALLER ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P PUNTOCOMA
    (212) Smaller -> . SMALLER ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (213) Smaller -> . SMALLER ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (214) Smaller -> . SMALLER ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (215) Smaller -> . SMALLER ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (216) Smaller -> . SMALLER ABRE_P NUMERO COMA Var CIERRA_P PUNTOCOMA
    (217) Smaller -> . SMALLER ABRE_P RESTA NUMERO COMA Var CIERRA_P PUNTOCOMA
    (218) Smaller -> . SMALLER ABRE_P expresion_alge2 COMA Var CIERRA_P PUNTOCOMA
    (219) Smaller -> . SMALLER ABRE_P expresion_alge1 COMA Var CIERRA_P PUNTOCOMA
    (220) Smaller -> . SMALLER ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (221) Smaller -> . SMALLER ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (222) Smaller -> . SMALLER ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (223) Smaller -> . SMALLER ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (224) Smaller -> . SMALLER ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (225) Smaller -> . SMALLER ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (226) Smaller -> . SMALLER ABRE_P expresion_alge1 COMA NUMERO CIERRA_P PUNTOCOMA
    (227) Smaller -> . SMALLER ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (228) Smaller -> . SMALLER ABRE_P expresion_alge2 COMA NUMERO CIERRA_P PUNTOCOMA
    (229) Smaller -> . SMALLER ABRE_P expresion_alge2 COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (230) Smaller -> . SMALLER ABRE_P NUMERO COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (231) Smaller -> . SMALLER ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (232) Smaller -> . SMALLER ABRE_P NUMERO COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (233) Smaller -> . SMALLER ABRE_P RESTA NUMERO COMA expresion_alge2 CIERRA_P PUNTOCOMA

    EQUAL           shift and go to state 228
    GREATER         shift and go to state 229
    SMALLER         shift and go to state 230

    condicion                      shift and go to state 234
    Equal                          shift and go to state 225
    Greater                        shift and go to state 226
    Smaller                        shift and go to state 227

state 142

    (309) PrintLine -> PRINTLINE ABRE_P . exp CIERRA_P PUNTOCOMA
    (301) exp -> . NUMERO COMA exp
    (302) exp -> . STRING COMA exp
    (303) exp -> . Var COMA exp
    (304) exp -> . NUMERO empty empty
    (305) exp -> . RESTA NUMERO empty empty
    (306) exp -> . RESTA NUMERO COMA empty
    (307) exp -> . STRING empty empty
    (308) exp -> . Var empty empty
    (161) Var -> . VAR

    NUMERO          shift and go to state 236
    STRING          shift and go to state 237
    RESTA           shift and go to state 239
    VAR             shift and go to state 34

    exp                            shift and go to state 235
    Var                            shift and go to state 238

state 143

    (234) And -> AND ABRE_P . expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (235) And -> AND ABRE_P . expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (236) And -> AND ABRE_P . expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (237) And -> AND ABRE_P . expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (93) expresion_alge1 -> . NUMERO SUMA NUMERO
    (94) expresion_alge1 -> . NUMERO RESTA NUMERO
    (95) expresion_alge1 -> . NUMERO MULTI NUMERO
    (96) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (97) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (98) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (99) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (100) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P

    NUMERO          shift and go to state 64
    ABRE_P          shift and go to state 63

    expresion_alge1                shift and go to state 240
    expresion_alge2                shift and go to state 241

state 144

    (238) Or -> OR ABRE_P . expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (239) Or -> OR ABRE_P . expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (240) Or -> OR ABRE_P . expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (241) Or -> OR ABRE_P . expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (93) expresion_alge1 -> . NUMERO SUMA NUMERO
    (94) expresion_alge1 -> . NUMERO RESTA NUMERO
    (95) expresion_alge1 -> . NUMERO MULTI NUMERO
    (96) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (97) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (98) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (99) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (100) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P

    NUMERO          shift and go to state 64
    ABRE_P          shift and go to state 63

    expresion_alge1                shift and go to state 242
    expresion_alge2                shift and go to state 243

state 145

    (247) Add -> ADD ABRE_P . Var empty empty CIERRA_P PUNTOCOMA
    (248) Add -> ADD ABRE_P . Var COMA NUMERO CIERRA_P PUNTOCOMA
    (249) Add -> ADD ABRE_P . Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (250) Add -> ADD ABRE_P . Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (251) Add -> ADD ABRE_P . Var COMA Var CIERRA_P PUNTOCOMA
    (252) Add -> ADD ABRE_P . Var COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (161) Var -> . VAR

    VAR             shift and go to state 34

    Var                            shift and go to state 244

state 146

    (84) Put -> PUT ABRE_P VAR COMA VAR . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 245


state 147

    (85) Put2 -> PUT ABRE_P VAR COMA NUMERO . CIERRA_P PUNTOCOMA
    (93) expresion_alge1 -> NUMERO . SUMA NUMERO
    (94) expresion_alge1 -> NUMERO . RESTA NUMERO
    (95) expresion_alge1 -> NUMERO . MULTI NUMERO
    (96) expresion_alge1 -> NUMERO . DIVISION NUMERO

    CIERRA_P        shift and go to state 246
    SUMA            shift and go to state 127
    RESTA           shift and go to state 128
    MULTI           shift and go to state 129
    DIVISION        shift and go to state 130


state 148

    (86) Put2 -> PUT ABRE_P VAR COMA RESTA . NUMERO CIERRA_P PUNTOCOMA

    NUMERO          shift and go to state 247


state 149

    (87) Put2 -> PUT ABRE_P VAR COMA expresion_alge1 . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 248


state 150

    (88) Put2 -> PUT ABRE_P VAR COMA expresion_alge2 . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 249


state 151

    (89) Put2 -> PUT ABRE_P VAR COMA funcion . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 250


state 152

    (37) variable2 -> DEF VAR IGUAL NUMERO PUNTOCOMA .

    COMMENT         reduce using rule 37 (variable2 -> DEF VAR IGUAL NUMERO PUNTOCOMA .)
    PARA            reduce using rule 37 (variable2 -> DEF VAR IGUAL NUMERO PUNTOCOMA .)
    MAIN            reduce using rule 37 (variable2 -> DEF VAR IGUAL NUMERO PUNTOCOMA .)
    PUT             reduce using rule 37 (variable2 -> DEF VAR IGUAL NUMERO PUNTOCOMA .)
    DEF             reduce using rule 37 (variable2 -> DEF VAR IGUAL NUMERO PUNTOCOMA .)
    $end            reduce using rule 37 (variable2 -> DEF VAR IGUAL NUMERO PUNTOCOMA .)
    PUNTOCOMA       reduce using rule 37 (variable2 -> DEF VAR IGUAL NUMERO PUNTOCOMA .)
    NUMERO          reduce using rule 37 (variable2 -> DEF VAR IGUAL NUMERO PUNTOCOMA .)
    ABRE_P          reduce using rule 37 (variable2 -> DEF VAR IGUAL NUMERO PUNTOCOMA .)
    SUM             reduce using rule 37 (variable2 -> DEF VAR IGUAL NUMERO PUNTOCOMA .)
    SUBSTR          reduce using rule 37 (variable2 -> DEF VAR IGUAL NUMERO PUNTOCOMA .)
    MULTI           reduce using rule 37 (variable2 -> DEF VAR IGUAL NUMERO PUNTOCOMA .)
    DIV             reduce using rule 37 (variable2 -> DEF VAR IGUAL NUMERO PUNTOCOMA .)
    RANDOM          reduce using rule 37 (variable2 -> DEF VAR IGUAL NUMERO PUNTOCOMA .)
    RUN             reduce using rule 37 (variable2 -> DEF VAR IGUAL NUMERO PUNTOCOMA .)
    IF              reduce using rule 37 (variable2 -> DEF VAR IGUAL NUMERO PUNTOCOMA .)
    IFELSE          reduce using rule 37 (variable2 -> DEF VAR IGUAL NUMERO PUNTOCOMA .)
    REPEAT          reduce using rule 37 (variable2 -> DEF VAR IGUAL NUMERO PUNTOCOMA .)
    UNTIL           reduce using rule 37 (variable2 -> DEF VAR IGUAL NUMERO PUNTOCOMA .)
    WHILE           reduce using rule 37 (variable2 -> DEF VAR IGUAL NUMERO PUNTOCOMA .)
    PRINTLINE       reduce using rule 37 (variable2 -> DEF VAR IGUAL NUMERO PUNTOCOMA .)
    AND             reduce using rule 37 (variable2 -> DEF VAR IGUAL NUMERO PUNTOCOMA .)
    OR              reduce using rule 37 (variable2 -> DEF VAR IGUAL NUMERO PUNTOCOMA .)
    ADD             reduce using rule 37 (variable2 -> DEF VAR IGUAL NUMERO PUNTOCOMA .)
    FIN             reduce using rule 37 (variable2 -> DEF VAR IGUAL NUMERO PUNTOCOMA .)


state 153

    (38) variable2 -> DEF VAR IGUAL RESTA NUMERO . PUNTOCOMA

    PUNTOCOMA       shift and go to state 251


state 154

    (255) parametro -> empty empty empty .

    BRACKET2        reduce using rule 255 (parametro -> empty empty empty .)


state 155

    (25) llamadoproc -> PARA . id BRACKET1 parametro BRACKET2 PUNTOCOMA
    (22) id -> . ID

    ID              shift and go to state 22

    id                             shift and go to state 252

state 156

    (12) cuerpo2 -> empty .
    (32) variablexd -> empty . empty
    (53) expresion -> empty . empty
    (83) funcion -> empty . empty
    (310) empty -> .

  ! reduce/reduce conflict for FIN resolved using rule 12 (cuerpo2 -> empty .)
    FIN             reduce using rule 12 (cuerpo2 -> empty .)
    PUNTOCOMA       reduce using rule 310 (empty -> .)
    NUMERO          reduce using rule 310 (empty -> .)
    ABRE_P          reduce using rule 310 (empty -> .)
    SUM             reduce using rule 310 (empty -> .)
    SUBSTR          reduce using rule 310 (empty -> .)
    MULTI           reduce using rule 310 (empty -> .)
    DIV             reduce using rule 310 (empty -> .)
    RANDOM          reduce using rule 310 (empty -> .)
    RUN             reduce using rule 310 (empty -> .)
    IF              reduce using rule 310 (empty -> .)
    IFELSE          reduce using rule 310 (empty -> .)
    REPEAT          reduce using rule 310 (empty -> .)
    UNTIL           reduce using rule 310 (empty -> .)
    WHILE           reduce using rule 310 (empty -> .)
    PRINTLINE       reduce using rule 310 (empty -> .)
    AND             reduce using rule 310 (empty -> .)
    OR              reduce using rule 310 (empty -> .)
    ADD             reduce using rule 310 (empty -> .)
    PUT             reduce using rule 310 (empty -> .)

  ! FIN             [ reduce using rule 310 (empty -> .) ]

    empty                          shift and go to state 253

state 157

    (23) procedimiento -> PARA id BRACKET1 empty BRACKET2 cuerpo2 . FIN cuerpo

    FIN             shift and go to state 254


state 158

    (8) cuerpo2 -> variablexd .

    FIN             reduce using rule 8 (cuerpo2 -> variablexd .)


state 159

    (9) cuerpo2 -> COMMENT . cuerpo2
    (8) cuerpo2 -> . variablexd
    (9) cuerpo2 -> . COMMENT cuerpo2
    (10) cuerpo2 -> . expresion
    (11) cuerpo2 -> . llamadoproc
    (12) cuerpo2 -> . empty
    (13) cuerpo2 -> . Put2
    (14) cuerpo2 -> . Put
    (30) variablexd -> . variable1 cuerpo2
    (31) variablexd -> . variable2 cuerpo2
    (32) variablexd -> . empty empty
    (39) expresion -> . funcion expresion
    (40) expresion -> . expresion_alge1 expresion
    (41) expresion -> . expresion_alge2 expresion
    (42) expresion -> . Sum expresion
    (43) expresion -> . Substr expresion
    (44) expresion -> . Mult expresion
    (45) expresion -> . Div expresion
    (46) expresion -> . funcion empty
    (47) expresion -> . expresion_alge1 empty
    (48) expresion -> . expresion_alge2 empty
    (49) expresion -> . Sum empty
    (50) expresion -> . Substr empty
    (51) expresion -> . Mult empty
    (52) expresion -> . Div empty
    (53) expresion -> . empty empty
    (25) llamadoproc -> . PARA id BRACKET1 parametro BRACKET2 PUNTOCOMA
    (310) empty -> .
    (85) Put2 -> . PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (86) Put2 -> . PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (87) Put2 -> . PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (88) Put2 -> . PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (89) Put2 -> . PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA
    (84) Put -> . PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA
    (36) variable1 -> . DEF VAR PUNTOCOMA
    (37) variable2 -> . DEF VAR IGUAL NUMERO PUNTOCOMA
    (38) variable2 -> . DEF VAR IGUAL RESTA NUMERO PUNTOCOMA
    (69) funcion -> . Random empty
    (70) funcion -> . Run empty
    (71) funcion -> . If empty
    (72) funcion -> . IfElse empty
    (73) funcion -> . Repeat empty
    (74) funcion -> . Until empty
    (75) funcion -> . While empty
    (76) funcion -> . PrintLine empty
    (77) funcion -> . And empty
    (78) funcion -> . Or empty
    (79) funcion -> . Add empty
    (80) funcion -> . Put2 empty
    (81) funcion -> . Put empty
    (82) funcion -> . PUNTOCOMA funcion
    (83) funcion -> . empty empty
    (93) expresion_alge1 -> . NUMERO SUMA NUMERO
    (94) expresion_alge1 -> . NUMERO RESTA NUMERO
    (95) expresion_alge1 -> . NUMERO MULTI NUMERO
    (96) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (97) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (98) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (99) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (100) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (101) Sum -> . SUM ABRE_P NUMERO COMA NUMERO CIERRA_P
    (102) Sum -> . SUM ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (103) Sum -> . SUM ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (104) Sum -> . SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (105) Sum -> . SUM ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (106) Sum -> . SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (107) Sum -> . SUM ABRE_P NUMERO COMA Var CIERRA_P
    (108) Sum -> . SUM ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (109) Sum -> . SUM ABRE_P Var COMA NUMERO CIERRA_P
    (110) Sum -> . SUM ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (111) Sum -> . SUM ABRE_P Var COMA Var CIERRA_P
    (112) Sum -> . SUM ABRE_P expresion_alge1 COMA Var CIERRA_P
    (113) Sum -> . SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (114) Sum -> . SUM ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (115) Sum -> . SUM ABRE_P Var COMA expresion_alge1 CIERRA_P
    (116) Substr -> . SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P
    (117) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (118) Substr -> . SUBSTR ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (119) Substr -> . SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (120) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (121) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (122) Substr -> . SUBSTR ABRE_P NUMERO COMA Var CIERRA_P
    (123) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (124) Substr -> . SUBSTR ABRE_P Var COMA NUMERO CIERRA_P
    (125) Substr -> . SUBSTR ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (126) Substr -> . SUBSTR ABRE_P Var COMA Var CIERRA_P
    (127) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P
    (128) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (129) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (130) Substr -> . SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P
    (131) Mult -> . MULTI ABRE_P NUMERO COMA NUMERO CIERRA_P
    (132) Mult -> . MULTI ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (133) Mult -> . MULTI ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (134) Mult -> . MULTI ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (135) Mult -> . MULTI ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (136) Mult -> . MULTI ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (137) Mult -> . MULTI ABRE_P NUMERO COMA Var CIERRA_P
    (138) Mult -> . MULTI ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (139) Mult -> . MULTI ABRE_P Var COMA NUMERO CIERRA_P
    (140) Mult -> . MULTI ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (141) Mult -> . MULTI ABRE_P Var COMA Var CIERRA_P
    (142) Mult -> . MULTI ABRE_P expresion_alge1 COMA Var CIERRA_P
    (143) Mult -> . MULTI ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (144) Mult -> . MULTI ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (145) Mult -> . MULTI ABRE_P Var COMA expresion_alge1 CIERRA_P
    (146) Div -> . DIV ABRE_P NUMERO COMA NUMERO CIERRA_P
    (147) Div -> . DIV ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (148) Div -> . DIV ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (149) Div -> . DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (150) Div -> . DIV ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (151) Div -> . DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (152) Div -> . DIV ABRE_P NUMERO COMA Var CIERRA_P
    (153) Div -> . DIV ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (154) Div -> . DIV ABRE_P Var COMA NUMERO CIERRA_P
    (155) Div -> . DIV ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (156) Div -> . DIV ABRE_P Var COMA Var CIERRA_P
    (157) Div -> . DIV ABRE_P expresion_alge1 COMA Var CIERRA_P
    (158) Div -> . DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (159) Div -> . DIV ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (160) Div -> . DIV ABRE_P Var COMA expresion_alge1 CIERRA_P
    (257) Random -> . RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA
    (300) Run -> . RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA
    (242) If -> . IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2
    (243) IfElse -> . IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2
    (245) Repeat -> . REPEAT NUMERO BRACKET1 ordenes BRACKET2
    (246) Until -> . UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2
    (244) While -> . WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2
    (309) PrintLine -> . PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA
    (234) And -> . AND ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (235) And -> . AND ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (236) And -> . AND ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (237) And -> . AND ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (238) Or -> . OR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (239) Or -> . OR ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (240) Or -> . OR ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (241) Or -> . OR ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (247) Add -> . ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA
    (248) Add -> . ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (249) Add -> . ADD ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (250) Add -> . ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (251) Add -> . ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (252) Add -> . ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA

  ! shift/reduce conflict for PUT resolved as shift
  ! shift/reduce conflict for PUNTOCOMA resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for ABRE_P resolved as shift
  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for SUBSTR resolved as shift
  ! shift/reduce conflict for MULTI resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for RANDOM resolved as shift
  ! shift/reduce conflict for RUN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for IFELSE resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for PRINTLINE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
    COMMENT         shift and go to state 159
    PARA            shift and go to state 155
    FIN             reduce using rule 310 (empty -> .)
    PUT             shift and go to state 95
    DEF             shift and go to state 16
    PUNTOCOMA       shift and go to state 62
    NUMERO          shift and go to state 64
    ABRE_P          shift and go to state 63
    SUM             shift and go to state 67
    SUBSTR          shift and go to state 68
    MULTI           shift and go to state 65
    DIV             shift and go to state 66
    RANDOM          shift and go to state 69
    RUN             shift and go to state 70
    IF              shift and go to state 71
    IFELSE          shift and go to state 72
    REPEAT          shift and go to state 73
    UNTIL           shift and go to state 74
    WHILE           shift and go to state 75
    PRINTLINE       shift and go to state 76
    AND             shift and go to state 77
    OR              shift and go to state 78
    ADD             shift and go to state 79

  ! PUNTOCOMA       [ reduce using rule 310 (empty -> .) ]
  ! NUMERO          [ reduce using rule 310 (empty -> .) ]
  ! ABRE_P          [ reduce using rule 310 (empty -> .) ]
  ! SUM             [ reduce using rule 310 (empty -> .) ]
  ! SUBSTR          [ reduce using rule 310 (empty -> .) ]
  ! MULTI           [ reduce using rule 310 (empty -> .) ]
  ! DIV             [ reduce using rule 310 (empty -> .) ]
  ! RANDOM          [ reduce using rule 310 (empty -> .) ]
  ! RUN             [ reduce using rule 310 (empty -> .) ]
  ! IF              [ reduce using rule 310 (empty -> .) ]
  ! IFELSE          [ reduce using rule 310 (empty -> .) ]
  ! REPEAT          [ reduce using rule 310 (empty -> .) ]
  ! UNTIL           [ reduce using rule 310 (empty -> .) ]
  ! WHILE           [ reduce using rule 310 (empty -> .) ]
  ! PRINTLINE       [ reduce using rule 310 (empty -> .) ]
  ! AND             [ reduce using rule 310 (empty -> .) ]
  ! OR              [ reduce using rule 310 (empty -> .) ]
  ! ADD             [ reduce using rule 310 (empty -> .) ]
  ! PUT             [ reduce using rule 310 (empty -> .) ]

    cuerpo2                        shift and go to state 255
    variablexd                     shift and go to state 158
    expresion                      shift and go to state 160
    llamadoproc                    shift and go to state 161
    empty                          shift and go to state 156
    Put2                           shift and go to state 162
    Put                            shift and go to state 163
    variable1                      shift and go to state 164
    variable2                      shift and go to state 165
    funcion                        shift and go to state 90
    expresion_alge1                shift and go to state 45
    expresion_alge2                shift and go to state 46
    Sum                            shift and go to state 47
    Substr                         shift and go to state 48
    Mult                           shift and go to state 49
    Div                            shift and go to state 50
    Random                         shift and go to state 51
    Run                            shift and go to state 52
    If                             shift and go to state 53
    IfElse                         shift and go to state 54
    Repeat                         shift and go to state 55
    Until                          shift and go to state 56
    While                          shift and go to state 57
    PrintLine                      shift and go to state 58
    And                            shift and go to state 59
    Or                             shift and go to state 60
    Add                            shift and go to state 61

state 160

    (10) cuerpo2 -> expresion .

    FIN             reduce using rule 10 (cuerpo2 -> expresion .)


state 161

    (11) cuerpo2 -> llamadoproc .

    FIN             reduce using rule 11 (cuerpo2 -> llamadoproc .)


state 162

    (13) cuerpo2 -> Put2 .
    (80) funcion -> Put2 . empty
    (310) empty -> .

  ! reduce/reduce conflict for FIN resolved using rule 13 (cuerpo2 -> Put2 .)
    FIN             reduce using rule 13 (cuerpo2 -> Put2 .)
    PUNTOCOMA       reduce using rule 310 (empty -> .)
    NUMERO          reduce using rule 310 (empty -> .)
    ABRE_P          reduce using rule 310 (empty -> .)
    SUM             reduce using rule 310 (empty -> .)
    SUBSTR          reduce using rule 310 (empty -> .)
    MULTI           reduce using rule 310 (empty -> .)
    DIV             reduce using rule 310 (empty -> .)
    RANDOM          reduce using rule 310 (empty -> .)
    RUN             reduce using rule 310 (empty -> .)
    IF              reduce using rule 310 (empty -> .)
    IFELSE          reduce using rule 310 (empty -> .)
    REPEAT          reduce using rule 310 (empty -> .)
    UNTIL           reduce using rule 310 (empty -> .)
    WHILE           reduce using rule 310 (empty -> .)
    PRINTLINE       reduce using rule 310 (empty -> .)
    AND             reduce using rule 310 (empty -> .)
    OR              reduce using rule 310 (empty -> .)
    ADD             reduce using rule 310 (empty -> .)
    PUT             reduce using rule 310 (empty -> .)

  ! FIN             [ reduce using rule 310 (empty -> .) ]

    empty                          shift and go to state 98

state 163

    (14) cuerpo2 -> Put .
    (81) funcion -> Put . empty
    (310) empty -> .

  ! reduce/reduce conflict for FIN resolved using rule 14 (cuerpo2 -> Put .)
    FIN             reduce using rule 14 (cuerpo2 -> Put .)
    PUNTOCOMA       reduce using rule 310 (empty -> .)
    NUMERO          reduce using rule 310 (empty -> .)
    ABRE_P          reduce using rule 310 (empty -> .)
    SUM             reduce using rule 310 (empty -> .)
    SUBSTR          reduce using rule 310 (empty -> .)
    MULTI           reduce using rule 310 (empty -> .)
    DIV             reduce using rule 310 (empty -> .)
    RANDOM          reduce using rule 310 (empty -> .)
    RUN             reduce using rule 310 (empty -> .)
    IF              reduce using rule 310 (empty -> .)
    IFELSE          reduce using rule 310 (empty -> .)
    REPEAT          reduce using rule 310 (empty -> .)
    UNTIL           reduce using rule 310 (empty -> .)
    WHILE           reduce using rule 310 (empty -> .)
    PRINTLINE       reduce using rule 310 (empty -> .)
    AND             reduce using rule 310 (empty -> .)
    OR              reduce using rule 310 (empty -> .)
    ADD             reduce using rule 310 (empty -> .)
    PUT             reduce using rule 310 (empty -> .)

  ! FIN             [ reduce using rule 310 (empty -> .) ]

    empty                          shift and go to state 97

state 164

    (30) variablexd -> variable1 . cuerpo2
    (8) cuerpo2 -> . variablexd
    (9) cuerpo2 -> . COMMENT cuerpo2
    (10) cuerpo2 -> . expresion
    (11) cuerpo2 -> . llamadoproc
    (12) cuerpo2 -> . empty
    (13) cuerpo2 -> . Put2
    (14) cuerpo2 -> . Put
    (30) variablexd -> . variable1 cuerpo2
    (31) variablexd -> . variable2 cuerpo2
    (32) variablexd -> . empty empty
    (39) expresion -> . funcion expresion
    (40) expresion -> . expresion_alge1 expresion
    (41) expresion -> . expresion_alge2 expresion
    (42) expresion -> . Sum expresion
    (43) expresion -> . Substr expresion
    (44) expresion -> . Mult expresion
    (45) expresion -> . Div expresion
    (46) expresion -> . funcion empty
    (47) expresion -> . expresion_alge1 empty
    (48) expresion -> . expresion_alge2 empty
    (49) expresion -> . Sum empty
    (50) expresion -> . Substr empty
    (51) expresion -> . Mult empty
    (52) expresion -> . Div empty
    (53) expresion -> . empty empty
    (25) llamadoproc -> . PARA id BRACKET1 parametro BRACKET2 PUNTOCOMA
    (310) empty -> .
    (85) Put2 -> . PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (86) Put2 -> . PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (87) Put2 -> . PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (88) Put2 -> . PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (89) Put2 -> . PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA
    (84) Put -> . PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA
    (36) variable1 -> . DEF VAR PUNTOCOMA
    (37) variable2 -> . DEF VAR IGUAL NUMERO PUNTOCOMA
    (38) variable2 -> . DEF VAR IGUAL RESTA NUMERO PUNTOCOMA
    (69) funcion -> . Random empty
    (70) funcion -> . Run empty
    (71) funcion -> . If empty
    (72) funcion -> . IfElse empty
    (73) funcion -> . Repeat empty
    (74) funcion -> . Until empty
    (75) funcion -> . While empty
    (76) funcion -> . PrintLine empty
    (77) funcion -> . And empty
    (78) funcion -> . Or empty
    (79) funcion -> . Add empty
    (80) funcion -> . Put2 empty
    (81) funcion -> . Put empty
    (82) funcion -> . PUNTOCOMA funcion
    (83) funcion -> . empty empty
    (93) expresion_alge1 -> . NUMERO SUMA NUMERO
    (94) expresion_alge1 -> . NUMERO RESTA NUMERO
    (95) expresion_alge1 -> . NUMERO MULTI NUMERO
    (96) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (97) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (98) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (99) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (100) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (101) Sum -> . SUM ABRE_P NUMERO COMA NUMERO CIERRA_P
    (102) Sum -> . SUM ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (103) Sum -> . SUM ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (104) Sum -> . SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (105) Sum -> . SUM ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (106) Sum -> . SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (107) Sum -> . SUM ABRE_P NUMERO COMA Var CIERRA_P
    (108) Sum -> . SUM ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (109) Sum -> . SUM ABRE_P Var COMA NUMERO CIERRA_P
    (110) Sum -> . SUM ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (111) Sum -> . SUM ABRE_P Var COMA Var CIERRA_P
    (112) Sum -> . SUM ABRE_P expresion_alge1 COMA Var CIERRA_P
    (113) Sum -> . SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (114) Sum -> . SUM ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (115) Sum -> . SUM ABRE_P Var COMA expresion_alge1 CIERRA_P
    (116) Substr -> . SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P
    (117) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (118) Substr -> . SUBSTR ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (119) Substr -> . SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (120) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (121) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (122) Substr -> . SUBSTR ABRE_P NUMERO COMA Var CIERRA_P
    (123) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (124) Substr -> . SUBSTR ABRE_P Var COMA NUMERO CIERRA_P
    (125) Substr -> . SUBSTR ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (126) Substr -> . SUBSTR ABRE_P Var COMA Var CIERRA_P
    (127) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P
    (128) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (129) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (130) Substr -> . SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P
    (131) Mult -> . MULTI ABRE_P NUMERO COMA NUMERO CIERRA_P
    (132) Mult -> . MULTI ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (133) Mult -> . MULTI ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (134) Mult -> . MULTI ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (135) Mult -> . MULTI ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (136) Mult -> . MULTI ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (137) Mult -> . MULTI ABRE_P NUMERO COMA Var CIERRA_P
    (138) Mult -> . MULTI ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (139) Mult -> . MULTI ABRE_P Var COMA NUMERO CIERRA_P
    (140) Mult -> . MULTI ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (141) Mult -> . MULTI ABRE_P Var COMA Var CIERRA_P
    (142) Mult -> . MULTI ABRE_P expresion_alge1 COMA Var CIERRA_P
    (143) Mult -> . MULTI ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (144) Mult -> . MULTI ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (145) Mult -> . MULTI ABRE_P Var COMA expresion_alge1 CIERRA_P
    (146) Div -> . DIV ABRE_P NUMERO COMA NUMERO CIERRA_P
    (147) Div -> . DIV ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (148) Div -> . DIV ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (149) Div -> . DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (150) Div -> . DIV ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (151) Div -> . DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (152) Div -> . DIV ABRE_P NUMERO COMA Var CIERRA_P
    (153) Div -> . DIV ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (154) Div -> . DIV ABRE_P Var COMA NUMERO CIERRA_P
    (155) Div -> . DIV ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (156) Div -> . DIV ABRE_P Var COMA Var CIERRA_P
    (157) Div -> . DIV ABRE_P expresion_alge1 COMA Var CIERRA_P
    (158) Div -> . DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (159) Div -> . DIV ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (160) Div -> . DIV ABRE_P Var COMA expresion_alge1 CIERRA_P
    (257) Random -> . RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA
    (300) Run -> . RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA
    (242) If -> . IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2
    (243) IfElse -> . IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2
    (245) Repeat -> . REPEAT NUMERO BRACKET1 ordenes BRACKET2
    (246) Until -> . UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2
    (244) While -> . WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2
    (309) PrintLine -> . PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA
    (234) And -> . AND ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (235) And -> . AND ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (236) And -> . AND ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (237) And -> . AND ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (238) Or -> . OR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (239) Or -> . OR ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (240) Or -> . OR ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (241) Or -> . OR ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (247) Add -> . ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA
    (248) Add -> . ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (249) Add -> . ADD ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (250) Add -> . ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (251) Add -> . ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (252) Add -> . ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA

  ! shift/reduce conflict for PUT resolved as shift
  ! shift/reduce conflict for PUNTOCOMA resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for ABRE_P resolved as shift
  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for SUBSTR resolved as shift
  ! shift/reduce conflict for MULTI resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for RANDOM resolved as shift
  ! shift/reduce conflict for RUN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for IFELSE resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for PRINTLINE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
    COMMENT         shift and go to state 159
    PARA            shift and go to state 155
    FIN             reduce using rule 310 (empty -> .)
    PUT             shift and go to state 95
    DEF             shift and go to state 16
    PUNTOCOMA       shift and go to state 62
    NUMERO          shift and go to state 64
    ABRE_P          shift and go to state 63
    SUM             shift and go to state 67
    SUBSTR          shift and go to state 68
    MULTI           shift and go to state 65
    DIV             shift and go to state 66
    RANDOM          shift and go to state 69
    RUN             shift and go to state 70
    IF              shift and go to state 71
    IFELSE          shift and go to state 72
    REPEAT          shift and go to state 73
    UNTIL           shift and go to state 74
    WHILE           shift and go to state 75
    PRINTLINE       shift and go to state 76
    AND             shift and go to state 77
    OR              shift and go to state 78
    ADD             shift and go to state 79

  ! PUNTOCOMA       [ reduce using rule 310 (empty -> .) ]
  ! NUMERO          [ reduce using rule 310 (empty -> .) ]
  ! ABRE_P          [ reduce using rule 310 (empty -> .) ]
  ! SUM             [ reduce using rule 310 (empty -> .) ]
  ! SUBSTR          [ reduce using rule 310 (empty -> .) ]
  ! MULTI           [ reduce using rule 310 (empty -> .) ]
  ! DIV             [ reduce using rule 310 (empty -> .) ]
  ! RANDOM          [ reduce using rule 310 (empty -> .) ]
  ! RUN             [ reduce using rule 310 (empty -> .) ]
  ! IF              [ reduce using rule 310 (empty -> .) ]
  ! IFELSE          [ reduce using rule 310 (empty -> .) ]
  ! REPEAT          [ reduce using rule 310 (empty -> .) ]
  ! UNTIL           [ reduce using rule 310 (empty -> .) ]
  ! WHILE           [ reduce using rule 310 (empty -> .) ]
  ! PRINTLINE       [ reduce using rule 310 (empty -> .) ]
  ! AND             [ reduce using rule 310 (empty -> .) ]
  ! OR              [ reduce using rule 310 (empty -> .) ]
  ! ADD             [ reduce using rule 310 (empty -> .) ]
  ! PUT             [ reduce using rule 310 (empty -> .) ]

    variable1                      shift and go to state 164
    cuerpo2                        shift and go to state 256
    variablexd                     shift and go to state 158
    expresion                      shift and go to state 160
    llamadoproc                    shift and go to state 161
    empty                          shift and go to state 156
    Put2                           shift and go to state 162
    Put                            shift and go to state 163
    variable2                      shift and go to state 165
    funcion                        shift and go to state 90
    expresion_alge1                shift and go to state 45
    expresion_alge2                shift and go to state 46
    Sum                            shift and go to state 47
    Substr                         shift and go to state 48
    Mult                           shift and go to state 49
    Div                            shift and go to state 50
    Random                         shift and go to state 51
    Run                            shift and go to state 52
    If                             shift and go to state 53
    IfElse                         shift and go to state 54
    Repeat                         shift and go to state 55
    Until                          shift and go to state 56
    While                          shift and go to state 57
    PrintLine                      shift and go to state 58
    And                            shift and go to state 59
    Or                             shift and go to state 60
    Add                            shift and go to state 61

state 165

    (31) variablexd -> variable2 . cuerpo2
    (8) cuerpo2 -> . variablexd
    (9) cuerpo2 -> . COMMENT cuerpo2
    (10) cuerpo2 -> . expresion
    (11) cuerpo2 -> . llamadoproc
    (12) cuerpo2 -> . empty
    (13) cuerpo2 -> . Put2
    (14) cuerpo2 -> . Put
    (30) variablexd -> . variable1 cuerpo2
    (31) variablexd -> . variable2 cuerpo2
    (32) variablexd -> . empty empty
    (39) expresion -> . funcion expresion
    (40) expresion -> . expresion_alge1 expresion
    (41) expresion -> . expresion_alge2 expresion
    (42) expresion -> . Sum expresion
    (43) expresion -> . Substr expresion
    (44) expresion -> . Mult expresion
    (45) expresion -> . Div expresion
    (46) expresion -> . funcion empty
    (47) expresion -> . expresion_alge1 empty
    (48) expresion -> . expresion_alge2 empty
    (49) expresion -> . Sum empty
    (50) expresion -> . Substr empty
    (51) expresion -> . Mult empty
    (52) expresion -> . Div empty
    (53) expresion -> . empty empty
    (25) llamadoproc -> . PARA id BRACKET1 parametro BRACKET2 PUNTOCOMA
    (310) empty -> .
    (85) Put2 -> . PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (86) Put2 -> . PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (87) Put2 -> . PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (88) Put2 -> . PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (89) Put2 -> . PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA
    (84) Put -> . PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA
    (36) variable1 -> . DEF VAR PUNTOCOMA
    (37) variable2 -> . DEF VAR IGUAL NUMERO PUNTOCOMA
    (38) variable2 -> . DEF VAR IGUAL RESTA NUMERO PUNTOCOMA
    (69) funcion -> . Random empty
    (70) funcion -> . Run empty
    (71) funcion -> . If empty
    (72) funcion -> . IfElse empty
    (73) funcion -> . Repeat empty
    (74) funcion -> . Until empty
    (75) funcion -> . While empty
    (76) funcion -> . PrintLine empty
    (77) funcion -> . And empty
    (78) funcion -> . Or empty
    (79) funcion -> . Add empty
    (80) funcion -> . Put2 empty
    (81) funcion -> . Put empty
    (82) funcion -> . PUNTOCOMA funcion
    (83) funcion -> . empty empty
    (93) expresion_alge1 -> . NUMERO SUMA NUMERO
    (94) expresion_alge1 -> . NUMERO RESTA NUMERO
    (95) expresion_alge1 -> . NUMERO MULTI NUMERO
    (96) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (97) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (98) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (99) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (100) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (101) Sum -> . SUM ABRE_P NUMERO COMA NUMERO CIERRA_P
    (102) Sum -> . SUM ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (103) Sum -> . SUM ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (104) Sum -> . SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (105) Sum -> . SUM ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (106) Sum -> . SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (107) Sum -> . SUM ABRE_P NUMERO COMA Var CIERRA_P
    (108) Sum -> . SUM ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (109) Sum -> . SUM ABRE_P Var COMA NUMERO CIERRA_P
    (110) Sum -> . SUM ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (111) Sum -> . SUM ABRE_P Var COMA Var CIERRA_P
    (112) Sum -> . SUM ABRE_P expresion_alge1 COMA Var CIERRA_P
    (113) Sum -> . SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (114) Sum -> . SUM ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (115) Sum -> . SUM ABRE_P Var COMA expresion_alge1 CIERRA_P
    (116) Substr -> . SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P
    (117) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (118) Substr -> . SUBSTR ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (119) Substr -> . SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (120) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (121) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (122) Substr -> . SUBSTR ABRE_P NUMERO COMA Var CIERRA_P
    (123) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (124) Substr -> . SUBSTR ABRE_P Var COMA NUMERO CIERRA_P
    (125) Substr -> . SUBSTR ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (126) Substr -> . SUBSTR ABRE_P Var COMA Var CIERRA_P
    (127) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P
    (128) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (129) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (130) Substr -> . SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P
    (131) Mult -> . MULTI ABRE_P NUMERO COMA NUMERO CIERRA_P
    (132) Mult -> . MULTI ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (133) Mult -> . MULTI ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (134) Mult -> . MULTI ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (135) Mult -> . MULTI ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (136) Mult -> . MULTI ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (137) Mult -> . MULTI ABRE_P NUMERO COMA Var CIERRA_P
    (138) Mult -> . MULTI ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (139) Mult -> . MULTI ABRE_P Var COMA NUMERO CIERRA_P
    (140) Mult -> . MULTI ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (141) Mult -> . MULTI ABRE_P Var COMA Var CIERRA_P
    (142) Mult -> . MULTI ABRE_P expresion_alge1 COMA Var CIERRA_P
    (143) Mult -> . MULTI ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (144) Mult -> . MULTI ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (145) Mult -> . MULTI ABRE_P Var COMA expresion_alge1 CIERRA_P
    (146) Div -> . DIV ABRE_P NUMERO COMA NUMERO CIERRA_P
    (147) Div -> . DIV ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (148) Div -> . DIV ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (149) Div -> . DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (150) Div -> . DIV ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (151) Div -> . DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (152) Div -> . DIV ABRE_P NUMERO COMA Var CIERRA_P
    (153) Div -> . DIV ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (154) Div -> . DIV ABRE_P Var COMA NUMERO CIERRA_P
    (155) Div -> . DIV ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (156) Div -> . DIV ABRE_P Var COMA Var CIERRA_P
    (157) Div -> . DIV ABRE_P expresion_alge1 COMA Var CIERRA_P
    (158) Div -> . DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (159) Div -> . DIV ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (160) Div -> . DIV ABRE_P Var COMA expresion_alge1 CIERRA_P
    (257) Random -> . RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA
    (300) Run -> . RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA
    (242) If -> . IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2
    (243) IfElse -> . IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2
    (245) Repeat -> . REPEAT NUMERO BRACKET1 ordenes BRACKET2
    (246) Until -> . UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2
    (244) While -> . WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2
    (309) PrintLine -> . PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA
    (234) And -> . AND ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (235) And -> . AND ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (236) And -> . AND ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (237) And -> . AND ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (238) Or -> . OR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (239) Or -> . OR ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (240) Or -> . OR ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (241) Or -> . OR ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (247) Add -> . ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA
    (248) Add -> . ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (249) Add -> . ADD ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (250) Add -> . ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (251) Add -> . ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (252) Add -> . ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA

  ! shift/reduce conflict for PUT resolved as shift
  ! shift/reduce conflict for PUNTOCOMA resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for ABRE_P resolved as shift
  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for SUBSTR resolved as shift
  ! shift/reduce conflict for MULTI resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for RANDOM resolved as shift
  ! shift/reduce conflict for RUN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for IFELSE resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for PRINTLINE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
    COMMENT         shift and go to state 159
    PARA            shift and go to state 155
    FIN             reduce using rule 310 (empty -> .)
    PUT             shift and go to state 95
    DEF             shift and go to state 16
    PUNTOCOMA       shift and go to state 62
    NUMERO          shift and go to state 64
    ABRE_P          shift and go to state 63
    SUM             shift and go to state 67
    SUBSTR          shift and go to state 68
    MULTI           shift and go to state 65
    DIV             shift and go to state 66
    RANDOM          shift and go to state 69
    RUN             shift and go to state 70
    IF              shift and go to state 71
    IFELSE          shift and go to state 72
    REPEAT          shift and go to state 73
    UNTIL           shift and go to state 74
    WHILE           shift and go to state 75
    PRINTLINE       shift and go to state 76
    AND             shift and go to state 77
    OR              shift and go to state 78
    ADD             shift and go to state 79

  ! PUNTOCOMA       [ reduce using rule 310 (empty -> .) ]
  ! NUMERO          [ reduce using rule 310 (empty -> .) ]
  ! ABRE_P          [ reduce using rule 310 (empty -> .) ]
  ! SUM             [ reduce using rule 310 (empty -> .) ]
  ! SUBSTR          [ reduce using rule 310 (empty -> .) ]
  ! MULTI           [ reduce using rule 310 (empty -> .) ]
  ! DIV             [ reduce using rule 310 (empty -> .) ]
  ! RANDOM          [ reduce using rule 310 (empty -> .) ]
  ! RUN             [ reduce using rule 310 (empty -> .) ]
  ! IF              [ reduce using rule 310 (empty -> .) ]
  ! IFELSE          [ reduce using rule 310 (empty -> .) ]
  ! REPEAT          [ reduce using rule 310 (empty -> .) ]
  ! UNTIL           [ reduce using rule 310 (empty -> .) ]
  ! WHILE           [ reduce using rule 310 (empty -> .) ]
  ! PRINTLINE       [ reduce using rule 310 (empty -> .) ]
  ! AND             [ reduce using rule 310 (empty -> .) ]
  ! OR              [ reduce using rule 310 (empty -> .) ]
  ! ADD             [ reduce using rule 310 (empty -> .) ]
  ! PUT             [ reduce using rule 310 (empty -> .) ]

    variable2                      shift and go to state 165
    cuerpo2                        shift and go to state 257
    variablexd                     shift and go to state 158
    expresion                      shift and go to state 160
    llamadoproc                    shift and go to state 161
    empty                          shift and go to state 156
    Put2                           shift and go to state 162
    Put                            shift and go to state 163
    variable1                      shift and go to state 164
    funcion                        shift and go to state 90
    expresion_alge1                shift and go to state 45
    expresion_alge2                shift and go to state 46
    Sum                            shift and go to state 47
    Substr                         shift and go to state 48
    Mult                           shift and go to state 49
    Div                            shift and go to state 50
    Random                         shift and go to state 51
    Run                            shift and go to state 52
    If                             shift and go to state 53
    IfElse                         shift and go to state 54
    Repeat                         shift and go to state 55
    Until                          shift and go to state 56
    While                          shift and go to state 57
    PrintLine                      shift and go to state 58
    And                            shift and go to state 59
    Or                             shift and go to state 60
    Add                            shift and go to state 61

state 166

    (24) procedimiento -> PARA id BRACKET1 parametro BRACKET2 cuerpo2 . FIN cuerpo

    FIN             shift and go to state 258


state 167

    (253) parametro -> Var COMA parametro .

    BRACKET2        reduce using rule 253 (parametro -> Var COMA parametro .)


state 168

    (255) parametro -> empty . empty empty
    (310) empty -> .

    BRACKET2        reduce using rule 310 (empty -> .)

    empty                          shift and go to state 83

state 169

    (254) parametro -> Var empty empty .

    BRACKET2        reduce using rule 254 (parametro -> Var empty empty .)


state 170

    (26) main -> MAIN BRACKET1 BRACKET2 cuerpo3 FIN cuerpo .

    $end            reduce using rule 26 (main -> MAIN BRACKET1 BRACKET2 cuerpo3 FIN cuerpo .)


state 171

    (53) expresion -> empty empty .
    (83) funcion -> empty empty .

  ! reduce/reduce conflict for FIN resolved using rule 53 (expresion -> empty empty .)
    FIN             reduce using rule 53 (expresion -> empty empty .)
    PUNTOCOMA       reduce using rule 83 (funcion -> empty empty .)
    NUMERO          reduce using rule 83 (funcion -> empty empty .)
    ABRE_P          reduce using rule 83 (funcion -> empty empty .)
    SUM             reduce using rule 83 (funcion -> empty empty .)
    SUBSTR          reduce using rule 83 (funcion -> empty empty .)
    MULTI           reduce using rule 83 (funcion -> empty empty .)
    DIV             reduce using rule 83 (funcion -> empty empty .)
    RANDOM          reduce using rule 83 (funcion -> empty empty .)
    RUN             reduce using rule 83 (funcion -> empty empty .)
    IF              reduce using rule 83 (funcion -> empty empty .)
    IFELSE          reduce using rule 83 (funcion -> empty empty .)
    REPEAT          reduce using rule 83 (funcion -> empty empty .)
    UNTIL           reduce using rule 83 (funcion -> empty empty .)
    WHILE           reduce using rule 83 (funcion -> empty empty .)
    PRINTLINE       reduce using rule 83 (funcion -> empty empty .)
    AND             reduce using rule 83 (funcion -> empty empty .)
    OR              reduce using rule 83 (funcion -> empty empty .)
    ADD             reduce using rule 83 (funcion -> empty empty .)
    PUT             reduce using rule 83 (funcion -> empty empty .)

  ! FIN             [ reduce using rule 83 (funcion -> empty empty .) ]


state 172

    (85) Put2 -> PUT ABRE_P . VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (86) Put2 -> PUT ABRE_P . VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (87) Put2 -> PUT ABRE_P . VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (88) Put2 -> PUT ABRE_P . VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (89) Put2 -> PUT ABRE_P . VAR COMA funcion CIERRA_P PUNTOCOMA
    (84) Put -> PUT ABRE_P . VAR COMA VAR CIERRA_P PUNTOCOMA

    VAR             shift and go to state 259


state 173

    (83) funcion -> empty empty .

    PUNTOCOMA       reduce using rule 83 (funcion -> empty empty .)
    NUMERO          reduce using rule 83 (funcion -> empty empty .)
    ABRE_P          reduce using rule 83 (funcion -> empty empty .)
    SUM             reduce using rule 83 (funcion -> empty empty .)
    SUBSTR          reduce using rule 83 (funcion -> empty empty .)
    MULTI           reduce using rule 83 (funcion -> empty empty .)
    DIV             reduce using rule 83 (funcion -> empty empty .)
    RANDOM          reduce using rule 83 (funcion -> empty empty .)
    RUN             reduce using rule 83 (funcion -> empty empty .)
    IF              reduce using rule 83 (funcion -> empty empty .)
    IFELSE          reduce using rule 83 (funcion -> empty empty .)
    REPEAT          reduce using rule 83 (funcion -> empty empty .)
    UNTIL           reduce using rule 83 (funcion -> empty empty .)
    WHILE           reduce using rule 83 (funcion -> empty empty .)
    PRINTLINE       reduce using rule 83 (funcion -> empty empty .)
    AND             reduce using rule 83 (funcion -> empty empty .)
    OR              reduce using rule 83 (funcion -> empty empty .)
    ADD             reduce using rule 83 (funcion -> empty empty .)
    PUT             reduce using rule 83 (funcion -> empty empty .)
    FIN             reduce using rule 83 (funcion -> empty empty .)
    CIERRA_P        reduce using rule 83 (funcion -> empty empty .)
    BRACKET2        reduce using rule 83 (funcion -> empty empty .)


state 174

    (97) expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P . SUMA ABRE_P expresion_alge1 CIERRA_P
    (98) expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P . RESTA ABRE_P expresion_alge1 CIERRA_P
    (99) expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P . MULT ABRE_P expresion_alge1 CIERRA_P
    (100) expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P . DIV ABRE_P expresion_alge1 CIERRA_P

    SUMA            shift and go to state 260
    RESTA           shift and go to state 261
    MULT            shift and go to state 262
    DIV             shift and go to state 263


state 175

    (93) expresion_alge1 -> NUMERO SUMA NUMERO .

    PUNTOCOMA       reduce using rule 93 (expresion_alge1 -> NUMERO SUMA NUMERO .)
    NUMERO          reduce using rule 93 (expresion_alge1 -> NUMERO SUMA NUMERO .)
    ABRE_P          reduce using rule 93 (expresion_alge1 -> NUMERO SUMA NUMERO .)
    SUM             reduce using rule 93 (expresion_alge1 -> NUMERO SUMA NUMERO .)
    SUBSTR          reduce using rule 93 (expresion_alge1 -> NUMERO SUMA NUMERO .)
    MULTI           reduce using rule 93 (expresion_alge1 -> NUMERO SUMA NUMERO .)
    DIV             reduce using rule 93 (expresion_alge1 -> NUMERO SUMA NUMERO .)
    RANDOM          reduce using rule 93 (expresion_alge1 -> NUMERO SUMA NUMERO .)
    RUN             reduce using rule 93 (expresion_alge1 -> NUMERO SUMA NUMERO .)
    IF              reduce using rule 93 (expresion_alge1 -> NUMERO SUMA NUMERO .)
    IFELSE          reduce using rule 93 (expresion_alge1 -> NUMERO SUMA NUMERO .)
    REPEAT          reduce using rule 93 (expresion_alge1 -> NUMERO SUMA NUMERO .)
    UNTIL           reduce using rule 93 (expresion_alge1 -> NUMERO SUMA NUMERO .)
    WHILE           reduce using rule 93 (expresion_alge1 -> NUMERO SUMA NUMERO .)
    PRINTLINE       reduce using rule 93 (expresion_alge1 -> NUMERO SUMA NUMERO .)
    AND             reduce using rule 93 (expresion_alge1 -> NUMERO SUMA NUMERO .)
    OR              reduce using rule 93 (expresion_alge1 -> NUMERO SUMA NUMERO .)
    ADD             reduce using rule 93 (expresion_alge1 -> NUMERO SUMA NUMERO .)
    PUT             reduce using rule 93 (expresion_alge1 -> NUMERO SUMA NUMERO .)
    FIN             reduce using rule 93 (expresion_alge1 -> NUMERO SUMA NUMERO .)
    CIERRA_P        reduce using rule 93 (expresion_alge1 -> NUMERO SUMA NUMERO .)
    COMA            reduce using rule 93 (expresion_alge1 -> NUMERO SUMA NUMERO .)


state 176

    (94) expresion_alge1 -> NUMERO RESTA NUMERO .

    PUNTOCOMA       reduce using rule 94 (expresion_alge1 -> NUMERO RESTA NUMERO .)
    NUMERO          reduce using rule 94 (expresion_alge1 -> NUMERO RESTA NUMERO .)
    ABRE_P          reduce using rule 94 (expresion_alge1 -> NUMERO RESTA NUMERO .)
    SUM             reduce using rule 94 (expresion_alge1 -> NUMERO RESTA NUMERO .)
    SUBSTR          reduce using rule 94 (expresion_alge1 -> NUMERO RESTA NUMERO .)
    MULTI           reduce using rule 94 (expresion_alge1 -> NUMERO RESTA NUMERO .)
    DIV             reduce using rule 94 (expresion_alge1 -> NUMERO RESTA NUMERO .)
    RANDOM          reduce using rule 94 (expresion_alge1 -> NUMERO RESTA NUMERO .)
    RUN             reduce using rule 94 (expresion_alge1 -> NUMERO RESTA NUMERO .)
    IF              reduce using rule 94 (expresion_alge1 -> NUMERO RESTA NUMERO .)
    IFELSE          reduce using rule 94 (expresion_alge1 -> NUMERO RESTA NUMERO .)
    REPEAT          reduce using rule 94 (expresion_alge1 -> NUMERO RESTA NUMERO .)
    UNTIL           reduce using rule 94 (expresion_alge1 -> NUMERO RESTA NUMERO .)
    WHILE           reduce using rule 94 (expresion_alge1 -> NUMERO RESTA NUMERO .)
    PRINTLINE       reduce using rule 94 (expresion_alge1 -> NUMERO RESTA NUMERO .)
    AND             reduce using rule 94 (expresion_alge1 -> NUMERO RESTA NUMERO .)
    OR              reduce using rule 94 (expresion_alge1 -> NUMERO RESTA NUMERO .)
    ADD             reduce using rule 94 (expresion_alge1 -> NUMERO RESTA NUMERO .)
    PUT             reduce using rule 94 (expresion_alge1 -> NUMERO RESTA NUMERO .)
    FIN             reduce using rule 94 (expresion_alge1 -> NUMERO RESTA NUMERO .)
    CIERRA_P        reduce using rule 94 (expresion_alge1 -> NUMERO RESTA NUMERO .)
    COMA            reduce using rule 94 (expresion_alge1 -> NUMERO RESTA NUMERO .)


state 177

    (95) expresion_alge1 -> NUMERO MULTI NUMERO .

    PUNTOCOMA       reduce using rule 95 (expresion_alge1 -> NUMERO MULTI NUMERO .)
    NUMERO          reduce using rule 95 (expresion_alge1 -> NUMERO MULTI NUMERO .)
    ABRE_P          reduce using rule 95 (expresion_alge1 -> NUMERO MULTI NUMERO .)
    SUM             reduce using rule 95 (expresion_alge1 -> NUMERO MULTI NUMERO .)
    SUBSTR          reduce using rule 95 (expresion_alge1 -> NUMERO MULTI NUMERO .)
    MULTI           reduce using rule 95 (expresion_alge1 -> NUMERO MULTI NUMERO .)
    DIV             reduce using rule 95 (expresion_alge1 -> NUMERO MULTI NUMERO .)
    RANDOM          reduce using rule 95 (expresion_alge1 -> NUMERO MULTI NUMERO .)
    RUN             reduce using rule 95 (expresion_alge1 -> NUMERO MULTI NUMERO .)
    IF              reduce using rule 95 (expresion_alge1 -> NUMERO MULTI NUMERO .)
    IFELSE          reduce using rule 95 (expresion_alge1 -> NUMERO MULTI NUMERO .)
    REPEAT          reduce using rule 95 (expresion_alge1 -> NUMERO MULTI NUMERO .)
    UNTIL           reduce using rule 95 (expresion_alge1 -> NUMERO MULTI NUMERO .)
    WHILE           reduce using rule 95 (expresion_alge1 -> NUMERO MULTI NUMERO .)
    PRINTLINE       reduce using rule 95 (expresion_alge1 -> NUMERO MULTI NUMERO .)
    AND             reduce using rule 95 (expresion_alge1 -> NUMERO MULTI NUMERO .)
    OR              reduce using rule 95 (expresion_alge1 -> NUMERO MULTI NUMERO .)
    ADD             reduce using rule 95 (expresion_alge1 -> NUMERO MULTI NUMERO .)
    PUT             reduce using rule 95 (expresion_alge1 -> NUMERO MULTI NUMERO .)
    FIN             reduce using rule 95 (expresion_alge1 -> NUMERO MULTI NUMERO .)
    CIERRA_P        reduce using rule 95 (expresion_alge1 -> NUMERO MULTI NUMERO .)
    COMA            reduce using rule 95 (expresion_alge1 -> NUMERO MULTI NUMERO .)


state 178

    (96) expresion_alge1 -> NUMERO DIVISION NUMERO .

    PUNTOCOMA       reduce using rule 96 (expresion_alge1 -> NUMERO DIVISION NUMERO .)
    NUMERO          reduce using rule 96 (expresion_alge1 -> NUMERO DIVISION NUMERO .)
    ABRE_P          reduce using rule 96 (expresion_alge1 -> NUMERO DIVISION NUMERO .)
    SUM             reduce using rule 96 (expresion_alge1 -> NUMERO DIVISION NUMERO .)
    SUBSTR          reduce using rule 96 (expresion_alge1 -> NUMERO DIVISION NUMERO .)
    MULTI           reduce using rule 96 (expresion_alge1 -> NUMERO DIVISION NUMERO .)
    DIV             reduce using rule 96 (expresion_alge1 -> NUMERO DIVISION NUMERO .)
    RANDOM          reduce using rule 96 (expresion_alge1 -> NUMERO DIVISION NUMERO .)
    RUN             reduce using rule 96 (expresion_alge1 -> NUMERO DIVISION NUMERO .)
    IF              reduce using rule 96 (expresion_alge1 -> NUMERO DIVISION NUMERO .)
    IFELSE          reduce using rule 96 (expresion_alge1 -> NUMERO DIVISION NUMERO .)
    REPEAT          reduce using rule 96 (expresion_alge1 -> NUMERO DIVISION NUMERO .)
    UNTIL           reduce using rule 96 (expresion_alge1 -> NUMERO DIVISION NUMERO .)
    WHILE           reduce using rule 96 (expresion_alge1 -> NUMERO DIVISION NUMERO .)
    PRINTLINE       reduce using rule 96 (expresion_alge1 -> NUMERO DIVISION NUMERO .)
    AND             reduce using rule 96 (expresion_alge1 -> NUMERO DIVISION NUMERO .)
    OR              reduce using rule 96 (expresion_alge1 -> NUMERO DIVISION NUMERO .)
    ADD             reduce using rule 96 (expresion_alge1 -> NUMERO DIVISION NUMERO .)
    PUT             reduce using rule 96 (expresion_alge1 -> NUMERO DIVISION NUMERO .)
    FIN             reduce using rule 96 (expresion_alge1 -> NUMERO DIVISION NUMERO .)
    CIERRA_P        reduce using rule 96 (expresion_alge1 -> NUMERO DIVISION NUMERO .)
    COMA            reduce using rule 96 (expresion_alge1 -> NUMERO DIVISION NUMERO .)


state 179

    (131) Mult -> MULTI ABRE_P NUMERO . COMA NUMERO CIERRA_P
    (133) Mult -> MULTI ABRE_P NUMERO . COMA RESTA NUMERO CIERRA_P
    (134) Mult -> MULTI ABRE_P NUMERO . COMA expresion_alge1 CIERRA_P
    (137) Mult -> MULTI ABRE_P NUMERO . COMA Var CIERRA_P
    (93) expresion_alge1 -> NUMERO . SUMA NUMERO
    (94) expresion_alge1 -> NUMERO . RESTA NUMERO
    (95) expresion_alge1 -> NUMERO . MULTI NUMERO
    (96) expresion_alge1 -> NUMERO . DIVISION NUMERO

    COMA            shift and go to state 264
    SUMA            shift and go to state 127
    RESTA           shift and go to state 128
    MULTI           shift and go to state 129
    DIVISION        shift and go to state 130


state 180

    (132) Mult -> MULTI ABRE_P RESTA . NUMERO COMA NUMERO CIERRA_P
    (135) Mult -> MULTI ABRE_P RESTA . NUMERO COMA expresion_alge1 CIERRA_P
    (138) Mult -> MULTI ABRE_P RESTA . NUMERO COMA Var CIERRA_P

    NUMERO          shift and go to state 265


state 181

    (136) Mult -> MULTI ABRE_P expresion_alge1 . COMA expresion_alge1 CIERRA_P
    (142) Mult -> MULTI ABRE_P expresion_alge1 . COMA Var CIERRA_P
    (143) Mult -> MULTI ABRE_P expresion_alge1 . COMA NUMERO CIERRA_P
    (144) Mult -> MULTI ABRE_P expresion_alge1 . COMA RESTA NUMERO CIERRA_P

    COMA            shift and go to state 266


state 182

    (139) Mult -> MULTI ABRE_P Var . COMA NUMERO CIERRA_P
    (140) Mult -> MULTI ABRE_P Var . COMA RESTA NUMERO CIERRA_P
    (141) Mult -> MULTI ABRE_P Var . COMA Var CIERRA_P
    (145) Mult -> MULTI ABRE_P Var . COMA expresion_alge1 CIERRA_P

    COMA            shift and go to state 267


state 183

    (146) Div -> DIV ABRE_P NUMERO . COMA NUMERO CIERRA_P
    (148) Div -> DIV ABRE_P NUMERO . COMA RESTA NUMERO CIERRA_P
    (149) Div -> DIV ABRE_P NUMERO . COMA expresion_alge1 CIERRA_P
    (152) Div -> DIV ABRE_P NUMERO . COMA Var CIERRA_P
    (93) expresion_alge1 -> NUMERO . SUMA NUMERO
    (94) expresion_alge1 -> NUMERO . RESTA NUMERO
    (95) expresion_alge1 -> NUMERO . MULTI NUMERO
    (96) expresion_alge1 -> NUMERO . DIVISION NUMERO

    COMA            shift and go to state 268
    SUMA            shift and go to state 127
    RESTA           shift and go to state 128
    MULTI           shift and go to state 129
    DIVISION        shift and go to state 130


state 184

    (147) Div -> DIV ABRE_P RESTA . NUMERO COMA NUMERO CIERRA_P
    (150) Div -> DIV ABRE_P RESTA . NUMERO COMA expresion_alge1 CIERRA_P
    (153) Div -> DIV ABRE_P RESTA . NUMERO COMA Var CIERRA_P

    NUMERO          shift and go to state 269


state 185

    (151) Div -> DIV ABRE_P expresion_alge1 . COMA expresion_alge1 CIERRA_P
    (157) Div -> DIV ABRE_P expresion_alge1 . COMA Var CIERRA_P
    (158) Div -> DIV ABRE_P expresion_alge1 . COMA NUMERO CIERRA_P
    (159) Div -> DIV ABRE_P expresion_alge1 . COMA RESTA NUMERO CIERRA_P

    COMA            shift and go to state 270


state 186

    (154) Div -> DIV ABRE_P Var . COMA NUMERO CIERRA_P
    (155) Div -> DIV ABRE_P Var . COMA RESTA NUMERO CIERRA_P
    (156) Div -> DIV ABRE_P Var . COMA Var CIERRA_P
    (160) Div -> DIV ABRE_P Var . COMA expresion_alge1 CIERRA_P

    COMA            shift and go to state 271


state 187

    (101) Sum -> SUM ABRE_P NUMERO . COMA NUMERO CIERRA_P
    (103) Sum -> SUM ABRE_P NUMERO . COMA RESTA NUMERO CIERRA_P
    (104) Sum -> SUM ABRE_P NUMERO . COMA expresion_alge1 CIERRA_P
    (107) Sum -> SUM ABRE_P NUMERO . COMA Var CIERRA_P
    (93) expresion_alge1 -> NUMERO . SUMA NUMERO
    (94) expresion_alge1 -> NUMERO . RESTA NUMERO
    (95) expresion_alge1 -> NUMERO . MULTI NUMERO
    (96) expresion_alge1 -> NUMERO . DIVISION NUMERO

    COMA            shift and go to state 272
    SUMA            shift and go to state 127
    RESTA           shift and go to state 128
    MULTI           shift and go to state 129
    DIVISION        shift and go to state 130


state 188

    (102) Sum -> SUM ABRE_P RESTA . NUMERO COMA NUMERO CIERRA_P
    (105) Sum -> SUM ABRE_P RESTA . NUMERO COMA expresion_alge1 CIERRA_P
    (108) Sum -> SUM ABRE_P RESTA . NUMERO COMA Var CIERRA_P

    NUMERO          shift and go to state 273


state 189

    (106) Sum -> SUM ABRE_P expresion_alge1 . COMA expresion_alge1 CIERRA_P
    (112) Sum -> SUM ABRE_P expresion_alge1 . COMA Var CIERRA_P
    (113) Sum -> SUM ABRE_P expresion_alge1 . COMA NUMERO CIERRA_P
    (114) Sum -> SUM ABRE_P expresion_alge1 . COMA RESTA NUMERO CIERRA_P

    COMA            shift and go to state 274


state 190

    (109) Sum -> SUM ABRE_P Var . COMA NUMERO CIERRA_P
    (110) Sum -> SUM ABRE_P Var . COMA RESTA NUMERO CIERRA_P
    (111) Sum -> SUM ABRE_P Var . COMA Var CIERRA_P
    (115) Sum -> SUM ABRE_P Var . COMA expresion_alge1 CIERRA_P

    COMA            shift and go to state 275


state 191

    (116) Substr -> SUBSTR ABRE_P NUMERO . COMA NUMERO CIERRA_P
    (118) Substr -> SUBSTR ABRE_P NUMERO . COMA RESTA NUMERO CIERRA_P
    (119) Substr -> SUBSTR ABRE_P NUMERO . COMA expresion_alge1 CIERRA_P
    (122) Substr -> SUBSTR ABRE_P NUMERO . COMA Var CIERRA_P
    (93) expresion_alge1 -> NUMERO . SUMA NUMERO
    (94) expresion_alge1 -> NUMERO . RESTA NUMERO
    (95) expresion_alge1 -> NUMERO . MULTI NUMERO
    (96) expresion_alge1 -> NUMERO . DIVISION NUMERO

    COMA            shift and go to state 276
    SUMA            shift and go to state 127
    RESTA           shift and go to state 128
    MULTI           shift and go to state 129
    DIVISION        shift and go to state 130


state 192

    (117) Substr -> SUBSTR ABRE_P RESTA . NUMERO COMA NUMERO CIERRA_P
    (120) Substr -> SUBSTR ABRE_P RESTA . NUMERO COMA expresion_alge1 CIERRA_P
    (123) Substr -> SUBSTR ABRE_P RESTA . NUMERO COMA Var CIERRA_P

    NUMERO          shift and go to state 277


state 193

    (121) Substr -> SUBSTR ABRE_P expresion_alge1 . COMA expresion_alge1 CIERRA_P
    (127) Substr -> SUBSTR ABRE_P expresion_alge1 . COMA Var CIERRA_P
    (128) Substr -> SUBSTR ABRE_P expresion_alge1 . COMA NUMERO CIERRA_P
    (129) Substr -> SUBSTR ABRE_P expresion_alge1 . COMA RESTA NUMERO CIERRA_P

    COMA            shift and go to state 278


state 194

    (124) Substr -> SUBSTR ABRE_P Var . COMA NUMERO CIERRA_P
    (125) Substr -> SUBSTR ABRE_P Var . COMA RESTA NUMERO CIERRA_P
    (126) Substr -> SUBSTR ABRE_P Var . COMA Var CIERRA_P
    (130) Substr -> SUBSTR ABRE_P Var . COMA expresion_alge1 CIERRA_P

    COMA            shift and go to state 279


state 195

    (257) Random -> RANDOM ABRE_P NUMERO . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 280


state 196

    (300) Run -> RUN BRACKET1 ordenes . BRACKET2 PUNTOCOMA

    BRACKET2        shift and go to state 281


state 197

    (67) ordenes -> PUNTOCOMA . ordenes
    (54) ordenes -> . Beginning empty
    (55) ordenes -> . ContinueUp empty
    (56) ordenes -> . ContinueDown empty
    (57) ordenes -> . ContinueRight empty
    (58) ordenes -> . ContinueLeft empty
    (59) ordenes -> . Up empty
    (60) ordenes -> . Down empty
    (61) ordenes -> . Speed empty
    (62) ordenes -> . Diag empty
    (63) ordenes -> . Pos empty
    (64) ordenes -> . PosX empty
    (65) ordenes -> . PosY empty
    (66) ordenes -> . UseColor empty
    (67) ordenes -> . PUNTOCOMA ordenes
    (68) ordenes -> . empty empty
    (256) Beginning -> . BEGINNING PUNTOCOMA
    (258) ContinueUp -> . CONTINUEUP NUMERO PUNTOCOMA
    (259) ContinueUp -> . CONTINUEUP expresion_alge1 PUNTOCOMA
    (260) ContinueUp -> . CONTINUEUP expresion_alge2 PUNTOCOMA
    (261) ContinueUp -> . CONTINUEUP Var PUNTOCOMA
    (262) ContinueDown -> . CONTINUEDOWN NUMERO PUNTOCOMA
    (263) ContinueDown -> . CONTINUEDOWN expresion_alge1 PUNTOCOMA
    (264) ContinueDown -> . CONTINUEDOWN expresion_alge2 PUNTOCOMA
    (265) ContinueDown -> . CONTINUEDOWN Var PUNTOCOMA
    (266) ContinueRight -> . CONTINUERIGHT NUMERO PUNTOCOMA
    (267) ContinueRight -> . CONTINUERIGHT expresion_alge1 PUNTOCOMA
    (268) ContinueRight -> . CONTINUERIGHT expresion_alge2 PUNTOCOMA
    (269) ContinueRight -> . CONTINUERIGHT Var PUNTOCOMA
    (270) ContinueLeft -> . CONTINUELEFT NUMERO PUNTOCOMA
    (271) ContinueLeft -> . CONTINUELEFT expresion_alge1 PUNTOCOMA
    (272) ContinueLeft -> . CONTINUELEFT expresion_alge2 PUNTOCOMA
    (273) ContinueLeft -> . CONTINUELEFT Var PUNTOCOMA
    (274) Up -> . UP PUNTOCOMA
    (275) Down -> . DOWN PUNTOCOMA
    (276) Speed -> . SPEED NUMERO PUNTOCOMA
    (277) Diag -> . POS ABRE_P STRING COMA NUMERO CIERRA_P PUNTOCOMA
    (278) Pos -> . POS ABRE_P NUMERO COMA NUMERO CIERRA_P PUNTOCOMA
    (279) Pos -> . POS ABRE_P expresion_alge1 COMA NUMERO CIERRA_P PUNTOCOMA
    (280) Pos -> . POS ABRE_P NUMERO COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (281) Pos -> . POS ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (282) Pos -> . POS ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (283) Pos -> . POS ABRE_P NUMERO COMA Var CIERRA_P PUNTOCOMA
    (284) Pos -> . POS ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (285) Pos -> . POS ABRE_P expresion_alge1 COMA Var CIERRA_P PUNTOCOMA
    (286) Pos -> . POS ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (287) PosX -> . POSX NUMERO PUNTOCOMA
    (288) PosX -> . POSX RESTA NUMERO PUNTOCOMA
    (289) PosX -> . POSX expresion_alge1 PUNTOCOMA
    (290) PosX -> . POSX expresion_alge2 PUNTOCOMA
    (291) PosX -> . POSX Var PUNTOCOMA
    (292) PosY -> . POSY NUMERO PUNTOCOMA
    (293) PosY -> . POSY RESTA NUMERO PUNTOCOMA
    (294) PosY -> . POSY expresion_alge1 PUNTOCOMA
    (295) PosY -> . POSY expresion_alge2 PUNTOCOMA
    (296) PosY -> . POSY Var PUNTOCOMA
    (297) UseColor -> . USECOLOR NUMERO PUNTOCOMA
    (298) UseColor -> . USECOLOR Var PUNTOCOMA
    (299) UseColor -> . USECOLOR empty PUNTOCOMA
    (310) empty -> .

    PUNTOCOMA       shift and go to state 197
    BEGINNING       shift and go to state 212
    CONTINUEUP      shift and go to state 213
    CONTINUEDOWN    shift and go to state 214
    CONTINUERIGHT   shift and go to state 215
    CONTINUELEFT    shift and go to state 216
    UP              shift and go to state 217
    DOWN            shift and go to state 218
    SPEED           shift and go to state 219
    POS             shift and go to state 220
    POSX            shift and go to state 221
    POSY            shift and go to state 222
    USECOLOR        shift and go to state 223
    BRACKET2        reduce using rule 310 (empty -> .)

    ordenes                        shift and go to state 282
    Beginning                      shift and go to state 198
    empty                          shift and go to state 199
    ContinueUp                     shift and go to state 200
    ContinueDown                   shift and go to state 201
    ContinueRight                  shift and go to state 202
    ContinueLeft                   shift and go to state 203
    Up                             shift and go to state 204
    Down                           shift and go to state 205
    Speed                          shift and go to state 206
    Diag                           shift and go to state 207
    Pos                            shift and go to state 208
    PosX                           shift and go to state 209
    PosY                           shift and go to state 210
    UseColor                       shift and go to state 211

state 198

    (54) ordenes -> Beginning . empty
    (310) empty -> .

    BRACKET2        reduce using rule 310 (empty -> .)

    empty                          shift and go to state 283

state 199

    (68) ordenes -> empty . empty
    (310) empty -> .

    BRACKET2        reduce using rule 310 (empty -> .)

    empty                          shift and go to state 284

state 200

    (55) ordenes -> ContinueUp . empty
    (310) empty -> .

    BRACKET2        reduce using rule 310 (empty -> .)

    empty                          shift and go to state 285

state 201

    (56) ordenes -> ContinueDown . empty
    (310) empty -> .

    BRACKET2        reduce using rule 310 (empty -> .)

    empty                          shift and go to state 286

state 202

    (57) ordenes -> ContinueRight . empty
    (310) empty -> .

    BRACKET2        reduce using rule 310 (empty -> .)

    empty                          shift and go to state 287

state 203

    (58) ordenes -> ContinueLeft . empty
    (310) empty -> .

    BRACKET2        reduce using rule 310 (empty -> .)

    empty                          shift and go to state 288

state 204

    (59) ordenes -> Up . empty
    (310) empty -> .

    BRACKET2        reduce using rule 310 (empty -> .)

    empty                          shift and go to state 289

state 205

    (60) ordenes -> Down . empty
    (310) empty -> .

    BRACKET2        reduce using rule 310 (empty -> .)

    empty                          shift and go to state 290

state 206

    (61) ordenes -> Speed . empty
    (310) empty -> .

    BRACKET2        reduce using rule 310 (empty -> .)

    empty                          shift and go to state 291

state 207

    (62) ordenes -> Diag . empty
    (310) empty -> .

    BRACKET2        reduce using rule 310 (empty -> .)

    empty                          shift and go to state 292

state 208

    (63) ordenes -> Pos . empty
    (310) empty -> .

    BRACKET2        reduce using rule 310 (empty -> .)

    empty                          shift and go to state 293

state 209

    (64) ordenes -> PosX . empty
    (310) empty -> .

    BRACKET2        reduce using rule 310 (empty -> .)

    empty                          shift and go to state 294

state 210

    (65) ordenes -> PosY . empty
    (310) empty -> .

    BRACKET2        reduce using rule 310 (empty -> .)

    empty                          shift and go to state 295

state 211

    (66) ordenes -> UseColor . empty
    (310) empty -> .

    BRACKET2        reduce using rule 310 (empty -> .)

    empty                          shift and go to state 296

state 212

    (256) Beginning -> BEGINNING . PUNTOCOMA

    PUNTOCOMA       shift and go to state 297


state 213

    (258) ContinueUp -> CONTINUEUP . NUMERO PUNTOCOMA
    (259) ContinueUp -> CONTINUEUP . expresion_alge1 PUNTOCOMA
    (260) ContinueUp -> CONTINUEUP . expresion_alge2 PUNTOCOMA
    (261) ContinueUp -> CONTINUEUP . Var PUNTOCOMA
    (93) expresion_alge1 -> . NUMERO SUMA NUMERO
    (94) expresion_alge1 -> . NUMERO RESTA NUMERO
    (95) expresion_alge1 -> . NUMERO MULTI NUMERO
    (96) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (97) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (98) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (99) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (100) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (161) Var -> . VAR

    NUMERO          shift and go to state 298
    ABRE_P          shift and go to state 63
    VAR             shift and go to state 34

    expresion_alge1                shift and go to state 299
    expresion_alge2                shift and go to state 300
    Var                            shift and go to state 301

state 214

    (262) ContinueDown -> CONTINUEDOWN . NUMERO PUNTOCOMA
    (263) ContinueDown -> CONTINUEDOWN . expresion_alge1 PUNTOCOMA
    (264) ContinueDown -> CONTINUEDOWN . expresion_alge2 PUNTOCOMA
    (265) ContinueDown -> CONTINUEDOWN . Var PUNTOCOMA
    (93) expresion_alge1 -> . NUMERO SUMA NUMERO
    (94) expresion_alge1 -> . NUMERO RESTA NUMERO
    (95) expresion_alge1 -> . NUMERO MULTI NUMERO
    (96) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (97) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (98) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (99) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (100) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (161) Var -> . VAR

    NUMERO          shift and go to state 302
    ABRE_P          shift and go to state 63
    VAR             shift and go to state 34

    expresion_alge1                shift and go to state 303
    expresion_alge2                shift and go to state 304
    Var                            shift and go to state 305

state 215

    (266) ContinueRight -> CONTINUERIGHT . NUMERO PUNTOCOMA
    (267) ContinueRight -> CONTINUERIGHT . expresion_alge1 PUNTOCOMA
    (268) ContinueRight -> CONTINUERIGHT . expresion_alge2 PUNTOCOMA
    (269) ContinueRight -> CONTINUERIGHT . Var PUNTOCOMA
    (93) expresion_alge1 -> . NUMERO SUMA NUMERO
    (94) expresion_alge1 -> . NUMERO RESTA NUMERO
    (95) expresion_alge1 -> . NUMERO MULTI NUMERO
    (96) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (97) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (98) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (99) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (100) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (161) Var -> . VAR

    NUMERO          shift and go to state 306
    ABRE_P          shift and go to state 63
    VAR             shift and go to state 34

    expresion_alge1                shift and go to state 307
    expresion_alge2                shift and go to state 308
    Var                            shift and go to state 309

state 216

    (270) ContinueLeft -> CONTINUELEFT . NUMERO PUNTOCOMA
    (271) ContinueLeft -> CONTINUELEFT . expresion_alge1 PUNTOCOMA
    (272) ContinueLeft -> CONTINUELEFT . expresion_alge2 PUNTOCOMA
    (273) ContinueLeft -> CONTINUELEFT . Var PUNTOCOMA
    (93) expresion_alge1 -> . NUMERO SUMA NUMERO
    (94) expresion_alge1 -> . NUMERO RESTA NUMERO
    (95) expresion_alge1 -> . NUMERO MULTI NUMERO
    (96) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (97) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (98) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (99) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (100) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (161) Var -> . VAR

    NUMERO          shift and go to state 310
    ABRE_P          shift and go to state 63
    VAR             shift and go to state 34

    expresion_alge1                shift and go to state 311
    expresion_alge2                shift and go to state 312
    Var                            shift and go to state 313

state 217

    (274) Up -> UP . PUNTOCOMA

    PUNTOCOMA       shift and go to state 314


state 218

    (275) Down -> DOWN . PUNTOCOMA

    PUNTOCOMA       shift and go to state 315


state 219

    (276) Speed -> SPEED . NUMERO PUNTOCOMA

    NUMERO          shift and go to state 316


state 220

    (277) Diag -> POS . ABRE_P STRING COMA NUMERO CIERRA_P PUNTOCOMA
    (278) Pos -> POS . ABRE_P NUMERO COMA NUMERO CIERRA_P PUNTOCOMA
    (279) Pos -> POS . ABRE_P expresion_alge1 COMA NUMERO CIERRA_P PUNTOCOMA
    (280) Pos -> POS . ABRE_P NUMERO COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (281) Pos -> POS . ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (282) Pos -> POS . ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (283) Pos -> POS . ABRE_P NUMERO COMA Var CIERRA_P PUNTOCOMA
    (284) Pos -> POS . ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (285) Pos -> POS . ABRE_P expresion_alge1 COMA Var CIERRA_P PUNTOCOMA
    (286) Pos -> POS . ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA

    ABRE_P          shift and go to state 317


state 221

    (287) PosX -> POSX . NUMERO PUNTOCOMA
    (288) PosX -> POSX . RESTA NUMERO PUNTOCOMA
    (289) PosX -> POSX . expresion_alge1 PUNTOCOMA
    (290) PosX -> POSX . expresion_alge2 PUNTOCOMA
    (291) PosX -> POSX . Var PUNTOCOMA
    (93) expresion_alge1 -> . NUMERO SUMA NUMERO
    (94) expresion_alge1 -> . NUMERO RESTA NUMERO
    (95) expresion_alge1 -> . NUMERO MULTI NUMERO
    (96) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (97) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (98) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (99) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (100) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (161) Var -> . VAR

    NUMERO          shift and go to state 318
    RESTA           shift and go to state 319
    ABRE_P          shift and go to state 63
    VAR             shift and go to state 34

    expresion_alge1                shift and go to state 320
    expresion_alge2                shift and go to state 321
    Var                            shift and go to state 322

state 222

    (292) PosY -> POSY . NUMERO PUNTOCOMA
    (293) PosY -> POSY . RESTA NUMERO PUNTOCOMA
    (294) PosY -> POSY . expresion_alge1 PUNTOCOMA
    (295) PosY -> POSY . expresion_alge2 PUNTOCOMA
    (296) PosY -> POSY . Var PUNTOCOMA
    (93) expresion_alge1 -> . NUMERO SUMA NUMERO
    (94) expresion_alge1 -> . NUMERO RESTA NUMERO
    (95) expresion_alge1 -> . NUMERO MULTI NUMERO
    (96) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (97) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (98) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (99) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (100) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (161) Var -> . VAR

    NUMERO          shift and go to state 323
    RESTA           shift and go to state 324
    ABRE_P          shift and go to state 63
    VAR             shift and go to state 34

    expresion_alge1                shift and go to state 325
    expresion_alge2                shift and go to state 326
    Var                            shift and go to state 327

state 223

    (297) UseColor -> USECOLOR . NUMERO PUNTOCOMA
    (298) UseColor -> USECOLOR . Var PUNTOCOMA
    (299) UseColor -> USECOLOR . empty PUNTOCOMA
    (161) Var -> . VAR
    (310) empty -> .

    NUMERO          shift and go to state 328
    VAR             shift and go to state 34
    PUNTOCOMA       reduce using rule 310 (empty -> .)

    Var                            shift and go to state 329
    empty                          shift and go to state 330

state 224

    (242) If -> IF ABRE_P condicion . CIERRA_P BRACKET1 funcion BRACKET2

    CIERRA_P        shift and go to state 331


state 225

    (90) condicion -> Equal .

    CIERRA_P        reduce using rule 90 (condicion -> Equal .)
    BRACKET2        reduce using rule 90 (condicion -> Equal .)


state 226

    (91) condicion -> Greater .

    CIERRA_P        reduce using rule 91 (condicion -> Greater .)
    BRACKET2        reduce using rule 91 (condicion -> Greater .)


state 227

    (92) condicion -> Smaller .

    CIERRA_P        reduce using rule 92 (condicion -> Smaller .)
    BRACKET2        reduce using rule 92 (condicion -> Smaller .)


state 228

    (162) Equal -> EQUAL . ABRE_P NUMERO COMA NUMERO CIERRA_P PUNTOCOMA
    (163) Equal -> EQUAL . ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P PUNTOCOMA
    (164) Equal -> EQUAL . ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (165) Equal -> EQUAL . ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (166) Equal -> EQUAL . ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (167) Equal -> EQUAL . ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (168) Equal -> EQUAL . ABRE_P NUMERO COMA Var CIERRA_P PUNTOCOMA
    (169) Equal -> EQUAL . ABRE_P RESTA NUMERO COMA Var CIERRA_P PUNTOCOMA
    (170) Equal -> EQUAL . ABRE_P expresion_alge2 COMA Var CIERRA_P PUNTOCOMA
    (171) Equal -> EQUAL . ABRE_P expresion_alge1 COMA Var CIERRA_P PUNTOCOMA
    (172) Equal -> EQUAL . ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (173) Equal -> EQUAL . ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (174) Equal -> EQUAL . ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (175) Equal -> EQUAL . ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (176) Equal -> EQUAL . ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (177) Equal -> EQUAL . ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (178) Equal -> EQUAL . ABRE_P expresion_alge1 COMA NUMERO CIERRA_P PUNTOCOMA
    (179) Equal -> EQUAL . ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (180) Equal -> EQUAL . ABRE_P expresion_alge2 COMA NUMERO CIERRA_P PUNTOCOMA
    (181) Equal -> EQUAL . ABRE_P expresion_alge2 COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (182) Equal -> EQUAL . ABRE_P NUMERO COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (183) Equal -> EQUAL . ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (184) Equal -> EQUAL . ABRE_P NUMERO COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (185) Equal -> EQUAL . ABRE_P RESTA NUMERO COMA expresion_alge2 CIERRA_P PUNTOCOMA

    ABRE_P          shift and go to state 332


state 229

    (186) Greater -> GREATER . ABRE_P NUMERO COMA NUMERO CIERRA_P PUNTOCOMA
    (187) Greater -> GREATER . ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P PUNTOCOMA
    (188) Greater -> GREATER . ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (189) Greater -> GREATER . ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (190) Greater -> GREATER . ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (191) Greater -> GREATER . ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (192) Greater -> GREATER . ABRE_P NUMERO COMA Var CIERRA_P PUNTOCOMA
    (193) Greater -> GREATER . ABRE_P RESTA NUMERO COMA Var CIERRA_P PUNTOCOMA
    (194) Greater -> GREATER . ABRE_P expresion_alge2 COMA Var CIERRA_P PUNTOCOMA
    (195) Greater -> GREATER . ABRE_P expresion_alge1 COMA Var CIERRA_P PUNTOCOMA
    (196) Greater -> GREATER . ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (197) Greater -> GREATER . ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (198) Greater -> GREATER . ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (199) Greater -> GREATER . ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (200) Greater -> GREATER . ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (201) Greater -> GREATER . ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (202) Greater -> GREATER . ABRE_P expresion_alge1 COMA NUMERO CIERRA_P PUNTOCOMA
    (203) Greater -> GREATER . ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (204) Greater -> GREATER . ABRE_P expresion_alge2 COMA NUMERO CIERRA_P PUNTOCOMA
    (205) Greater -> GREATER . ABRE_P expresion_alge2 COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (206) Greater -> GREATER . ABRE_P NUMERO COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (207) Greater -> GREATER . ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (208) Greater -> GREATER . ABRE_P NUMERO COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (209) Greater -> GREATER . ABRE_P RESTA NUMERO COMA expresion_alge2 CIERRA_P PUNTOCOMA

    ABRE_P          shift and go to state 333


state 230

    (210) Smaller -> SMALLER . ABRE_P NUMERO COMA NUMERO CIERRA_P PUNTOCOMA
    (211) Smaller -> SMALLER . ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P PUNTOCOMA
    (212) Smaller -> SMALLER . ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (213) Smaller -> SMALLER . ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (214) Smaller -> SMALLER . ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (215) Smaller -> SMALLER . ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (216) Smaller -> SMALLER . ABRE_P NUMERO COMA Var CIERRA_P PUNTOCOMA
    (217) Smaller -> SMALLER . ABRE_P RESTA NUMERO COMA Var CIERRA_P PUNTOCOMA
    (218) Smaller -> SMALLER . ABRE_P expresion_alge2 COMA Var CIERRA_P PUNTOCOMA
    (219) Smaller -> SMALLER . ABRE_P expresion_alge1 COMA Var CIERRA_P PUNTOCOMA
    (220) Smaller -> SMALLER . ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (221) Smaller -> SMALLER . ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (222) Smaller -> SMALLER . ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (223) Smaller -> SMALLER . ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (224) Smaller -> SMALLER . ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (225) Smaller -> SMALLER . ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (226) Smaller -> SMALLER . ABRE_P expresion_alge1 COMA NUMERO CIERRA_P PUNTOCOMA
    (227) Smaller -> SMALLER . ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (228) Smaller -> SMALLER . ABRE_P expresion_alge2 COMA NUMERO CIERRA_P PUNTOCOMA
    (229) Smaller -> SMALLER . ABRE_P expresion_alge2 COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (230) Smaller -> SMALLER . ABRE_P NUMERO COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (231) Smaller -> SMALLER . ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (232) Smaller -> SMALLER . ABRE_P NUMERO COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (233) Smaller -> SMALLER . ABRE_P RESTA NUMERO COMA expresion_alge2 CIERRA_P PUNTOCOMA

    ABRE_P          shift and go to state 334


state 231

    (243) IfElse -> IFELSE ABRE_P condicion . CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2

    CIERRA_P        shift and go to state 335


state 232

    (245) Repeat -> REPEAT NUMERO BRACKET1 . ordenes BRACKET2
    (54) ordenes -> . Beginning empty
    (55) ordenes -> . ContinueUp empty
    (56) ordenes -> . ContinueDown empty
    (57) ordenes -> . ContinueRight empty
    (58) ordenes -> . ContinueLeft empty
    (59) ordenes -> . Up empty
    (60) ordenes -> . Down empty
    (61) ordenes -> . Speed empty
    (62) ordenes -> . Diag empty
    (63) ordenes -> . Pos empty
    (64) ordenes -> . PosX empty
    (65) ordenes -> . PosY empty
    (66) ordenes -> . UseColor empty
    (67) ordenes -> . PUNTOCOMA ordenes
    (68) ordenes -> . empty empty
    (256) Beginning -> . BEGINNING PUNTOCOMA
    (258) ContinueUp -> . CONTINUEUP NUMERO PUNTOCOMA
    (259) ContinueUp -> . CONTINUEUP expresion_alge1 PUNTOCOMA
    (260) ContinueUp -> . CONTINUEUP expresion_alge2 PUNTOCOMA
    (261) ContinueUp -> . CONTINUEUP Var PUNTOCOMA
    (262) ContinueDown -> . CONTINUEDOWN NUMERO PUNTOCOMA
    (263) ContinueDown -> . CONTINUEDOWN expresion_alge1 PUNTOCOMA
    (264) ContinueDown -> . CONTINUEDOWN expresion_alge2 PUNTOCOMA
    (265) ContinueDown -> . CONTINUEDOWN Var PUNTOCOMA
    (266) ContinueRight -> . CONTINUERIGHT NUMERO PUNTOCOMA
    (267) ContinueRight -> . CONTINUERIGHT expresion_alge1 PUNTOCOMA
    (268) ContinueRight -> . CONTINUERIGHT expresion_alge2 PUNTOCOMA
    (269) ContinueRight -> . CONTINUERIGHT Var PUNTOCOMA
    (270) ContinueLeft -> . CONTINUELEFT NUMERO PUNTOCOMA
    (271) ContinueLeft -> . CONTINUELEFT expresion_alge1 PUNTOCOMA
    (272) ContinueLeft -> . CONTINUELEFT expresion_alge2 PUNTOCOMA
    (273) ContinueLeft -> . CONTINUELEFT Var PUNTOCOMA
    (274) Up -> . UP PUNTOCOMA
    (275) Down -> . DOWN PUNTOCOMA
    (276) Speed -> . SPEED NUMERO PUNTOCOMA
    (277) Diag -> . POS ABRE_P STRING COMA NUMERO CIERRA_P PUNTOCOMA
    (278) Pos -> . POS ABRE_P NUMERO COMA NUMERO CIERRA_P PUNTOCOMA
    (279) Pos -> . POS ABRE_P expresion_alge1 COMA NUMERO CIERRA_P PUNTOCOMA
    (280) Pos -> . POS ABRE_P NUMERO COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (281) Pos -> . POS ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (282) Pos -> . POS ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (283) Pos -> . POS ABRE_P NUMERO COMA Var CIERRA_P PUNTOCOMA
    (284) Pos -> . POS ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (285) Pos -> . POS ABRE_P expresion_alge1 COMA Var CIERRA_P PUNTOCOMA
    (286) Pos -> . POS ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (287) PosX -> . POSX NUMERO PUNTOCOMA
    (288) PosX -> . POSX RESTA NUMERO PUNTOCOMA
    (289) PosX -> . POSX expresion_alge1 PUNTOCOMA
    (290) PosX -> . POSX expresion_alge2 PUNTOCOMA
    (291) PosX -> . POSX Var PUNTOCOMA
    (292) PosY -> . POSY NUMERO PUNTOCOMA
    (293) PosY -> . POSY RESTA NUMERO PUNTOCOMA
    (294) PosY -> . POSY expresion_alge1 PUNTOCOMA
    (295) PosY -> . POSY expresion_alge2 PUNTOCOMA
    (296) PosY -> . POSY Var PUNTOCOMA
    (297) UseColor -> . USECOLOR NUMERO PUNTOCOMA
    (298) UseColor -> . USECOLOR Var PUNTOCOMA
    (299) UseColor -> . USECOLOR empty PUNTOCOMA
    (310) empty -> .

    PUNTOCOMA       shift and go to state 197
    BEGINNING       shift and go to state 212
    CONTINUEUP      shift and go to state 213
    CONTINUEDOWN    shift and go to state 214
    CONTINUERIGHT   shift and go to state 215
    CONTINUELEFT    shift and go to state 216
    UP              shift and go to state 217
    DOWN            shift and go to state 218
    SPEED           shift and go to state 219
    POS             shift and go to state 220
    POSX            shift and go to state 221
    POSY            shift and go to state 222
    USECOLOR        shift and go to state 223
    BRACKET2        reduce using rule 310 (empty -> .)

    ordenes                        shift and go to state 336
    Beginning                      shift and go to state 198
    empty                          shift and go to state 199
    ContinueUp                     shift and go to state 200
    ContinueDown                   shift and go to state 201
    ContinueRight                  shift and go to state 202
    ContinueLeft                   shift and go to state 203
    Up                             shift and go to state 204
    Down                           shift and go to state 205
    Speed                          shift and go to state 206
    Diag                           shift and go to state 207
    Pos                            shift and go to state 208
    PosX                           shift and go to state 209
    PosY                           shift and go to state 210
    UseColor                       shift and go to state 211

state 233

    (246) Until -> UNTIL BRACKET1 funcion . BRACKET2 BRACKET1 condicion BRACKET2

    BRACKET2        shift and go to state 337


state 234

    (244) While -> WHILE BRACKET1 condicion . BRACKET2 BRACKET1 funcion BRACKET2

    BRACKET2        shift and go to state 338


state 235

    (309) PrintLine -> PRINTLINE ABRE_P exp . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 339


state 236

    (301) exp -> NUMERO . COMA exp
    (304) exp -> NUMERO . empty empty
    (310) empty -> .

    COMA            shift and go to state 340
    CIERRA_P        reduce using rule 310 (empty -> .)

    empty                          shift and go to state 341

state 237

    (302) exp -> STRING . COMA exp
    (307) exp -> STRING . empty empty
    (310) empty -> .

    COMA            shift and go to state 342
    CIERRA_P        reduce using rule 310 (empty -> .)

    empty                          shift and go to state 343

state 238

    (303) exp -> Var . COMA exp
    (308) exp -> Var . empty empty
    (310) empty -> .

    COMA            shift and go to state 344
    CIERRA_P        reduce using rule 310 (empty -> .)

    empty                          shift and go to state 345

state 239

    (305) exp -> RESTA . NUMERO empty empty
    (306) exp -> RESTA . NUMERO COMA empty

    NUMERO          shift and go to state 346


state 240

    (234) And -> AND ABRE_P expresion_alge1 . COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (235) And -> AND ABRE_P expresion_alge1 . COMA expresion_alge2 CIERRA_P PUNTOCOMA

    COMA            shift and go to state 347


state 241

    (236) And -> AND ABRE_P expresion_alge2 . COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (237) And -> AND ABRE_P expresion_alge2 . COMA expresion_alge2 CIERRA_P PUNTOCOMA

    COMA            shift and go to state 348


state 242

    (238) Or -> OR ABRE_P expresion_alge1 . COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (239) Or -> OR ABRE_P expresion_alge1 . COMA expresion_alge2 CIERRA_P PUNTOCOMA

    COMA            shift and go to state 349


state 243

    (240) Or -> OR ABRE_P expresion_alge2 . COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (241) Or -> OR ABRE_P expresion_alge2 . COMA expresion_alge2 CIERRA_P PUNTOCOMA

    COMA            shift and go to state 350


state 244

    (247) Add -> ADD ABRE_P Var . empty empty CIERRA_P PUNTOCOMA
    (248) Add -> ADD ABRE_P Var . COMA NUMERO CIERRA_P PUNTOCOMA
    (249) Add -> ADD ABRE_P Var . COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (250) Add -> ADD ABRE_P Var . COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (251) Add -> ADD ABRE_P Var . COMA Var CIERRA_P PUNTOCOMA
    (252) Add -> ADD ABRE_P Var . COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (310) empty -> .

    COMA            shift and go to state 352
    CIERRA_P        reduce using rule 310 (empty -> .)

    empty                          shift and go to state 351

state 245

    (84) Put -> PUT ABRE_P VAR COMA VAR CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 353


state 246

    (85) Put2 -> PUT ABRE_P VAR COMA NUMERO CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 354


state 247

    (86) Put2 -> PUT ABRE_P VAR COMA RESTA NUMERO . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 355


state 248

    (87) Put2 -> PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 356


state 249

    (88) Put2 -> PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 357


state 250

    (89) Put2 -> PUT ABRE_P VAR COMA funcion CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 358


state 251

    (38) variable2 -> DEF VAR IGUAL RESTA NUMERO PUNTOCOMA .

    COMMENT         reduce using rule 38 (variable2 -> DEF VAR IGUAL RESTA NUMERO PUNTOCOMA .)
    PARA            reduce using rule 38 (variable2 -> DEF VAR IGUAL RESTA NUMERO PUNTOCOMA .)
    MAIN            reduce using rule 38 (variable2 -> DEF VAR IGUAL RESTA NUMERO PUNTOCOMA .)
    PUT             reduce using rule 38 (variable2 -> DEF VAR IGUAL RESTA NUMERO PUNTOCOMA .)
    DEF             reduce using rule 38 (variable2 -> DEF VAR IGUAL RESTA NUMERO PUNTOCOMA .)
    $end            reduce using rule 38 (variable2 -> DEF VAR IGUAL RESTA NUMERO PUNTOCOMA .)
    PUNTOCOMA       reduce using rule 38 (variable2 -> DEF VAR IGUAL RESTA NUMERO PUNTOCOMA .)
    NUMERO          reduce using rule 38 (variable2 -> DEF VAR IGUAL RESTA NUMERO PUNTOCOMA .)
    ABRE_P          reduce using rule 38 (variable2 -> DEF VAR IGUAL RESTA NUMERO PUNTOCOMA .)
    SUM             reduce using rule 38 (variable2 -> DEF VAR IGUAL RESTA NUMERO PUNTOCOMA .)
    SUBSTR          reduce using rule 38 (variable2 -> DEF VAR IGUAL RESTA NUMERO PUNTOCOMA .)
    MULTI           reduce using rule 38 (variable2 -> DEF VAR IGUAL RESTA NUMERO PUNTOCOMA .)
    DIV             reduce using rule 38 (variable2 -> DEF VAR IGUAL RESTA NUMERO PUNTOCOMA .)
    RANDOM          reduce using rule 38 (variable2 -> DEF VAR IGUAL RESTA NUMERO PUNTOCOMA .)
    RUN             reduce using rule 38 (variable2 -> DEF VAR IGUAL RESTA NUMERO PUNTOCOMA .)
    IF              reduce using rule 38 (variable2 -> DEF VAR IGUAL RESTA NUMERO PUNTOCOMA .)
    IFELSE          reduce using rule 38 (variable2 -> DEF VAR IGUAL RESTA NUMERO PUNTOCOMA .)
    REPEAT          reduce using rule 38 (variable2 -> DEF VAR IGUAL RESTA NUMERO PUNTOCOMA .)
    UNTIL           reduce using rule 38 (variable2 -> DEF VAR IGUAL RESTA NUMERO PUNTOCOMA .)
    WHILE           reduce using rule 38 (variable2 -> DEF VAR IGUAL RESTA NUMERO PUNTOCOMA .)
    PRINTLINE       reduce using rule 38 (variable2 -> DEF VAR IGUAL RESTA NUMERO PUNTOCOMA .)
    AND             reduce using rule 38 (variable2 -> DEF VAR IGUAL RESTA NUMERO PUNTOCOMA .)
    OR              reduce using rule 38 (variable2 -> DEF VAR IGUAL RESTA NUMERO PUNTOCOMA .)
    ADD             reduce using rule 38 (variable2 -> DEF VAR IGUAL RESTA NUMERO PUNTOCOMA .)
    FIN             reduce using rule 38 (variable2 -> DEF VAR IGUAL RESTA NUMERO PUNTOCOMA .)


state 252

    (25) llamadoproc -> PARA id . BRACKET1 parametro BRACKET2 PUNTOCOMA

    BRACKET1        shift and go to state 359


state 253

    (32) variablexd -> empty empty .
    (53) expresion -> empty empty .
    (83) funcion -> empty empty .

  ! reduce/reduce conflict for FIN resolved using rule 32 (variablexd -> empty empty .)
  ! reduce/reduce conflict for FIN resolved using rule 32 (variablexd -> empty empty .)
    FIN             reduce using rule 32 (variablexd -> empty empty .)
    PUNTOCOMA       reduce using rule 83 (funcion -> empty empty .)
    NUMERO          reduce using rule 83 (funcion -> empty empty .)
    ABRE_P          reduce using rule 83 (funcion -> empty empty .)
    SUM             reduce using rule 83 (funcion -> empty empty .)
    SUBSTR          reduce using rule 83 (funcion -> empty empty .)
    MULTI           reduce using rule 83 (funcion -> empty empty .)
    DIV             reduce using rule 83 (funcion -> empty empty .)
    RANDOM          reduce using rule 83 (funcion -> empty empty .)
    RUN             reduce using rule 83 (funcion -> empty empty .)
    IF              reduce using rule 83 (funcion -> empty empty .)
    IFELSE          reduce using rule 83 (funcion -> empty empty .)
    REPEAT          reduce using rule 83 (funcion -> empty empty .)
    UNTIL           reduce using rule 83 (funcion -> empty empty .)
    WHILE           reduce using rule 83 (funcion -> empty empty .)
    PRINTLINE       reduce using rule 83 (funcion -> empty empty .)
    AND             reduce using rule 83 (funcion -> empty empty .)
    OR              reduce using rule 83 (funcion -> empty empty .)
    ADD             reduce using rule 83 (funcion -> empty empty .)
    PUT             reduce using rule 83 (funcion -> empty empty .)

  ! FIN             [ reduce using rule 53 (expresion -> empty empty .) ]
  ! FIN             [ reduce using rule 83 (funcion -> empty empty .) ]


state 254

    (23) procedimiento -> PARA id BRACKET1 empty BRACKET2 cuerpo2 FIN . cuerpo
    (2) cuerpo -> . variable
    (3) cuerpo -> . procedimiento
    (4) cuerpo -> . main
    (5) cuerpo -> . COMMENT cuerpo
    (6) cuerpo -> . Put
    (7) cuerpo -> . Put2
    (27) variable -> . variable1 cuerpo
    (28) variable -> . variable2 cuerpo
    (29) variable -> . empty empty
    (23) procedimiento -> . PARA id BRACKET1 empty BRACKET2 cuerpo2 FIN cuerpo
    (24) procedimiento -> . PARA id BRACKET1 parametro BRACKET2 cuerpo2 FIN cuerpo
    (26) main -> . MAIN BRACKET1 BRACKET2 cuerpo3 FIN cuerpo
    (84) Put -> . PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA
    (85) Put2 -> . PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (86) Put2 -> . PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (87) Put2 -> . PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (88) Put2 -> . PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (89) Put2 -> . PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA
    (36) variable1 -> . DEF VAR PUNTOCOMA
    (37) variable2 -> . DEF VAR IGUAL NUMERO PUNTOCOMA
    (38) variable2 -> . DEF VAR IGUAL RESTA NUMERO PUNTOCOMA
    (310) empty -> .

    COMMENT         shift and go to state 3
    PARA            shift and go to state 13
    MAIN            shift and go to state 14
    PUT             shift and go to state 15
    DEF             shift and go to state 16
    $end            reduce using rule 310 (empty -> .)

    empty                          shift and go to state 12
    cuerpo                         shift and go to state 360
    variable                       shift and go to state 5
    procedimiento                  shift and go to state 6
    main                           shift and go to state 7
    Put                            shift and go to state 8
    Put2                           shift and go to state 9
    variable1                      shift and go to state 10
    variable2                      shift and go to state 11

state 255

    (9) cuerpo2 -> COMMENT cuerpo2 .

    FIN             reduce using rule 9 (cuerpo2 -> COMMENT cuerpo2 .)


state 256

    (30) variablexd -> variable1 cuerpo2 .

    FIN             reduce using rule 30 (variablexd -> variable1 cuerpo2 .)


state 257

    (31) variablexd -> variable2 cuerpo2 .

    FIN             reduce using rule 31 (variablexd -> variable2 cuerpo2 .)


state 258

    (24) procedimiento -> PARA id BRACKET1 parametro BRACKET2 cuerpo2 FIN . cuerpo
    (2) cuerpo -> . variable
    (3) cuerpo -> . procedimiento
    (4) cuerpo -> . main
    (5) cuerpo -> . COMMENT cuerpo
    (6) cuerpo -> . Put
    (7) cuerpo -> . Put2
    (27) variable -> . variable1 cuerpo
    (28) variable -> . variable2 cuerpo
    (29) variable -> . empty empty
    (23) procedimiento -> . PARA id BRACKET1 empty BRACKET2 cuerpo2 FIN cuerpo
    (24) procedimiento -> . PARA id BRACKET1 parametro BRACKET2 cuerpo2 FIN cuerpo
    (26) main -> . MAIN BRACKET1 BRACKET2 cuerpo3 FIN cuerpo
    (84) Put -> . PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA
    (85) Put2 -> . PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (86) Put2 -> . PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (87) Put2 -> . PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (88) Put2 -> . PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (89) Put2 -> . PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA
    (36) variable1 -> . DEF VAR PUNTOCOMA
    (37) variable2 -> . DEF VAR IGUAL NUMERO PUNTOCOMA
    (38) variable2 -> . DEF VAR IGUAL RESTA NUMERO PUNTOCOMA
    (310) empty -> .

    COMMENT         shift and go to state 3
    PARA            shift and go to state 13
    MAIN            shift and go to state 14
    PUT             shift and go to state 15
    DEF             shift and go to state 16
    $end            reduce using rule 310 (empty -> .)

    cuerpo                         shift and go to state 361
    variable                       shift and go to state 5
    procedimiento                  shift and go to state 6
    main                           shift and go to state 7
    Put                            shift and go to state 8
    Put2                           shift and go to state 9
    variable1                      shift and go to state 10
    variable2                      shift and go to state 11
    empty                          shift and go to state 12

state 259

    (85) Put2 -> PUT ABRE_P VAR . COMA NUMERO CIERRA_P PUNTOCOMA
    (86) Put2 -> PUT ABRE_P VAR . COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (87) Put2 -> PUT ABRE_P VAR . COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (88) Put2 -> PUT ABRE_P VAR . COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (89) Put2 -> PUT ABRE_P VAR . COMA funcion CIERRA_P PUNTOCOMA
    (84) Put -> PUT ABRE_P VAR . COMA VAR CIERRA_P PUNTOCOMA

    COMA            shift and go to state 362


state 260

    (97) expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P SUMA . ABRE_P expresion_alge1 CIERRA_P

    ABRE_P          shift and go to state 363


state 261

    (98) expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P RESTA . ABRE_P expresion_alge1 CIERRA_P

    ABRE_P          shift and go to state 364


state 262

    (99) expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P MULT . ABRE_P expresion_alge1 CIERRA_P

    ABRE_P          shift and go to state 365


state 263

    (100) expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P DIV . ABRE_P expresion_alge1 CIERRA_P

    ABRE_P          shift and go to state 366


state 264

    (131) Mult -> MULTI ABRE_P NUMERO COMA . NUMERO CIERRA_P
    (133) Mult -> MULTI ABRE_P NUMERO COMA . RESTA NUMERO CIERRA_P
    (134) Mult -> MULTI ABRE_P NUMERO COMA . expresion_alge1 CIERRA_P
    (137) Mult -> MULTI ABRE_P NUMERO COMA . Var CIERRA_P
    (93) expresion_alge1 -> . NUMERO SUMA NUMERO
    (94) expresion_alge1 -> . NUMERO RESTA NUMERO
    (95) expresion_alge1 -> . NUMERO MULTI NUMERO
    (96) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (161) Var -> . VAR

    NUMERO          shift and go to state 367
    RESTA           shift and go to state 368
    VAR             shift and go to state 34

    expresion_alge1                shift and go to state 369
    Var                            shift and go to state 370

state 265

    (132) Mult -> MULTI ABRE_P RESTA NUMERO . COMA NUMERO CIERRA_P
    (135) Mult -> MULTI ABRE_P RESTA NUMERO . COMA expresion_alge1 CIERRA_P
    (138) Mult -> MULTI ABRE_P RESTA NUMERO . COMA Var CIERRA_P

    COMA            shift and go to state 371


state 266

    (136) Mult -> MULTI ABRE_P expresion_alge1 COMA . expresion_alge1 CIERRA_P
    (142) Mult -> MULTI ABRE_P expresion_alge1 COMA . Var CIERRA_P
    (143) Mult -> MULTI ABRE_P expresion_alge1 COMA . NUMERO CIERRA_P
    (144) Mult -> MULTI ABRE_P expresion_alge1 COMA . RESTA NUMERO CIERRA_P
    (93) expresion_alge1 -> . NUMERO SUMA NUMERO
    (94) expresion_alge1 -> . NUMERO RESTA NUMERO
    (95) expresion_alge1 -> . NUMERO MULTI NUMERO
    (96) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (161) Var -> . VAR

    NUMERO          shift and go to state 374
    RESTA           shift and go to state 375
    VAR             shift and go to state 34

    expresion_alge1                shift and go to state 372
    Var                            shift and go to state 373

state 267

    (139) Mult -> MULTI ABRE_P Var COMA . NUMERO CIERRA_P
    (140) Mult -> MULTI ABRE_P Var COMA . RESTA NUMERO CIERRA_P
    (141) Mult -> MULTI ABRE_P Var COMA . Var CIERRA_P
    (145) Mult -> MULTI ABRE_P Var COMA . expresion_alge1 CIERRA_P
    (161) Var -> . VAR
    (93) expresion_alge1 -> . NUMERO SUMA NUMERO
    (94) expresion_alge1 -> . NUMERO RESTA NUMERO
    (95) expresion_alge1 -> . NUMERO MULTI NUMERO
    (96) expresion_alge1 -> . NUMERO DIVISION NUMERO

    NUMERO          shift and go to state 377
    RESTA           shift and go to state 378
    VAR             shift and go to state 34

    Var                            shift and go to state 376
    expresion_alge1                shift and go to state 379

state 268

    (146) Div -> DIV ABRE_P NUMERO COMA . NUMERO CIERRA_P
    (148) Div -> DIV ABRE_P NUMERO COMA . RESTA NUMERO CIERRA_P
    (149) Div -> DIV ABRE_P NUMERO COMA . expresion_alge1 CIERRA_P
    (152) Div -> DIV ABRE_P NUMERO COMA . Var CIERRA_P
    (93) expresion_alge1 -> . NUMERO SUMA NUMERO
    (94) expresion_alge1 -> . NUMERO RESTA NUMERO
    (95) expresion_alge1 -> . NUMERO MULTI NUMERO
    (96) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (161) Var -> . VAR

    NUMERO          shift and go to state 380
    RESTA           shift and go to state 381
    VAR             shift and go to state 34

    expresion_alge1                shift and go to state 382
    Var                            shift and go to state 383

state 269

    (147) Div -> DIV ABRE_P RESTA NUMERO . COMA NUMERO CIERRA_P
    (150) Div -> DIV ABRE_P RESTA NUMERO . COMA expresion_alge1 CIERRA_P
    (153) Div -> DIV ABRE_P RESTA NUMERO . COMA Var CIERRA_P

    COMA            shift and go to state 384


state 270

    (151) Div -> DIV ABRE_P expresion_alge1 COMA . expresion_alge1 CIERRA_P
    (157) Div -> DIV ABRE_P expresion_alge1 COMA . Var CIERRA_P
    (158) Div -> DIV ABRE_P expresion_alge1 COMA . NUMERO CIERRA_P
    (159) Div -> DIV ABRE_P expresion_alge1 COMA . RESTA NUMERO CIERRA_P
    (93) expresion_alge1 -> . NUMERO SUMA NUMERO
    (94) expresion_alge1 -> . NUMERO RESTA NUMERO
    (95) expresion_alge1 -> . NUMERO MULTI NUMERO
    (96) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (161) Var -> . VAR

    NUMERO          shift and go to state 387
    RESTA           shift and go to state 388
    VAR             shift and go to state 34

    expresion_alge1                shift and go to state 385
    Var                            shift and go to state 386

state 271

    (154) Div -> DIV ABRE_P Var COMA . NUMERO CIERRA_P
    (155) Div -> DIV ABRE_P Var COMA . RESTA NUMERO CIERRA_P
    (156) Div -> DIV ABRE_P Var COMA . Var CIERRA_P
    (160) Div -> DIV ABRE_P Var COMA . expresion_alge1 CIERRA_P
    (161) Var -> . VAR
    (93) expresion_alge1 -> . NUMERO SUMA NUMERO
    (94) expresion_alge1 -> . NUMERO RESTA NUMERO
    (95) expresion_alge1 -> . NUMERO MULTI NUMERO
    (96) expresion_alge1 -> . NUMERO DIVISION NUMERO

    NUMERO          shift and go to state 390
    RESTA           shift and go to state 391
    VAR             shift and go to state 34

    Var                            shift and go to state 389
    expresion_alge1                shift and go to state 392

state 272

    (101) Sum -> SUM ABRE_P NUMERO COMA . NUMERO CIERRA_P
    (103) Sum -> SUM ABRE_P NUMERO COMA . RESTA NUMERO CIERRA_P
    (104) Sum -> SUM ABRE_P NUMERO COMA . expresion_alge1 CIERRA_P
    (107) Sum -> SUM ABRE_P NUMERO COMA . Var CIERRA_P
    (93) expresion_alge1 -> . NUMERO SUMA NUMERO
    (94) expresion_alge1 -> . NUMERO RESTA NUMERO
    (95) expresion_alge1 -> . NUMERO MULTI NUMERO
    (96) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (161) Var -> . VAR

    NUMERO          shift and go to state 393
    RESTA           shift and go to state 394
    VAR             shift and go to state 34

    expresion_alge1                shift and go to state 395
    Var                            shift and go to state 396

state 273

    (102) Sum -> SUM ABRE_P RESTA NUMERO . COMA NUMERO CIERRA_P
    (105) Sum -> SUM ABRE_P RESTA NUMERO . COMA expresion_alge1 CIERRA_P
    (108) Sum -> SUM ABRE_P RESTA NUMERO . COMA Var CIERRA_P

    COMA            shift and go to state 397


state 274

    (106) Sum -> SUM ABRE_P expresion_alge1 COMA . expresion_alge1 CIERRA_P
    (112) Sum -> SUM ABRE_P expresion_alge1 COMA . Var CIERRA_P
    (113) Sum -> SUM ABRE_P expresion_alge1 COMA . NUMERO CIERRA_P
    (114) Sum -> SUM ABRE_P expresion_alge1 COMA . RESTA NUMERO CIERRA_P
    (93) expresion_alge1 -> . NUMERO SUMA NUMERO
    (94) expresion_alge1 -> . NUMERO RESTA NUMERO
    (95) expresion_alge1 -> . NUMERO MULTI NUMERO
    (96) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (161) Var -> . VAR

    NUMERO          shift and go to state 400
    RESTA           shift and go to state 401
    VAR             shift and go to state 34

    expresion_alge1                shift and go to state 398
    Var                            shift and go to state 399

state 275

    (109) Sum -> SUM ABRE_P Var COMA . NUMERO CIERRA_P
    (110) Sum -> SUM ABRE_P Var COMA . RESTA NUMERO CIERRA_P
    (111) Sum -> SUM ABRE_P Var COMA . Var CIERRA_P
    (115) Sum -> SUM ABRE_P Var COMA . expresion_alge1 CIERRA_P
    (161) Var -> . VAR
    (93) expresion_alge1 -> . NUMERO SUMA NUMERO
    (94) expresion_alge1 -> . NUMERO RESTA NUMERO
    (95) expresion_alge1 -> . NUMERO MULTI NUMERO
    (96) expresion_alge1 -> . NUMERO DIVISION NUMERO

    NUMERO          shift and go to state 403
    RESTA           shift and go to state 404
    VAR             shift and go to state 34

    Var                            shift and go to state 402
    expresion_alge1                shift and go to state 405

state 276

    (116) Substr -> SUBSTR ABRE_P NUMERO COMA . NUMERO CIERRA_P
    (118) Substr -> SUBSTR ABRE_P NUMERO COMA . RESTA NUMERO CIERRA_P
    (119) Substr -> SUBSTR ABRE_P NUMERO COMA . expresion_alge1 CIERRA_P
    (122) Substr -> SUBSTR ABRE_P NUMERO COMA . Var CIERRA_P
    (93) expresion_alge1 -> . NUMERO SUMA NUMERO
    (94) expresion_alge1 -> . NUMERO RESTA NUMERO
    (95) expresion_alge1 -> . NUMERO MULTI NUMERO
    (96) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (161) Var -> . VAR

    NUMERO          shift and go to state 406
    RESTA           shift and go to state 407
    VAR             shift and go to state 34

    expresion_alge1                shift and go to state 408
    Var                            shift and go to state 409

state 277

    (117) Substr -> SUBSTR ABRE_P RESTA NUMERO . COMA NUMERO CIERRA_P
    (120) Substr -> SUBSTR ABRE_P RESTA NUMERO . COMA expresion_alge1 CIERRA_P
    (123) Substr -> SUBSTR ABRE_P RESTA NUMERO . COMA Var CIERRA_P

    COMA            shift and go to state 410


state 278

    (121) Substr -> SUBSTR ABRE_P expresion_alge1 COMA . expresion_alge1 CIERRA_P
    (127) Substr -> SUBSTR ABRE_P expresion_alge1 COMA . Var CIERRA_P
    (128) Substr -> SUBSTR ABRE_P expresion_alge1 COMA . NUMERO CIERRA_P
    (129) Substr -> SUBSTR ABRE_P expresion_alge1 COMA . RESTA NUMERO CIERRA_P
    (93) expresion_alge1 -> . NUMERO SUMA NUMERO
    (94) expresion_alge1 -> . NUMERO RESTA NUMERO
    (95) expresion_alge1 -> . NUMERO MULTI NUMERO
    (96) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (161) Var -> . VAR

    NUMERO          shift and go to state 413
    RESTA           shift and go to state 414
    VAR             shift and go to state 34

    expresion_alge1                shift and go to state 411
    Var                            shift and go to state 412

state 279

    (124) Substr -> SUBSTR ABRE_P Var COMA . NUMERO CIERRA_P
    (125) Substr -> SUBSTR ABRE_P Var COMA . RESTA NUMERO CIERRA_P
    (126) Substr -> SUBSTR ABRE_P Var COMA . Var CIERRA_P
    (130) Substr -> SUBSTR ABRE_P Var COMA . expresion_alge1 CIERRA_P
    (161) Var -> . VAR
    (93) expresion_alge1 -> . NUMERO SUMA NUMERO
    (94) expresion_alge1 -> . NUMERO RESTA NUMERO
    (95) expresion_alge1 -> . NUMERO MULTI NUMERO
    (96) expresion_alge1 -> . NUMERO DIVISION NUMERO

    NUMERO          shift and go to state 416
    RESTA           shift and go to state 417
    VAR             shift and go to state 34

    Var                            shift and go to state 415
    expresion_alge1                shift and go to state 418

state 280

    (257) Random -> RANDOM ABRE_P NUMERO CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 419


state 281

    (300) Run -> RUN BRACKET1 ordenes BRACKET2 . PUNTOCOMA

    PUNTOCOMA       shift and go to state 420


state 282

    (67) ordenes -> PUNTOCOMA ordenes .

    BRACKET2        reduce using rule 67 (ordenes -> PUNTOCOMA ordenes .)


state 283

    (54) ordenes -> Beginning empty .

    BRACKET2        reduce using rule 54 (ordenes -> Beginning empty .)


state 284

    (68) ordenes -> empty empty .

    BRACKET2        reduce using rule 68 (ordenes -> empty empty .)


state 285

    (55) ordenes -> ContinueUp empty .

    BRACKET2        reduce using rule 55 (ordenes -> ContinueUp empty .)


state 286

    (56) ordenes -> ContinueDown empty .

    BRACKET2        reduce using rule 56 (ordenes -> ContinueDown empty .)


state 287

    (57) ordenes -> ContinueRight empty .

    BRACKET2        reduce using rule 57 (ordenes -> ContinueRight empty .)


state 288

    (58) ordenes -> ContinueLeft empty .

    BRACKET2        reduce using rule 58 (ordenes -> ContinueLeft empty .)


state 289

    (59) ordenes -> Up empty .

    BRACKET2        reduce using rule 59 (ordenes -> Up empty .)


state 290

    (60) ordenes -> Down empty .

    BRACKET2        reduce using rule 60 (ordenes -> Down empty .)


state 291

    (61) ordenes -> Speed empty .

    BRACKET2        reduce using rule 61 (ordenes -> Speed empty .)


state 292

    (62) ordenes -> Diag empty .

    BRACKET2        reduce using rule 62 (ordenes -> Diag empty .)


state 293

    (63) ordenes -> Pos empty .

    BRACKET2        reduce using rule 63 (ordenes -> Pos empty .)


state 294

    (64) ordenes -> PosX empty .

    BRACKET2        reduce using rule 64 (ordenes -> PosX empty .)


state 295

    (65) ordenes -> PosY empty .

    BRACKET2        reduce using rule 65 (ordenes -> PosY empty .)


state 296

    (66) ordenes -> UseColor empty .

    BRACKET2        reduce using rule 66 (ordenes -> UseColor empty .)


state 297

    (256) Beginning -> BEGINNING PUNTOCOMA .

    BRACKET2        reduce using rule 256 (Beginning -> BEGINNING PUNTOCOMA .)


state 298

    (258) ContinueUp -> CONTINUEUP NUMERO . PUNTOCOMA
    (93) expresion_alge1 -> NUMERO . SUMA NUMERO
    (94) expresion_alge1 -> NUMERO . RESTA NUMERO
    (95) expresion_alge1 -> NUMERO . MULTI NUMERO
    (96) expresion_alge1 -> NUMERO . DIVISION NUMERO

    PUNTOCOMA       shift and go to state 421
    SUMA            shift and go to state 127
    RESTA           shift and go to state 128
    MULTI           shift and go to state 129
    DIVISION        shift and go to state 130


state 299

    (259) ContinueUp -> CONTINUEUP expresion_alge1 . PUNTOCOMA

    PUNTOCOMA       shift and go to state 422


state 300

    (260) ContinueUp -> CONTINUEUP expresion_alge2 . PUNTOCOMA

    PUNTOCOMA       shift and go to state 423


state 301

    (261) ContinueUp -> CONTINUEUP Var . PUNTOCOMA

    PUNTOCOMA       shift and go to state 424


state 302

    (262) ContinueDown -> CONTINUEDOWN NUMERO . PUNTOCOMA
    (93) expresion_alge1 -> NUMERO . SUMA NUMERO
    (94) expresion_alge1 -> NUMERO . RESTA NUMERO
    (95) expresion_alge1 -> NUMERO . MULTI NUMERO
    (96) expresion_alge1 -> NUMERO . DIVISION NUMERO

    PUNTOCOMA       shift and go to state 425
    SUMA            shift and go to state 127
    RESTA           shift and go to state 128
    MULTI           shift and go to state 129
    DIVISION        shift and go to state 130


state 303

    (263) ContinueDown -> CONTINUEDOWN expresion_alge1 . PUNTOCOMA

    PUNTOCOMA       shift and go to state 426


state 304

    (264) ContinueDown -> CONTINUEDOWN expresion_alge2 . PUNTOCOMA

    PUNTOCOMA       shift and go to state 427


state 305

    (265) ContinueDown -> CONTINUEDOWN Var . PUNTOCOMA

    PUNTOCOMA       shift and go to state 428


state 306

    (266) ContinueRight -> CONTINUERIGHT NUMERO . PUNTOCOMA
    (93) expresion_alge1 -> NUMERO . SUMA NUMERO
    (94) expresion_alge1 -> NUMERO . RESTA NUMERO
    (95) expresion_alge1 -> NUMERO . MULTI NUMERO
    (96) expresion_alge1 -> NUMERO . DIVISION NUMERO

    PUNTOCOMA       shift and go to state 429
    SUMA            shift and go to state 127
    RESTA           shift and go to state 128
    MULTI           shift and go to state 129
    DIVISION        shift and go to state 130


state 307

    (267) ContinueRight -> CONTINUERIGHT expresion_alge1 . PUNTOCOMA

    PUNTOCOMA       shift and go to state 430


state 308

    (268) ContinueRight -> CONTINUERIGHT expresion_alge2 . PUNTOCOMA

    PUNTOCOMA       shift and go to state 431


state 309

    (269) ContinueRight -> CONTINUERIGHT Var . PUNTOCOMA

    PUNTOCOMA       shift and go to state 432


state 310

    (270) ContinueLeft -> CONTINUELEFT NUMERO . PUNTOCOMA
    (93) expresion_alge1 -> NUMERO . SUMA NUMERO
    (94) expresion_alge1 -> NUMERO . RESTA NUMERO
    (95) expresion_alge1 -> NUMERO . MULTI NUMERO
    (96) expresion_alge1 -> NUMERO . DIVISION NUMERO

    PUNTOCOMA       shift and go to state 433
    SUMA            shift and go to state 127
    RESTA           shift and go to state 128
    MULTI           shift and go to state 129
    DIVISION        shift and go to state 130


state 311

    (271) ContinueLeft -> CONTINUELEFT expresion_alge1 . PUNTOCOMA

    PUNTOCOMA       shift and go to state 434


state 312

    (272) ContinueLeft -> CONTINUELEFT expresion_alge2 . PUNTOCOMA

    PUNTOCOMA       shift and go to state 435


state 313

    (273) ContinueLeft -> CONTINUELEFT Var . PUNTOCOMA

    PUNTOCOMA       shift and go to state 436


state 314

    (274) Up -> UP PUNTOCOMA .

    BRACKET2        reduce using rule 274 (Up -> UP PUNTOCOMA .)


state 315

    (275) Down -> DOWN PUNTOCOMA .

    BRACKET2        reduce using rule 275 (Down -> DOWN PUNTOCOMA .)


state 316

    (276) Speed -> SPEED NUMERO . PUNTOCOMA

    PUNTOCOMA       shift and go to state 437


state 317

    (277) Diag -> POS ABRE_P . STRING COMA NUMERO CIERRA_P PUNTOCOMA
    (278) Pos -> POS ABRE_P . NUMERO COMA NUMERO CIERRA_P PUNTOCOMA
    (279) Pos -> POS ABRE_P . expresion_alge1 COMA NUMERO CIERRA_P PUNTOCOMA
    (280) Pos -> POS ABRE_P . NUMERO COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (281) Pos -> POS ABRE_P . expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (282) Pos -> POS ABRE_P . Var COMA NUMERO CIERRA_P PUNTOCOMA
    (283) Pos -> POS ABRE_P . NUMERO COMA Var CIERRA_P PUNTOCOMA
    (284) Pos -> POS ABRE_P . Var COMA Var CIERRA_P PUNTOCOMA
    (285) Pos -> POS ABRE_P . expresion_alge1 COMA Var CIERRA_P PUNTOCOMA
    (286) Pos -> POS ABRE_P . Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (93) expresion_alge1 -> . NUMERO SUMA NUMERO
    (94) expresion_alge1 -> . NUMERO RESTA NUMERO
    (95) expresion_alge1 -> . NUMERO MULTI NUMERO
    (96) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (161) Var -> . VAR

    STRING          shift and go to state 438
    NUMERO          shift and go to state 439
    VAR             shift and go to state 34

    expresion_alge1                shift and go to state 440
    Var                            shift and go to state 441

state 318

    (287) PosX -> POSX NUMERO . PUNTOCOMA
    (93) expresion_alge1 -> NUMERO . SUMA NUMERO
    (94) expresion_alge1 -> NUMERO . RESTA NUMERO
    (95) expresion_alge1 -> NUMERO . MULTI NUMERO
    (96) expresion_alge1 -> NUMERO . DIVISION NUMERO

    PUNTOCOMA       shift and go to state 442
    SUMA            shift and go to state 127
    RESTA           shift and go to state 128
    MULTI           shift and go to state 129
    DIVISION        shift and go to state 130


state 319

    (288) PosX -> POSX RESTA . NUMERO PUNTOCOMA

    NUMERO          shift and go to state 443


state 320

    (289) PosX -> POSX expresion_alge1 . PUNTOCOMA

    PUNTOCOMA       shift and go to state 444


state 321

    (290) PosX -> POSX expresion_alge2 . PUNTOCOMA

    PUNTOCOMA       shift and go to state 445


state 322

    (291) PosX -> POSX Var . PUNTOCOMA

    PUNTOCOMA       shift and go to state 446


state 323

    (292) PosY -> POSY NUMERO . PUNTOCOMA
    (93) expresion_alge1 -> NUMERO . SUMA NUMERO
    (94) expresion_alge1 -> NUMERO . RESTA NUMERO
    (95) expresion_alge1 -> NUMERO . MULTI NUMERO
    (96) expresion_alge1 -> NUMERO . DIVISION NUMERO

    PUNTOCOMA       shift and go to state 447
    SUMA            shift and go to state 127
    RESTA           shift and go to state 128
    MULTI           shift and go to state 129
    DIVISION        shift and go to state 130


state 324

    (293) PosY -> POSY RESTA . NUMERO PUNTOCOMA

    NUMERO          shift and go to state 448


state 325

    (294) PosY -> POSY expresion_alge1 . PUNTOCOMA

    PUNTOCOMA       shift and go to state 449


state 326

    (295) PosY -> POSY expresion_alge2 . PUNTOCOMA

    PUNTOCOMA       shift and go to state 450


state 327

    (296) PosY -> POSY Var . PUNTOCOMA

    PUNTOCOMA       shift and go to state 451


state 328

    (297) UseColor -> USECOLOR NUMERO . PUNTOCOMA

    PUNTOCOMA       shift and go to state 452


state 329

    (298) UseColor -> USECOLOR Var . PUNTOCOMA

    PUNTOCOMA       shift and go to state 453


state 330

    (299) UseColor -> USECOLOR empty . PUNTOCOMA

    PUNTOCOMA       shift and go to state 454


state 331

    (242) If -> IF ABRE_P condicion CIERRA_P . BRACKET1 funcion BRACKET2

    BRACKET1        shift and go to state 455


state 332

    (162) Equal -> EQUAL ABRE_P . NUMERO COMA NUMERO CIERRA_P PUNTOCOMA
    (163) Equal -> EQUAL ABRE_P . RESTA NUMERO COMA NUMERO CIERRA_P PUNTOCOMA
    (164) Equal -> EQUAL ABRE_P . NUMERO COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (165) Equal -> EQUAL ABRE_P . expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (166) Equal -> EQUAL ABRE_P . expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (167) Equal -> EQUAL ABRE_P . Var COMA Var CIERRA_P PUNTOCOMA
    (168) Equal -> EQUAL ABRE_P . NUMERO COMA Var CIERRA_P PUNTOCOMA
    (169) Equal -> EQUAL ABRE_P . RESTA NUMERO COMA Var CIERRA_P PUNTOCOMA
    (170) Equal -> EQUAL ABRE_P . expresion_alge2 COMA Var CIERRA_P PUNTOCOMA
    (171) Equal -> EQUAL ABRE_P . expresion_alge1 COMA Var CIERRA_P PUNTOCOMA
    (172) Equal -> EQUAL ABRE_P . Var COMA NUMERO CIERRA_P PUNTOCOMA
    (173) Equal -> EQUAL ABRE_P . Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (174) Equal -> EQUAL ABRE_P . Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (175) Equal -> EQUAL ABRE_P . Var COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (176) Equal -> EQUAL ABRE_P . expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (177) Equal -> EQUAL ABRE_P . expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (178) Equal -> EQUAL ABRE_P . expresion_alge1 COMA NUMERO CIERRA_P PUNTOCOMA
    (179) Equal -> EQUAL ABRE_P . expresion_alge1 COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (180) Equal -> EQUAL ABRE_P . expresion_alge2 COMA NUMERO CIERRA_P PUNTOCOMA
    (181) Equal -> EQUAL ABRE_P . expresion_alge2 COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (182) Equal -> EQUAL ABRE_P . NUMERO COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (183) Equal -> EQUAL ABRE_P . RESTA NUMERO COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (184) Equal -> EQUAL ABRE_P . NUMERO COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (185) Equal -> EQUAL ABRE_P . RESTA NUMERO COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (93) expresion_alge1 -> . NUMERO SUMA NUMERO
    (94) expresion_alge1 -> . NUMERO RESTA NUMERO
    (95) expresion_alge1 -> . NUMERO MULTI NUMERO
    (96) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (97) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (98) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (99) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (100) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (161) Var -> . VAR

    NUMERO          shift and go to state 456
    RESTA           shift and go to state 457
    ABRE_P          shift and go to state 63
    VAR             shift and go to state 34

    expresion_alge1                shift and go to state 458
    expresion_alge2                shift and go to state 459
    Var                            shift and go to state 460

state 333

    (186) Greater -> GREATER ABRE_P . NUMERO COMA NUMERO CIERRA_P PUNTOCOMA
    (187) Greater -> GREATER ABRE_P . RESTA NUMERO COMA NUMERO CIERRA_P PUNTOCOMA
    (188) Greater -> GREATER ABRE_P . NUMERO COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (189) Greater -> GREATER ABRE_P . expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (190) Greater -> GREATER ABRE_P . expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (191) Greater -> GREATER ABRE_P . Var COMA Var CIERRA_P PUNTOCOMA
    (192) Greater -> GREATER ABRE_P . NUMERO COMA Var CIERRA_P PUNTOCOMA
    (193) Greater -> GREATER ABRE_P . RESTA NUMERO COMA Var CIERRA_P PUNTOCOMA
    (194) Greater -> GREATER ABRE_P . expresion_alge2 COMA Var CIERRA_P PUNTOCOMA
    (195) Greater -> GREATER ABRE_P . expresion_alge1 COMA Var CIERRA_P PUNTOCOMA
    (196) Greater -> GREATER ABRE_P . Var COMA NUMERO CIERRA_P PUNTOCOMA
    (197) Greater -> GREATER ABRE_P . Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (198) Greater -> GREATER ABRE_P . Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (199) Greater -> GREATER ABRE_P . Var COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (200) Greater -> GREATER ABRE_P . expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (201) Greater -> GREATER ABRE_P . expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (202) Greater -> GREATER ABRE_P . expresion_alge1 COMA NUMERO CIERRA_P PUNTOCOMA
    (203) Greater -> GREATER ABRE_P . expresion_alge1 COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (204) Greater -> GREATER ABRE_P . expresion_alge2 COMA NUMERO CIERRA_P PUNTOCOMA
    (205) Greater -> GREATER ABRE_P . expresion_alge2 COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (206) Greater -> GREATER ABRE_P . NUMERO COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (207) Greater -> GREATER ABRE_P . RESTA NUMERO COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (208) Greater -> GREATER ABRE_P . NUMERO COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (209) Greater -> GREATER ABRE_P . RESTA NUMERO COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (93) expresion_alge1 -> . NUMERO SUMA NUMERO
    (94) expresion_alge1 -> . NUMERO RESTA NUMERO
    (95) expresion_alge1 -> . NUMERO MULTI NUMERO
    (96) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (97) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (98) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (99) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (100) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (161) Var -> . VAR

    NUMERO          shift and go to state 461
    RESTA           shift and go to state 462
    ABRE_P          shift and go to state 63
    VAR             shift and go to state 34

    expresion_alge1                shift and go to state 463
    expresion_alge2                shift and go to state 464
    Var                            shift and go to state 465

state 334

    (210) Smaller -> SMALLER ABRE_P . NUMERO COMA NUMERO CIERRA_P PUNTOCOMA
    (211) Smaller -> SMALLER ABRE_P . RESTA NUMERO COMA NUMERO CIERRA_P PUNTOCOMA
    (212) Smaller -> SMALLER ABRE_P . NUMERO COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (213) Smaller -> SMALLER ABRE_P . expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (214) Smaller -> SMALLER ABRE_P . expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (215) Smaller -> SMALLER ABRE_P . Var COMA Var CIERRA_P PUNTOCOMA
    (216) Smaller -> SMALLER ABRE_P . NUMERO COMA Var CIERRA_P PUNTOCOMA
    (217) Smaller -> SMALLER ABRE_P . RESTA NUMERO COMA Var CIERRA_P PUNTOCOMA
    (218) Smaller -> SMALLER ABRE_P . expresion_alge2 COMA Var CIERRA_P PUNTOCOMA
    (219) Smaller -> SMALLER ABRE_P . expresion_alge1 COMA Var CIERRA_P PUNTOCOMA
    (220) Smaller -> SMALLER ABRE_P . Var COMA NUMERO CIERRA_P PUNTOCOMA
    (221) Smaller -> SMALLER ABRE_P . Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (222) Smaller -> SMALLER ABRE_P . Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (223) Smaller -> SMALLER ABRE_P . Var COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (224) Smaller -> SMALLER ABRE_P . expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (225) Smaller -> SMALLER ABRE_P . expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (226) Smaller -> SMALLER ABRE_P . expresion_alge1 COMA NUMERO CIERRA_P PUNTOCOMA
    (227) Smaller -> SMALLER ABRE_P . expresion_alge1 COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (228) Smaller -> SMALLER ABRE_P . expresion_alge2 COMA NUMERO CIERRA_P PUNTOCOMA
    (229) Smaller -> SMALLER ABRE_P . expresion_alge2 COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (230) Smaller -> SMALLER ABRE_P . NUMERO COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (231) Smaller -> SMALLER ABRE_P . RESTA NUMERO COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (232) Smaller -> SMALLER ABRE_P . NUMERO COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (233) Smaller -> SMALLER ABRE_P . RESTA NUMERO COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (93) expresion_alge1 -> . NUMERO SUMA NUMERO
    (94) expresion_alge1 -> . NUMERO RESTA NUMERO
    (95) expresion_alge1 -> . NUMERO MULTI NUMERO
    (96) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (97) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (98) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (99) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (100) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (161) Var -> . VAR

    NUMERO          shift and go to state 466
    RESTA           shift and go to state 467
    ABRE_P          shift and go to state 63
    VAR             shift and go to state 34

    expresion_alge1                shift and go to state 468
    expresion_alge2                shift and go to state 469
    Var                            shift and go to state 470

state 335

    (243) IfElse -> IFELSE ABRE_P condicion CIERRA_P . BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2

    BRACKET1        shift and go to state 471


state 336

    (245) Repeat -> REPEAT NUMERO BRACKET1 ordenes . BRACKET2

    BRACKET2        shift and go to state 472


state 337

    (246) Until -> UNTIL BRACKET1 funcion BRACKET2 . BRACKET1 condicion BRACKET2

    BRACKET1        shift and go to state 473


state 338

    (244) While -> WHILE BRACKET1 condicion BRACKET2 . BRACKET1 funcion BRACKET2

    BRACKET1        shift and go to state 474


state 339

    (309) PrintLine -> PRINTLINE ABRE_P exp CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 475


state 340

    (301) exp -> NUMERO COMA . exp
    (301) exp -> . NUMERO COMA exp
    (302) exp -> . STRING COMA exp
    (303) exp -> . Var COMA exp
    (304) exp -> . NUMERO empty empty
    (305) exp -> . RESTA NUMERO empty empty
    (306) exp -> . RESTA NUMERO COMA empty
    (307) exp -> . STRING empty empty
    (308) exp -> . Var empty empty
    (161) Var -> . VAR

    NUMERO          shift and go to state 236
    STRING          shift and go to state 237
    RESTA           shift and go to state 239
    VAR             shift and go to state 34

    exp                            shift and go to state 476
    Var                            shift and go to state 238

state 341

    (304) exp -> NUMERO empty . empty
    (310) empty -> .

    CIERRA_P        reduce using rule 310 (empty -> .)

    empty                          shift and go to state 477

state 342

    (302) exp -> STRING COMA . exp
    (301) exp -> . NUMERO COMA exp
    (302) exp -> . STRING COMA exp
    (303) exp -> . Var COMA exp
    (304) exp -> . NUMERO empty empty
    (305) exp -> . RESTA NUMERO empty empty
    (306) exp -> . RESTA NUMERO COMA empty
    (307) exp -> . STRING empty empty
    (308) exp -> . Var empty empty
    (161) Var -> . VAR

    NUMERO          shift and go to state 236
    STRING          shift and go to state 237
    RESTA           shift and go to state 239
    VAR             shift and go to state 34

    exp                            shift and go to state 478
    Var                            shift and go to state 238

state 343

    (307) exp -> STRING empty . empty
    (310) empty -> .

    CIERRA_P        reduce using rule 310 (empty -> .)

    empty                          shift and go to state 479

state 344

    (303) exp -> Var COMA . exp
    (301) exp -> . NUMERO COMA exp
    (302) exp -> . STRING COMA exp
    (303) exp -> . Var COMA exp
    (304) exp -> . NUMERO empty empty
    (305) exp -> . RESTA NUMERO empty empty
    (306) exp -> . RESTA NUMERO COMA empty
    (307) exp -> . STRING empty empty
    (308) exp -> . Var empty empty
    (161) Var -> . VAR

    NUMERO          shift and go to state 236
    STRING          shift and go to state 237
    RESTA           shift and go to state 239
    VAR             shift and go to state 34

    Var                            shift and go to state 238
    exp                            shift and go to state 480

state 345

    (308) exp -> Var empty . empty
    (310) empty -> .

    CIERRA_P        reduce using rule 310 (empty -> .)

    empty                          shift and go to state 481

state 346

    (305) exp -> RESTA NUMERO . empty empty
    (306) exp -> RESTA NUMERO . COMA empty
    (310) empty -> .

    COMA            shift and go to state 483
    CIERRA_P        reduce using rule 310 (empty -> .)

    empty                          shift and go to state 482

state 347

    (234) And -> AND ABRE_P expresion_alge1 COMA . expresion_alge1 CIERRA_P PUNTOCOMA
    (235) And -> AND ABRE_P expresion_alge1 COMA . expresion_alge2 CIERRA_P PUNTOCOMA
    (93) expresion_alge1 -> . NUMERO SUMA NUMERO
    (94) expresion_alge1 -> . NUMERO RESTA NUMERO
    (95) expresion_alge1 -> . NUMERO MULTI NUMERO
    (96) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (97) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (98) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (99) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (100) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P

    NUMERO          shift and go to state 64
    ABRE_P          shift and go to state 63

    expresion_alge1                shift and go to state 484
    expresion_alge2                shift and go to state 485

state 348

    (236) And -> AND ABRE_P expresion_alge2 COMA . expresion_alge1 CIERRA_P PUNTOCOMA
    (237) And -> AND ABRE_P expresion_alge2 COMA . expresion_alge2 CIERRA_P PUNTOCOMA
    (93) expresion_alge1 -> . NUMERO SUMA NUMERO
    (94) expresion_alge1 -> . NUMERO RESTA NUMERO
    (95) expresion_alge1 -> . NUMERO MULTI NUMERO
    (96) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (97) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (98) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (99) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (100) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P

    NUMERO          shift and go to state 64
    ABRE_P          shift and go to state 63

    expresion_alge2                shift and go to state 486
    expresion_alge1                shift and go to state 487

state 349

    (238) Or -> OR ABRE_P expresion_alge1 COMA . expresion_alge1 CIERRA_P PUNTOCOMA
    (239) Or -> OR ABRE_P expresion_alge1 COMA . expresion_alge2 CIERRA_P PUNTOCOMA
    (93) expresion_alge1 -> . NUMERO SUMA NUMERO
    (94) expresion_alge1 -> . NUMERO RESTA NUMERO
    (95) expresion_alge1 -> . NUMERO MULTI NUMERO
    (96) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (97) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (98) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (99) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (100) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P

    NUMERO          shift and go to state 64
    ABRE_P          shift and go to state 63

    expresion_alge1                shift and go to state 488
    expresion_alge2                shift and go to state 489

state 350

    (240) Or -> OR ABRE_P expresion_alge2 COMA . expresion_alge1 CIERRA_P PUNTOCOMA
    (241) Or -> OR ABRE_P expresion_alge2 COMA . expresion_alge2 CIERRA_P PUNTOCOMA
    (93) expresion_alge1 -> . NUMERO SUMA NUMERO
    (94) expresion_alge1 -> . NUMERO RESTA NUMERO
    (95) expresion_alge1 -> . NUMERO MULTI NUMERO
    (96) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (97) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (98) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (99) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (100) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P

    NUMERO          shift and go to state 64
    ABRE_P          shift and go to state 63

    expresion_alge2                shift and go to state 490
    expresion_alge1                shift and go to state 491

state 351

    (247) Add -> ADD ABRE_P Var empty . empty CIERRA_P PUNTOCOMA
    (310) empty -> .

    CIERRA_P        reduce using rule 310 (empty -> .)

    empty                          shift and go to state 492

state 352

    (248) Add -> ADD ABRE_P Var COMA . NUMERO CIERRA_P PUNTOCOMA
    (249) Add -> ADD ABRE_P Var COMA . RESTA NUMERO CIERRA_P PUNTOCOMA
    (250) Add -> ADD ABRE_P Var COMA . expresion_alge1 CIERRA_P PUNTOCOMA
    (251) Add -> ADD ABRE_P Var COMA . Var CIERRA_P PUNTOCOMA
    (252) Add -> ADD ABRE_P Var COMA . expresion_alge2 CIERRA_P PUNTOCOMA
    (93) expresion_alge1 -> . NUMERO SUMA NUMERO
    (94) expresion_alge1 -> . NUMERO RESTA NUMERO
    (95) expresion_alge1 -> . NUMERO MULTI NUMERO
    (96) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (161) Var -> . VAR
    (97) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (98) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (99) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (100) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P

    NUMERO          shift and go to state 494
    RESTA           shift and go to state 495
    VAR             shift and go to state 34
    ABRE_P          shift and go to state 63

    Var                            shift and go to state 493
    expresion_alge1                shift and go to state 496
    expresion_alge2                shift and go to state 497

state 353

    (84) Put -> PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA .

    $end            reduce using rule 84 (Put -> PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA .)
    FIN             reduce using rule 84 (Put -> PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA .)
    PUNTOCOMA       reduce using rule 84 (Put -> PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA .)
    NUMERO          reduce using rule 84 (Put -> PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA .)
    ABRE_P          reduce using rule 84 (Put -> PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA .)
    SUM             reduce using rule 84 (Put -> PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA .)
    SUBSTR          reduce using rule 84 (Put -> PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA .)
    MULTI           reduce using rule 84 (Put -> PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA .)
    DIV             reduce using rule 84 (Put -> PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA .)
    RANDOM          reduce using rule 84 (Put -> PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA .)
    RUN             reduce using rule 84 (Put -> PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA .)
    IF              reduce using rule 84 (Put -> PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA .)
    IFELSE          reduce using rule 84 (Put -> PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA .)
    REPEAT          reduce using rule 84 (Put -> PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA .)
    UNTIL           reduce using rule 84 (Put -> PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA .)
    WHILE           reduce using rule 84 (Put -> PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA .)
    PRINTLINE       reduce using rule 84 (Put -> PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA .)
    AND             reduce using rule 84 (Put -> PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA .)
    OR              reduce using rule 84 (Put -> PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA .)
    ADD             reduce using rule 84 (Put -> PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA .)
    PUT             reduce using rule 84 (Put -> PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA .)
    CIERRA_P        reduce using rule 84 (Put -> PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 84 (Put -> PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA .)


state 354

    (85) Put2 -> PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA .

    $end            reduce using rule 85 (Put2 -> PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA .)
    FIN             reduce using rule 85 (Put2 -> PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA .)
    PUNTOCOMA       reduce using rule 85 (Put2 -> PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA .)
    NUMERO          reduce using rule 85 (Put2 -> PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA .)
    ABRE_P          reduce using rule 85 (Put2 -> PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA .)
    SUM             reduce using rule 85 (Put2 -> PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA .)
    SUBSTR          reduce using rule 85 (Put2 -> PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA .)
    MULTI           reduce using rule 85 (Put2 -> PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA .)
    DIV             reduce using rule 85 (Put2 -> PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA .)
    RANDOM          reduce using rule 85 (Put2 -> PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA .)
    RUN             reduce using rule 85 (Put2 -> PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA .)
    IF              reduce using rule 85 (Put2 -> PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA .)
    IFELSE          reduce using rule 85 (Put2 -> PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA .)
    REPEAT          reduce using rule 85 (Put2 -> PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA .)
    UNTIL           reduce using rule 85 (Put2 -> PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA .)
    WHILE           reduce using rule 85 (Put2 -> PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA .)
    PRINTLINE       reduce using rule 85 (Put2 -> PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA .)
    AND             reduce using rule 85 (Put2 -> PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA .)
    OR              reduce using rule 85 (Put2 -> PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA .)
    ADD             reduce using rule 85 (Put2 -> PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA .)
    PUT             reduce using rule 85 (Put2 -> PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA .)
    CIERRA_P        reduce using rule 85 (Put2 -> PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 85 (Put2 -> PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA .)


state 355

    (86) Put2 -> PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 498


state 356

    (87) Put2 -> PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA .

    $end            reduce using rule 87 (Put2 -> PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    FIN             reduce using rule 87 (Put2 -> PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    PUNTOCOMA       reduce using rule 87 (Put2 -> PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    NUMERO          reduce using rule 87 (Put2 -> PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    ABRE_P          reduce using rule 87 (Put2 -> PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    SUM             reduce using rule 87 (Put2 -> PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    SUBSTR          reduce using rule 87 (Put2 -> PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    MULTI           reduce using rule 87 (Put2 -> PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    DIV             reduce using rule 87 (Put2 -> PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    RANDOM          reduce using rule 87 (Put2 -> PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    RUN             reduce using rule 87 (Put2 -> PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    IF              reduce using rule 87 (Put2 -> PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    IFELSE          reduce using rule 87 (Put2 -> PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    REPEAT          reduce using rule 87 (Put2 -> PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    UNTIL           reduce using rule 87 (Put2 -> PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    WHILE           reduce using rule 87 (Put2 -> PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    PRINTLINE       reduce using rule 87 (Put2 -> PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    AND             reduce using rule 87 (Put2 -> PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    OR              reduce using rule 87 (Put2 -> PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    ADD             reduce using rule 87 (Put2 -> PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    PUT             reduce using rule 87 (Put2 -> PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    CIERRA_P        reduce using rule 87 (Put2 -> PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 87 (Put2 -> PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA .)


state 357

    (88) Put2 -> PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA .

    $end            reduce using rule 88 (Put2 -> PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    FIN             reduce using rule 88 (Put2 -> PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    PUNTOCOMA       reduce using rule 88 (Put2 -> PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    NUMERO          reduce using rule 88 (Put2 -> PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    ABRE_P          reduce using rule 88 (Put2 -> PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    SUM             reduce using rule 88 (Put2 -> PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    SUBSTR          reduce using rule 88 (Put2 -> PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    MULTI           reduce using rule 88 (Put2 -> PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    DIV             reduce using rule 88 (Put2 -> PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    RANDOM          reduce using rule 88 (Put2 -> PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    RUN             reduce using rule 88 (Put2 -> PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    IF              reduce using rule 88 (Put2 -> PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    IFELSE          reduce using rule 88 (Put2 -> PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    REPEAT          reduce using rule 88 (Put2 -> PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    UNTIL           reduce using rule 88 (Put2 -> PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    WHILE           reduce using rule 88 (Put2 -> PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    PRINTLINE       reduce using rule 88 (Put2 -> PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    AND             reduce using rule 88 (Put2 -> PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    OR              reduce using rule 88 (Put2 -> PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    ADD             reduce using rule 88 (Put2 -> PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    PUT             reduce using rule 88 (Put2 -> PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    CIERRA_P        reduce using rule 88 (Put2 -> PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 88 (Put2 -> PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA .)


state 358

    (89) Put2 -> PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA .

    $end            reduce using rule 89 (Put2 -> PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA .)
    FIN             reduce using rule 89 (Put2 -> PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA .)
    PUNTOCOMA       reduce using rule 89 (Put2 -> PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA .)
    NUMERO          reduce using rule 89 (Put2 -> PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA .)
    ABRE_P          reduce using rule 89 (Put2 -> PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA .)
    SUM             reduce using rule 89 (Put2 -> PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA .)
    SUBSTR          reduce using rule 89 (Put2 -> PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA .)
    MULTI           reduce using rule 89 (Put2 -> PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA .)
    DIV             reduce using rule 89 (Put2 -> PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA .)
    RANDOM          reduce using rule 89 (Put2 -> PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA .)
    RUN             reduce using rule 89 (Put2 -> PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA .)
    IF              reduce using rule 89 (Put2 -> PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA .)
    IFELSE          reduce using rule 89 (Put2 -> PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA .)
    REPEAT          reduce using rule 89 (Put2 -> PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA .)
    UNTIL           reduce using rule 89 (Put2 -> PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA .)
    WHILE           reduce using rule 89 (Put2 -> PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA .)
    PRINTLINE       reduce using rule 89 (Put2 -> PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA .)
    AND             reduce using rule 89 (Put2 -> PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA .)
    OR              reduce using rule 89 (Put2 -> PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA .)
    ADD             reduce using rule 89 (Put2 -> PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA .)
    PUT             reduce using rule 89 (Put2 -> PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA .)
    CIERRA_P        reduce using rule 89 (Put2 -> PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 89 (Put2 -> PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA .)


state 359

    (25) llamadoproc -> PARA id BRACKET1 . parametro BRACKET2 PUNTOCOMA
    (253) parametro -> . Var COMA parametro
    (254) parametro -> . Var empty empty
    (255) parametro -> . empty empty empty
    (161) Var -> . VAR
    (310) empty -> .

    VAR             shift and go to state 34
    BRACKET2        reduce using rule 310 (empty -> .)

    parametro                      shift and go to state 499
    Var                            shift and go to state 33
    empty                          shift and go to state 168

state 360

    (23) procedimiento -> PARA id BRACKET1 empty BRACKET2 cuerpo2 FIN cuerpo .

    $end            reduce using rule 23 (procedimiento -> PARA id BRACKET1 empty BRACKET2 cuerpo2 FIN cuerpo .)


state 361

    (24) procedimiento -> PARA id BRACKET1 parametro BRACKET2 cuerpo2 FIN cuerpo .

    $end            reduce using rule 24 (procedimiento -> PARA id BRACKET1 parametro BRACKET2 cuerpo2 FIN cuerpo .)


state 362

    (85) Put2 -> PUT ABRE_P VAR COMA . NUMERO CIERRA_P PUNTOCOMA
    (86) Put2 -> PUT ABRE_P VAR COMA . RESTA NUMERO CIERRA_P PUNTOCOMA
    (87) Put2 -> PUT ABRE_P VAR COMA . expresion_alge1 CIERRA_P PUNTOCOMA
    (88) Put2 -> PUT ABRE_P VAR COMA . expresion_alge2 CIERRA_P PUNTOCOMA
    (89) Put2 -> PUT ABRE_P VAR COMA . funcion CIERRA_P PUNTOCOMA
    (84) Put -> PUT ABRE_P VAR COMA . VAR CIERRA_P PUNTOCOMA
    (93) expresion_alge1 -> . NUMERO SUMA NUMERO
    (94) expresion_alge1 -> . NUMERO RESTA NUMERO
    (95) expresion_alge1 -> . NUMERO MULTI NUMERO
    (96) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (97) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (98) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (99) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (100) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (69) funcion -> . Random empty
    (70) funcion -> . Run empty
    (71) funcion -> . If empty
    (72) funcion -> . IfElse empty
    (73) funcion -> . Repeat empty
    (74) funcion -> . Until empty
    (75) funcion -> . While empty
    (76) funcion -> . PrintLine empty
    (77) funcion -> . And empty
    (78) funcion -> . Or empty
    (79) funcion -> . Add empty
    (80) funcion -> . Put2 empty
    (81) funcion -> . Put empty
    (82) funcion -> . PUNTOCOMA funcion
    (83) funcion -> . empty empty
    (257) Random -> . RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA
    (300) Run -> . RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA
    (242) If -> . IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2
    (243) IfElse -> . IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2
    (245) Repeat -> . REPEAT NUMERO BRACKET1 ordenes BRACKET2
    (246) Until -> . UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2
    (244) While -> . WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2
    (309) PrintLine -> . PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA
    (234) And -> . AND ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (235) And -> . AND ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (236) And -> . AND ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (237) And -> . AND ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (238) Or -> . OR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (239) Or -> . OR ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (240) Or -> . OR ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (241) Or -> . OR ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (247) Add -> . ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA
    (248) Add -> . ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (249) Add -> . ADD ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (250) Add -> . ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (251) Add -> . ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (252) Add -> . ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (85) Put2 -> . PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (86) Put2 -> . PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (87) Put2 -> . PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (88) Put2 -> . PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (89) Put2 -> . PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA
    (84) Put -> . PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA
    (310) empty -> .

    NUMERO          shift and go to state 147
    RESTA           shift and go to state 148
    VAR             shift and go to state 146
    ABRE_P          shift and go to state 63
    PUNTOCOMA       shift and go to state 62
    RANDOM          shift and go to state 69
    RUN             shift and go to state 70
    IF              shift and go to state 71
    IFELSE          shift and go to state 72
    REPEAT          shift and go to state 73
    UNTIL           shift and go to state 74
    WHILE           shift and go to state 75
    PRINTLINE       shift and go to state 76
    AND             shift and go to state 77
    OR              shift and go to state 78
    ADD             shift and go to state 79
    PUT             shift and go to state 95
    CIERRA_P        reduce using rule 310 (empty -> .)

    expresion_alge1                shift and go to state 149
    expresion_alge2                shift and go to state 150
    funcion                        shift and go to state 151
    Random                         shift and go to state 51
    empty                          shift and go to state 125
    Run                            shift and go to state 52
    If                             shift and go to state 53
    IfElse                         shift and go to state 54
    Repeat                         shift and go to state 55
    Until                          shift and go to state 56
    While                          shift and go to state 57
    PrintLine                      shift and go to state 58
    And                            shift and go to state 59
    Or                             shift and go to state 60
    Add                            shift and go to state 61
    Put2                           shift and go to state 93
    Put                            shift and go to state 94

state 363

    (97) expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P . expresion_alge1 CIERRA_P
    (93) expresion_alge1 -> . NUMERO SUMA NUMERO
    (94) expresion_alge1 -> . NUMERO RESTA NUMERO
    (95) expresion_alge1 -> . NUMERO MULTI NUMERO
    (96) expresion_alge1 -> . NUMERO DIVISION NUMERO

    NUMERO          shift and go to state 64

    expresion_alge1                shift and go to state 500

state 364

    (98) expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P . expresion_alge1 CIERRA_P
    (93) expresion_alge1 -> . NUMERO SUMA NUMERO
    (94) expresion_alge1 -> . NUMERO RESTA NUMERO
    (95) expresion_alge1 -> . NUMERO MULTI NUMERO
    (96) expresion_alge1 -> . NUMERO DIVISION NUMERO

    NUMERO          shift and go to state 64

    expresion_alge1                shift and go to state 501

state 365

    (99) expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P . expresion_alge1 CIERRA_P
    (93) expresion_alge1 -> . NUMERO SUMA NUMERO
    (94) expresion_alge1 -> . NUMERO RESTA NUMERO
    (95) expresion_alge1 -> . NUMERO MULTI NUMERO
    (96) expresion_alge1 -> . NUMERO DIVISION NUMERO

    NUMERO          shift and go to state 64

    expresion_alge1                shift and go to state 502

state 366

    (100) expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P . expresion_alge1 CIERRA_P
    (93) expresion_alge1 -> . NUMERO SUMA NUMERO
    (94) expresion_alge1 -> . NUMERO RESTA NUMERO
    (95) expresion_alge1 -> . NUMERO MULTI NUMERO
    (96) expresion_alge1 -> . NUMERO DIVISION NUMERO

    NUMERO          shift and go to state 64

    expresion_alge1                shift and go to state 503

state 367

    (131) Mult -> MULTI ABRE_P NUMERO COMA NUMERO . CIERRA_P
    (93) expresion_alge1 -> NUMERO . SUMA NUMERO
    (94) expresion_alge1 -> NUMERO . RESTA NUMERO
    (95) expresion_alge1 -> NUMERO . MULTI NUMERO
    (96) expresion_alge1 -> NUMERO . DIVISION NUMERO

    CIERRA_P        shift and go to state 504
    SUMA            shift and go to state 127
    RESTA           shift and go to state 128
    MULTI           shift and go to state 129
    DIVISION        shift and go to state 130


state 368

    (133) Mult -> MULTI ABRE_P NUMERO COMA RESTA . NUMERO CIERRA_P

    NUMERO          shift and go to state 505


state 369

    (134) Mult -> MULTI ABRE_P NUMERO COMA expresion_alge1 . CIERRA_P

    CIERRA_P        shift and go to state 506


state 370

    (137) Mult -> MULTI ABRE_P NUMERO COMA Var . CIERRA_P

    CIERRA_P        shift and go to state 507


state 371

    (132) Mult -> MULTI ABRE_P RESTA NUMERO COMA . NUMERO CIERRA_P
    (135) Mult -> MULTI ABRE_P RESTA NUMERO COMA . expresion_alge1 CIERRA_P
    (138) Mult -> MULTI ABRE_P RESTA NUMERO COMA . Var CIERRA_P
    (93) expresion_alge1 -> . NUMERO SUMA NUMERO
    (94) expresion_alge1 -> . NUMERO RESTA NUMERO
    (95) expresion_alge1 -> . NUMERO MULTI NUMERO
    (96) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (161) Var -> . VAR

    NUMERO          shift and go to state 508
    VAR             shift and go to state 34

    expresion_alge1                shift and go to state 509
    Var                            shift and go to state 510

state 372

    (136) Mult -> MULTI ABRE_P expresion_alge1 COMA expresion_alge1 . CIERRA_P

    CIERRA_P        shift and go to state 511


state 373

    (142) Mult -> MULTI ABRE_P expresion_alge1 COMA Var . CIERRA_P

    CIERRA_P        shift and go to state 512


state 374

    (143) Mult -> MULTI ABRE_P expresion_alge1 COMA NUMERO . CIERRA_P
    (93) expresion_alge1 -> NUMERO . SUMA NUMERO
    (94) expresion_alge1 -> NUMERO . RESTA NUMERO
    (95) expresion_alge1 -> NUMERO . MULTI NUMERO
    (96) expresion_alge1 -> NUMERO . DIVISION NUMERO

    CIERRA_P        shift and go to state 513
    SUMA            shift and go to state 127
    RESTA           shift and go to state 128
    MULTI           shift and go to state 129
    DIVISION        shift and go to state 130


state 375

    (144) Mult -> MULTI ABRE_P expresion_alge1 COMA RESTA . NUMERO CIERRA_P

    NUMERO          shift and go to state 514


state 376

    (141) Mult -> MULTI ABRE_P Var COMA Var . CIERRA_P

    CIERRA_P        shift and go to state 515


state 377

    (139) Mult -> MULTI ABRE_P Var COMA NUMERO . CIERRA_P
    (93) expresion_alge1 -> NUMERO . SUMA NUMERO
    (94) expresion_alge1 -> NUMERO . RESTA NUMERO
    (95) expresion_alge1 -> NUMERO . MULTI NUMERO
    (96) expresion_alge1 -> NUMERO . DIVISION NUMERO

    CIERRA_P        shift and go to state 516
    SUMA            shift and go to state 127
    RESTA           shift and go to state 128
    MULTI           shift and go to state 129
    DIVISION        shift and go to state 130


state 378

    (140) Mult -> MULTI ABRE_P Var COMA RESTA . NUMERO CIERRA_P

    NUMERO          shift and go to state 517


state 379

    (145) Mult -> MULTI ABRE_P Var COMA expresion_alge1 . CIERRA_P

    CIERRA_P        shift and go to state 518


state 380

    (146) Div -> DIV ABRE_P NUMERO COMA NUMERO . CIERRA_P
    (93) expresion_alge1 -> NUMERO . SUMA NUMERO
    (94) expresion_alge1 -> NUMERO . RESTA NUMERO
    (95) expresion_alge1 -> NUMERO . MULTI NUMERO
    (96) expresion_alge1 -> NUMERO . DIVISION NUMERO

    CIERRA_P        shift and go to state 519
    SUMA            shift and go to state 127
    RESTA           shift and go to state 128
    MULTI           shift and go to state 129
    DIVISION        shift and go to state 130


state 381

    (148) Div -> DIV ABRE_P NUMERO COMA RESTA . NUMERO CIERRA_P

    NUMERO          shift and go to state 520


state 382

    (149) Div -> DIV ABRE_P NUMERO COMA expresion_alge1 . CIERRA_P

    CIERRA_P        shift and go to state 521


state 383

    (152) Div -> DIV ABRE_P NUMERO COMA Var . CIERRA_P

    CIERRA_P        shift and go to state 522


state 384

    (147) Div -> DIV ABRE_P RESTA NUMERO COMA . NUMERO CIERRA_P
    (150) Div -> DIV ABRE_P RESTA NUMERO COMA . expresion_alge1 CIERRA_P
    (153) Div -> DIV ABRE_P RESTA NUMERO COMA . Var CIERRA_P
    (93) expresion_alge1 -> . NUMERO SUMA NUMERO
    (94) expresion_alge1 -> . NUMERO RESTA NUMERO
    (95) expresion_alge1 -> . NUMERO MULTI NUMERO
    (96) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (161) Var -> . VAR

    NUMERO          shift and go to state 523
    VAR             shift and go to state 34

    expresion_alge1                shift and go to state 524
    Var                            shift and go to state 525

state 385

    (151) Div -> DIV ABRE_P expresion_alge1 COMA expresion_alge1 . CIERRA_P

    CIERRA_P        shift and go to state 526


state 386

    (157) Div -> DIV ABRE_P expresion_alge1 COMA Var . CIERRA_P

    CIERRA_P        shift and go to state 527


state 387

    (158) Div -> DIV ABRE_P expresion_alge1 COMA NUMERO . CIERRA_P
    (93) expresion_alge1 -> NUMERO . SUMA NUMERO
    (94) expresion_alge1 -> NUMERO . RESTA NUMERO
    (95) expresion_alge1 -> NUMERO . MULTI NUMERO
    (96) expresion_alge1 -> NUMERO . DIVISION NUMERO

    CIERRA_P        shift and go to state 528
    SUMA            shift and go to state 127
    RESTA           shift and go to state 128
    MULTI           shift and go to state 129
    DIVISION        shift and go to state 130


state 388

    (159) Div -> DIV ABRE_P expresion_alge1 COMA RESTA . NUMERO CIERRA_P

    NUMERO          shift and go to state 529


state 389

    (156) Div -> DIV ABRE_P Var COMA Var . CIERRA_P

    CIERRA_P        shift and go to state 530


state 390

    (154) Div -> DIV ABRE_P Var COMA NUMERO . CIERRA_P
    (93) expresion_alge1 -> NUMERO . SUMA NUMERO
    (94) expresion_alge1 -> NUMERO . RESTA NUMERO
    (95) expresion_alge1 -> NUMERO . MULTI NUMERO
    (96) expresion_alge1 -> NUMERO . DIVISION NUMERO

    CIERRA_P        shift and go to state 531
    SUMA            shift and go to state 127
    RESTA           shift and go to state 128
    MULTI           shift and go to state 129
    DIVISION        shift and go to state 130


state 391

    (155) Div -> DIV ABRE_P Var COMA RESTA . NUMERO CIERRA_P

    NUMERO          shift and go to state 532


state 392

    (160) Div -> DIV ABRE_P Var COMA expresion_alge1 . CIERRA_P

    CIERRA_P        shift and go to state 533


state 393

    (101) Sum -> SUM ABRE_P NUMERO COMA NUMERO . CIERRA_P
    (93) expresion_alge1 -> NUMERO . SUMA NUMERO
    (94) expresion_alge1 -> NUMERO . RESTA NUMERO
    (95) expresion_alge1 -> NUMERO . MULTI NUMERO
    (96) expresion_alge1 -> NUMERO . DIVISION NUMERO

    CIERRA_P        shift and go to state 534
    SUMA            shift and go to state 127
    RESTA           shift and go to state 128
    MULTI           shift and go to state 129
    DIVISION        shift and go to state 130


state 394

    (103) Sum -> SUM ABRE_P NUMERO COMA RESTA . NUMERO CIERRA_P

    NUMERO          shift and go to state 535


state 395

    (104) Sum -> SUM ABRE_P NUMERO COMA expresion_alge1 . CIERRA_P

    CIERRA_P        shift and go to state 536


state 396

    (107) Sum -> SUM ABRE_P NUMERO COMA Var . CIERRA_P

    CIERRA_P        shift and go to state 537


state 397

    (102) Sum -> SUM ABRE_P RESTA NUMERO COMA . NUMERO CIERRA_P
    (105) Sum -> SUM ABRE_P RESTA NUMERO COMA . expresion_alge1 CIERRA_P
    (108) Sum -> SUM ABRE_P RESTA NUMERO COMA . Var CIERRA_P
    (93) expresion_alge1 -> . NUMERO SUMA NUMERO
    (94) expresion_alge1 -> . NUMERO RESTA NUMERO
    (95) expresion_alge1 -> . NUMERO MULTI NUMERO
    (96) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (161) Var -> . VAR

    NUMERO          shift and go to state 538
    VAR             shift and go to state 34

    expresion_alge1                shift and go to state 539
    Var                            shift and go to state 540

state 398

    (106) Sum -> SUM ABRE_P expresion_alge1 COMA expresion_alge1 . CIERRA_P

    CIERRA_P        shift and go to state 541


state 399

    (112) Sum -> SUM ABRE_P expresion_alge1 COMA Var . CIERRA_P

    CIERRA_P        shift and go to state 542


state 400

    (113) Sum -> SUM ABRE_P expresion_alge1 COMA NUMERO . CIERRA_P
    (93) expresion_alge1 -> NUMERO . SUMA NUMERO
    (94) expresion_alge1 -> NUMERO . RESTA NUMERO
    (95) expresion_alge1 -> NUMERO . MULTI NUMERO
    (96) expresion_alge1 -> NUMERO . DIVISION NUMERO

    CIERRA_P        shift and go to state 543
    SUMA            shift and go to state 127
    RESTA           shift and go to state 128
    MULTI           shift and go to state 129
    DIVISION        shift and go to state 130


state 401

    (114) Sum -> SUM ABRE_P expresion_alge1 COMA RESTA . NUMERO CIERRA_P

    NUMERO          shift and go to state 544


state 402

    (111) Sum -> SUM ABRE_P Var COMA Var . CIERRA_P

    CIERRA_P        shift and go to state 545


state 403

    (109) Sum -> SUM ABRE_P Var COMA NUMERO . CIERRA_P
    (93) expresion_alge1 -> NUMERO . SUMA NUMERO
    (94) expresion_alge1 -> NUMERO . RESTA NUMERO
    (95) expresion_alge1 -> NUMERO . MULTI NUMERO
    (96) expresion_alge1 -> NUMERO . DIVISION NUMERO

    CIERRA_P        shift and go to state 546
    SUMA            shift and go to state 127
    RESTA           shift and go to state 128
    MULTI           shift and go to state 129
    DIVISION        shift and go to state 130


state 404

    (110) Sum -> SUM ABRE_P Var COMA RESTA . NUMERO CIERRA_P

    NUMERO          shift and go to state 547


state 405

    (115) Sum -> SUM ABRE_P Var COMA expresion_alge1 . CIERRA_P

    CIERRA_P        shift and go to state 548


state 406

    (116) Substr -> SUBSTR ABRE_P NUMERO COMA NUMERO . CIERRA_P
    (93) expresion_alge1 -> NUMERO . SUMA NUMERO
    (94) expresion_alge1 -> NUMERO . RESTA NUMERO
    (95) expresion_alge1 -> NUMERO . MULTI NUMERO
    (96) expresion_alge1 -> NUMERO . DIVISION NUMERO

    CIERRA_P        shift and go to state 549
    SUMA            shift and go to state 127
    RESTA           shift and go to state 128
    MULTI           shift and go to state 129
    DIVISION        shift and go to state 130


state 407

    (118) Substr -> SUBSTR ABRE_P NUMERO COMA RESTA . NUMERO CIERRA_P

    NUMERO          shift and go to state 550


state 408

    (119) Substr -> SUBSTR ABRE_P NUMERO COMA expresion_alge1 . CIERRA_P

    CIERRA_P        shift and go to state 551


state 409

    (122) Substr -> SUBSTR ABRE_P NUMERO COMA Var . CIERRA_P

    CIERRA_P        shift and go to state 552


state 410

    (117) Substr -> SUBSTR ABRE_P RESTA NUMERO COMA . NUMERO CIERRA_P
    (120) Substr -> SUBSTR ABRE_P RESTA NUMERO COMA . expresion_alge1 CIERRA_P
    (123) Substr -> SUBSTR ABRE_P RESTA NUMERO COMA . Var CIERRA_P
    (93) expresion_alge1 -> . NUMERO SUMA NUMERO
    (94) expresion_alge1 -> . NUMERO RESTA NUMERO
    (95) expresion_alge1 -> . NUMERO MULTI NUMERO
    (96) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (161) Var -> . VAR

    NUMERO          shift and go to state 553
    VAR             shift and go to state 34

    expresion_alge1                shift and go to state 554
    Var                            shift and go to state 555

state 411

    (121) Substr -> SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 . CIERRA_P

    CIERRA_P        shift and go to state 556


state 412

    (127) Substr -> SUBSTR ABRE_P expresion_alge1 COMA Var . CIERRA_P

    CIERRA_P        shift and go to state 557


state 413

    (128) Substr -> SUBSTR ABRE_P expresion_alge1 COMA NUMERO . CIERRA_P
    (93) expresion_alge1 -> NUMERO . SUMA NUMERO
    (94) expresion_alge1 -> NUMERO . RESTA NUMERO
    (95) expresion_alge1 -> NUMERO . MULTI NUMERO
    (96) expresion_alge1 -> NUMERO . DIVISION NUMERO

    CIERRA_P        shift and go to state 558
    SUMA            shift and go to state 127
    RESTA           shift and go to state 128
    MULTI           shift and go to state 129
    DIVISION        shift and go to state 130


state 414

    (129) Substr -> SUBSTR ABRE_P expresion_alge1 COMA RESTA . NUMERO CIERRA_P

    NUMERO          shift and go to state 559


state 415

    (126) Substr -> SUBSTR ABRE_P Var COMA Var . CIERRA_P

    CIERRA_P        shift and go to state 560


state 416

    (124) Substr -> SUBSTR ABRE_P Var COMA NUMERO . CIERRA_P
    (93) expresion_alge1 -> NUMERO . SUMA NUMERO
    (94) expresion_alge1 -> NUMERO . RESTA NUMERO
    (95) expresion_alge1 -> NUMERO . MULTI NUMERO
    (96) expresion_alge1 -> NUMERO . DIVISION NUMERO

    CIERRA_P        shift and go to state 561
    SUMA            shift and go to state 127
    RESTA           shift and go to state 128
    MULTI           shift and go to state 129
    DIVISION        shift and go to state 130


state 417

    (125) Substr -> SUBSTR ABRE_P Var COMA RESTA . NUMERO CIERRA_P

    NUMERO          shift and go to state 562


state 418

    (130) Substr -> SUBSTR ABRE_P Var COMA expresion_alge1 . CIERRA_P

    CIERRA_P        shift and go to state 563


state 419

    (257) Random -> RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA .

    PUNTOCOMA       reduce using rule 257 (Random -> RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA .)
    NUMERO          reduce using rule 257 (Random -> RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA .)
    ABRE_P          reduce using rule 257 (Random -> RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA .)
    SUM             reduce using rule 257 (Random -> RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA .)
    SUBSTR          reduce using rule 257 (Random -> RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA .)
    MULTI           reduce using rule 257 (Random -> RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA .)
    DIV             reduce using rule 257 (Random -> RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA .)
    RANDOM          reduce using rule 257 (Random -> RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA .)
    RUN             reduce using rule 257 (Random -> RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA .)
    IF              reduce using rule 257 (Random -> RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA .)
    IFELSE          reduce using rule 257 (Random -> RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA .)
    REPEAT          reduce using rule 257 (Random -> RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA .)
    UNTIL           reduce using rule 257 (Random -> RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA .)
    WHILE           reduce using rule 257 (Random -> RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA .)
    PRINTLINE       reduce using rule 257 (Random -> RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA .)
    AND             reduce using rule 257 (Random -> RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA .)
    OR              reduce using rule 257 (Random -> RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA .)
    ADD             reduce using rule 257 (Random -> RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA .)
    PUT             reduce using rule 257 (Random -> RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA .)
    FIN             reduce using rule 257 (Random -> RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA .)
    CIERRA_P        reduce using rule 257 (Random -> RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 257 (Random -> RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA .)


state 420

    (300) Run -> RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA .

    PUNTOCOMA       reduce using rule 300 (Run -> RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA .)
    NUMERO          reduce using rule 300 (Run -> RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA .)
    ABRE_P          reduce using rule 300 (Run -> RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA .)
    SUM             reduce using rule 300 (Run -> RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA .)
    SUBSTR          reduce using rule 300 (Run -> RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA .)
    MULTI           reduce using rule 300 (Run -> RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA .)
    DIV             reduce using rule 300 (Run -> RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA .)
    RANDOM          reduce using rule 300 (Run -> RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA .)
    RUN             reduce using rule 300 (Run -> RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA .)
    IF              reduce using rule 300 (Run -> RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA .)
    IFELSE          reduce using rule 300 (Run -> RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA .)
    REPEAT          reduce using rule 300 (Run -> RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA .)
    UNTIL           reduce using rule 300 (Run -> RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA .)
    WHILE           reduce using rule 300 (Run -> RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA .)
    PRINTLINE       reduce using rule 300 (Run -> RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA .)
    AND             reduce using rule 300 (Run -> RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA .)
    OR              reduce using rule 300 (Run -> RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA .)
    ADD             reduce using rule 300 (Run -> RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA .)
    PUT             reduce using rule 300 (Run -> RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA .)
    FIN             reduce using rule 300 (Run -> RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA .)
    CIERRA_P        reduce using rule 300 (Run -> RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA .)
    BRACKET2        reduce using rule 300 (Run -> RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA .)


state 421

    (258) ContinueUp -> CONTINUEUP NUMERO PUNTOCOMA .

    BRACKET2        reduce using rule 258 (ContinueUp -> CONTINUEUP NUMERO PUNTOCOMA .)


state 422

    (259) ContinueUp -> CONTINUEUP expresion_alge1 PUNTOCOMA .

    BRACKET2        reduce using rule 259 (ContinueUp -> CONTINUEUP expresion_alge1 PUNTOCOMA .)


state 423

    (260) ContinueUp -> CONTINUEUP expresion_alge2 PUNTOCOMA .

    BRACKET2        reduce using rule 260 (ContinueUp -> CONTINUEUP expresion_alge2 PUNTOCOMA .)


state 424

    (261) ContinueUp -> CONTINUEUP Var PUNTOCOMA .

    BRACKET2        reduce using rule 261 (ContinueUp -> CONTINUEUP Var PUNTOCOMA .)


state 425

    (262) ContinueDown -> CONTINUEDOWN NUMERO PUNTOCOMA .

    BRACKET2        reduce using rule 262 (ContinueDown -> CONTINUEDOWN NUMERO PUNTOCOMA .)


state 426

    (263) ContinueDown -> CONTINUEDOWN expresion_alge1 PUNTOCOMA .

    BRACKET2        reduce using rule 263 (ContinueDown -> CONTINUEDOWN expresion_alge1 PUNTOCOMA .)


state 427

    (264) ContinueDown -> CONTINUEDOWN expresion_alge2 PUNTOCOMA .

    BRACKET2        reduce using rule 264 (ContinueDown -> CONTINUEDOWN expresion_alge2 PUNTOCOMA .)


state 428

    (265) ContinueDown -> CONTINUEDOWN Var PUNTOCOMA .

    BRACKET2        reduce using rule 265 (ContinueDown -> CONTINUEDOWN Var PUNTOCOMA .)


state 429

    (266) ContinueRight -> CONTINUERIGHT NUMERO PUNTOCOMA .

    BRACKET2        reduce using rule 266 (ContinueRight -> CONTINUERIGHT NUMERO PUNTOCOMA .)


state 430

    (267) ContinueRight -> CONTINUERIGHT expresion_alge1 PUNTOCOMA .

    BRACKET2        reduce using rule 267 (ContinueRight -> CONTINUERIGHT expresion_alge1 PUNTOCOMA .)


state 431

    (268) ContinueRight -> CONTINUERIGHT expresion_alge2 PUNTOCOMA .

    BRACKET2        reduce using rule 268 (ContinueRight -> CONTINUERIGHT expresion_alge2 PUNTOCOMA .)


state 432

    (269) ContinueRight -> CONTINUERIGHT Var PUNTOCOMA .

    BRACKET2        reduce using rule 269 (ContinueRight -> CONTINUERIGHT Var PUNTOCOMA .)


state 433

    (270) ContinueLeft -> CONTINUELEFT NUMERO PUNTOCOMA .

    BRACKET2        reduce using rule 270 (ContinueLeft -> CONTINUELEFT NUMERO PUNTOCOMA .)


state 434

    (271) ContinueLeft -> CONTINUELEFT expresion_alge1 PUNTOCOMA .

    BRACKET2        reduce using rule 271 (ContinueLeft -> CONTINUELEFT expresion_alge1 PUNTOCOMA .)


state 435

    (272) ContinueLeft -> CONTINUELEFT expresion_alge2 PUNTOCOMA .

    BRACKET2        reduce using rule 272 (ContinueLeft -> CONTINUELEFT expresion_alge2 PUNTOCOMA .)


state 436

    (273) ContinueLeft -> CONTINUELEFT Var PUNTOCOMA .

    BRACKET2        reduce using rule 273 (ContinueLeft -> CONTINUELEFT Var PUNTOCOMA .)


state 437

    (276) Speed -> SPEED NUMERO PUNTOCOMA .

    BRACKET2        reduce using rule 276 (Speed -> SPEED NUMERO PUNTOCOMA .)


state 438

    (277) Diag -> POS ABRE_P STRING . COMA NUMERO CIERRA_P PUNTOCOMA

    COMA            shift and go to state 564


state 439

    (278) Pos -> POS ABRE_P NUMERO . COMA NUMERO CIERRA_P PUNTOCOMA
    (280) Pos -> POS ABRE_P NUMERO . COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (283) Pos -> POS ABRE_P NUMERO . COMA Var CIERRA_P PUNTOCOMA
    (93) expresion_alge1 -> NUMERO . SUMA NUMERO
    (94) expresion_alge1 -> NUMERO . RESTA NUMERO
    (95) expresion_alge1 -> NUMERO . MULTI NUMERO
    (96) expresion_alge1 -> NUMERO . DIVISION NUMERO

    COMA            shift and go to state 565
    SUMA            shift and go to state 127
    RESTA           shift and go to state 128
    MULTI           shift and go to state 129
    DIVISION        shift and go to state 130


state 440

    (279) Pos -> POS ABRE_P expresion_alge1 . COMA NUMERO CIERRA_P PUNTOCOMA
    (281) Pos -> POS ABRE_P expresion_alge1 . COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (285) Pos -> POS ABRE_P expresion_alge1 . COMA Var CIERRA_P PUNTOCOMA

    COMA            shift and go to state 566


state 441

    (282) Pos -> POS ABRE_P Var . COMA NUMERO CIERRA_P PUNTOCOMA
    (284) Pos -> POS ABRE_P Var . COMA Var CIERRA_P PUNTOCOMA
    (286) Pos -> POS ABRE_P Var . COMA expresion_alge1 CIERRA_P PUNTOCOMA

    COMA            shift and go to state 567


state 442

    (287) PosX -> POSX NUMERO PUNTOCOMA .

    BRACKET2        reduce using rule 287 (PosX -> POSX NUMERO PUNTOCOMA .)


state 443

    (288) PosX -> POSX RESTA NUMERO . PUNTOCOMA

    PUNTOCOMA       shift and go to state 568


state 444

    (289) PosX -> POSX expresion_alge1 PUNTOCOMA .

    BRACKET2        reduce using rule 289 (PosX -> POSX expresion_alge1 PUNTOCOMA .)


state 445

    (290) PosX -> POSX expresion_alge2 PUNTOCOMA .

    BRACKET2        reduce using rule 290 (PosX -> POSX expresion_alge2 PUNTOCOMA .)


state 446

    (291) PosX -> POSX Var PUNTOCOMA .

    BRACKET2        reduce using rule 291 (PosX -> POSX Var PUNTOCOMA .)


state 447

    (292) PosY -> POSY NUMERO PUNTOCOMA .

    BRACKET2        reduce using rule 292 (PosY -> POSY NUMERO PUNTOCOMA .)


state 448

    (293) PosY -> POSY RESTA NUMERO . PUNTOCOMA

    PUNTOCOMA       shift and go to state 569


state 449

    (294) PosY -> POSY expresion_alge1 PUNTOCOMA .

    BRACKET2        reduce using rule 294 (PosY -> POSY expresion_alge1 PUNTOCOMA .)


state 450

    (295) PosY -> POSY expresion_alge2 PUNTOCOMA .

    BRACKET2        reduce using rule 295 (PosY -> POSY expresion_alge2 PUNTOCOMA .)


state 451

    (296) PosY -> POSY Var PUNTOCOMA .

    BRACKET2        reduce using rule 296 (PosY -> POSY Var PUNTOCOMA .)


state 452

    (297) UseColor -> USECOLOR NUMERO PUNTOCOMA .

    BRACKET2        reduce using rule 297 (UseColor -> USECOLOR NUMERO PUNTOCOMA .)


state 453

    (298) UseColor -> USECOLOR Var PUNTOCOMA .

    BRACKET2        reduce using rule 298 (UseColor -> USECOLOR Var PUNTOCOMA .)


state 454

    (299) UseColor -> USECOLOR empty PUNTOCOMA .

    BRACKET2        reduce using rule 299 (UseColor -> USECOLOR empty PUNTOCOMA .)


state 455

    (242) If -> IF ABRE_P condicion CIERRA_P BRACKET1 . funcion BRACKET2
    (69) funcion -> . Random empty
    (70) funcion -> . Run empty
    (71) funcion -> . If empty
    (72) funcion -> . IfElse empty
    (73) funcion -> . Repeat empty
    (74) funcion -> . Until empty
    (75) funcion -> . While empty
    (76) funcion -> . PrintLine empty
    (77) funcion -> . And empty
    (78) funcion -> . Or empty
    (79) funcion -> . Add empty
    (80) funcion -> . Put2 empty
    (81) funcion -> . Put empty
    (82) funcion -> . PUNTOCOMA funcion
    (83) funcion -> . empty empty
    (257) Random -> . RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA
    (300) Run -> . RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA
    (242) If -> . IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2
    (243) IfElse -> . IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2
    (245) Repeat -> . REPEAT NUMERO BRACKET1 ordenes BRACKET2
    (246) Until -> . UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2
    (244) While -> . WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2
    (309) PrintLine -> . PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA
    (234) And -> . AND ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (235) And -> . AND ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (236) And -> . AND ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (237) And -> . AND ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (238) Or -> . OR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (239) Or -> . OR ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (240) Or -> . OR ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (241) Or -> . OR ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (247) Add -> . ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA
    (248) Add -> . ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (249) Add -> . ADD ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (250) Add -> . ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (251) Add -> . ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (252) Add -> . ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (85) Put2 -> . PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (86) Put2 -> . PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (87) Put2 -> . PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (88) Put2 -> . PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (89) Put2 -> . PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA
    (84) Put -> . PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA
    (310) empty -> .

    PUNTOCOMA       shift and go to state 62
    RANDOM          shift and go to state 69
    RUN             shift and go to state 70
    IF              shift and go to state 71
    IFELSE          shift and go to state 72
    REPEAT          shift and go to state 73
    UNTIL           shift and go to state 74
    WHILE           shift and go to state 75
    PRINTLINE       shift and go to state 76
    AND             shift and go to state 77
    OR              shift and go to state 78
    ADD             shift and go to state 79
    PUT             shift and go to state 95
    BRACKET2        reduce using rule 310 (empty -> .)

    funcion                        shift and go to state 570
    Random                         shift and go to state 51
    empty                          shift and go to state 125
    Run                            shift and go to state 52
    If                             shift and go to state 53
    IfElse                         shift and go to state 54
    Repeat                         shift and go to state 55
    Until                          shift and go to state 56
    While                          shift and go to state 57
    PrintLine                      shift and go to state 58
    And                            shift and go to state 59
    Or                             shift and go to state 60
    Add                            shift and go to state 61
    Put2                           shift and go to state 93
    Put                            shift and go to state 94

state 456

    (162) Equal -> EQUAL ABRE_P NUMERO . COMA NUMERO CIERRA_P PUNTOCOMA
    (164) Equal -> EQUAL ABRE_P NUMERO . COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (168) Equal -> EQUAL ABRE_P NUMERO . COMA Var CIERRA_P PUNTOCOMA
    (182) Equal -> EQUAL ABRE_P NUMERO . COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (184) Equal -> EQUAL ABRE_P NUMERO . COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (93) expresion_alge1 -> NUMERO . SUMA NUMERO
    (94) expresion_alge1 -> NUMERO . RESTA NUMERO
    (95) expresion_alge1 -> NUMERO . MULTI NUMERO
    (96) expresion_alge1 -> NUMERO . DIVISION NUMERO

    COMA            shift and go to state 571
    SUMA            shift and go to state 127
    RESTA           shift and go to state 128
    MULTI           shift and go to state 129
    DIVISION        shift and go to state 130


state 457

    (163) Equal -> EQUAL ABRE_P RESTA . NUMERO COMA NUMERO CIERRA_P PUNTOCOMA
    (169) Equal -> EQUAL ABRE_P RESTA . NUMERO COMA Var CIERRA_P PUNTOCOMA
    (183) Equal -> EQUAL ABRE_P RESTA . NUMERO COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (185) Equal -> EQUAL ABRE_P RESTA . NUMERO COMA expresion_alge2 CIERRA_P PUNTOCOMA

    NUMERO          shift and go to state 572


state 458

    (165) Equal -> EQUAL ABRE_P expresion_alge1 . COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (171) Equal -> EQUAL ABRE_P expresion_alge1 . COMA Var CIERRA_P PUNTOCOMA
    (176) Equal -> EQUAL ABRE_P expresion_alge1 . COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (178) Equal -> EQUAL ABRE_P expresion_alge1 . COMA NUMERO CIERRA_P PUNTOCOMA
    (179) Equal -> EQUAL ABRE_P expresion_alge1 . COMA RESTA NUMERO CIERRA_P PUNTOCOMA

    COMA            shift and go to state 573


state 459

    (166) Equal -> EQUAL ABRE_P expresion_alge2 . COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (170) Equal -> EQUAL ABRE_P expresion_alge2 . COMA Var CIERRA_P PUNTOCOMA
    (177) Equal -> EQUAL ABRE_P expresion_alge2 . COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (180) Equal -> EQUAL ABRE_P expresion_alge2 . COMA NUMERO CIERRA_P PUNTOCOMA
    (181) Equal -> EQUAL ABRE_P expresion_alge2 . COMA RESTA NUMERO CIERRA_P PUNTOCOMA

    COMA            shift and go to state 574


state 460

    (167) Equal -> EQUAL ABRE_P Var . COMA Var CIERRA_P PUNTOCOMA
    (172) Equal -> EQUAL ABRE_P Var . COMA NUMERO CIERRA_P PUNTOCOMA
    (173) Equal -> EQUAL ABRE_P Var . COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (174) Equal -> EQUAL ABRE_P Var . COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (175) Equal -> EQUAL ABRE_P Var . COMA expresion_alge2 CIERRA_P PUNTOCOMA

    COMA            shift and go to state 575


state 461

    (186) Greater -> GREATER ABRE_P NUMERO . COMA NUMERO CIERRA_P PUNTOCOMA
    (188) Greater -> GREATER ABRE_P NUMERO . COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (192) Greater -> GREATER ABRE_P NUMERO . COMA Var CIERRA_P PUNTOCOMA
    (206) Greater -> GREATER ABRE_P NUMERO . COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (208) Greater -> GREATER ABRE_P NUMERO . COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (93) expresion_alge1 -> NUMERO . SUMA NUMERO
    (94) expresion_alge1 -> NUMERO . RESTA NUMERO
    (95) expresion_alge1 -> NUMERO . MULTI NUMERO
    (96) expresion_alge1 -> NUMERO . DIVISION NUMERO

    COMA            shift and go to state 576
    SUMA            shift and go to state 127
    RESTA           shift and go to state 128
    MULTI           shift and go to state 129
    DIVISION        shift and go to state 130


state 462

    (187) Greater -> GREATER ABRE_P RESTA . NUMERO COMA NUMERO CIERRA_P PUNTOCOMA
    (193) Greater -> GREATER ABRE_P RESTA . NUMERO COMA Var CIERRA_P PUNTOCOMA
    (207) Greater -> GREATER ABRE_P RESTA . NUMERO COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (209) Greater -> GREATER ABRE_P RESTA . NUMERO COMA expresion_alge2 CIERRA_P PUNTOCOMA

    NUMERO          shift and go to state 577


state 463

    (189) Greater -> GREATER ABRE_P expresion_alge1 . COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (195) Greater -> GREATER ABRE_P expresion_alge1 . COMA Var CIERRA_P PUNTOCOMA
    (200) Greater -> GREATER ABRE_P expresion_alge1 . COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (202) Greater -> GREATER ABRE_P expresion_alge1 . COMA NUMERO CIERRA_P PUNTOCOMA
    (203) Greater -> GREATER ABRE_P expresion_alge1 . COMA RESTA NUMERO CIERRA_P PUNTOCOMA

    COMA            shift and go to state 578


state 464

    (190) Greater -> GREATER ABRE_P expresion_alge2 . COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (194) Greater -> GREATER ABRE_P expresion_alge2 . COMA Var CIERRA_P PUNTOCOMA
    (201) Greater -> GREATER ABRE_P expresion_alge2 . COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (204) Greater -> GREATER ABRE_P expresion_alge2 . COMA NUMERO CIERRA_P PUNTOCOMA
    (205) Greater -> GREATER ABRE_P expresion_alge2 . COMA RESTA NUMERO CIERRA_P PUNTOCOMA

    COMA            shift and go to state 579


state 465

    (191) Greater -> GREATER ABRE_P Var . COMA Var CIERRA_P PUNTOCOMA
    (196) Greater -> GREATER ABRE_P Var . COMA NUMERO CIERRA_P PUNTOCOMA
    (197) Greater -> GREATER ABRE_P Var . COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (198) Greater -> GREATER ABRE_P Var . COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (199) Greater -> GREATER ABRE_P Var . COMA expresion_alge2 CIERRA_P PUNTOCOMA

    COMA            shift and go to state 580


state 466

    (210) Smaller -> SMALLER ABRE_P NUMERO . COMA NUMERO CIERRA_P PUNTOCOMA
    (212) Smaller -> SMALLER ABRE_P NUMERO . COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (216) Smaller -> SMALLER ABRE_P NUMERO . COMA Var CIERRA_P PUNTOCOMA
    (230) Smaller -> SMALLER ABRE_P NUMERO . COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (232) Smaller -> SMALLER ABRE_P NUMERO . COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (93) expresion_alge1 -> NUMERO . SUMA NUMERO
    (94) expresion_alge1 -> NUMERO . RESTA NUMERO
    (95) expresion_alge1 -> NUMERO . MULTI NUMERO
    (96) expresion_alge1 -> NUMERO . DIVISION NUMERO

    COMA            shift and go to state 581
    SUMA            shift and go to state 127
    RESTA           shift and go to state 128
    MULTI           shift and go to state 129
    DIVISION        shift and go to state 130


state 467

    (211) Smaller -> SMALLER ABRE_P RESTA . NUMERO COMA NUMERO CIERRA_P PUNTOCOMA
    (217) Smaller -> SMALLER ABRE_P RESTA . NUMERO COMA Var CIERRA_P PUNTOCOMA
    (231) Smaller -> SMALLER ABRE_P RESTA . NUMERO COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (233) Smaller -> SMALLER ABRE_P RESTA . NUMERO COMA expresion_alge2 CIERRA_P PUNTOCOMA

    NUMERO          shift and go to state 582


state 468

    (213) Smaller -> SMALLER ABRE_P expresion_alge1 . COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (219) Smaller -> SMALLER ABRE_P expresion_alge1 . COMA Var CIERRA_P PUNTOCOMA
    (224) Smaller -> SMALLER ABRE_P expresion_alge1 . COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (226) Smaller -> SMALLER ABRE_P expresion_alge1 . COMA NUMERO CIERRA_P PUNTOCOMA
    (227) Smaller -> SMALLER ABRE_P expresion_alge1 . COMA RESTA NUMERO CIERRA_P PUNTOCOMA

    COMA            shift and go to state 583


state 469

    (214) Smaller -> SMALLER ABRE_P expresion_alge2 . COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (218) Smaller -> SMALLER ABRE_P expresion_alge2 . COMA Var CIERRA_P PUNTOCOMA
    (225) Smaller -> SMALLER ABRE_P expresion_alge2 . COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (228) Smaller -> SMALLER ABRE_P expresion_alge2 . COMA NUMERO CIERRA_P PUNTOCOMA
    (229) Smaller -> SMALLER ABRE_P expresion_alge2 . COMA RESTA NUMERO CIERRA_P PUNTOCOMA

    COMA            shift and go to state 584


state 470

    (215) Smaller -> SMALLER ABRE_P Var . COMA Var CIERRA_P PUNTOCOMA
    (220) Smaller -> SMALLER ABRE_P Var . COMA NUMERO CIERRA_P PUNTOCOMA
    (221) Smaller -> SMALLER ABRE_P Var . COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (222) Smaller -> SMALLER ABRE_P Var . COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (223) Smaller -> SMALLER ABRE_P Var . COMA expresion_alge2 CIERRA_P PUNTOCOMA

    COMA            shift and go to state 585


state 471

    (243) IfElse -> IFELSE ABRE_P condicion CIERRA_P BRACKET1 . funcion BRACKET2 BRACKET1 funcion BRACKET2
    (69) funcion -> . Random empty
    (70) funcion -> . Run empty
    (71) funcion -> . If empty
    (72) funcion -> . IfElse empty
    (73) funcion -> . Repeat empty
    (74) funcion -> . Until empty
    (75) funcion -> . While empty
    (76) funcion -> . PrintLine empty
    (77) funcion -> . And empty
    (78) funcion -> . Or empty
    (79) funcion -> . Add empty
    (80) funcion -> . Put2 empty
    (81) funcion -> . Put empty
    (82) funcion -> . PUNTOCOMA funcion
    (83) funcion -> . empty empty
    (257) Random -> . RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA
    (300) Run -> . RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA
    (242) If -> . IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2
    (243) IfElse -> . IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2
    (245) Repeat -> . REPEAT NUMERO BRACKET1 ordenes BRACKET2
    (246) Until -> . UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2
    (244) While -> . WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2
    (309) PrintLine -> . PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA
    (234) And -> . AND ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (235) And -> . AND ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (236) And -> . AND ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (237) And -> . AND ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (238) Or -> . OR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (239) Or -> . OR ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (240) Or -> . OR ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (241) Or -> . OR ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (247) Add -> . ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA
    (248) Add -> . ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (249) Add -> . ADD ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (250) Add -> . ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (251) Add -> . ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (252) Add -> . ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (85) Put2 -> . PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (86) Put2 -> . PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (87) Put2 -> . PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (88) Put2 -> . PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (89) Put2 -> . PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA
    (84) Put -> . PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA
    (310) empty -> .

    PUNTOCOMA       shift and go to state 62
    RANDOM          shift and go to state 69
    RUN             shift and go to state 70
    IF              shift and go to state 71
    IFELSE          shift and go to state 72
    REPEAT          shift and go to state 73
    UNTIL           shift and go to state 74
    WHILE           shift and go to state 75
    PRINTLINE       shift and go to state 76
    AND             shift and go to state 77
    OR              shift and go to state 78
    ADD             shift and go to state 79
    PUT             shift and go to state 95
    BRACKET2        reduce using rule 310 (empty -> .)

    funcion                        shift and go to state 586
    Random                         shift and go to state 51
    empty                          shift and go to state 125
    Run                            shift and go to state 52
    If                             shift and go to state 53
    IfElse                         shift and go to state 54
    Repeat                         shift and go to state 55
    Until                          shift and go to state 56
    While                          shift and go to state 57
    PrintLine                      shift and go to state 58
    And                            shift and go to state 59
    Or                             shift and go to state 60
    Add                            shift and go to state 61
    Put2                           shift and go to state 93
    Put                            shift and go to state 94

state 472

    (245) Repeat -> REPEAT NUMERO BRACKET1 ordenes BRACKET2 .

    PUNTOCOMA       reduce using rule 245 (Repeat -> REPEAT NUMERO BRACKET1 ordenes BRACKET2 .)
    NUMERO          reduce using rule 245 (Repeat -> REPEAT NUMERO BRACKET1 ordenes BRACKET2 .)
    ABRE_P          reduce using rule 245 (Repeat -> REPEAT NUMERO BRACKET1 ordenes BRACKET2 .)
    SUM             reduce using rule 245 (Repeat -> REPEAT NUMERO BRACKET1 ordenes BRACKET2 .)
    SUBSTR          reduce using rule 245 (Repeat -> REPEAT NUMERO BRACKET1 ordenes BRACKET2 .)
    MULTI           reduce using rule 245 (Repeat -> REPEAT NUMERO BRACKET1 ordenes BRACKET2 .)
    DIV             reduce using rule 245 (Repeat -> REPEAT NUMERO BRACKET1 ordenes BRACKET2 .)
    RANDOM          reduce using rule 245 (Repeat -> REPEAT NUMERO BRACKET1 ordenes BRACKET2 .)
    RUN             reduce using rule 245 (Repeat -> REPEAT NUMERO BRACKET1 ordenes BRACKET2 .)
    IF              reduce using rule 245 (Repeat -> REPEAT NUMERO BRACKET1 ordenes BRACKET2 .)
    IFELSE          reduce using rule 245 (Repeat -> REPEAT NUMERO BRACKET1 ordenes BRACKET2 .)
    REPEAT          reduce using rule 245 (Repeat -> REPEAT NUMERO BRACKET1 ordenes BRACKET2 .)
    UNTIL           reduce using rule 245 (Repeat -> REPEAT NUMERO BRACKET1 ordenes BRACKET2 .)
    WHILE           reduce using rule 245 (Repeat -> REPEAT NUMERO BRACKET1 ordenes BRACKET2 .)
    PRINTLINE       reduce using rule 245 (Repeat -> REPEAT NUMERO BRACKET1 ordenes BRACKET2 .)
    AND             reduce using rule 245 (Repeat -> REPEAT NUMERO BRACKET1 ordenes BRACKET2 .)
    OR              reduce using rule 245 (Repeat -> REPEAT NUMERO BRACKET1 ordenes BRACKET2 .)
    ADD             reduce using rule 245 (Repeat -> REPEAT NUMERO BRACKET1 ordenes BRACKET2 .)
    PUT             reduce using rule 245 (Repeat -> REPEAT NUMERO BRACKET1 ordenes BRACKET2 .)
    FIN             reduce using rule 245 (Repeat -> REPEAT NUMERO BRACKET1 ordenes BRACKET2 .)
    CIERRA_P        reduce using rule 245 (Repeat -> REPEAT NUMERO BRACKET1 ordenes BRACKET2 .)
    BRACKET2        reduce using rule 245 (Repeat -> REPEAT NUMERO BRACKET1 ordenes BRACKET2 .)


state 473

    (246) Until -> UNTIL BRACKET1 funcion BRACKET2 BRACKET1 . condicion BRACKET2
    (90) condicion -> . Equal
    (91) condicion -> . Greater
    (92) condicion -> . Smaller
    (162) Equal -> . EQUAL ABRE_P NUMERO COMA NUMERO CIERRA_P PUNTOCOMA
    (163) Equal -> . EQUAL ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P PUNTOCOMA
    (164) Equal -> . EQUAL ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (165) Equal -> . EQUAL ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (166) Equal -> . EQUAL ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (167) Equal -> . EQUAL ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (168) Equal -> . EQUAL ABRE_P NUMERO COMA Var CIERRA_P PUNTOCOMA
    (169) Equal -> . EQUAL ABRE_P RESTA NUMERO COMA Var CIERRA_P PUNTOCOMA
    (170) Equal -> . EQUAL ABRE_P expresion_alge2 COMA Var CIERRA_P PUNTOCOMA
    (171) Equal -> . EQUAL ABRE_P expresion_alge1 COMA Var CIERRA_P PUNTOCOMA
    (172) Equal -> . EQUAL ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (173) Equal -> . EQUAL ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (174) Equal -> . EQUAL ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (175) Equal -> . EQUAL ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (176) Equal -> . EQUAL ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (177) Equal -> . EQUAL ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (178) Equal -> . EQUAL ABRE_P expresion_alge1 COMA NUMERO CIERRA_P PUNTOCOMA
    (179) Equal -> . EQUAL ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (180) Equal -> . EQUAL ABRE_P expresion_alge2 COMA NUMERO CIERRA_P PUNTOCOMA
    (181) Equal -> . EQUAL ABRE_P expresion_alge2 COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (182) Equal -> . EQUAL ABRE_P NUMERO COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (183) Equal -> . EQUAL ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (184) Equal -> . EQUAL ABRE_P NUMERO COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (185) Equal -> . EQUAL ABRE_P RESTA NUMERO COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (186) Greater -> . GREATER ABRE_P NUMERO COMA NUMERO CIERRA_P PUNTOCOMA
    (187) Greater -> . GREATER ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P PUNTOCOMA
    (188) Greater -> . GREATER ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (189) Greater -> . GREATER ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (190) Greater -> . GREATER ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (191) Greater -> . GREATER ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (192) Greater -> . GREATER ABRE_P NUMERO COMA Var CIERRA_P PUNTOCOMA
    (193) Greater -> . GREATER ABRE_P RESTA NUMERO COMA Var CIERRA_P PUNTOCOMA
    (194) Greater -> . GREATER ABRE_P expresion_alge2 COMA Var CIERRA_P PUNTOCOMA
    (195) Greater -> . GREATER ABRE_P expresion_alge1 COMA Var CIERRA_P PUNTOCOMA
    (196) Greater -> . GREATER ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (197) Greater -> . GREATER ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (198) Greater -> . GREATER ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (199) Greater -> . GREATER ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (200) Greater -> . GREATER ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (201) Greater -> . GREATER ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (202) Greater -> . GREATER ABRE_P expresion_alge1 COMA NUMERO CIERRA_P PUNTOCOMA
    (203) Greater -> . GREATER ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (204) Greater -> . GREATER ABRE_P expresion_alge2 COMA NUMERO CIERRA_P PUNTOCOMA
    (205) Greater -> . GREATER ABRE_P expresion_alge2 COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (206) Greater -> . GREATER ABRE_P NUMERO COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (207) Greater -> . GREATER ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (208) Greater -> . GREATER ABRE_P NUMERO COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (209) Greater -> . GREATER ABRE_P RESTA NUMERO COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (210) Smaller -> . SMALLER ABRE_P NUMERO COMA NUMERO CIERRA_P PUNTOCOMA
    (211) Smaller -> . SMALLER ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P PUNTOCOMA
    (212) Smaller -> . SMALLER ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (213) Smaller -> . SMALLER ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (214) Smaller -> . SMALLER ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (215) Smaller -> . SMALLER ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (216) Smaller -> . SMALLER ABRE_P NUMERO COMA Var CIERRA_P PUNTOCOMA
    (217) Smaller -> . SMALLER ABRE_P RESTA NUMERO COMA Var CIERRA_P PUNTOCOMA
    (218) Smaller -> . SMALLER ABRE_P expresion_alge2 COMA Var CIERRA_P PUNTOCOMA
    (219) Smaller -> . SMALLER ABRE_P expresion_alge1 COMA Var CIERRA_P PUNTOCOMA
    (220) Smaller -> . SMALLER ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (221) Smaller -> . SMALLER ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (222) Smaller -> . SMALLER ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (223) Smaller -> . SMALLER ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (224) Smaller -> . SMALLER ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (225) Smaller -> . SMALLER ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (226) Smaller -> . SMALLER ABRE_P expresion_alge1 COMA NUMERO CIERRA_P PUNTOCOMA
    (227) Smaller -> . SMALLER ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (228) Smaller -> . SMALLER ABRE_P expresion_alge2 COMA NUMERO CIERRA_P PUNTOCOMA
    (229) Smaller -> . SMALLER ABRE_P expresion_alge2 COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (230) Smaller -> . SMALLER ABRE_P NUMERO COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (231) Smaller -> . SMALLER ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (232) Smaller -> . SMALLER ABRE_P NUMERO COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (233) Smaller -> . SMALLER ABRE_P RESTA NUMERO COMA expresion_alge2 CIERRA_P PUNTOCOMA

    EQUAL           shift and go to state 228
    GREATER         shift and go to state 229
    SMALLER         shift and go to state 230

    condicion                      shift and go to state 587
    Equal                          shift and go to state 225
    Greater                        shift and go to state 226
    Smaller                        shift and go to state 227

state 474

    (244) While -> WHILE BRACKET1 condicion BRACKET2 BRACKET1 . funcion BRACKET2
    (69) funcion -> . Random empty
    (70) funcion -> . Run empty
    (71) funcion -> . If empty
    (72) funcion -> . IfElse empty
    (73) funcion -> . Repeat empty
    (74) funcion -> . Until empty
    (75) funcion -> . While empty
    (76) funcion -> . PrintLine empty
    (77) funcion -> . And empty
    (78) funcion -> . Or empty
    (79) funcion -> . Add empty
    (80) funcion -> . Put2 empty
    (81) funcion -> . Put empty
    (82) funcion -> . PUNTOCOMA funcion
    (83) funcion -> . empty empty
    (257) Random -> . RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA
    (300) Run -> . RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA
    (242) If -> . IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2
    (243) IfElse -> . IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2
    (245) Repeat -> . REPEAT NUMERO BRACKET1 ordenes BRACKET2
    (246) Until -> . UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2
    (244) While -> . WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2
    (309) PrintLine -> . PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA
    (234) And -> . AND ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (235) And -> . AND ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (236) And -> . AND ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (237) And -> . AND ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (238) Or -> . OR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (239) Or -> . OR ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (240) Or -> . OR ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (241) Or -> . OR ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (247) Add -> . ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA
    (248) Add -> . ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (249) Add -> . ADD ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (250) Add -> . ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (251) Add -> . ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (252) Add -> . ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (85) Put2 -> . PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (86) Put2 -> . PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (87) Put2 -> . PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (88) Put2 -> . PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (89) Put2 -> . PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA
    (84) Put -> . PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA
    (310) empty -> .

    PUNTOCOMA       shift and go to state 62
    RANDOM          shift and go to state 69
    RUN             shift and go to state 70
    IF              shift and go to state 71
    IFELSE          shift and go to state 72
    REPEAT          shift and go to state 73
    UNTIL           shift and go to state 74
    WHILE           shift and go to state 75
    PRINTLINE       shift and go to state 76
    AND             shift and go to state 77
    OR              shift and go to state 78
    ADD             shift and go to state 79
    PUT             shift and go to state 95
    BRACKET2        reduce using rule 310 (empty -> .)

    funcion                        shift and go to state 588
    Random                         shift and go to state 51
    empty                          shift and go to state 125
    Run                            shift and go to state 52
    If                             shift and go to state 53
    IfElse                         shift and go to state 54
    Repeat                         shift and go to state 55
    Until                          shift and go to state 56
    While                          shift and go to state 57
    PrintLine                      shift and go to state 58
    And                            shift and go to state 59
    Or                             shift and go to state 60
    Add                            shift and go to state 61
    Put2                           shift and go to state 93
    Put                            shift and go to state 94

state 475

    (309) PrintLine -> PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA .

    PUNTOCOMA       reduce using rule 309 (PrintLine -> PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA .)
    NUMERO          reduce using rule 309 (PrintLine -> PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA .)
    ABRE_P          reduce using rule 309 (PrintLine -> PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA .)
    SUM             reduce using rule 309 (PrintLine -> PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA .)
    SUBSTR          reduce using rule 309 (PrintLine -> PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA .)
    MULTI           reduce using rule 309 (PrintLine -> PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA .)
    DIV             reduce using rule 309 (PrintLine -> PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA .)
    RANDOM          reduce using rule 309 (PrintLine -> PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA .)
    RUN             reduce using rule 309 (PrintLine -> PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA .)
    IF              reduce using rule 309 (PrintLine -> PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA .)
    IFELSE          reduce using rule 309 (PrintLine -> PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA .)
    REPEAT          reduce using rule 309 (PrintLine -> PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA .)
    UNTIL           reduce using rule 309 (PrintLine -> PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA .)
    WHILE           reduce using rule 309 (PrintLine -> PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA .)
    PRINTLINE       reduce using rule 309 (PrintLine -> PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA .)
    AND             reduce using rule 309 (PrintLine -> PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA .)
    OR              reduce using rule 309 (PrintLine -> PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA .)
    ADD             reduce using rule 309 (PrintLine -> PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA .)
    PUT             reduce using rule 309 (PrintLine -> PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA .)
    FIN             reduce using rule 309 (PrintLine -> PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA .)
    CIERRA_P        reduce using rule 309 (PrintLine -> PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 309 (PrintLine -> PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA .)


state 476

    (301) exp -> NUMERO COMA exp .

    CIERRA_P        reduce using rule 301 (exp -> NUMERO COMA exp .)


state 477

    (304) exp -> NUMERO empty empty .

    CIERRA_P        reduce using rule 304 (exp -> NUMERO empty empty .)


state 478

    (302) exp -> STRING COMA exp .

    CIERRA_P        reduce using rule 302 (exp -> STRING COMA exp .)


state 479

    (307) exp -> STRING empty empty .

    CIERRA_P        reduce using rule 307 (exp -> STRING empty empty .)


state 480

    (303) exp -> Var COMA exp .

    CIERRA_P        reduce using rule 303 (exp -> Var COMA exp .)


state 481

    (308) exp -> Var empty empty .

    CIERRA_P        reduce using rule 308 (exp -> Var empty empty .)


state 482

    (305) exp -> RESTA NUMERO empty . empty
    (310) empty -> .

    CIERRA_P        reduce using rule 310 (empty -> .)

    empty                          shift and go to state 589

state 483

    (306) exp -> RESTA NUMERO COMA . empty
    (310) empty -> .

    CIERRA_P        reduce using rule 310 (empty -> .)

    empty                          shift and go to state 590

state 484

    (234) And -> AND ABRE_P expresion_alge1 COMA expresion_alge1 . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 591


state 485

    (235) And -> AND ABRE_P expresion_alge1 COMA expresion_alge2 . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 592


state 486

    (237) And -> AND ABRE_P expresion_alge2 COMA expresion_alge2 . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 593


state 487

    (236) And -> AND ABRE_P expresion_alge2 COMA expresion_alge1 . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 594


state 488

    (238) Or -> OR ABRE_P expresion_alge1 COMA expresion_alge1 . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 595


state 489

    (239) Or -> OR ABRE_P expresion_alge1 COMA expresion_alge2 . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 596


state 490

    (241) Or -> OR ABRE_P expresion_alge2 COMA expresion_alge2 . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 597


state 491

    (240) Or -> OR ABRE_P expresion_alge2 COMA expresion_alge1 . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 598


state 492

    (247) Add -> ADD ABRE_P Var empty empty . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 599


state 493

    (251) Add -> ADD ABRE_P Var COMA Var . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 600


state 494

    (248) Add -> ADD ABRE_P Var COMA NUMERO . CIERRA_P PUNTOCOMA
    (93) expresion_alge1 -> NUMERO . SUMA NUMERO
    (94) expresion_alge1 -> NUMERO . RESTA NUMERO
    (95) expresion_alge1 -> NUMERO . MULTI NUMERO
    (96) expresion_alge1 -> NUMERO . DIVISION NUMERO

    CIERRA_P        shift and go to state 601
    SUMA            shift and go to state 127
    RESTA           shift and go to state 128
    MULTI           shift and go to state 129
    DIVISION        shift and go to state 130


state 495

    (249) Add -> ADD ABRE_P Var COMA RESTA . NUMERO CIERRA_P PUNTOCOMA

    NUMERO          shift and go to state 602


state 496

    (250) Add -> ADD ABRE_P Var COMA expresion_alge1 . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 603


state 497

    (252) Add -> ADD ABRE_P Var COMA expresion_alge2 . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 604


state 498

    (86) Put2 -> PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA .

    $end            reduce using rule 86 (Put2 -> PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)
    FIN             reduce using rule 86 (Put2 -> PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)
    PUNTOCOMA       reduce using rule 86 (Put2 -> PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)
    NUMERO          reduce using rule 86 (Put2 -> PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)
    ABRE_P          reduce using rule 86 (Put2 -> PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)
    SUM             reduce using rule 86 (Put2 -> PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)
    SUBSTR          reduce using rule 86 (Put2 -> PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)
    MULTI           reduce using rule 86 (Put2 -> PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)
    DIV             reduce using rule 86 (Put2 -> PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)
    RANDOM          reduce using rule 86 (Put2 -> PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)
    RUN             reduce using rule 86 (Put2 -> PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)
    IF              reduce using rule 86 (Put2 -> PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)
    IFELSE          reduce using rule 86 (Put2 -> PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)
    REPEAT          reduce using rule 86 (Put2 -> PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)
    UNTIL           reduce using rule 86 (Put2 -> PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)
    WHILE           reduce using rule 86 (Put2 -> PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)
    PRINTLINE       reduce using rule 86 (Put2 -> PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)
    AND             reduce using rule 86 (Put2 -> PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)
    OR              reduce using rule 86 (Put2 -> PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)
    ADD             reduce using rule 86 (Put2 -> PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)
    PUT             reduce using rule 86 (Put2 -> PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)
    CIERRA_P        reduce using rule 86 (Put2 -> PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 86 (Put2 -> PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)


state 499

    (25) llamadoproc -> PARA id BRACKET1 parametro . BRACKET2 PUNTOCOMA

    BRACKET2        shift and go to state 605


state 500

    (97) expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 . CIERRA_P

    CIERRA_P        shift and go to state 606


state 501

    (98) expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 . CIERRA_P

    CIERRA_P        shift and go to state 607


state 502

    (99) expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 . CIERRA_P

    CIERRA_P        shift and go to state 608


state 503

    (100) expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 . CIERRA_P

    CIERRA_P        shift and go to state 609


state 504

    (131) Mult -> MULTI ABRE_P NUMERO COMA NUMERO CIERRA_P .

    PUNTOCOMA       reduce using rule 131 (Mult -> MULTI ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    NUMERO          reduce using rule 131 (Mult -> MULTI ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    ABRE_P          reduce using rule 131 (Mult -> MULTI ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    SUM             reduce using rule 131 (Mult -> MULTI ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    SUBSTR          reduce using rule 131 (Mult -> MULTI ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    MULTI           reduce using rule 131 (Mult -> MULTI ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    DIV             reduce using rule 131 (Mult -> MULTI ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    RANDOM          reduce using rule 131 (Mult -> MULTI ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    RUN             reduce using rule 131 (Mult -> MULTI ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    IF              reduce using rule 131 (Mult -> MULTI ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    IFELSE          reduce using rule 131 (Mult -> MULTI ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    REPEAT          reduce using rule 131 (Mult -> MULTI ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    UNTIL           reduce using rule 131 (Mult -> MULTI ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    WHILE           reduce using rule 131 (Mult -> MULTI ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    PRINTLINE       reduce using rule 131 (Mult -> MULTI ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    AND             reduce using rule 131 (Mult -> MULTI ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    OR              reduce using rule 131 (Mult -> MULTI ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    ADD             reduce using rule 131 (Mult -> MULTI ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    PUT             reduce using rule 131 (Mult -> MULTI ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    FIN             reduce using rule 131 (Mult -> MULTI ABRE_P NUMERO COMA NUMERO CIERRA_P .)


state 505

    (133) Mult -> MULTI ABRE_P NUMERO COMA RESTA NUMERO . CIERRA_P

    CIERRA_P        shift and go to state 610


state 506

    (134) Mult -> MULTI ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .

    PUNTOCOMA       reduce using rule 134 (Mult -> MULTI ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    NUMERO          reduce using rule 134 (Mult -> MULTI ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    ABRE_P          reduce using rule 134 (Mult -> MULTI ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    SUM             reduce using rule 134 (Mult -> MULTI ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    SUBSTR          reduce using rule 134 (Mult -> MULTI ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    MULTI           reduce using rule 134 (Mult -> MULTI ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    DIV             reduce using rule 134 (Mult -> MULTI ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    RANDOM          reduce using rule 134 (Mult -> MULTI ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    RUN             reduce using rule 134 (Mult -> MULTI ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    IF              reduce using rule 134 (Mult -> MULTI ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    IFELSE          reduce using rule 134 (Mult -> MULTI ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    REPEAT          reduce using rule 134 (Mult -> MULTI ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    UNTIL           reduce using rule 134 (Mult -> MULTI ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    WHILE           reduce using rule 134 (Mult -> MULTI ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    PRINTLINE       reduce using rule 134 (Mult -> MULTI ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    AND             reduce using rule 134 (Mult -> MULTI ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    OR              reduce using rule 134 (Mult -> MULTI ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    ADD             reduce using rule 134 (Mult -> MULTI ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    PUT             reduce using rule 134 (Mult -> MULTI ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    FIN             reduce using rule 134 (Mult -> MULTI ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)


state 507

    (137) Mult -> MULTI ABRE_P NUMERO COMA Var CIERRA_P .

    PUNTOCOMA       reduce using rule 137 (Mult -> MULTI ABRE_P NUMERO COMA Var CIERRA_P .)
    NUMERO          reduce using rule 137 (Mult -> MULTI ABRE_P NUMERO COMA Var CIERRA_P .)
    ABRE_P          reduce using rule 137 (Mult -> MULTI ABRE_P NUMERO COMA Var CIERRA_P .)
    SUM             reduce using rule 137 (Mult -> MULTI ABRE_P NUMERO COMA Var CIERRA_P .)
    SUBSTR          reduce using rule 137 (Mult -> MULTI ABRE_P NUMERO COMA Var CIERRA_P .)
    MULTI           reduce using rule 137 (Mult -> MULTI ABRE_P NUMERO COMA Var CIERRA_P .)
    DIV             reduce using rule 137 (Mult -> MULTI ABRE_P NUMERO COMA Var CIERRA_P .)
    RANDOM          reduce using rule 137 (Mult -> MULTI ABRE_P NUMERO COMA Var CIERRA_P .)
    RUN             reduce using rule 137 (Mult -> MULTI ABRE_P NUMERO COMA Var CIERRA_P .)
    IF              reduce using rule 137 (Mult -> MULTI ABRE_P NUMERO COMA Var CIERRA_P .)
    IFELSE          reduce using rule 137 (Mult -> MULTI ABRE_P NUMERO COMA Var CIERRA_P .)
    REPEAT          reduce using rule 137 (Mult -> MULTI ABRE_P NUMERO COMA Var CIERRA_P .)
    UNTIL           reduce using rule 137 (Mult -> MULTI ABRE_P NUMERO COMA Var CIERRA_P .)
    WHILE           reduce using rule 137 (Mult -> MULTI ABRE_P NUMERO COMA Var CIERRA_P .)
    PRINTLINE       reduce using rule 137 (Mult -> MULTI ABRE_P NUMERO COMA Var CIERRA_P .)
    AND             reduce using rule 137 (Mult -> MULTI ABRE_P NUMERO COMA Var CIERRA_P .)
    OR              reduce using rule 137 (Mult -> MULTI ABRE_P NUMERO COMA Var CIERRA_P .)
    ADD             reduce using rule 137 (Mult -> MULTI ABRE_P NUMERO COMA Var CIERRA_P .)
    PUT             reduce using rule 137 (Mult -> MULTI ABRE_P NUMERO COMA Var CIERRA_P .)
    FIN             reduce using rule 137 (Mult -> MULTI ABRE_P NUMERO COMA Var CIERRA_P .)


state 508

    (132) Mult -> MULTI ABRE_P RESTA NUMERO COMA NUMERO . CIERRA_P
    (93) expresion_alge1 -> NUMERO . SUMA NUMERO
    (94) expresion_alge1 -> NUMERO . RESTA NUMERO
    (95) expresion_alge1 -> NUMERO . MULTI NUMERO
    (96) expresion_alge1 -> NUMERO . DIVISION NUMERO

    CIERRA_P        shift and go to state 611
    SUMA            shift and go to state 127
    RESTA           shift and go to state 128
    MULTI           shift and go to state 129
    DIVISION        shift and go to state 130


state 509

    (135) Mult -> MULTI ABRE_P RESTA NUMERO COMA expresion_alge1 . CIERRA_P

    CIERRA_P        shift and go to state 612


state 510

    (138) Mult -> MULTI ABRE_P RESTA NUMERO COMA Var . CIERRA_P

    CIERRA_P        shift and go to state 613


state 511

    (136) Mult -> MULTI ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .

    PUNTOCOMA       reduce using rule 136 (Mult -> MULTI ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    NUMERO          reduce using rule 136 (Mult -> MULTI ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    ABRE_P          reduce using rule 136 (Mult -> MULTI ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    SUM             reduce using rule 136 (Mult -> MULTI ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    SUBSTR          reduce using rule 136 (Mult -> MULTI ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    MULTI           reduce using rule 136 (Mult -> MULTI ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    DIV             reduce using rule 136 (Mult -> MULTI ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    RANDOM          reduce using rule 136 (Mult -> MULTI ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    RUN             reduce using rule 136 (Mult -> MULTI ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    IF              reduce using rule 136 (Mult -> MULTI ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    IFELSE          reduce using rule 136 (Mult -> MULTI ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    REPEAT          reduce using rule 136 (Mult -> MULTI ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    UNTIL           reduce using rule 136 (Mult -> MULTI ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    WHILE           reduce using rule 136 (Mult -> MULTI ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    PRINTLINE       reduce using rule 136 (Mult -> MULTI ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    AND             reduce using rule 136 (Mult -> MULTI ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    OR              reduce using rule 136 (Mult -> MULTI ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    ADD             reduce using rule 136 (Mult -> MULTI ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    PUT             reduce using rule 136 (Mult -> MULTI ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    FIN             reduce using rule 136 (Mult -> MULTI ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)


state 512

    (142) Mult -> MULTI ABRE_P expresion_alge1 COMA Var CIERRA_P .

    PUNTOCOMA       reduce using rule 142 (Mult -> MULTI ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    NUMERO          reduce using rule 142 (Mult -> MULTI ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    ABRE_P          reduce using rule 142 (Mult -> MULTI ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    SUM             reduce using rule 142 (Mult -> MULTI ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    SUBSTR          reduce using rule 142 (Mult -> MULTI ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    MULTI           reduce using rule 142 (Mult -> MULTI ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    DIV             reduce using rule 142 (Mult -> MULTI ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    RANDOM          reduce using rule 142 (Mult -> MULTI ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    RUN             reduce using rule 142 (Mult -> MULTI ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    IF              reduce using rule 142 (Mult -> MULTI ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    IFELSE          reduce using rule 142 (Mult -> MULTI ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    REPEAT          reduce using rule 142 (Mult -> MULTI ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    UNTIL           reduce using rule 142 (Mult -> MULTI ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    WHILE           reduce using rule 142 (Mult -> MULTI ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    PRINTLINE       reduce using rule 142 (Mult -> MULTI ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    AND             reduce using rule 142 (Mult -> MULTI ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    OR              reduce using rule 142 (Mult -> MULTI ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    ADD             reduce using rule 142 (Mult -> MULTI ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    PUT             reduce using rule 142 (Mult -> MULTI ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    FIN             reduce using rule 142 (Mult -> MULTI ABRE_P expresion_alge1 COMA Var CIERRA_P .)


state 513

    (143) Mult -> MULTI ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .

    PUNTOCOMA       reduce using rule 143 (Mult -> MULTI ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    NUMERO          reduce using rule 143 (Mult -> MULTI ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    ABRE_P          reduce using rule 143 (Mult -> MULTI ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    SUM             reduce using rule 143 (Mult -> MULTI ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    SUBSTR          reduce using rule 143 (Mult -> MULTI ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    MULTI           reduce using rule 143 (Mult -> MULTI ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    DIV             reduce using rule 143 (Mult -> MULTI ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    RANDOM          reduce using rule 143 (Mult -> MULTI ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    RUN             reduce using rule 143 (Mult -> MULTI ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    IF              reduce using rule 143 (Mult -> MULTI ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    IFELSE          reduce using rule 143 (Mult -> MULTI ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    REPEAT          reduce using rule 143 (Mult -> MULTI ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    UNTIL           reduce using rule 143 (Mult -> MULTI ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    WHILE           reduce using rule 143 (Mult -> MULTI ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    PRINTLINE       reduce using rule 143 (Mult -> MULTI ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    AND             reduce using rule 143 (Mult -> MULTI ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    OR              reduce using rule 143 (Mult -> MULTI ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    ADD             reduce using rule 143 (Mult -> MULTI ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    PUT             reduce using rule 143 (Mult -> MULTI ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    FIN             reduce using rule 143 (Mult -> MULTI ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)


state 514

    (144) Mult -> MULTI ABRE_P expresion_alge1 COMA RESTA NUMERO . CIERRA_P

    CIERRA_P        shift and go to state 614


state 515

    (141) Mult -> MULTI ABRE_P Var COMA Var CIERRA_P .

    PUNTOCOMA       reduce using rule 141 (Mult -> MULTI ABRE_P Var COMA Var CIERRA_P .)
    NUMERO          reduce using rule 141 (Mult -> MULTI ABRE_P Var COMA Var CIERRA_P .)
    ABRE_P          reduce using rule 141 (Mult -> MULTI ABRE_P Var COMA Var CIERRA_P .)
    SUM             reduce using rule 141 (Mult -> MULTI ABRE_P Var COMA Var CIERRA_P .)
    SUBSTR          reduce using rule 141 (Mult -> MULTI ABRE_P Var COMA Var CIERRA_P .)
    MULTI           reduce using rule 141 (Mult -> MULTI ABRE_P Var COMA Var CIERRA_P .)
    DIV             reduce using rule 141 (Mult -> MULTI ABRE_P Var COMA Var CIERRA_P .)
    RANDOM          reduce using rule 141 (Mult -> MULTI ABRE_P Var COMA Var CIERRA_P .)
    RUN             reduce using rule 141 (Mult -> MULTI ABRE_P Var COMA Var CIERRA_P .)
    IF              reduce using rule 141 (Mult -> MULTI ABRE_P Var COMA Var CIERRA_P .)
    IFELSE          reduce using rule 141 (Mult -> MULTI ABRE_P Var COMA Var CIERRA_P .)
    REPEAT          reduce using rule 141 (Mult -> MULTI ABRE_P Var COMA Var CIERRA_P .)
    UNTIL           reduce using rule 141 (Mult -> MULTI ABRE_P Var COMA Var CIERRA_P .)
    WHILE           reduce using rule 141 (Mult -> MULTI ABRE_P Var COMA Var CIERRA_P .)
    PRINTLINE       reduce using rule 141 (Mult -> MULTI ABRE_P Var COMA Var CIERRA_P .)
    AND             reduce using rule 141 (Mult -> MULTI ABRE_P Var COMA Var CIERRA_P .)
    OR              reduce using rule 141 (Mult -> MULTI ABRE_P Var COMA Var CIERRA_P .)
    ADD             reduce using rule 141 (Mult -> MULTI ABRE_P Var COMA Var CIERRA_P .)
    PUT             reduce using rule 141 (Mult -> MULTI ABRE_P Var COMA Var CIERRA_P .)
    FIN             reduce using rule 141 (Mult -> MULTI ABRE_P Var COMA Var CIERRA_P .)


state 516

    (139) Mult -> MULTI ABRE_P Var COMA NUMERO CIERRA_P .

    PUNTOCOMA       reduce using rule 139 (Mult -> MULTI ABRE_P Var COMA NUMERO CIERRA_P .)
    NUMERO          reduce using rule 139 (Mult -> MULTI ABRE_P Var COMA NUMERO CIERRA_P .)
    ABRE_P          reduce using rule 139 (Mult -> MULTI ABRE_P Var COMA NUMERO CIERRA_P .)
    SUM             reduce using rule 139 (Mult -> MULTI ABRE_P Var COMA NUMERO CIERRA_P .)
    SUBSTR          reduce using rule 139 (Mult -> MULTI ABRE_P Var COMA NUMERO CIERRA_P .)
    MULTI           reduce using rule 139 (Mult -> MULTI ABRE_P Var COMA NUMERO CIERRA_P .)
    DIV             reduce using rule 139 (Mult -> MULTI ABRE_P Var COMA NUMERO CIERRA_P .)
    RANDOM          reduce using rule 139 (Mult -> MULTI ABRE_P Var COMA NUMERO CIERRA_P .)
    RUN             reduce using rule 139 (Mult -> MULTI ABRE_P Var COMA NUMERO CIERRA_P .)
    IF              reduce using rule 139 (Mult -> MULTI ABRE_P Var COMA NUMERO CIERRA_P .)
    IFELSE          reduce using rule 139 (Mult -> MULTI ABRE_P Var COMA NUMERO CIERRA_P .)
    REPEAT          reduce using rule 139 (Mult -> MULTI ABRE_P Var COMA NUMERO CIERRA_P .)
    UNTIL           reduce using rule 139 (Mult -> MULTI ABRE_P Var COMA NUMERO CIERRA_P .)
    WHILE           reduce using rule 139 (Mult -> MULTI ABRE_P Var COMA NUMERO CIERRA_P .)
    PRINTLINE       reduce using rule 139 (Mult -> MULTI ABRE_P Var COMA NUMERO CIERRA_P .)
    AND             reduce using rule 139 (Mult -> MULTI ABRE_P Var COMA NUMERO CIERRA_P .)
    OR              reduce using rule 139 (Mult -> MULTI ABRE_P Var COMA NUMERO CIERRA_P .)
    ADD             reduce using rule 139 (Mult -> MULTI ABRE_P Var COMA NUMERO CIERRA_P .)
    PUT             reduce using rule 139 (Mult -> MULTI ABRE_P Var COMA NUMERO CIERRA_P .)
    FIN             reduce using rule 139 (Mult -> MULTI ABRE_P Var COMA NUMERO CIERRA_P .)


state 517

    (140) Mult -> MULTI ABRE_P Var COMA RESTA NUMERO . CIERRA_P

    CIERRA_P        shift and go to state 615


state 518

    (145) Mult -> MULTI ABRE_P Var COMA expresion_alge1 CIERRA_P .

    PUNTOCOMA       reduce using rule 145 (Mult -> MULTI ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    NUMERO          reduce using rule 145 (Mult -> MULTI ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    ABRE_P          reduce using rule 145 (Mult -> MULTI ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    SUM             reduce using rule 145 (Mult -> MULTI ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    SUBSTR          reduce using rule 145 (Mult -> MULTI ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    MULTI           reduce using rule 145 (Mult -> MULTI ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    DIV             reduce using rule 145 (Mult -> MULTI ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    RANDOM          reduce using rule 145 (Mult -> MULTI ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    RUN             reduce using rule 145 (Mult -> MULTI ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    IF              reduce using rule 145 (Mult -> MULTI ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    IFELSE          reduce using rule 145 (Mult -> MULTI ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    REPEAT          reduce using rule 145 (Mult -> MULTI ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    UNTIL           reduce using rule 145 (Mult -> MULTI ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    WHILE           reduce using rule 145 (Mult -> MULTI ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    PRINTLINE       reduce using rule 145 (Mult -> MULTI ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    AND             reduce using rule 145 (Mult -> MULTI ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    OR              reduce using rule 145 (Mult -> MULTI ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    ADD             reduce using rule 145 (Mult -> MULTI ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    PUT             reduce using rule 145 (Mult -> MULTI ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    FIN             reduce using rule 145 (Mult -> MULTI ABRE_P Var COMA expresion_alge1 CIERRA_P .)


state 519

    (146) Div -> DIV ABRE_P NUMERO COMA NUMERO CIERRA_P .

    PUNTOCOMA       reduce using rule 146 (Div -> DIV ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    NUMERO          reduce using rule 146 (Div -> DIV ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    ABRE_P          reduce using rule 146 (Div -> DIV ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    SUM             reduce using rule 146 (Div -> DIV ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    SUBSTR          reduce using rule 146 (Div -> DIV ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    MULTI           reduce using rule 146 (Div -> DIV ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    DIV             reduce using rule 146 (Div -> DIV ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    RANDOM          reduce using rule 146 (Div -> DIV ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    RUN             reduce using rule 146 (Div -> DIV ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    IF              reduce using rule 146 (Div -> DIV ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    IFELSE          reduce using rule 146 (Div -> DIV ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    REPEAT          reduce using rule 146 (Div -> DIV ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    UNTIL           reduce using rule 146 (Div -> DIV ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    WHILE           reduce using rule 146 (Div -> DIV ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    PRINTLINE       reduce using rule 146 (Div -> DIV ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    AND             reduce using rule 146 (Div -> DIV ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    OR              reduce using rule 146 (Div -> DIV ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    ADD             reduce using rule 146 (Div -> DIV ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    PUT             reduce using rule 146 (Div -> DIV ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    FIN             reduce using rule 146 (Div -> DIV ABRE_P NUMERO COMA NUMERO CIERRA_P .)


state 520

    (148) Div -> DIV ABRE_P NUMERO COMA RESTA NUMERO . CIERRA_P

    CIERRA_P        shift and go to state 616


state 521

    (149) Div -> DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .

    PUNTOCOMA       reduce using rule 149 (Div -> DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    NUMERO          reduce using rule 149 (Div -> DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    ABRE_P          reduce using rule 149 (Div -> DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    SUM             reduce using rule 149 (Div -> DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    SUBSTR          reduce using rule 149 (Div -> DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    MULTI           reduce using rule 149 (Div -> DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    DIV             reduce using rule 149 (Div -> DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    RANDOM          reduce using rule 149 (Div -> DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    RUN             reduce using rule 149 (Div -> DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    IF              reduce using rule 149 (Div -> DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    IFELSE          reduce using rule 149 (Div -> DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    REPEAT          reduce using rule 149 (Div -> DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    UNTIL           reduce using rule 149 (Div -> DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    WHILE           reduce using rule 149 (Div -> DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    PRINTLINE       reduce using rule 149 (Div -> DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    AND             reduce using rule 149 (Div -> DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    OR              reduce using rule 149 (Div -> DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    ADD             reduce using rule 149 (Div -> DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    PUT             reduce using rule 149 (Div -> DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    FIN             reduce using rule 149 (Div -> DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)


state 522

    (152) Div -> DIV ABRE_P NUMERO COMA Var CIERRA_P .

    PUNTOCOMA       reduce using rule 152 (Div -> DIV ABRE_P NUMERO COMA Var CIERRA_P .)
    NUMERO          reduce using rule 152 (Div -> DIV ABRE_P NUMERO COMA Var CIERRA_P .)
    ABRE_P          reduce using rule 152 (Div -> DIV ABRE_P NUMERO COMA Var CIERRA_P .)
    SUM             reduce using rule 152 (Div -> DIV ABRE_P NUMERO COMA Var CIERRA_P .)
    SUBSTR          reduce using rule 152 (Div -> DIV ABRE_P NUMERO COMA Var CIERRA_P .)
    MULTI           reduce using rule 152 (Div -> DIV ABRE_P NUMERO COMA Var CIERRA_P .)
    DIV             reduce using rule 152 (Div -> DIV ABRE_P NUMERO COMA Var CIERRA_P .)
    RANDOM          reduce using rule 152 (Div -> DIV ABRE_P NUMERO COMA Var CIERRA_P .)
    RUN             reduce using rule 152 (Div -> DIV ABRE_P NUMERO COMA Var CIERRA_P .)
    IF              reduce using rule 152 (Div -> DIV ABRE_P NUMERO COMA Var CIERRA_P .)
    IFELSE          reduce using rule 152 (Div -> DIV ABRE_P NUMERO COMA Var CIERRA_P .)
    REPEAT          reduce using rule 152 (Div -> DIV ABRE_P NUMERO COMA Var CIERRA_P .)
    UNTIL           reduce using rule 152 (Div -> DIV ABRE_P NUMERO COMA Var CIERRA_P .)
    WHILE           reduce using rule 152 (Div -> DIV ABRE_P NUMERO COMA Var CIERRA_P .)
    PRINTLINE       reduce using rule 152 (Div -> DIV ABRE_P NUMERO COMA Var CIERRA_P .)
    AND             reduce using rule 152 (Div -> DIV ABRE_P NUMERO COMA Var CIERRA_P .)
    OR              reduce using rule 152 (Div -> DIV ABRE_P NUMERO COMA Var CIERRA_P .)
    ADD             reduce using rule 152 (Div -> DIV ABRE_P NUMERO COMA Var CIERRA_P .)
    PUT             reduce using rule 152 (Div -> DIV ABRE_P NUMERO COMA Var CIERRA_P .)
    FIN             reduce using rule 152 (Div -> DIV ABRE_P NUMERO COMA Var CIERRA_P .)


state 523

    (147) Div -> DIV ABRE_P RESTA NUMERO COMA NUMERO . CIERRA_P
    (93) expresion_alge1 -> NUMERO . SUMA NUMERO
    (94) expresion_alge1 -> NUMERO . RESTA NUMERO
    (95) expresion_alge1 -> NUMERO . MULTI NUMERO
    (96) expresion_alge1 -> NUMERO . DIVISION NUMERO

    CIERRA_P        shift and go to state 617
    SUMA            shift and go to state 127
    RESTA           shift and go to state 128
    MULTI           shift and go to state 129
    DIVISION        shift and go to state 130


state 524

    (150) Div -> DIV ABRE_P RESTA NUMERO COMA expresion_alge1 . CIERRA_P

    CIERRA_P        shift and go to state 618


state 525

    (153) Div -> DIV ABRE_P RESTA NUMERO COMA Var . CIERRA_P

    CIERRA_P        shift and go to state 619


state 526

    (151) Div -> DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .

    PUNTOCOMA       reduce using rule 151 (Div -> DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    NUMERO          reduce using rule 151 (Div -> DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    ABRE_P          reduce using rule 151 (Div -> DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    SUM             reduce using rule 151 (Div -> DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    SUBSTR          reduce using rule 151 (Div -> DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    MULTI           reduce using rule 151 (Div -> DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    DIV             reduce using rule 151 (Div -> DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    RANDOM          reduce using rule 151 (Div -> DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    RUN             reduce using rule 151 (Div -> DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    IF              reduce using rule 151 (Div -> DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    IFELSE          reduce using rule 151 (Div -> DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    REPEAT          reduce using rule 151 (Div -> DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    UNTIL           reduce using rule 151 (Div -> DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    WHILE           reduce using rule 151 (Div -> DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    PRINTLINE       reduce using rule 151 (Div -> DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    AND             reduce using rule 151 (Div -> DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    OR              reduce using rule 151 (Div -> DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    ADD             reduce using rule 151 (Div -> DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    PUT             reduce using rule 151 (Div -> DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    FIN             reduce using rule 151 (Div -> DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)


state 527

    (157) Div -> DIV ABRE_P expresion_alge1 COMA Var CIERRA_P .

    PUNTOCOMA       reduce using rule 157 (Div -> DIV ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    NUMERO          reduce using rule 157 (Div -> DIV ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    ABRE_P          reduce using rule 157 (Div -> DIV ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    SUM             reduce using rule 157 (Div -> DIV ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    SUBSTR          reduce using rule 157 (Div -> DIV ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    MULTI           reduce using rule 157 (Div -> DIV ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    DIV             reduce using rule 157 (Div -> DIV ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    RANDOM          reduce using rule 157 (Div -> DIV ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    RUN             reduce using rule 157 (Div -> DIV ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    IF              reduce using rule 157 (Div -> DIV ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    IFELSE          reduce using rule 157 (Div -> DIV ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    REPEAT          reduce using rule 157 (Div -> DIV ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    UNTIL           reduce using rule 157 (Div -> DIV ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    WHILE           reduce using rule 157 (Div -> DIV ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    PRINTLINE       reduce using rule 157 (Div -> DIV ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    AND             reduce using rule 157 (Div -> DIV ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    OR              reduce using rule 157 (Div -> DIV ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    ADD             reduce using rule 157 (Div -> DIV ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    PUT             reduce using rule 157 (Div -> DIV ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    FIN             reduce using rule 157 (Div -> DIV ABRE_P expresion_alge1 COMA Var CIERRA_P .)


state 528

    (158) Div -> DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .

    PUNTOCOMA       reduce using rule 158 (Div -> DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    NUMERO          reduce using rule 158 (Div -> DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    ABRE_P          reduce using rule 158 (Div -> DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    SUM             reduce using rule 158 (Div -> DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    SUBSTR          reduce using rule 158 (Div -> DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    MULTI           reduce using rule 158 (Div -> DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    DIV             reduce using rule 158 (Div -> DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    RANDOM          reduce using rule 158 (Div -> DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    RUN             reduce using rule 158 (Div -> DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    IF              reduce using rule 158 (Div -> DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    IFELSE          reduce using rule 158 (Div -> DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    REPEAT          reduce using rule 158 (Div -> DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    UNTIL           reduce using rule 158 (Div -> DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    WHILE           reduce using rule 158 (Div -> DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    PRINTLINE       reduce using rule 158 (Div -> DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    AND             reduce using rule 158 (Div -> DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    OR              reduce using rule 158 (Div -> DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    ADD             reduce using rule 158 (Div -> DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    PUT             reduce using rule 158 (Div -> DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    FIN             reduce using rule 158 (Div -> DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)


state 529

    (159) Div -> DIV ABRE_P expresion_alge1 COMA RESTA NUMERO . CIERRA_P

    CIERRA_P        shift and go to state 620


state 530

    (156) Div -> DIV ABRE_P Var COMA Var CIERRA_P .

    PUNTOCOMA       reduce using rule 156 (Div -> DIV ABRE_P Var COMA Var CIERRA_P .)
    NUMERO          reduce using rule 156 (Div -> DIV ABRE_P Var COMA Var CIERRA_P .)
    ABRE_P          reduce using rule 156 (Div -> DIV ABRE_P Var COMA Var CIERRA_P .)
    SUM             reduce using rule 156 (Div -> DIV ABRE_P Var COMA Var CIERRA_P .)
    SUBSTR          reduce using rule 156 (Div -> DIV ABRE_P Var COMA Var CIERRA_P .)
    MULTI           reduce using rule 156 (Div -> DIV ABRE_P Var COMA Var CIERRA_P .)
    DIV             reduce using rule 156 (Div -> DIV ABRE_P Var COMA Var CIERRA_P .)
    RANDOM          reduce using rule 156 (Div -> DIV ABRE_P Var COMA Var CIERRA_P .)
    RUN             reduce using rule 156 (Div -> DIV ABRE_P Var COMA Var CIERRA_P .)
    IF              reduce using rule 156 (Div -> DIV ABRE_P Var COMA Var CIERRA_P .)
    IFELSE          reduce using rule 156 (Div -> DIV ABRE_P Var COMA Var CIERRA_P .)
    REPEAT          reduce using rule 156 (Div -> DIV ABRE_P Var COMA Var CIERRA_P .)
    UNTIL           reduce using rule 156 (Div -> DIV ABRE_P Var COMA Var CIERRA_P .)
    WHILE           reduce using rule 156 (Div -> DIV ABRE_P Var COMA Var CIERRA_P .)
    PRINTLINE       reduce using rule 156 (Div -> DIV ABRE_P Var COMA Var CIERRA_P .)
    AND             reduce using rule 156 (Div -> DIV ABRE_P Var COMA Var CIERRA_P .)
    OR              reduce using rule 156 (Div -> DIV ABRE_P Var COMA Var CIERRA_P .)
    ADD             reduce using rule 156 (Div -> DIV ABRE_P Var COMA Var CIERRA_P .)
    PUT             reduce using rule 156 (Div -> DIV ABRE_P Var COMA Var CIERRA_P .)
    FIN             reduce using rule 156 (Div -> DIV ABRE_P Var COMA Var CIERRA_P .)


state 531

    (154) Div -> DIV ABRE_P Var COMA NUMERO CIERRA_P .

    PUNTOCOMA       reduce using rule 154 (Div -> DIV ABRE_P Var COMA NUMERO CIERRA_P .)
    NUMERO          reduce using rule 154 (Div -> DIV ABRE_P Var COMA NUMERO CIERRA_P .)
    ABRE_P          reduce using rule 154 (Div -> DIV ABRE_P Var COMA NUMERO CIERRA_P .)
    SUM             reduce using rule 154 (Div -> DIV ABRE_P Var COMA NUMERO CIERRA_P .)
    SUBSTR          reduce using rule 154 (Div -> DIV ABRE_P Var COMA NUMERO CIERRA_P .)
    MULTI           reduce using rule 154 (Div -> DIV ABRE_P Var COMA NUMERO CIERRA_P .)
    DIV             reduce using rule 154 (Div -> DIV ABRE_P Var COMA NUMERO CIERRA_P .)
    RANDOM          reduce using rule 154 (Div -> DIV ABRE_P Var COMA NUMERO CIERRA_P .)
    RUN             reduce using rule 154 (Div -> DIV ABRE_P Var COMA NUMERO CIERRA_P .)
    IF              reduce using rule 154 (Div -> DIV ABRE_P Var COMA NUMERO CIERRA_P .)
    IFELSE          reduce using rule 154 (Div -> DIV ABRE_P Var COMA NUMERO CIERRA_P .)
    REPEAT          reduce using rule 154 (Div -> DIV ABRE_P Var COMA NUMERO CIERRA_P .)
    UNTIL           reduce using rule 154 (Div -> DIV ABRE_P Var COMA NUMERO CIERRA_P .)
    WHILE           reduce using rule 154 (Div -> DIV ABRE_P Var COMA NUMERO CIERRA_P .)
    PRINTLINE       reduce using rule 154 (Div -> DIV ABRE_P Var COMA NUMERO CIERRA_P .)
    AND             reduce using rule 154 (Div -> DIV ABRE_P Var COMA NUMERO CIERRA_P .)
    OR              reduce using rule 154 (Div -> DIV ABRE_P Var COMA NUMERO CIERRA_P .)
    ADD             reduce using rule 154 (Div -> DIV ABRE_P Var COMA NUMERO CIERRA_P .)
    PUT             reduce using rule 154 (Div -> DIV ABRE_P Var COMA NUMERO CIERRA_P .)
    FIN             reduce using rule 154 (Div -> DIV ABRE_P Var COMA NUMERO CIERRA_P .)


state 532

    (155) Div -> DIV ABRE_P Var COMA RESTA NUMERO . CIERRA_P

    CIERRA_P        shift and go to state 621


state 533

    (160) Div -> DIV ABRE_P Var COMA expresion_alge1 CIERRA_P .

    PUNTOCOMA       reduce using rule 160 (Div -> DIV ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    NUMERO          reduce using rule 160 (Div -> DIV ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    ABRE_P          reduce using rule 160 (Div -> DIV ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    SUM             reduce using rule 160 (Div -> DIV ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    SUBSTR          reduce using rule 160 (Div -> DIV ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    MULTI           reduce using rule 160 (Div -> DIV ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    DIV             reduce using rule 160 (Div -> DIV ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    RANDOM          reduce using rule 160 (Div -> DIV ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    RUN             reduce using rule 160 (Div -> DIV ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    IF              reduce using rule 160 (Div -> DIV ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    IFELSE          reduce using rule 160 (Div -> DIV ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    REPEAT          reduce using rule 160 (Div -> DIV ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    UNTIL           reduce using rule 160 (Div -> DIV ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    WHILE           reduce using rule 160 (Div -> DIV ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    PRINTLINE       reduce using rule 160 (Div -> DIV ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    AND             reduce using rule 160 (Div -> DIV ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    OR              reduce using rule 160 (Div -> DIV ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    ADD             reduce using rule 160 (Div -> DIV ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    PUT             reduce using rule 160 (Div -> DIV ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    FIN             reduce using rule 160 (Div -> DIV ABRE_P Var COMA expresion_alge1 CIERRA_P .)


state 534

    (101) Sum -> SUM ABRE_P NUMERO COMA NUMERO CIERRA_P .

    PUNTOCOMA       reduce using rule 101 (Sum -> SUM ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    NUMERO          reduce using rule 101 (Sum -> SUM ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    ABRE_P          reduce using rule 101 (Sum -> SUM ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    SUM             reduce using rule 101 (Sum -> SUM ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    SUBSTR          reduce using rule 101 (Sum -> SUM ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    MULTI           reduce using rule 101 (Sum -> SUM ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    DIV             reduce using rule 101 (Sum -> SUM ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    RANDOM          reduce using rule 101 (Sum -> SUM ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    RUN             reduce using rule 101 (Sum -> SUM ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    IF              reduce using rule 101 (Sum -> SUM ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    IFELSE          reduce using rule 101 (Sum -> SUM ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    REPEAT          reduce using rule 101 (Sum -> SUM ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    UNTIL           reduce using rule 101 (Sum -> SUM ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    WHILE           reduce using rule 101 (Sum -> SUM ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    PRINTLINE       reduce using rule 101 (Sum -> SUM ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    AND             reduce using rule 101 (Sum -> SUM ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    OR              reduce using rule 101 (Sum -> SUM ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    ADD             reduce using rule 101 (Sum -> SUM ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    PUT             reduce using rule 101 (Sum -> SUM ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    FIN             reduce using rule 101 (Sum -> SUM ABRE_P NUMERO COMA NUMERO CIERRA_P .)


state 535

    (103) Sum -> SUM ABRE_P NUMERO COMA RESTA NUMERO . CIERRA_P

    CIERRA_P        shift and go to state 622


state 536

    (104) Sum -> SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .

    PUNTOCOMA       reduce using rule 104 (Sum -> SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    NUMERO          reduce using rule 104 (Sum -> SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    ABRE_P          reduce using rule 104 (Sum -> SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    SUM             reduce using rule 104 (Sum -> SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    SUBSTR          reduce using rule 104 (Sum -> SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    MULTI           reduce using rule 104 (Sum -> SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    DIV             reduce using rule 104 (Sum -> SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    RANDOM          reduce using rule 104 (Sum -> SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    RUN             reduce using rule 104 (Sum -> SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    IF              reduce using rule 104 (Sum -> SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    IFELSE          reduce using rule 104 (Sum -> SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    REPEAT          reduce using rule 104 (Sum -> SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    UNTIL           reduce using rule 104 (Sum -> SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    WHILE           reduce using rule 104 (Sum -> SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    PRINTLINE       reduce using rule 104 (Sum -> SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    AND             reduce using rule 104 (Sum -> SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    OR              reduce using rule 104 (Sum -> SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    ADD             reduce using rule 104 (Sum -> SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    PUT             reduce using rule 104 (Sum -> SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    FIN             reduce using rule 104 (Sum -> SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)


state 537

    (107) Sum -> SUM ABRE_P NUMERO COMA Var CIERRA_P .

    PUNTOCOMA       reduce using rule 107 (Sum -> SUM ABRE_P NUMERO COMA Var CIERRA_P .)
    NUMERO          reduce using rule 107 (Sum -> SUM ABRE_P NUMERO COMA Var CIERRA_P .)
    ABRE_P          reduce using rule 107 (Sum -> SUM ABRE_P NUMERO COMA Var CIERRA_P .)
    SUM             reduce using rule 107 (Sum -> SUM ABRE_P NUMERO COMA Var CIERRA_P .)
    SUBSTR          reduce using rule 107 (Sum -> SUM ABRE_P NUMERO COMA Var CIERRA_P .)
    MULTI           reduce using rule 107 (Sum -> SUM ABRE_P NUMERO COMA Var CIERRA_P .)
    DIV             reduce using rule 107 (Sum -> SUM ABRE_P NUMERO COMA Var CIERRA_P .)
    RANDOM          reduce using rule 107 (Sum -> SUM ABRE_P NUMERO COMA Var CIERRA_P .)
    RUN             reduce using rule 107 (Sum -> SUM ABRE_P NUMERO COMA Var CIERRA_P .)
    IF              reduce using rule 107 (Sum -> SUM ABRE_P NUMERO COMA Var CIERRA_P .)
    IFELSE          reduce using rule 107 (Sum -> SUM ABRE_P NUMERO COMA Var CIERRA_P .)
    REPEAT          reduce using rule 107 (Sum -> SUM ABRE_P NUMERO COMA Var CIERRA_P .)
    UNTIL           reduce using rule 107 (Sum -> SUM ABRE_P NUMERO COMA Var CIERRA_P .)
    WHILE           reduce using rule 107 (Sum -> SUM ABRE_P NUMERO COMA Var CIERRA_P .)
    PRINTLINE       reduce using rule 107 (Sum -> SUM ABRE_P NUMERO COMA Var CIERRA_P .)
    AND             reduce using rule 107 (Sum -> SUM ABRE_P NUMERO COMA Var CIERRA_P .)
    OR              reduce using rule 107 (Sum -> SUM ABRE_P NUMERO COMA Var CIERRA_P .)
    ADD             reduce using rule 107 (Sum -> SUM ABRE_P NUMERO COMA Var CIERRA_P .)
    PUT             reduce using rule 107 (Sum -> SUM ABRE_P NUMERO COMA Var CIERRA_P .)
    FIN             reduce using rule 107 (Sum -> SUM ABRE_P NUMERO COMA Var CIERRA_P .)


state 538

    (102) Sum -> SUM ABRE_P RESTA NUMERO COMA NUMERO . CIERRA_P
    (93) expresion_alge1 -> NUMERO . SUMA NUMERO
    (94) expresion_alge1 -> NUMERO . RESTA NUMERO
    (95) expresion_alge1 -> NUMERO . MULTI NUMERO
    (96) expresion_alge1 -> NUMERO . DIVISION NUMERO

    CIERRA_P        shift and go to state 623
    SUMA            shift and go to state 127
    RESTA           shift and go to state 128
    MULTI           shift and go to state 129
    DIVISION        shift and go to state 130


state 539

    (105) Sum -> SUM ABRE_P RESTA NUMERO COMA expresion_alge1 . CIERRA_P

    CIERRA_P        shift and go to state 624


state 540

    (108) Sum -> SUM ABRE_P RESTA NUMERO COMA Var . CIERRA_P

    CIERRA_P        shift and go to state 625


state 541

    (106) Sum -> SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .

    PUNTOCOMA       reduce using rule 106 (Sum -> SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    NUMERO          reduce using rule 106 (Sum -> SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    ABRE_P          reduce using rule 106 (Sum -> SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    SUM             reduce using rule 106 (Sum -> SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    SUBSTR          reduce using rule 106 (Sum -> SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    MULTI           reduce using rule 106 (Sum -> SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    DIV             reduce using rule 106 (Sum -> SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    RANDOM          reduce using rule 106 (Sum -> SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    RUN             reduce using rule 106 (Sum -> SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    IF              reduce using rule 106 (Sum -> SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    IFELSE          reduce using rule 106 (Sum -> SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    REPEAT          reduce using rule 106 (Sum -> SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    UNTIL           reduce using rule 106 (Sum -> SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    WHILE           reduce using rule 106 (Sum -> SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    PRINTLINE       reduce using rule 106 (Sum -> SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    AND             reduce using rule 106 (Sum -> SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    OR              reduce using rule 106 (Sum -> SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    ADD             reduce using rule 106 (Sum -> SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    PUT             reduce using rule 106 (Sum -> SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    FIN             reduce using rule 106 (Sum -> SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)


state 542

    (112) Sum -> SUM ABRE_P expresion_alge1 COMA Var CIERRA_P .

    PUNTOCOMA       reduce using rule 112 (Sum -> SUM ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    NUMERO          reduce using rule 112 (Sum -> SUM ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    ABRE_P          reduce using rule 112 (Sum -> SUM ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    SUM             reduce using rule 112 (Sum -> SUM ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    SUBSTR          reduce using rule 112 (Sum -> SUM ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    MULTI           reduce using rule 112 (Sum -> SUM ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    DIV             reduce using rule 112 (Sum -> SUM ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    RANDOM          reduce using rule 112 (Sum -> SUM ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    RUN             reduce using rule 112 (Sum -> SUM ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    IF              reduce using rule 112 (Sum -> SUM ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    IFELSE          reduce using rule 112 (Sum -> SUM ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    REPEAT          reduce using rule 112 (Sum -> SUM ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    UNTIL           reduce using rule 112 (Sum -> SUM ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    WHILE           reduce using rule 112 (Sum -> SUM ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    PRINTLINE       reduce using rule 112 (Sum -> SUM ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    AND             reduce using rule 112 (Sum -> SUM ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    OR              reduce using rule 112 (Sum -> SUM ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    ADD             reduce using rule 112 (Sum -> SUM ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    PUT             reduce using rule 112 (Sum -> SUM ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    FIN             reduce using rule 112 (Sum -> SUM ABRE_P expresion_alge1 COMA Var CIERRA_P .)


state 543

    (113) Sum -> SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .

    PUNTOCOMA       reduce using rule 113 (Sum -> SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    NUMERO          reduce using rule 113 (Sum -> SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    ABRE_P          reduce using rule 113 (Sum -> SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    SUM             reduce using rule 113 (Sum -> SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    SUBSTR          reduce using rule 113 (Sum -> SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    MULTI           reduce using rule 113 (Sum -> SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    DIV             reduce using rule 113 (Sum -> SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    RANDOM          reduce using rule 113 (Sum -> SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    RUN             reduce using rule 113 (Sum -> SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    IF              reduce using rule 113 (Sum -> SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    IFELSE          reduce using rule 113 (Sum -> SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    REPEAT          reduce using rule 113 (Sum -> SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    UNTIL           reduce using rule 113 (Sum -> SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    WHILE           reduce using rule 113 (Sum -> SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    PRINTLINE       reduce using rule 113 (Sum -> SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    AND             reduce using rule 113 (Sum -> SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    OR              reduce using rule 113 (Sum -> SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    ADD             reduce using rule 113 (Sum -> SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    PUT             reduce using rule 113 (Sum -> SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    FIN             reduce using rule 113 (Sum -> SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)


state 544

    (114) Sum -> SUM ABRE_P expresion_alge1 COMA RESTA NUMERO . CIERRA_P

    CIERRA_P        shift and go to state 626


state 545

    (111) Sum -> SUM ABRE_P Var COMA Var CIERRA_P .

    PUNTOCOMA       reduce using rule 111 (Sum -> SUM ABRE_P Var COMA Var CIERRA_P .)
    NUMERO          reduce using rule 111 (Sum -> SUM ABRE_P Var COMA Var CIERRA_P .)
    ABRE_P          reduce using rule 111 (Sum -> SUM ABRE_P Var COMA Var CIERRA_P .)
    SUM             reduce using rule 111 (Sum -> SUM ABRE_P Var COMA Var CIERRA_P .)
    SUBSTR          reduce using rule 111 (Sum -> SUM ABRE_P Var COMA Var CIERRA_P .)
    MULTI           reduce using rule 111 (Sum -> SUM ABRE_P Var COMA Var CIERRA_P .)
    DIV             reduce using rule 111 (Sum -> SUM ABRE_P Var COMA Var CIERRA_P .)
    RANDOM          reduce using rule 111 (Sum -> SUM ABRE_P Var COMA Var CIERRA_P .)
    RUN             reduce using rule 111 (Sum -> SUM ABRE_P Var COMA Var CIERRA_P .)
    IF              reduce using rule 111 (Sum -> SUM ABRE_P Var COMA Var CIERRA_P .)
    IFELSE          reduce using rule 111 (Sum -> SUM ABRE_P Var COMA Var CIERRA_P .)
    REPEAT          reduce using rule 111 (Sum -> SUM ABRE_P Var COMA Var CIERRA_P .)
    UNTIL           reduce using rule 111 (Sum -> SUM ABRE_P Var COMA Var CIERRA_P .)
    WHILE           reduce using rule 111 (Sum -> SUM ABRE_P Var COMA Var CIERRA_P .)
    PRINTLINE       reduce using rule 111 (Sum -> SUM ABRE_P Var COMA Var CIERRA_P .)
    AND             reduce using rule 111 (Sum -> SUM ABRE_P Var COMA Var CIERRA_P .)
    OR              reduce using rule 111 (Sum -> SUM ABRE_P Var COMA Var CIERRA_P .)
    ADD             reduce using rule 111 (Sum -> SUM ABRE_P Var COMA Var CIERRA_P .)
    PUT             reduce using rule 111 (Sum -> SUM ABRE_P Var COMA Var CIERRA_P .)
    FIN             reduce using rule 111 (Sum -> SUM ABRE_P Var COMA Var CIERRA_P .)


state 546

    (109) Sum -> SUM ABRE_P Var COMA NUMERO CIERRA_P .

    PUNTOCOMA       reduce using rule 109 (Sum -> SUM ABRE_P Var COMA NUMERO CIERRA_P .)
    NUMERO          reduce using rule 109 (Sum -> SUM ABRE_P Var COMA NUMERO CIERRA_P .)
    ABRE_P          reduce using rule 109 (Sum -> SUM ABRE_P Var COMA NUMERO CIERRA_P .)
    SUM             reduce using rule 109 (Sum -> SUM ABRE_P Var COMA NUMERO CIERRA_P .)
    SUBSTR          reduce using rule 109 (Sum -> SUM ABRE_P Var COMA NUMERO CIERRA_P .)
    MULTI           reduce using rule 109 (Sum -> SUM ABRE_P Var COMA NUMERO CIERRA_P .)
    DIV             reduce using rule 109 (Sum -> SUM ABRE_P Var COMA NUMERO CIERRA_P .)
    RANDOM          reduce using rule 109 (Sum -> SUM ABRE_P Var COMA NUMERO CIERRA_P .)
    RUN             reduce using rule 109 (Sum -> SUM ABRE_P Var COMA NUMERO CIERRA_P .)
    IF              reduce using rule 109 (Sum -> SUM ABRE_P Var COMA NUMERO CIERRA_P .)
    IFELSE          reduce using rule 109 (Sum -> SUM ABRE_P Var COMA NUMERO CIERRA_P .)
    REPEAT          reduce using rule 109 (Sum -> SUM ABRE_P Var COMA NUMERO CIERRA_P .)
    UNTIL           reduce using rule 109 (Sum -> SUM ABRE_P Var COMA NUMERO CIERRA_P .)
    WHILE           reduce using rule 109 (Sum -> SUM ABRE_P Var COMA NUMERO CIERRA_P .)
    PRINTLINE       reduce using rule 109 (Sum -> SUM ABRE_P Var COMA NUMERO CIERRA_P .)
    AND             reduce using rule 109 (Sum -> SUM ABRE_P Var COMA NUMERO CIERRA_P .)
    OR              reduce using rule 109 (Sum -> SUM ABRE_P Var COMA NUMERO CIERRA_P .)
    ADD             reduce using rule 109 (Sum -> SUM ABRE_P Var COMA NUMERO CIERRA_P .)
    PUT             reduce using rule 109 (Sum -> SUM ABRE_P Var COMA NUMERO CIERRA_P .)
    FIN             reduce using rule 109 (Sum -> SUM ABRE_P Var COMA NUMERO CIERRA_P .)


state 547

    (110) Sum -> SUM ABRE_P Var COMA RESTA NUMERO . CIERRA_P

    CIERRA_P        shift and go to state 627


state 548

    (115) Sum -> SUM ABRE_P Var COMA expresion_alge1 CIERRA_P .

    PUNTOCOMA       reduce using rule 115 (Sum -> SUM ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    NUMERO          reduce using rule 115 (Sum -> SUM ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    ABRE_P          reduce using rule 115 (Sum -> SUM ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    SUM             reduce using rule 115 (Sum -> SUM ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    SUBSTR          reduce using rule 115 (Sum -> SUM ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    MULTI           reduce using rule 115 (Sum -> SUM ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    DIV             reduce using rule 115 (Sum -> SUM ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    RANDOM          reduce using rule 115 (Sum -> SUM ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    RUN             reduce using rule 115 (Sum -> SUM ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    IF              reduce using rule 115 (Sum -> SUM ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    IFELSE          reduce using rule 115 (Sum -> SUM ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    REPEAT          reduce using rule 115 (Sum -> SUM ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    UNTIL           reduce using rule 115 (Sum -> SUM ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    WHILE           reduce using rule 115 (Sum -> SUM ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    PRINTLINE       reduce using rule 115 (Sum -> SUM ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    AND             reduce using rule 115 (Sum -> SUM ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    OR              reduce using rule 115 (Sum -> SUM ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    ADD             reduce using rule 115 (Sum -> SUM ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    PUT             reduce using rule 115 (Sum -> SUM ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    FIN             reduce using rule 115 (Sum -> SUM ABRE_P Var COMA expresion_alge1 CIERRA_P .)


state 549

    (116) Substr -> SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P .

    PUNTOCOMA       reduce using rule 116 (Substr -> SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    NUMERO          reduce using rule 116 (Substr -> SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    ABRE_P          reduce using rule 116 (Substr -> SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    SUM             reduce using rule 116 (Substr -> SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    SUBSTR          reduce using rule 116 (Substr -> SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    MULTI           reduce using rule 116 (Substr -> SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    DIV             reduce using rule 116 (Substr -> SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    RANDOM          reduce using rule 116 (Substr -> SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    RUN             reduce using rule 116 (Substr -> SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    IF              reduce using rule 116 (Substr -> SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    IFELSE          reduce using rule 116 (Substr -> SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    REPEAT          reduce using rule 116 (Substr -> SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    UNTIL           reduce using rule 116 (Substr -> SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    WHILE           reduce using rule 116 (Substr -> SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    PRINTLINE       reduce using rule 116 (Substr -> SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    AND             reduce using rule 116 (Substr -> SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    OR              reduce using rule 116 (Substr -> SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    ADD             reduce using rule 116 (Substr -> SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    PUT             reduce using rule 116 (Substr -> SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    FIN             reduce using rule 116 (Substr -> SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P .)


state 550

    (118) Substr -> SUBSTR ABRE_P NUMERO COMA RESTA NUMERO . CIERRA_P

    CIERRA_P        shift and go to state 628


state 551

    (119) Substr -> SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .

    PUNTOCOMA       reduce using rule 119 (Substr -> SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    NUMERO          reduce using rule 119 (Substr -> SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    ABRE_P          reduce using rule 119 (Substr -> SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    SUM             reduce using rule 119 (Substr -> SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    SUBSTR          reduce using rule 119 (Substr -> SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    MULTI           reduce using rule 119 (Substr -> SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    DIV             reduce using rule 119 (Substr -> SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    RANDOM          reduce using rule 119 (Substr -> SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    RUN             reduce using rule 119 (Substr -> SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    IF              reduce using rule 119 (Substr -> SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    IFELSE          reduce using rule 119 (Substr -> SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    REPEAT          reduce using rule 119 (Substr -> SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    UNTIL           reduce using rule 119 (Substr -> SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    WHILE           reduce using rule 119 (Substr -> SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    PRINTLINE       reduce using rule 119 (Substr -> SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    AND             reduce using rule 119 (Substr -> SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    OR              reduce using rule 119 (Substr -> SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    ADD             reduce using rule 119 (Substr -> SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    PUT             reduce using rule 119 (Substr -> SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    FIN             reduce using rule 119 (Substr -> SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)


state 552

    (122) Substr -> SUBSTR ABRE_P NUMERO COMA Var CIERRA_P .

    PUNTOCOMA       reduce using rule 122 (Substr -> SUBSTR ABRE_P NUMERO COMA Var CIERRA_P .)
    NUMERO          reduce using rule 122 (Substr -> SUBSTR ABRE_P NUMERO COMA Var CIERRA_P .)
    ABRE_P          reduce using rule 122 (Substr -> SUBSTR ABRE_P NUMERO COMA Var CIERRA_P .)
    SUM             reduce using rule 122 (Substr -> SUBSTR ABRE_P NUMERO COMA Var CIERRA_P .)
    SUBSTR          reduce using rule 122 (Substr -> SUBSTR ABRE_P NUMERO COMA Var CIERRA_P .)
    MULTI           reduce using rule 122 (Substr -> SUBSTR ABRE_P NUMERO COMA Var CIERRA_P .)
    DIV             reduce using rule 122 (Substr -> SUBSTR ABRE_P NUMERO COMA Var CIERRA_P .)
    RANDOM          reduce using rule 122 (Substr -> SUBSTR ABRE_P NUMERO COMA Var CIERRA_P .)
    RUN             reduce using rule 122 (Substr -> SUBSTR ABRE_P NUMERO COMA Var CIERRA_P .)
    IF              reduce using rule 122 (Substr -> SUBSTR ABRE_P NUMERO COMA Var CIERRA_P .)
    IFELSE          reduce using rule 122 (Substr -> SUBSTR ABRE_P NUMERO COMA Var CIERRA_P .)
    REPEAT          reduce using rule 122 (Substr -> SUBSTR ABRE_P NUMERO COMA Var CIERRA_P .)
    UNTIL           reduce using rule 122 (Substr -> SUBSTR ABRE_P NUMERO COMA Var CIERRA_P .)
    WHILE           reduce using rule 122 (Substr -> SUBSTR ABRE_P NUMERO COMA Var CIERRA_P .)
    PRINTLINE       reduce using rule 122 (Substr -> SUBSTR ABRE_P NUMERO COMA Var CIERRA_P .)
    AND             reduce using rule 122 (Substr -> SUBSTR ABRE_P NUMERO COMA Var CIERRA_P .)
    OR              reduce using rule 122 (Substr -> SUBSTR ABRE_P NUMERO COMA Var CIERRA_P .)
    ADD             reduce using rule 122 (Substr -> SUBSTR ABRE_P NUMERO COMA Var CIERRA_P .)
    PUT             reduce using rule 122 (Substr -> SUBSTR ABRE_P NUMERO COMA Var CIERRA_P .)
    FIN             reduce using rule 122 (Substr -> SUBSTR ABRE_P NUMERO COMA Var CIERRA_P .)


state 553

    (117) Substr -> SUBSTR ABRE_P RESTA NUMERO COMA NUMERO . CIERRA_P
    (93) expresion_alge1 -> NUMERO . SUMA NUMERO
    (94) expresion_alge1 -> NUMERO . RESTA NUMERO
    (95) expresion_alge1 -> NUMERO . MULTI NUMERO
    (96) expresion_alge1 -> NUMERO . DIVISION NUMERO

    CIERRA_P        shift and go to state 629
    SUMA            shift and go to state 127
    RESTA           shift and go to state 128
    MULTI           shift and go to state 129
    DIVISION        shift and go to state 130


state 554

    (120) Substr -> SUBSTR ABRE_P RESTA NUMERO COMA expresion_alge1 . CIERRA_P

    CIERRA_P        shift and go to state 630


state 555

    (123) Substr -> SUBSTR ABRE_P RESTA NUMERO COMA Var . CIERRA_P

    CIERRA_P        shift and go to state 631


state 556

    (121) Substr -> SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .

    PUNTOCOMA       reduce using rule 121 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    NUMERO          reduce using rule 121 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    ABRE_P          reduce using rule 121 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    SUM             reduce using rule 121 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    SUBSTR          reduce using rule 121 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    MULTI           reduce using rule 121 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    DIV             reduce using rule 121 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    RANDOM          reduce using rule 121 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    RUN             reduce using rule 121 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    IF              reduce using rule 121 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    IFELSE          reduce using rule 121 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    REPEAT          reduce using rule 121 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    UNTIL           reduce using rule 121 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    WHILE           reduce using rule 121 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    PRINTLINE       reduce using rule 121 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    AND             reduce using rule 121 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    OR              reduce using rule 121 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    ADD             reduce using rule 121 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    PUT             reduce using rule 121 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    FIN             reduce using rule 121 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)


state 557

    (127) Substr -> SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P .

    PUNTOCOMA       reduce using rule 127 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    NUMERO          reduce using rule 127 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    ABRE_P          reduce using rule 127 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    SUM             reduce using rule 127 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    SUBSTR          reduce using rule 127 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    MULTI           reduce using rule 127 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    DIV             reduce using rule 127 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    RANDOM          reduce using rule 127 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    RUN             reduce using rule 127 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    IF              reduce using rule 127 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    IFELSE          reduce using rule 127 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    REPEAT          reduce using rule 127 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    UNTIL           reduce using rule 127 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    WHILE           reduce using rule 127 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    PRINTLINE       reduce using rule 127 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    AND             reduce using rule 127 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    OR              reduce using rule 127 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    ADD             reduce using rule 127 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    PUT             reduce using rule 127 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    FIN             reduce using rule 127 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P .)


state 558

    (128) Substr -> SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .

    PUNTOCOMA       reduce using rule 128 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    NUMERO          reduce using rule 128 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    ABRE_P          reduce using rule 128 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    SUM             reduce using rule 128 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    SUBSTR          reduce using rule 128 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    MULTI           reduce using rule 128 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    DIV             reduce using rule 128 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    RANDOM          reduce using rule 128 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    RUN             reduce using rule 128 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    IF              reduce using rule 128 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    IFELSE          reduce using rule 128 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    REPEAT          reduce using rule 128 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    UNTIL           reduce using rule 128 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    WHILE           reduce using rule 128 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    PRINTLINE       reduce using rule 128 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    AND             reduce using rule 128 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    OR              reduce using rule 128 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    ADD             reduce using rule 128 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    PUT             reduce using rule 128 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    FIN             reduce using rule 128 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)


state 559

    (129) Substr -> SUBSTR ABRE_P expresion_alge1 COMA RESTA NUMERO . CIERRA_P

    CIERRA_P        shift and go to state 632


state 560

    (126) Substr -> SUBSTR ABRE_P Var COMA Var CIERRA_P .

    PUNTOCOMA       reduce using rule 126 (Substr -> SUBSTR ABRE_P Var COMA Var CIERRA_P .)
    NUMERO          reduce using rule 126 (Substr -> SUBSTR ABRE_P Var COMA Var CIERRA_P .)
    ABRE_P          reduce using rule 126 (Substr -> SUBSTR ABRE_P Var COMA Var CIERRA_P .)
    SUM             reduce using rule 126 (Substr -> SUBSTR ABRE_P Var COMA Var CIERRA_P .)
    SUBSTR          reduce using rule 126 (Substr -> SUBSTR ABRE_P Var COMA Var CIERRA_P .)
    MULTI           reduce using rule 126 (Substr -> SUBSTR ABRE_P Var COMA Var CIERRA_P .)
    DIV             reduce using rule 126 (Substr -> SUBSTR ABRE_P Var COMA Var CIERRA_P .)
    RANDOM          reduce using rule 126 (Substr -> SUBSTR ABRE_P Var COMA Var CIERRA_P .)
    RUN             reduce using rule 126 (Substr -> SUBSTR ABRE_P Var COMA Var CIERRA_P .)
    IF              reduce using rule 126 (Substr -> SUBSTR ABRE_P Var COMA Var CIERRA_P .)
    IFELSE          reduce using rule 126 (Substr -> SUBSTR ABRE_P Var COMA Var CIERRA_P .)
    REPEAT          reduce using rule 126 (Substr -> SUBSTR ABRE_P Var COMA Var CIERRA_P .)
    UNTIL           reduce using rule 126 (Substr -> SUBSTR ABRE_P Var COMA Var CIERRA_P .)
    WHILE           reduce using rule 126 (Substr -> SUBSTR ABRE_P Var COMA Var CIERRA_P .)
    PRINTLINE       reduce using rule 126 (Substr -> SUBSTR ABRE_P Var COMA Var CIERRA_P .)
    AND             reduce using rule 126 (Substr -> SUBSTR ABRE_P Var COMA Var CIERRA_P .)
    OR              reduce using rule 126 (Substr -> SUBSTR ABRE_P Var COMA Var CIERRA_P .)
    ADD             reduce using rule 126 (Substr -> SUBSTR ABRE_P Var COMA Var CIERRA_P .)
    PUT             reduce using rule 126 (Substr -> SUBSTR ABRE_P Var COMA Var CIERRA_P .)
    FIN             reduce using rule 126 (Substr -> SUBSTR ABRE_P Var COMA Var CIERRA_P .)


state 561

    (124) Substr -> SUBSTR ABRE_P Var COMA NUMERO CIERRA_P .

    PUNTOCOMA       reduce using rule 124 (Substr -> SUBSTR ABRE_P Var COMA NUMERO CIERRA_P .)
    NUMERO          reduce using rule 124 (Substr -> SUBSTR ABRE_P Var COMA NUMERO CIERRA_P .)
    ABRE_P          reduce using rule 124 (Substr -> SUBSTR ABRE_P Var COMA NUMERO CIERRA_P .)
    SUM             reduce using rule 124 (Substr -> SUBSTR ABRE_P Var COMA NUMERO CIERRA_P .)
    SUBSTR          reduce using rule 124 (Substr -> SUBSTR ABRE_P Var COMA NUMERO CIERRA_P .)
    MULTI           reduce using rule 124 (Substr -> SUBSTR ABRE_P Var COMA NUMERO CIERRA_P .)
    DIV             reduce using rule 124 (Substr -> SUBSTR ABRE_P Var COMA NUMERO CIERRA_P .)
    RANDOM          reduce using rule 124 (Substr -> SUBSTR ABRE_P Var COMA NUMERO CIERRA_P .)
    RUN             reduce using rule 124 (Substr -> SUBSTR ABRE_P Var COMA NUMERO CIERRA_P .)
    IF              reduce using rule 124 (Substr -> SUBSTR ABRE_P Var COMA NUMERO CIERRA_P .)
    IFELSE          reduce using rule 124 (Substr -> SUBSTR ABRE_P Var COMA NUMERO CIERRA_P .)
    REPEAT          reduce using rule 124 (Substr -> SUBSTR ABRE_P Var COMA NUMERO CIERRA_P .)
    UNTIL           reduce using rule 124 (Substr -> SUBSTR ABRE_P Var COMA NUMERO CIERRA_P .)
    WHILE           reduce using rule 124 (Substr -> SUBSTR ABRE_P Var COMA NUMERO CIERRA_P .)
    PRINTLINE       reduce using rule 124 (Substr -> SUBSTR ABRE_P Var COMA NUMERO CIERRA_P .)
    AND             reduce using rule 124 (Substr -> SUBSTR ABRE_P Var COMA NUMERO CIERRA_P .)
    OR              reduce using rule 124 (Substr -> SUBSTR ABRE_P Var COMA NUMERO CIERRA_P .)
    ADD             reduce using rule 124 (Substr -> SUBSTR ABRE_P Var COMA NUMERO CIERRA_P .)
    PUT             reduce using rule 124 (Substr -> SUBSTR ABRE_P Var COMA NUMERO CIERRA_P .)
    FIN             reduce using rule 124 (Substr -> SUBSTR ABRE_P Var COMA NUMERO CIERRA_P .)


state 562

    (125) Substr -> SUBSTR ABRE_P Var COMA RESTA NUMERO . CIERRA_P

    CIERRA_P        shift and go to state 633


state 563

    (130) Substr -> SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P .

    PUNTOCOMA       reduce using rule 130 (Substr -> SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    NUMERO          reduce using rule 130 (Substr -> SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    ABRE_P          reduce using rule 130 (Substr -> SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    SUM             reduce using rule 130 (Substr -> SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    SUBSTR          reduce using rule 130 (Substr -> SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    MULTI           reduce using rule 130 (Substr -> SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    DIV             reduce using rule 130 (Substr -> SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    RANDOM          reduce using rule 130 (Substr -> SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    RUN             reduce using rule 130 (Substr -> SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    IF              reduce using rule 130 (Substr -> SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    IFELSE          reduce using rule 130 (Substr -> SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    REPEAT          reduce using rule 130 (Substr -> SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    UNTIL           reduce using rule 130 (Substr -> SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    WHILE           reduce using rule 130 (Substr -> SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    PRINTLINE       reduce using rule 130 (Substr -> SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    AND             reduce using rule 130 (Substr -> SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    OR              reduce using rule 130 (Substr -> SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    ADD             reduce using rule 130 (Substr -> SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    PUT             reduce using rule 130 (Substr -> SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    FIN             reduce using rule 130 (Substr -> SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P .)


state 564

    (277) Diag -> POS ABRE_P STRING COMA . NUMERO CIERRA_P PUNTOCOMA

    NUMERO          shift and go to state 634


state 565

    (278) Pos -> POS ABRE_P NUMERO COMA . NUMERO CIERRA_P PUNTOCOMA
    (280) Pos -> POS ABRE_P NUMERO COMA . expresion_alge1 CIERRA_P PUNTOCOMA
    (283) Pos -> POS ABRE_P NUMERO COMA . Var CIERRA_P PUNTOCOMA
    (93) expresion_alge1 -> . NUMERO SUMA NUMERO
    (94) expresion_alge1 -> . NUMERO RESTA NUMERO
    (95) expresion_alge1 -> . NUMERO MULTI NUMERO
    (96) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (161) Var -> . VAR

    NUMERO          shift and go to state 635
    VAR             shift and go to state 34

    expresion_alge1                shift and go to state 636
    Var                            shift and go to state 637

state 566

    (279) Pos -> POS ABRE_P expresion_alge1 COMA . NUMERO CIERRA_P PUNTOCOMA
    (281) Pos -> POS ABRE_P expresion_alge1 COMA . expresion_alge1 CIERRA_P PUNTOCOMA
    (285) Pos -> POS ABRE_P expresion_alge1 COMA . Var CIERRA_P PUNTOCOMA
    (93) expresion_alge1 -> . NUMERO SUMA NUMERO
    (94) expresion_alge1 -> . NUMERO RESTA NUMERO
    (95) expresion_alge1 -> . NUMERO MULTI NUMERO
    (96) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (161) Var -> . VAR

    NUMERO          shift and go to state 639
    VAR             shift and go to state 34

    expresion_alge1                shift and go to state 638
    Var                            shift and go to state 640

state 567

    (282) Pos -> POS ABRE_P Var COMA . NUMERO CIERRA_P PUNTOCOMA
    (284) Pos -> POS ABRE_P Var COMA . Var CIERRA_P PUNTOCOMA
    (286) Pos -> POS ABRE_P Var COMA . expresion_alge1 CIERRA_P PUNTOCOMA
    (161) Var -> . VAR
    (93) expresion_alge1 -> . NUMERO SUMA NUMERO
    (94) expresion_alge1 -> . NUMERO RESTA NUMERO
    (95) expresion_alge1 -> . NUMERO MULTI NUMERO
    (96) expresion_alge1 -> . NUMERO DIVISION NUMERO

    NUMERO          shift and go to state 642
    VAR             shift and go to state 34

    Var                            shift and go to state 641
    expresion_alge1                shift and go to state 643

state 568

    (288) PosX -> POSX RESTA NUMERO PUNTOCOMA .

    BRACKET2        reduce using rule 288 (PosX -> POSX RESTA NUMERO PUNTOCOMA .)


state 569

    (293) PosY -> POSY RESTA NUMERO PUNTOCOMA .

    BRACKET2        reduce using rule 293 (PosY -> POSY RESTA NUMERO PUNTOCOMA .)


state 570

    (242) If -> IF ABRE_P condicion CIERRA_P BRACKET1 funcion . BRACKET2

    BRACKET2        shift and go to state 644


state 571

    (162) Equal -> EQUAL ABRE_P NUMERO COMA . NUMERO CIERRA_P PUNTOCOMA
    (164) Equal -> EQUAL ABRE_P NUMERO COMA . RESTA NUMERO CIERRA_P PUNTOCOMA
    (168) Equal -> EQUAL ABRE_P NUMERO COMA . Var CIERRA_P PUNTOCOMA
    (182) Equal -> EQUAL ABRE_P NUMERO COMA . expresion_alge1 CIERRA_P PUNTOCOMA
    (184) Equal -> EQUAL ABRE_P NUMERO COMA . expresion_alge2 CIERRA_P PUNTOCOMA
    (161) Var -> . VAR
    (93) expresion_alge1 -> . NUMERO SUMA NUMERO
    (94) expresion_alge1 -> . NUMERO RESTA NUMERO
    (95) expresion_alge1 -> . NUMERO MULTI NUMERO
    (96) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (97) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (98) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (99) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (100) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P

    NUMERO          shift and go to state 645
    RESTA           shift and go to state 646
    VAR             shift and go to state 34
    ABRE_P          shift and go to state 63

    Var                            shift and go to state 647
    expresion_alge1                shift and go to state 648
    expresion_alge2                shift and go to state 649

state 572

    (163) Equal -> EQUAL ABRE_P RESTA NUMERO . COMA NUMERO CIERRA_P PUNTOCOMA
    (169) Equal -> EQUAL ABRE_P RESTA NUMERO . COMA Var CIERRA_P PUNTOCOMA
    (183) Equal -> EQUAL ABRE_P RESTA NUMERO . COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (185) Equal -> EQUAL ABRE_P RESTA NUMERO . COMA expresion_alge2 CIERRA_P PUNTOCOMA

    COMA            shift and go to state 650


state 573

    (165) Equal -> EQUAL ABRE_P expresion_alge1 COMA . expresion_alge1 CIERRA_P PUNTOCOMA
    (171) Equal -> EQUAL ABRE_P expresion_alge1 COMA . Var CIERRA_P PUNTOCOMA
    (176) Equal -> EQUAL ABRE_P expresion_alge1 COMA . expresion_alge2 CIERRA_P PUNTOCOMA
    (178) Equal -> EQUAL ABRE_P expresion_alge1 COMA . NUMERO CIERRA_P PUNTOCOMA
    (179) Equal -> EQUAL ABRE_P expresion_alge1 COMA . RESTA NUMERO CIERRA_P PUNTOCOMA
    (93) expresion_alge1 -> . NUMERO SUMA NUMERO
    (94) expresion_alge1 -> . NUMERO RESTA NUMERO
    (95) expresion_alge1 -> . NUMERO MULTI NUMERO
    (96) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (161) Var -> . VAR
    (97) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (98) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (99) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (100) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P

    NUMERO          shift and go to state 654
    RESTA           shift and go to state 655
    VAR             shift and go to state 34
    ABRE_P          shift and go to state 63

    expresion_alge1                shift and go to state 651
    Var                            shift and go to state 652
    expresion_alge2                shift and go to state 653

state 574

    (166) Equal -> EQUAL ABRE_P expresion_alge2 COMA . expresion_alge2 CIERRA_P PUNTOCOMA
    (170) Equal -> EQUAL ABRE_P expresion_alge2 COMA . Var CIERRA_P PUNTOCOMA
    (177) Equal -> EQUAL ABRE_P expresion_alge2 COMA . expresion_alge1 CIERRA_P PUNTOCOMA
    (180) Equal -> EQUAL ABRE_P expresion_alge2 COMA . NUMERO CIERRA_P PUNTOCOMA
    (181) Equal -> EQUAL ABRE_P expresion_alge2 COMA . RESTA NUMERO CIERRA_P PUNTOCOMA
    (97) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (98) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (99) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (100) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (161) Var -> . VAR
    (93) expresion_alge1 -> . NUMERO SUMA NUMERO
    (94) expresion_alge1 -> . NUMERO RESTA NUMERO
    (95) expresion_alge1 -> . NUMERO MULTI NUMERO
    (96) expresion_alge1 -> . NUMERO DIVISION NUMERO

    NUMERO          shift and go to state 659
    RESTA           shift and go to state 660
    ABRE_P          shift and go to state 63
    VAR             shift and go to state 34

    expresion_alge2                shift and go to state 656
    Var                            shift and go to state 657
    expresion_alge1                shift and go to state 658

state 575

    (167) Equal -> EQUAL ABRE_P Var COMA . Var CIERRA_P PUNTOCOMA
    (172) Equal -> EQUAL ABRE_P Var COMA . NUMERO CIERRA_P PUNTOCOMA
    (173) Equal -> EQUAL ABRE_P Var COMA . RESTA NUMERO CIERRA_P PUNTOCOMA
    (174) Equal -> EQUAL ABRE_P Var COMA . expresion_alge1 CIERRA_P PUNTOCOMA
    (175) Equal -> EQUAL ABRE_P Var COMA . expresion_alge2 CIERRA_P PUNTOCOMA
    (161) Var -> . VAR
    (93) expresion_alge1 -> . NUMERO SUMA NUMERO
    (94) expresion_alge1 -> . NUMERO RESTA NUMERO
    (95) expresion_alge1 -> . NUMERO MULTI NUMERO
    (96) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (97) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (98) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (99) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (100) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P

    NUMERO          shift and go to state 662
    RESTA           shift and go to state 663
    VAR             shift and go to state 34
    ABRE_P          shift and go to state 63

    Var                            shift and go to state 661
    expresion_alge1                shift and go to state 664
    expresion_alge2                shift and go to state 665

state 576

    (186) Greater -> GREATER ABRE_P NUMERO COMA . NUMERO CIERRA_P PUNTOCOMA
    (188) Greater -> GREATER ABRE_P NUMERO COMA . RESTA NUMERO CIERRA_P PUNTOCOMA
    (192) Greater -> GREATER ABRE_P NUMERO COMA . Var CIERRA_P PUNTOCOMA
    (206) Greater -> GREATER ABRE_P NUMERO COMA . expresion_alge1 CIERRA_P PUNTOCOMA
    (208) Greater -> GREATER ABRE_P NUMERO COMA . expresion_alge2 CIERRA_P PUNTOCOMA
    (161) Var -> . VAR
    (93) expresion_alge1 -> . NUMERO SUMA NUMERO
    (94) expresion_alge1 -> . NUMERO RESTA NUMERO
    (95) expresion_alge1 -> . NUMERO MULTI NUMERO
    (96) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (97) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (98) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (99) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (100) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P

    NUMERO          shift and go to state 666
    RESTA           shift and go to state 667
    VAR             shift and go to state 34
    ABRE_P          shift and go to state 63

    Var                            shift and go to state 668
    expresion_alge1                shift and go to state 669
    expresion_alge2                shift and go to state 670

state 577

    (187) Greater -> GREATER ABRE_P RESTA NUMERO . COMA NUMERO CIERRA_P PUNTOCOMA
    (193) Greater -> GREATER ABRE_P RESTA NUMERO . COMA Var CIERRA_P PUNTOCOMA
    (207) Greater -> GREATER ABRE_P RESTA NUMERO . COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (209) Greater -> GREATER ABRE_P RESTA NUMERO . COMA expresion_alge2 CIERRA_P PUNTOCOMA

    COMA            shift and go to state 671


state 578

    (189) Greater -> GREATER ABRE_P expresion_alge1 COMA . expresion_alge1 CIERRA_P PUNTOCOMA
    (195) Greater -> GREATER ABRE_P expresion_alge1 COMA . Var CIERRA_P PUNTOCOMA
    (200) Greater -> GREATER ABRE_P expresion_alge1 COMA . expresion_alge2 CIERRA_P PUNTOCOMA
    (202) Greater -> GREATER ABRE_P expresion_alge1 COMA . NUMERO CIERRA_P PUNTOCOMA
    (203) Greater -> GREATER ABRE_P expresion_alge1 COMA . RESTA NUMERO CIERRA_P PUNTOCOMA
    (93) expresion_alge1 -> . NUMERO SUMA NUMERO
    (94) expresion_alge1 -> . NUMERO RESTA NUMERO
    (95) expresion_alge1 -> . NUMERO MULTI NUMERO
    (96) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (161) Var -> . VAR
    (97) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (98) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (99) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (100) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P

    NUMERO          shift and go to state 675
    RESTA           shift and go to state 676
    VAR             shift and go to state 34
    ABRE_P          shift and go to state 63

    expresion_alge1                shift and go to state 672
    Var                            shift and go to state 673
    expresion_alge2                shift and go to state 674

state 579

    (190) Greater -> GREATER ABRE_P expresion_alge2 COMA . expresion_alge2 CIERRA_P PUNTOCOMA
    (194) Greater -> GREATER ABRE_P expresion_alge2 COMA . Var CIERRA_P PUNTOCOMA
    (201) Greater -> GREATER ABRE_P expresion_alge2 COMA . expresion_alge1 CIERRA_P PUNTOCOMA
    (204) Greater -> GREATER ABRE_P expresion_alge2 COMA . NUMERO CIERRA_P PUNTOCOMA
    (205) Greater -> GREATER ABRE_P expresion_alge2 COMA . RESTA NUMERO CIERRA_P PUNTOCOMA
    (97) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (98) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (99) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (100) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (161) Var -> . VAR
    (93) expresion_alge1 -> . NUMERO SUMA NUMERO
    (94) expresion_alge1 -> . NUMERO RESTA NUMERO
    (95) expresion_alge1 -> . NUMERO MULTI NUMERO
    (96) expresion_alge1 -> . NUMERO DIVISION NUMERO

    NUMERO          shift and go to state 680
    RESTA           shift and go to state 681
    ABRE_P          shift and go to state 63
    VAR             shift and go to state 34

    expresion_alge2                shift and go to state 677
    Var                            shift and go to state 678
    expresion_alge1                shift and go to state 679

state 580

    (191) Greater -> GREATER ABRE_P Var COMA . Var CIERRA_P PUNTOCOMA
    (196) Greater -> GREATER ABRE_P Var COMA . NUMERO CIERRA_P PUNTOCOMA
    (197) Greater -> GREATER ABRE_P Var COMA . RESTA NUMERO CIERRA_P PUNTOCOMA
    (198) Greater -> GREATER ABRE_P Var COMA . expresion_alge1 CIERRA_P PUNTOCOMA
    (199) Greater -> GREATER ABRE_P Var COMA . expresion_alge2 CIERRA_P PUNTOCOMA
    (161) Var -> . VAR
    (93) expresion_alge1 -> . NUMERO SUMA NUMERO
    (94) expresion_alge1 -> . NUMERO RESTA NUMERO
    (95) expresion_alge1 -> . NUMERO MULTI NUMERO
    (96) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (97) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (98) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (99) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (100) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P

    NUMERO          shift and go to state 683
    RESTA           shift and go to state 684
    VAR             shift and go to state 34
    ABRE_P          shift and go to state 63

    Var                            shift and go to state 682
    expresion_alge1                shift and go to state 685
    expresion_alge2                shift and go to state 686

state 581

    (210) Smaller -> SMALLER ABRE_P NUMERO COMA . NUMERO CIERRA_P PUNTOCOMA
    (212) Smaller -> SMALLER ABRE_P NUMERO COMA . RESTA NUMERO CIERRA_P PUNTOCOMA
    (216) Smaller -> SMALLER ABRE_P NUMERO COMA . Var CIERRA_P PUNTOCOMA
    (230) Smaller -> SMALLER ABRE_P NUMERO COMA . expresion_alge1 CIERRA_P PUNTOCOMA
    (232) Smaller -> SMALLER ABRE_P NUMERO COMA . expresion_alge2 CIERRA_P PUNTOCOMA
    (161) Var -> . VAR
    (93) expresion_alge1 -> . NUMERO SUMA NUMERO
    (94) expresion_alge1 -> . NUMERO RESTA NUMERO
    (95) expresion_alge1 -> . NUMERO MULTI NUMERO
    (96) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (97) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (98) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (99) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (100) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P

    NUMERO          shift and go to state 687
    RESTA           shift and go to state 688
    VAR             shift and go to state 34
    ABRE_P          shift and go to state 63

    Var                            shift and go to state 689
    expresion_alge1                shift and go to state 690
    expresion_alge2                shift and go to state 691

state 582

    (211) Smaller -> SMALLER ABRE_P RESTA NUMERO . COMA NUMERO CIERRA_P PUNTOCOMA
    (217) Smaller -> SMALLER ABRE_P RESTA NUMERO . COMA Var CIERRA_P PUNTOCOMA
    (231) Smaller -> SMALLER ABRE_P RESTA NUMERO . COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (233) Smaller -> SMALLER ABRE_P RESTA NUMERO . COMA expresion_alge2 CIERRA_P PUNTOCOMA

    COMA            shift and go to state 692


state 583

    (213) Smaller -> SMALLER ABRE_P expresion_alge1 COMA . expresion_alge1 CIERRA_P PUNTOCOMA
    (219) Smaller -> SMALLER ABRE_P expresion_alge1 COMA . Var CIERRA_P PUNTOCOMA
    (224) Smaller -> SMALLER ABRE_P expresion_alge1 COMA . expresion_alge2 CIERRA_P PUNTOCOMA
    (226) Smaller -> SMALLER ABRE_P expresion_alge1 COMA . NUMERO CIERRA_P PUNTOCOMA
    (227) Smaller -> SMALLER ABRE_P expresion_alge1 COMA . RESTA NUMERO CIERRA_P PUNTOCOMA
    (93) expresion_alge1 -> . NUMERO SUMA NUMERO
    (94) expresion_alge1 -> . NUMERO RESTA NUMERO
    (95) expresion_alge1 -> . NUMERO MULTI NUMERO
    (96) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (161) Var -> . VAR
    (97) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (98) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (99) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (100) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P

    NUMERO          shift and go to state 696
    RESTA           shift and go to state 697
    VAR             shift and go to state 34
    ABRE_P          shift and go to state 63

    expresion_alge1                shift and go to state 693
    Var                            shift and go to state 694
    expresion_alge2                shift and go to state 695

state 584

    (214) Smaller -> SMALLER ABRE_P expresion_alge2 COMA . expresion_alge2 CIERRA_P PUNTOCOMA
    (218) Smaller -> SMALLER ABRE_P expresion_alge2 COMA . Var CIERRA_P PUNTOCOMA
    (225) Smaller -> SMALLER ABRE_P expresion_alge2 COMA . expresion_alge1 CIERRA_P PUNTOCOMA
    (228) Smaller -> SMALLER ABRE_P expresion_alge2 COMA . NUMERO CIERRA_P PUNTOCOMA
    (229) Smaller -> SMALLER ABRE_P expresion_alge2 COMA . RESTA NUMERO CIERRA_P PUNTOCOMA
    (97) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (98) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (99) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (100) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (161) Var -> . VAR
    (93) expresion_alge1 -> . NUMERO SUMA NUMERO
    (94) expresion_alge1 -> . NUMERO RESTA NUMERO
    (95) expresion_alge1 -> . NUMERO MULTI NUMERO
    (96) expresion_alge1 -> . NUMERO DIVISION NUMERO

    NUMERO          shift and go to state 701
    RESTA           shift and go to state 702
    ABRE_P          shift and go to state 63
    VAR             shift and go to state 34

    expresion_alge2                shift and go to state 698
    Var                            shift and go to state 699
    expresion_alge1                shift and go to state 700

state 585

    (215) Smaller -> SMALLER ABRE_P Var COMA . Var CIERRA_P PUNTOCOMA
    (220) Smaller -> SMALLER ABRE_P Var COMA . NUMERO CIERRA_P PUNTOCOMA
    (221) Smaller -> SMALLER ABRE_P Var COMA . RESTA NUMERO CIERRA_P PUNTOCOMA
    (222) Smaller -> SMALLER ABRE_P Var COMA . expresion_alge1 CIERRA_P PUNTOCOMA
    (223) Smaller -> SMALLER ABRE_P Var COMA . expresion_alge2 CIERRA_P PUNTOCOMA
    (161) Var -> . VAR
    (93) expresion_alge1 -> . NUMERO SUMA NUMERO
    (94) expresion_alge1 -> . NUMERO RESTA NUMERO
    (95) expresion_alge1 -> . NUMERO MULTI NUMERO
    (96) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (97) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (98) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (99) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (100) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P

    NUMERO          shift and go to state 704
    RESTA           shift and go to state 705
    VAR             shift and go to state 34
    ABRE_P          shift and go to state 63

    Var                            shift and go to state 703
    expresion_alge1                shift and go to state 706
    expresion_alge2                shift and go to state 707

state 586

    (243) IfElse -> IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion . BRACKET2 BRACKET1 funcion BRACKET2

    BRACKET2        shift and go to state 708


state 587

    (246) Until -> UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion . BRACKET2

    BRACKET2        shift and go to state 709


state 588

    (244) While -> WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion . BRACKET2

    BRACKET2        shift and go to state 710


state 589

    (305) exp -> RESTA NUMERO empty empty .

    CIERRA_P        reduce using rule 305 (exp -> RESTA NUMERO empty empty .)


state 590

    (306) exp -> RESTA NUMERO COMA empty .

    CIERRA_P        reduce using rule 306 (exp -> RESTA NUMERO COMA empty .)


state 591

    (234) And -> AND ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 711


state 592

    (235) And -> AND ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 712


state 593

    (237) And -> AND ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 713


state 594

    (236) And -> AND ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 714


state 595

    (238) Or -> OR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 715


state 596

    (239) Or -> OR ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 716


state 597

    (241) Or -> OR ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 717


state 598

    (240) Or -> OR ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 718


state 599

    (247) Add -> ADD ABRE_P Var empty empty CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 719


state 600

    (251) Add -> ADD ABRE_P Var COMA Var CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 720


state 601

    (248) Add -> ADD ABRE_P Var COMA NUMERO CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 721


state 602

    (249) Add -> ADD ABRE_P Var COMA RESTA NUMERO . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 722


state 603

    (250) Add -> ADD ABRE_P Var COMA expresion_alge1 CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 723


state 604

    (252) Add -> ADD ABRE_P Var COMA expresion_alge2 CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 724


state 605

    (25) llamadoproc -> PARA id BRACKET1 parametro BRACKET2 . PUNTOCOMA

    PUNTOCOMA       shift and go to state 725


state 606

    (97) expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P .

    PUNTOCOMA       reduce using rule 97 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P .)
    NUMERO          reduce using rule 97 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P .)
    ABRE_P          reduce using rule 97 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P .)
    SUM             reduce using rule 97 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P .)
    SUBSTR          reduce using rule 97 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P .)
    MULTI           reduce using rule 97 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P .)
    DIV             reduce using rule 97 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P .)
    RANDOM          reduce using rule 97 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P .)
    RUN             reduce using rule 97 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P .)
    IF              reduce using rule 97 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P .)
    IFELSE          reduce using rule 97 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P .)
    REPEAT          reduce using rule 97 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P .)
    UNTIL           reduce using rule 97 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P .)
    WHILE           reduce using rule 97 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P .)
    PRINTLINE       reduce using rule 97 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P .)
    AND             reduce using rule 97 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P .)
    OR              reduce using rule 97 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P .)
    ADD             reduce using rule 97 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P .)
    PUT             reduce using rule 97 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P .)
    FIN             reduce using rule 97 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P .)
    CIERRA_P        reduce using rule 97 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P .)
    COMA            reduce using rule 97 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P .)


state 607

    (98) expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P .

    PUNTOCOMA       reduce using rule 98 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P .)
    NUMERO          reduce using rule 98 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P .)
    ABRE_P          reduce using rule 98 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P .)
    SUM             reduce using rule 98 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P .)
    SUBSTR          reduce using rule 98 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P .)
    MULTI           reduce using rule 98 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P .)
    DIV             reduce using rule 98 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P .)
    RANDOM          reduce using rule 98 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P .)
    RUN             reduce using rule 98 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P .)
    IF              reduce using rule 98 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P .)
    IFELSE          reduce using rule 98 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P .)
    REPEAT          reduce using rule 98 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P .)
    UNTIL           reduce using rule 98 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P .)
    WHILE           reduce using rule 98 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P .)
    PRINTLINE       reduce using rule 98 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P .)
    AND             reduce using rule 98 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P .)
    OR              reduce using rule 98 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P .)
    ADD             reduce using rule 98 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P .)
    PUT             reduce using rule 98 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P .)
    FIN             reduce using rule 98 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P .)
    CIERRA_P        reduce using rule 98 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P .)
    COMA            reduce using rule 98 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P .)


state 608

    (99) expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P .

    PUNTOCOMA       reduce using rule 99 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P .)
    NUMERO          reduce using rule 99 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P .)
    ABRE_P          reduce using rule 99 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P .)
    SUM             reduce using rule 99 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P .)
    SUBSTR          reduce using rule 99 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P .)
    MULTI           reduce using rule 99 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P .)
    DIV             reduce using rule 99 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P .)
    RANDOM          reduce using rule 99 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P .)
    RUN             reduce using rule 99 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P .)
    IF              reduce using rule 99 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P .)
    IFELSE          reduce using rule 99 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P .)
    REPEAT          reduce using rule 99 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P .)
    UNTIL           reduce using rule 99 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P .)
    WHILE           reduce using rule 99 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P .)
    PRINTLINE       reduce using rule 99 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P .)
    AND             reduce using rule 99 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P .)
    OR              reduce using rule 99 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P .)
    ADD             reduce using rule 99 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P .)
    PUT             reduce using rule 99 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P .)
    FIN             reduce using rule 99 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P .)
    CIERRA_P        reduce using rule 99 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P .)
    COMA            reduce using rule 99 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P .)


state 609

    (100) expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P .

    PUNTOCOMA       reduce using rule 100 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P .)
    NUMERO          reduce using rule 100 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P .)
    ABRE_P          reduce using rule 100 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P .)
    SUM             reduce using rule 100 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P .)
    SUBSTR          reduce using rule 100 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P .)
    MULTI           reduce using rule 100 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P .)
    DIV             reduce using rule 100 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P .)
    RANDOM          reduce using rule 100 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P .)
    RUN             reduce using rule 100 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P .)
    IF              reduce using rule 100 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P .)
    IFELSE          reduce using rule 100 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P .)
    REPEAT          reduce using rule 100 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P .)
    UNTIL           reduce using rule 100 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P .)
    WHILE           reduce using rule 100 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P .)
    PRINTLINE       reduce using rule 100 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P .)
    AND             reduce using rule 100 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P .)
    OR              reduce using rule 100 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P .)
    ADD             reduce using rule 100 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P .)
    PUT             reduce using rule 100 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P .)
    FIN             reduce using rule 100 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P .)
    CIERRA_P        reduce using rule 100 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P .)
    COMA            reduce using rule 100 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P .)


state 610

    (133) Mult -> MULTI ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .

    PUNTOCOMA       reduce using rule 133 (Mult -> MULTI ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    NUMERO          reduce using rule 133 (Mult -> MULTI ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    ABRE_P          reduce using rule 133 (Mult -> MULTI ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    SUM             reduce using rule 133 (Mult -> MULTI ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    SUBSTR          reduce using rule 133 (Mult -> MULTI ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    MULTI           reduce using rule 133 (Mult -> MULTI ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    DIV             reduce using rule 133 (Mult -> MULTI ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    RANDOM          reduce using rule 133 (Mult -> MULTI ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    RUN             reduce using rule 133 (Mult -> MULTI ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    IF              reduce using rule 133 (Mult -> MULTI ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    IFELSE          reduce using rule 133 (Mult -> MULTI ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    REPEAT          reduce using rule 133 (Mult -> MULTI ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    UNTIL           reduce using rule 133 (Mult -> MULTI ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    WHILE           reduce using rule 133 (Mult -> MULTI ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    PRINTLINE       reduce using rule 133 (Mult -> MULTI ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    AND             reduce using rule 133 (Mult -> MULTI ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    OR              reduce using rule 133 (Mult -> MULTI ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    ADD             reduce using rule 133 (Mult -> MULTI ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    PUT             reduce using rule 133 (Mult -> MULTI ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    FIN             reduce using rule 133 (Mult -> MULTI ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)


state 611

    (132) Mult -> MULTI ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .

    PUNTOCOMA       reduce using rule 132 (Mult -> MULTI ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    NUMERO          reduce using rule 132 (Mult -> MULTI ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    ABRE_P          reduce using rule 132 (Mult -> MULTI ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    SUM             reduce using rule 132 (Mult -> MULTI ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    SUBSTR          reduce using rule 132 (Mult -> MULTI ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    MULTI           reduce using rule 132 (Mult -> MULTI ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    DIV             reduce using rule 132 (Mult -> MULTI ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    RANDOM          reduce using rule 132 (Mult -> MULTI ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    RUN             reduce using rule 132 (Mult -> MULTI ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    IF              reduce using rule 132 (Mult -> MULTI ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    IFELSE          reduce using rule 132 (Mult -> MULTI ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    REPEAT          reduce using rule 132 (Mult -> MULTI ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    UNTIL           reduce using rule 132 (Mult -> MULTI ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    WHILE           reduce using rule 132 (Mult -> MULTI ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    PRINTLINE       reduce using rule 132 (Mult -> MULTI ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    AND             reduce using rule 132 (Mult -> MULTI ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    OR              reduce using rule 132 (Mult -> MULTI ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    ADD             reduce using rule 132 (Mult -> MULTI ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    PUT             reduce using rule 132 (Mult -> MULTI ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    FIN             reduce using rule 132 (Mult -> MULTI ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)


state 612

    (135) Mult -> MULTI ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .

    PUNTOCOMA       reduce using rule 135 (Mult -> MULTI ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    NUMERO          reduce using rule 135 (Mult -> MULTI ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    ABRE_P          reduce using rule 135 (Mult -> MULTI ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    SUM             reduce using rule 135 (Mult -> MULTI ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    SUBSTR          reduce using rule 135 (Mult -> MULTI ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    MULTI           reduce using rule 135 (Mult -> MULTI ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    DIV             reduce using rule 135 (Mult -> MULTI ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    RANDOM          reduce using rule 135 (Mult -> MULTI ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    RUN             reduce using rule 135 (Mult -> MULTI ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    IF              reduce using rule 135 (Mult -> MULTI ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    IFELSE          reduce using rule 135 (Mult -> MULTI ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    REPEAT          reduce using rule 135 (Mult -> MULTI ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    UNTIL           reduce using rule 135 (Mult -> MULTI ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    WHILE           reduce using rule 135 (Mult -> MULTI ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    PRINTLINE       reduce using rule 135 (Mult -> MULTI ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    AND             reduce using rule 135 (Mult -> MULTI ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    OR              reduce using rule 135 (Mult -> MULTI ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    ADD             reduce using rule 135 (Mult -> MULTI ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    PUT             reduce using rule 135 (Mult -> MULTI ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    FIN             reduce using rule 135 (Mult -> MULTI ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)


state 613

    (138) Mult -> MULTI ABRE_P RESTA NUMERO COMA Var CIERRA_P .

    PUNTOCOMA       reduce using rule 138 (Mult -> MULTI ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    NUMERO          reduce using rule 138 (Mult -> MULTI ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    ABRE_P          reduce using rule 138 (Mult -> MULTI ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    SUM             reduce using rule 138 (Mult -> MULTI ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    SUBSTR          reduce using rule 138 (Mult -> MULTI ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    MULTI           reduce using rule 138 (Mult -> MULTI ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    DIV             reduce using rule 138 (Mult -> MULTI ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    RANDOM          reduce using rule 138 (Mult -> MULTI ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    RUN             reduce using rule 138 (Mult -> MULTI ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    IF              reduce using rule 138 (Mult -> MULTI ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    IFELSE          reduce using rule 138 (Mult -> MULTI ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    REPEAT          reduce using rule 138 (Mult -> MULTI ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    UNTIL           reduce using rule 138 (Mult -> MULTI ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    WHILE           reduce using rule 138 (Mult -> MULTI ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    PRINTLINE       reduce using rule 138 (Mult -> MULTI ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    AND             reduce using rule 138 (Mult -> MULTI ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    OR              reduce using rule 138 (Mult -> MULTI ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    ADD             reduce using rule 138 (Mult -> MULTI ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    PUT             reduce using rule 138 (Mult -> MULTI ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    FIN             reduce using rule 138 (Mult -> MULTI ABRE_P RESTA NUMERO COMA Var CIERRA_P .)


state 614

    (144) Mult -> MULTI ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .

    PUNTOCOMA       reduce using rule 144 (Mult -> MULTI ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    NUMERO          reduce using rule 144 (Mult -> MULTI ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    ABRE_P          reduce using rule 144 (Mult -> MULTI ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    SUM             reduce using rule 144 (Mult -> MULTI ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    SUBSTR          reduce using rule 144 (Mult -> MULTI ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    MULTI           reduce using rule 144 (Mult -> MULTI ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    DIV             reduce using rule 144 (Mult -> MULTI ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    RANDOM          reduce using rule 144 (Mult -> MULTI ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    RUN             reduce using rule 144 (Mult -> MULTI ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    IF              reduce using rule 144 (Mult -> MULTI ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    IFELSE          reduce using rule 144 (Mult -> MULTI ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    REPEAT          reduce using rule 144 (Mult -> MULTI ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    UNTIL           reduce using rule 144 (Mult -> MULTI ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    WHILE           reduce using rule 144 (Mult -> MULTI ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    PRINTLINE       reduce using rule 144 (Mult -> MULTI ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    AND             reduce using rule 144 (Mult -> MULTI ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    OR              reduce using rule 144 (Mult -> MULTI ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    ADD             reduce using rule 144 (Mult -> MULTI ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    PUT             reduce using rule 144 (Mult -> MULTI ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    FIN             reduce using rule 144 (Mult -> MULTI ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)


state 615

    (140) Mult -> MULTI ABRE_P Var COMA RESTA NUMERO CIERRA_P .

    PUNTOCOMA       reduce using rule 140 (Mult -> MULTI ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    NUMERO          reduce using rule 140 (Mult -> MULTI ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    ABRE_P          reduce using rule 140 (Mult -> MULTI ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    SUM             reduce using rule 140 (Mult -> MULTI ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    SUBSTR          reduce using rule 140 (Mult -> MULTI ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    MULTI           reduce using rule 140 (Mult -> MULTI ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    DIV             reduce using rule 140 (Mult -> MULTI ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    RANDOM          reduce using rule 140 (Mult -> MULTI ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    RUN             reduce using rule 140 (Mult -> MULTI ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    IF              reduce using rule 140 (Mult -> MULTI ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    IFELSE          reduce using rule 140 (Mult -> MULTI ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    REPEAT          reduce using rule 140 (Mult -> MULTI ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    UNTIL           reduce using rule 140 (Mult -> MULTI ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    WHILE           reduce using rule 140 (Mult -> MULTI ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    PRINTLINE       reduce using rule 140 (Mult -> MULTI ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    AND             reduce using rule 140 (Mult -> MULTI ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    OR              reduce using rule 140 (Mult -> MULTI ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    ADD             reduce using rule 140 (Mult -> MULTI ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    PUT             reduce using rule 140 (Mult -> MULTI ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    FIN             reduce using rule 140 (Mult -> MULTI ABRE_P Var COMA RESTA NUMERO CIERRA_P .)


state 616

    (148) Div -> DIV ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .

    PUNTOCOMA       reduce using rule 148 (Div -> DIV ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    NUMERO          reduce using rule 148 (Div -> DIV ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    ABRE_P          reduce using rule 148 (Div -> DIV ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    SUM             reduce using rule 148 (Div -> DIV ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    SUBSTR          reduce using rule 148 (Div -> DIV ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    MULTI           reduce using rule 148 (Div -> DIV ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    DIV             reduce using rule 148 (Div -> DIV ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    RANDOM          reduce using rule 148 (Div -> DIV ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    RUN             reduce using rule 148 (Div -> DIV ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    IF              reduce using rule 148 (Div -> DIV ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    IFELSE          reduce using rule 148 (Div -> DIV ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    REPEAT          reduce using rule 148 (Div -> DIV ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    UNTIL           reduce using rule 148 (Div -> DIV ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    WHILE           reduce using rule 148 (Div -> DIV ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    PRINTLINE       reduce using rule 148 (Div -> DIV ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    AND             reduce using rule 148 (Div -> DIV ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    OR              reduce using rule 148 (Div -> DIV ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    ADD             reduce using rule 148 (Div -> DIV ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    PUT             reduce using rule 148 (Div -> DIV ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    FIN             reduce using rule 148 (Div -> DIV ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)


state 617

    (147) Div -> DIV ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .

    PUNTOCOMA       reduce using rule 147 (Div -> DIV ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    NUMERO          reduce using rule 147 (Div -> DIV ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    ABRE_P          reduce using rule 147 (Div -> DIV ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    SUM             reduce using rule 147 (Div -> DIV ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    SUBSTR          reduce using rule 147 (Div -> DIV ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    MULTI           reduce using rule 147 (Div -> DIV ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    DIV             reduce using rule 147 (Div -> DIV ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    RANDOM          reduce using rule 147 (Div -> DIV ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    RUN             reduce using rule 147 (Div -> DIV ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    IF              reduce using rule 147 (Div -> DIV ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    IFELSE          reduce using rule 147 (Div -> DIV ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    REPEAT          reduce using rule 147 (Div -> DIV ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    UNTIL           reduce using rule 147 (Div -> DIV ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    WHILE           reduce using rule 147 (Div -> DIV ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    PRINTLINE       reduce using rule 147 (Div -> DIV ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    AND             reduce using rule 147 (Div -> DIV ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    OR              reduce using rule 147 (Div -> DIV ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    ADD             reduce using rule 147 (Div -> DIV ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    PUT             reduce using rule 147 (Div -> DIV ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    FIN             reduce using rule 147 (Div -> DIV ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)


state 618

    (150) Div -> DIV ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .

    PUNTOCOMA       reduce using rule 150 (Div -> DIV ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    NUMERO          reduce using rule 150 (Div -> DIV ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    ABRE_P          reduce using rule 150 (Div -> DIV ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    SUM             reduce using rule 150 (Div -> DIV ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    SUBSTR          reduce using rule 150 (Div -> DIV ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    MULTI           reduce using rule 150 (Div -> DIV ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    DIV             reduce using rule 150 (Div -> DIV ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    RANDOM          reduce using rule 150 (Div -> DIV ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    RUN             reduce using rule 150 (Div -> DIV ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    IF              reduce using rule 150 (Div -> DIV ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    IFELSE          reduce using rule 150 (Div -> DIV ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    REPEAT          reduce using rule 150 (Div -> DIV ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    UNTIL           reduce using rule 150 (Div -> DIV ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    WHILE           reduce using rule 150 (Div -> DIV ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    PRINTLINE       reduce using rule 150 (Div -> DIV ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    AND             reduce using rule 150 (Div -> DIV ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    OR              reduce using rule 150 (Div -> DIV ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    ADD             reduce using rule 150 (Div -> DIV ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    PUT             reduce using rule 150 (Div -> DIV ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    FIN             reduce using rule 150 (Div -> DIV ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)


state 619

    (153) Div -> DIV ABRE_P RESTA NUMERO COMA Var CIERRA_P .

    PUNTOCOMA       reduce using rule 153 (Div -> DIV ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    NUMERO          reduce using rule 153 (Div -> DIV ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    ABRE_P          reduce using rule 153 (Div -> DIV ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    SUM             reduce using rule 153 (Div -> DIV ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    SUBSTR          reduce using rule 153 (Div -> DIV ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    MULTI           reduce using rule 153 (Div -> DIV ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    DIV             reduce using rule 153 (Div -> DIV ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    RANDOM          reduce using rule 153 (Div -> DIV ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    RUN             reduce using rule 153 (Div -> DIV ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    IF              reduce using rule 153 (Div -> DIV ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    IFELSE          reduce using rule 153 (Div -> DIV ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    REPEAT          reduce using rule 153 (Div -> DIV ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    UNTIL           reduce using rule 153 (Div -> DIV ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    WHILE           reduce using rule 153 (Div -> DIV ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    PRINTLINE       reduce using rule 153 (Div -> DIV ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    AND             reduce using rule 153 (Div -> DIV ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    OR              reduce using rule 153 (Div -> DIV ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    ADD             reduce using rule 153 (Div -> DIV ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    PUT             reduce using rule 153 (Div -> DIV ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    FIN             reduce using rule 153 (Div -> DIV ABRE_P RESTA NUMERO COMA Var CIERRA_P .)


state 620

    (159) Div -> DIV ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .

    PUNTOCOMA       reduce using rule 159 (Div -> DIV ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    NUMERO          reduce using rule 159 (Div -> DIV ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    ABRE_P          reduce using rule 159 (Div -> DIV ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    SUM             reduce using rule 159 (Div -> DIV ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    SUBSTR          reduce using rule 159 (Div -> DIV ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    MULTI           reduce using rule 159 (Div -> DIV ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    DIV             reduce using rule 159 (Div -> DIV ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    RANDOM          reduce using rule 159 (Div -> DIV ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    RUN             reduce using rule 159 (Div -> DIV ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    IF              reduce using rule 159 (Div -> DIV ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    IFELSE          reduce using rule 159 (Div -> DIV ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    REPEAT          reduce using rule 159 (Div -> DIV ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    UNTIL           reduce using rule 159 (Div -> DIV ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    WHILE           reduce using rule 159 (Div -> DIV ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    PRINTLINE       reduce using rule 159 (Div -> DIV ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    AND             reduce using rule 159 (Div -> DIV ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    OR              reduce using rule 159 (Div -> DIV ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    ADD             reduce using rule 159 (Div -> DIV ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    PUT             reduce using rule 159 (Div -> DIV ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    FIN             reduce using rule 159 (Div -> DIV ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)


state 621

    (155) Div -> DIV ABRE_P Var COMA RESTA NUMERO CIERRA_P .

    PUNTOCOMA       reduce using rule 155 (Div -> DIV ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    NUMERO          reduce using rule 155 (Div -> DIV ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    ABRE_P          reduce using rule 155 (Div -> DIV ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    SUM             reduce using rule 155 (Div -> DIV ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    SUBSTR          reduce using rule 155 (Div -> DIV ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    MULTI           reduce using rule 155 (Div -> DIV ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    DIV             reduce using rule 155 (Div -> DIV ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    RANDOM          reduce using rule 155 (Div -> DIV ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    RUN             reduce using rule 155 (Div -> DIV ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    IF              reduce using rule 155 (Div -> DIV ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    IFELSE          reduce using rule 155 (Div -> DIV ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    REPEAT          reduce using rule 155 (Div -> DIV ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    UNTIL           reduce using rule 155 (Div -> DIV ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    WHILE           reduce using rule 155 (Div -> DIV ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    PRINTLINE       reduce using rule 155 (Div -> DIV ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    AND             reduce using rule 155 (Div -> DIV ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    OR              reduce using rule 155 (Div -> DIV ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    ADD             reduce using rule 155 (Div -> DIV ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    PUT             reduce using rule 155 (Div -> DIV ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    FIN             reduce using rule 155 (Div -> DIV ABRE_P Var COMA RESTA NUMERO CIERRA_P .)


state 622

    (103) Sum -> SUM ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .

    PUNTOCOMA       reduce using rule 103 (Sum -> SUM ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    NUMERO          reduce using rule 103 (Sum -> SUM ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    ABRE_P          reduce using rule 103 (Sum -> SUM ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    SUM             reduce using rule 103 (Sum -> SUM ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    SUBSTR          reduce using rule 103 (Sum -> SUM ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    MULTI           reduce using rule 103 (Sum -> SUM ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    DIV             reduce using rule 103 (Sum -> SUM ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    RANDOM          reduce using rule 103 (Sum -> SUM ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    RUN             reduce using rule 103 (Sum -> SUM ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    IF              reduce using rule 103 (Sum -> SUM ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    IFELSE          reduce using rule 103 (Sum -> SUM ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    REPEAT          reduce using rule 103 (Sum -> SUM ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    UNTIL           reduce using rule 103 (Sum -> SUM ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    WHILE           reduce using rule 103 (Sum -> SUM ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    PRINTLINE       reduce using rule 103 (Sum -> SUM ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    AND             reduce using rule 103 (Sum -> SUM ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    OR              reduce using rule 103 (Sum -> SUM ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    ADD             reduce using rule 103 (Sum -> SUM ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    PUT             reduce using rule 103 (Sum -> SUM ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    FIN             reduce using rule 103 (Sum -> SUM ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)


state 623

    (102) Sum -> SUM ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .

    PUNTOCOMA       reduce using rule 102 (Sum -> SUM ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    NUMERO          reduce using rule 102 (Sum -> SUM ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    ABRE_P          reduce using rule 102 (Sum -> SUM ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    SUM             reduce using rule 102 (Sum -> SUM ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    SUBSTR          reduce using rule 102 (Sum -> SUM ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    MULTI           reduce using rule 102 (Sum -> SUM ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    DIV             reduce using rule 102 (Sum -> SUM ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    RANDOM          reduce using rule 102 (Sum -> SUM ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    RUN             reduce using rule 102 (Sum -> SUM ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    IF              reduce using rule 102 (Sum -> SUM ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    IFELSE          reduce using rule 102 (Sum -> SUM ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    REPEAT          reduce using rule 102 (Sum -> SUM ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    UNTIL           reduce using rule 102 (Sum -> SUM ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    WHILE           reduce using rule 102 (Sum -> SUM ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    PRINTLINE       reduce using rule 102 (Sum -> SUM ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    AND             reduce using rule 102 (Sum -> SUM ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    OR              reduce using rule 102 (Sum -> SUM ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    ADD             reduce using rule 102 (Sum -> SUM ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    PUT             reduce using rule 102 (Sum -> SUM ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    FIN             reduce using rule 102 (Sum -> SUM ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)


state 624

    (105) Sum -> SUM ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .

    PUNTOCOMA       reduce using rule 105 (Sum -> SUM ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    NUMERO          reduce using rule 105 (Sum -> SUM ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    ABRE_P          reduce using rule 105 (Sum -> SUM ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    SUM             reduce using rule 105 (Sum -> SUM ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    SUBSTR          reduce using rule 105 (Sum -> SUM ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    MULTI           reduce using rule 105 (Sum -> SUM ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    DIV             reduce using rule 105 (Sum -> SUM ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    RANDOM          reduce using rule 105 (Sum -> SUM ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    RUN             reduce using rule 105 (Sum -> SUM ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    IF              reduce using rule 105 (Sum -> SUM ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    IFELSE          reduce using rule 105 (Sum -> SUM ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    REPEAT          reduce using rule 105 (Sum -> SUM ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    UNTIL           reduce using rule 105 (Sum -> SUM ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    WHILE           reduce using rule 105 (Sum -> SUM ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    PRINTLINE       reduce using rule 105 (Sum -> SUM ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    AND             reduce using rule 105 (Sum -> SUM ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    OR              reduce using rule 105 (Sum -> SUM ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    ADD             reduce using rule 105 (Sum -> SUM ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    PUT             reduce using rule 105 (Sum -> SUM ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    FIN             reduce using rule 105 (Sum -> SUM ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)


state 625

    (108) Sum -> SUM ABRE_P RESTA NUMERO COMA Var CIERRA_P .

    PUNTOCOMA       reduce using rule 108 (Sum -> SUM ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    NUMERO          reduce using rule 108 (Sum -> SUM ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    ABRE_P          reduce using rule 108 (Sum -> SUM ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    SUM             reduce using rule 108 (Sum -> SUM ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    SUBSTR          reduce using rule 108 (Sum -> SUM ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    MULTI           reduce using rule 108 (Sum -> SUM ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    DIV             reduce using rule 108 (Sum -> SUM ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    RANDOM          reduce using rule 108 (Sum -> SUM ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    RUN             reduce using rule 108 (Sum -> SUM ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    IF              reduce using rule 108 (Sum -> SUM ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    IFELSE          reduce using rule 108 (Sum -> SUM ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    REPEAT          reduce using rule 108 (Sum -> SUM ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    UNTIL           reduce using rule 108 (Sum -> SUM ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    WHILE           reduce using rule 108 (Sum -> SUM ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    PRINTLINE       reduce using rule 108 (Sum -> SUM ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    AND             reduce using rule 108 (Sum -> SUM ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    OR              reduce using rule 108 (Sum -> SUM ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    ADD             reduce using rule 108 (Sum -> SUM ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    PUT             reduce using rule 108 (Sum -> SUM ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    FIN             reduce using rule 108 (Sum -> SUM ABRE_P RESTA NUMERO COMA Var CIERRA_P .)


state 626

    (114) Sum -> SUM ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .

    PUNTOCOMA       reduce using rule 114 (Sum -> SUM ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    NUMERO          reduce using rule 114 (Sum -> SUM ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    ABRE_P          reduce using rule 114 (Sum -> SUM ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    SUM             reduce using rule 114 (Sum -> SUM ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    SUBSTR          reduce using rule 114 (Sum -> SUM ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    MULTI           reduce using rule 114 (Sum -> SUM ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    DIV             reduce using rule 114 (Sum -> SUM ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    RANDOM          reduce using rule 114 (Sum -> SUM ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    RUN             reduce using rule 114 (Sum -> SUM ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    IF              reduce using rule 114 (Sum -> SUM ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    IFELSE          reduce using rule 114 (Sum -> SUM ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    REPEAT          reduce using rule 114 (Sum -> SUM ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    UNTIL           reduce using rule 114 (Sum -> SUM ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    WHILE           reduce using rule 114 (Sum -> SUM ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    PRINTLINE       reduce using rule 114 (Sum -> SUM ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    AND             reduce using rule 114 (Sum -> SUM ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    OR              reduce using rule 114 (Sum -> SUM ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    ADD             reduce using rule 114 (Sum -> SUM ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    PUT             reduce using rule 114 (Sum -> SUM ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    FIN             reduce using rule 114 (Sum -> SUM ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)


state 627

    (110) Sum -> SUM ABRE_P Var COMA RESTA NUMERO CIERRA_P .

    PUNTOCOMA       reduce using rule 110 (Sum -> SUM ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    NUMERO          reduce using rule 110 (Sum -> SUM ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    ABRE_P          reduce using rule 110 (Sum -> SUM ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    SUM             reduce using rule 110 (Sum -> SUM ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    SUBSTR          reduce using rule 110 (Sum -> SUM ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    MULTI           reduce using rule 110 (Sum -> SUM ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    DIV             reduce using rule 110 (Sum -> SUM ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    RANDOM          reduce using rule 110 (Sum -> SUM ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    RUN             reduce using rule 110 (Sum -> SUM ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    IF              reduce using rule 110 (Sum -> SUM ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    IFELSE          reduce using rule 110 (Sum -> SUM ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    REPEAT          reduce using rule 110 (Sum -> SUM ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    UNTIL           reduce using rule 110 (Sum -> SUM ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    WHILE           reduce using rule 110 (Sum -> SUM ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    PRINTLINE       reduce using rule 110 (Sum -> SUM ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    AND             reduce using rule 110 (Sum -> SUM ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    OR              reduce using rule 110 (Sum -> SUM ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    ADD             reduce using rule 110 (Sum -> SUM ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    PUT             reduce using rule 110 (Sum -> SUM ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    FIN             reduce using rule 110 (Sum -> SUM ABRE_P Var COMA RESTA NUMERO CIERRA_P .)


state 628

    (118) Substr -> SUBSTR ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .

    PUNTOCOMA       reduce using rule 118 (Substr -> SUBSTR ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    NUMERO          reduce using rule 118 (Substr -> SUBSTR ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    ABRE_P          reduce using rule 118 (Substr -> SUBSTR ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    SUM             reduce using rule 118 (Substr -> SUBSTR ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    SUBSTR          reduce using rule 118 (Substr -> SUBSTR ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    MULTI           reduce using rule 118 (Substr -> SUBSTR ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    DIV             reduce using rule 118 (Substr -> SUBSTR ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    RANDOM          reduce using rule 118 (Substr -> SUBSTR ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    RUN             reduce using rule 118 (Substr -> SUBSTR ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    IF              reduce using rule 118 (Substr -> SUBSTR ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    IFELSE          reduce using rule 118 (Substr -> SUBSTR ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    REPEAT          reduce using rule 118 (Substr -> SUBSTR ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    UNTIL           reduce using rule 118 (Substr -> SUBSTR ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    WHILE           reduce using rule 118 (Substr -> SUBSTR ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    PRINTLINE       reduce using rule 118 (Substr -> SUBSTR ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    AND             reduce using rule 118 (Substr -> SUBSTR ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    OR              reduce using rule 118 (Substr -> SUBSTR ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    ADD             reduce using rule 118 (Substr -> SUBSTR ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    PUT             reduce using rule 118 (Substr -> SUBSTR ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    FIN             reduce using rule 118 (Substr -> SUBSTR ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)


state 629

    (117) Substr -> SUBSTR ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .

    PUNTOCOMA       reduce using rule 117 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    NUMERO          reduce using rule 117 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    ABRE_P          reduce using rule 117 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    SUM             reduce using rule 117 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    SUBSTR          reduce using rule 117 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    MULTI           reduce using rule 117 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    DIV             reduce using rule 117 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    RANDOM          reduce using rule 117 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    RUN             reduce using rule 117 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    IF              reduce using rule 117 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    IFELSE          reduce using rule 117 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    REPEAT          reduce using rule 117 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    UNTIL           reduce using rule 117 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    WHILE           reduce using rule 117 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    PRINTLINE       reduce using rule 117 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    AND             reduce using rule 117 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    OR              reduce using rule 117 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    ADD             reduce using rule 117 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    PUT             reduce using rule 117 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    FIN             reduce using rule 117 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)


state 630

    (120) Substr -> SUBSTR ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .

    PUNTOCOMA       reduce using rule 120 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    NUMERO          reduce using rule 120 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    ABRE_P          reduce using rule 120 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    SUM             reduce using rule 120 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    SUBSTR          reduce using rule 120 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    MULTI           reduce using rule 120 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    DIV             reduce using rule 120 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    RANDOM          reduce using rule 120 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    RUN             reduce using rule 120 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    IF              reduce using rule 120 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    IFELSE          reduce using rule 120 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    REPEAT          reduce using rule 120 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    UNTIL           reduce using rule 120 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    WHILE           reduce using rule 120 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    PRINTLINE       reduce using rule 120 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    AND             reduce using rule 120 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    OR              reduce using rule 120 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    ADD             reduce using rule 120 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    PUT             reduce using rule 120 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    FIN             reduce using rule 120 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)


state 631

    (123) Substr -> SUBSTR ABRE_P RESTA NUMERO COMA Var CIERRA_P .

    PUNTOCOMA       reduce using rule 123 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    NUMERO          reduce using rule 123 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    ABRE_P          reduce using rule 123 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    SUM             reduce using rule 123 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    SUBSTR          reduce using rule 123 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    MULTI           reduce using rule 123 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    DIV             reduce using rule 123 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    RANDOM          reduce using rule 123 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    RUN             reduce using rule 123 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    IF              reduce using rule 123 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    IFELSE          reduce using rule 123 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    REPEAT          reduce using rule 123 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    UNTIL           reduce using rule 123 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    WHILE           reduce using rule 123 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    PRINTLINE       reduce using rule 123 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    AND             reduce using rule 123 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    OR              reduce using rule 123 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    ADD             reduce using rule 123 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    PUT             reduce using rule 123 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    FIN             reduce using rule 123 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA Var CIERRA_P .)


state 632

    (129) Substr -> SUBSTR ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .

    PUNTOCOMA       reduce using rule 129 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    NUMERO          reduce using rule 129 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    ABRE_P          reduce using rule 129 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    SUM             reduce using rule 129 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    SUBSTR          reduce using rule 129 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    MULTI           reduce using rule 129 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    DIV             reduce using rule 129 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    RANDOM          reduce using rule 129 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    RUN             reduce using rule 129 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    IF              reduce using rule 129 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    IFELSE          reduce using rule 129 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    REPEAT          reduce using rule 129 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    UNTIL           reduce using rule 129 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    WHILE           reduce using rule 129 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    PRINTLINE       reduce using rule 129 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    AND             reduce using rule 129 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    OR              reduce using rule 129 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    ADD             reduce using rule 129 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    PUT             reduce using rule 129 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    FIN             reduce using rule 129 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)


state 633

    (125) Substr -> SUBSTR ABRE_P Var COMA RESTA NUMERO CIERRA_P .

    PUNTOCOMA       reduce using rule 125 (Substr -> SUBSTR ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    NUMERO          reduce using rule 125 (Substr -> SUBSTR ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    ABRE_P          reduce using rule 125 (Substr -> SUBSTR ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    SUM             reduce using rule 125 (Substr -> SUBSTR ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    SUBSTR          reduce using rule 125 (Substr -> SUBSTR ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    MULTI           reduce using rule 125 (Substr -> SUBSTR ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    DIV             reduce using rule 125 (Substr -> SUBSTR ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    RANDOM          reduce using rule 125 (Substr -> SUBSTR ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    RUN             reduce using rule 125 (Substr -> SUBSTR ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    IF              reduce using rule 125 (Substr -> SUBSTR ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    IFELSE          reduce using rule 125 (Substr -> SUBSTR ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    REPEAT          reduce using rule 125 (Substr -> SUBSTR ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    UNTIL           reduce using rule 125 (Substr -> SUBSTR ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    WHILE           reduce using rule 125 (Substr -> SUBSTR ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    PRINTLINE       reduce using rule 125 (Substr -> SUBSTR ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    AND             reduce using rule 125 (Substr -> SUBSTR ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    OR              reduce using rule 125 (Substr -> SUBSTR ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    ADD             reduce using rule 125 (Substr -> SUBSTR ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    PUT             reduce using rule 125 (Substr -> SUBSTR ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    FIN             reduce using rule 125 (Substr -> SUBSTR ABRE_P Var COMA RESTA NUMERO CIERRA_P .)


state 634

    (277) Diag -> POS ABRE_P STRING COMA NUMERO . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 726


state 635

    (278) Pos -> POS ABRE_P NUMERO COMA NUMERO . CIERRA_P PUNTOCOMA
    (93) expresion_alge1 -> NUMERO . SUMA NUMERO
    (94) expresion_alge1 -> NUMERO . RESTA NUMERO
    (95) expresion_alge1 -> NUMERO . MULTI NUMERO
    (96) expresion_alge1 -> NUMERO . DIVISION NUMERO

    CIERRA_P        shift and go to state 727
    SUMA            shift and go to state 127
    RESTA           shift and go to state 128
    MULTI           shift and go to state 129
    DIVISION        shift and go to state 130


state 636

    (280) Pos -> POS ABRE_P NUMERO COMA expresion_alge1 . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 728


state 637

    (283) Pos -> POS ABRE_P NUMERO COMA Var . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 729


state 638

    (281) Pos -> POS ABRE_P expresion_alge1 COMA expresion_alge1 . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 730


state 639

    (279) Pos -> POS ABRE_P expresion_alge1 COMA NUMERO . CIERRA_P PUNTOCOMA
    (93) expresion_alge1 -> NUMERO . SUMA NUMERO
    (94) expresion_alge1 -> NUMERO . RESTA NUMERO
    (95) expresion_alge1 -> NUMERO . MULTI NUMERO
    (96) expresion_alge1 -> NUMERO . DIVISION NUMERO

    CIERRA_P        shift and go to state 731
    SUMA            shift and go to state 127
    RESTA           shift and go to state 128
    MULTI           shift and go to state 129
    DIVISION        shift and go to state 130


state 640

    (285) Pos -> POS ABRE_P expresion_alge1 COMA Var . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 732


state 641

    (284) Pos -> POS ABRE_P Var COMA Var . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 733


state 642

    (282) Pos -> POS ABRE_P Var COMA NUMERO . CIERRA_P PUNTOCOMA
    (93) expresion_alge1 -> NUMERO . SUMA NUMERO
    (94) expresion_alge1 -> NUMERO . RESTA NUMERO
    (95) expresion_alge1 -> NUMERO . MULTI NUMERO
    (96) expresion_alge1 -> NUMERO . DIVISION NUMERO

    CIERRA_P        shift and go to state 734
    SUMA            shift and go to state 127
    RESTA           shift and go to state 128
    MULTI           shift and go to state 129
    DIVISION        shift and go to state 130


state 643

    (286) Pos -> POS ABRE_P Var COMA expresion_alge1 . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 735


state 644

    (242) If -> IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 .

    PUNTOCOMA       reduce using rule 242 (If -> IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 .)
    NUMERO          reduce using rule 242 (If -> IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 .)
    ABRE_P          reduce using rule 242 (If -> IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 .)
    SUM             reduce using rule 242 (If -> IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 .)
    SUBSTR          reduce using rule 242 (If -> IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 .)
    MULTI           reduce using rule 242 (If -> IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 .)
    DIV             reduce using rule 242 (If -> IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 .)
    RANDOM          reduce using rule 242 (If -> IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 .)
    RUN             reduce using rule 242 (If -> IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 .)
    IF              reduce using rule 242 (If -> IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 .)
    IFELSE          reduce using rule 242 (If -> IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 .)
    REPEAT          reduce using rule 242 (If -> IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 .)
    UNTIL           reduce using rule 242 (If -> IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 .)
    WHILE           reduce using rule 242 (If -> IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 .)
    PRINTLINE       reduce using rule 242 (If -> IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 .)
    AND             reduce using rule 242 (If -> IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 .)
    OR              reduce using rule 242 (If -> IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 .)
    ADD             reduce using rule 242 (If -> IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 .)
    PUT             reduce using rule 242 (If -> IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 .)
    FIN             reduce using rule 242 (If -> IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 .)
    CIERRA_P        reduce using rule 242 (If -> IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 .)
    BRACKET2        reduce using rule 242 (If -> IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 .)


state 645

    (162) Equal -> EQUAL ABRE_P NUMERO COMA NUMERO . CIERRA_P PUNTOCOMA
    (93) expresion_alge1 -> NUMERO . SUMA NUMERO
    (94) expresion_alge1 -> NUMERO . RESTA NUMERO
    (95) expresion_alge1 -> NUMERO . MULTI NUMERO
    (96) expresion_alge1 -> NUMERO . DIVISION NUMERO

    CIERRA_P        shift and go to state 736
    SUMA            shift and go to state 127
    RESTA           shift and go to state 128
    MULTI           shift and go to state 129
    DIVISION        shift and go to state 130


state 646

    (164) Equal -> EQUAL ABRE_P NUMERO COMA RESTA . NUMERO CIERRA_P PUNTOCOMA

    NUMERO          shift and go to state 737


state 647

    (168) Equal -> EQUAL ABRE_P NUMERO COMA Var . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 738


state 648

    (182) Equal -> EQUAL ABRE_P NUMERO COMA expresion_alge1 . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 739


state 649

    (184) Equal -> EQUAL ABRE_P NUMERO COMA expresion_alge2 . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 740


state 650

    (163) Equal -> EQUAL ABRE_P RESTA NUMERO COMA . NUMERO CIERRA_P PUNTOCOMA
    (169) Equal -> EQUAL ABRE_P RESTA NUMERO COMA . Var CIERRA_P PUNTOCOMA
    (183) Equal -> EQUAL ABRE_P RESTA NUMERO COMA . expresion_alge1 CIERRA_P PUNTOCOMA
    (185) Equal -> EQUAL ABRE_P RESTA NUMERO COMA . expresion_alge2 CIERRA_P PUNTOCOMA
    (161) Var -> . VAR
    (93) expresion_alge1 -> . NUMERO SUMA NUMERO
    (94) expresion_alge1 -> . NUMERO RESTA NUMERO
    (95) expresion_alge1 -> . NUMERO MULTI NUMERO
    (96) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (97) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (98) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (99) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (100) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P

    NUMERO          shift and go to state 741
    VAR             shift and go to state 34
    ABRE_P          shift and go to state 63

    Var                            shift and go to state 742
    expresion_alge1                shift and go to state 743
    expresion_alge2                shift and go to state 744

state 651

    (165) Equal -> EQUAL ABRE_P expresion_alge1 COMA expresion_alge1 . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 745


state 652

    (171) Equal -> EQUAL ABRE_P expresion_alge1 COMA Var . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 746


state 653

    (176) Equal -> EQUAL ABRE_P expresion_alge1 COMA expresion_alge2 . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 747


state 654

    (178) Equal -> EQUAL ABRE_P expresion_alge1 COMA NUMERO . CIERRA_P PUNTOCOMA
    (93) expresion_alge1 -> NUMERO . SUMA NUMERO
    (94) expresion_alge1 -> NUMERO . RESTA NUMERO
    (95) expresion_alge1 -> NUMERO . MULTI NUMERO
    (96) expresion_alge1 -> NUMERO . DIVISION NUMERO

    CIERRA_P        shift and go to state 748
    SUMA            shift and go to state 127
    RESTA           shift and go to state 128
    MULTI           shift and go to state 129
    DIVISION        shift and go to state 130


state 655

    (179) Equal -> EQUAL ABRE_P expresion_alge1 COMA RESTA . NUMERO CIERRA_P PUNTOCOMA

    NUMERO          shift and go to state 749


state 656

    (166) Equal -> EQUAL ABRE_P expresion_alge2 COMA expresion_alge2 . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 750


state 657

    (170) Equal -> EQUAL ABRE_P expresion_alge2 COMA Var . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 751


state 658

    (177) Equal -> EQUAL ABRE_P expresion_alge2 COMA expresion_alge1 . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 752


state 659

    (180) Equal -> EQUAL ABRE_P expresion_alge2 COMA NUMERO . CIERRA_P PUNTOCOMA
    (93) expresion_alge1 -> NUMERO . SUMA NUMERO
    (94) expresion_alge1 -> NUMERO . RESTA NUMERO
    (95) expresion_alge1 -> NUMERO . MULTI NUMERO
    (96) expresion_alge1 -> NUMERO . DIVISION NUMERO

    CIERRA_P        shift and go to state 753
    SUMA            shift and go to state 127
    RESTA           shift and go to state 128
    MULTI           shift and go to state 129
    DIVISION        shift and go to state 130


state 660

    (181) Equal -> EQUAL ABRE_P expresion_alge2 COMA RESTA . NUMERO CIERRA_P PUNTOCOMA

    NUMERO          shift and go to state 754


state 661

    (167) Equal -> EQUAL ABRE_P Var COMA Var . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 755


state 662

    (172) Equal -> EQUAL ABRE_P Var COMA NUMERO . CIERRA_P PUNTOCOMA
    (93) expresion_alge1 -> NUMERO . SUMA NUMERO
    (94) expresion_alge1 -> NUMERO . RESTA NUMERO
    (95) expresion_alge1 -> NUMERO . MULTI NUMERO
    (96) expresion_alge1 -> NUMERO . DIVISION NUMERO

    CIERRA_P        shift and go to state 756
    SUMA            shift and go to state 127
    RESTA           shift and go to state 128
    MULTI           shift and go to state 129
    DIVISION        shift and go to state 130


state 663

    (173) Equal -> EQUAL ABRE_P Var COMA RESTA . NUMERO CIERRA_P PUNTOCOMA

    NUMERO          shift and go to state 757


state 664

    (174) Equal -> EQUAL ABRE_P Var COMA expresion_alge1 . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 758


state 665

    (175) Equal -> EQUAL ABRE_P Var COMA expresion_alge2 . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 759


state 666

    (186) Greater -> GREATER ABRE_P NUMERO COMA NUMERO . CIERRA_P PUNTOCOMA
    (93) expresion_alge1 -> NUMERO . SUMA NUMERO
    (94) expresion_alge1 -> NUMERO . RESTA NUMERO
    (95) expresion_alge1 -> NUMERO . MULTI NUMERO
    (96) expresion_alge1 -> NUMERO . DIVISION NUMERO

    CIERRA_P        shift and go to state 760
    SUMA            shift and go to state 127
    RESTA           shift and go to state 128
    MULTI           shift and go to state 129
    DIVISION        shift and go to state 130


state 667

    (188) Greater -> GREATER ABRE_P NUMERO COMA RESTA . NUMERO CIERRA_P PUNTOCOMA

    NUMERO          shift and go to state 761


state 668

    (192) Greater -> GREATER ABRE_P NUMERO COMA Var . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 762


state 669

    (206) Greater -> GREATER ABRE_P NUMERO COMA expresion_alge1 . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 763


state 670

    (208) Greater -> GREATER ABRE_P NUMERO COMA expresion_alge2 . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 764


state 671

    (187) Greater -> GREATER ABRE_P RESTA NUMERO COMA . NUMERO CIERRA_P PUNTOCOMA
    (193) Greater -> GREATER ABRE_P RESTA NUMERO COMA . Var CIERRA_P PUNTOCOMA
    (207) Greater -> GREATER ABRE_P RESTA NUMERO COMA . expresion_alge1 CIERRA_P PUNTOCOMA
    (209) Greater -> GREATER ABRE_P RESTA NUMERO COMA . expresion_alge2 CIERRA_P PUNTOCOMA
    (161) Var -> . VAR
    (93) expresion_alge1 -> . NUMERO SUMA NUMERO
    (94) expresion_alge1 -> . NUMERO RESTA NUMERO
    (95) expresion_alge1 -> . NUMERO MULTI NUMERO
    (96) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (97) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (98) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (99) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (100) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P

    NUMERO          shift and go to state 765
    VAR             shift and go to state 34
    ABRE_P          shift and go to state 63

    Var                            shift and go to state 766
    expresion_alge1                shift and go to state 767
    expresion_alge2                shift and go to state 768

state 672

    (189) Greater -> GREATER ABRE_P expresion_alge1 COMA expresion_alge1 . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 769


state 673

    (195) Greater -> GREATER ABRE_P expresion_alge1 COMA Var . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 770


state 674

    (200) Greater -> GREATER ABRE_P expresion_alge1 COMA expresion_alge2 . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 771


state 675

    (202) Greater -> GREATER ABRE_P expresion_alge1 COMA NUMERO . CIERRA_P PUNTOCOMA
    (93) expresion_alge1 -> NUMERO . SUMA NUMERO
    (94) expresion_alge1 -> NUMERO . RESTA NUMERO
    (95) expresion_alge1 -> NUMERO . MULTI NUMERO
    (96) expresion_alge1 -> NUMERO . DIVISION NUMERO

    CIERRA_P        shift and go to state 772
    SUMA            shift and go to state 127
    RESTA           shift and go to state 128
    MULTI           shift and go to state 129
    DIVISION        shift and go to state 130


state 676

    (203) Greater -> GREATER ABRE_P expresion_alge1 COMA RESTA . NUMERO CIERRA_P PUNTOCOMA

    NUMERO          shift and go to state 773


state 677

    (190) Greater -> GREATER ABRE_P expresion_alge2 COMA expresion_alge2 . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 774


state 678

    (194) Greater -> GREATER ABRE_P expresion_alge2 COMA Var . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 775


state 679

    (201) Greater -> GREATER ABRE_P expresion_alge2 COMA expresion_alge1 . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 776


state 680

    (204) Greater -> GREATER ABRE_P expresion_alge2 COMA NUMERO . CIERRA_P PUNTOCOMA
    (93) expresion_alge1 -> NUMERO . SUMA NUMERO
    (94) expresion_alge1 -> NUMERO . RESTA NUMERO
    (95) expresion_alge1 -> NUMERO . MULTI NUMERO
    (96) expresion_alge1 -> NUMERO . DIVISION NUMERO

    CIERRA_P        shift and go to state 777
    SUMA            shift and go to state 127
    RESTA           shift and go to state 128
    MULTI           shift and go to state 129
    DIVISION        shift and go to state 130


state 681

    (205) Greater -> GREATER ABRE_P expresion_alge2 COMA RESTA . NUMERO CIERRA_P PUNTOCOMA

    NUMERO          shift and go to state 778


state 682

    (191) Greater -> GREATER ABRE_P Var COMA Var . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 779


state 683

    (196) Greater -> GREATER ABRE_P Var COMA NUMERO . CIERRA_P PUNTOCOMA
    (93) expresion_alge1 -> NUMERO . SUMA NUMERO
    (94) expresion_alge1 -> NUMERO . RESTA NUMERO
    (95) expresion_alge1 -> NUMERO . MULTI NUMERO
    (96) expresion_alge1 -> NUMERO . DIVISION NUMERO

    CIERRA_P        shift and go to state 780
    SUMA            shift and go to state 127
    RESTA           shift and go to state 128
    MULTI           shift and go to state 129
    DIVISION        shift and go to state 130


state 684

    (197) Greater -> GREATER ABRE_P Var COMA RESTA . NUMERO CIERRA_P PUNTOCOMA

    NUMERO          shift and go to state 781


state 685

    (198) Greater -> GREATER ABRE_P Var COMA expresion_alge1 . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 782


state 686

    (199) Greater -> GREATER ABRE_P Var COMA expresion_alge2 . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 783


state 687

    (210) Smaller -> SMALLER ABRE_P NUMERO COMA NUMERO . CIERRA_P PUNTOCOMA
    (93) expresion_alge1 -> NUMERO . SUMA NUMERO
    (94) expresion_alge1 -> NUMERO . RESTA NUMERO
    (95) expresion_alge1 -> NUMERO . MULTI NUMERO
    (96) expresion_alge1 -> NUMERO . DIVISION NUMERO

    CIERRA_P        shift and go to state 784
    SUMA            shift and go to state 127
    RESTA           shift and go to state 128
    MULTI           shift and go to state 129
    DIVISION        shift and go to state 130


state 688

    (212) Smaller -> SMALLER ABRE_P NUMERO COMA RESTA . NUMERO CIERRA_P PUNTOCOMA

    NUMERO          shift and go to state 785


state 689

    (216) Smaller -> SMALLER ABRE_P NUMERO COMA Var . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 786


state 690

    (230) Smaller -> SMALLER ABRE_P NUMERO COMA expresion_alge1 . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 787


state 691

    (232) Smaller -> SMALLER ABRE_P NUMERO COMA expresion_alge2 . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 788


state 692

    (211) Smaller -> SMALLER ABRE_P RESTA NUMERO COMA . NUMERO CIERRA_P PUNTOCOMA
    (217) Smaller -> SMALLER ABRE_P RESTA NUMERO COMA . Var CIERRA_P PUNTOCOMA
    (231) Smaller -> SMALLER ABRE_P RESTA NUMERO COMA . expresion_alge1 CIERRA_P PUNTOCOMA
    (233) Smaller -> SMALLER ABRE_P RESTA NUMERO COMA . expresion_alge2 CIERRA_P PUNTOCOMA
    (161) Var -> . VAR
    (93) expresion_alge1 -> . NUMERO SUMA NUMERO
    (94) expresion_alge1 -> . NUMERO RESTA NUMERO
    (95) expresion_alge1 -> . NUMERO MULTI NUMERO
    (96) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (97) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (98) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (99) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (100) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P

    NUMERO          shift and go to state 789
    VAR             shift and go to state 34
    ABRE_P          shift and go to state 63

    Var                            shift and go to state 790
    expresion_alge1                shift and go to state 791
    expresion_alge2                shift and go to state 792

state 693

    (213) Smaller -> SMALLER ABRE_P expresion_alge1 COMA expresion_alge1 . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 793


state 694

    (219) Smaller -> SMALLER ABRE_P expresion_alge1 COMA Var . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 794


state 695

    (224) Smaller -> SMALLER ABRE_P expresion_alge1 COMA expresion_alge2 . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 795


state 696

    (226) Smaller -> SMALLER ABRE_P expresion_alge1 COMA NUMERO . CIERRA_P PUNTOCOMA
    (93) expresion_alge1 -> NUMERO . SUMA NUMERO
    (94) expresion_alge1 -> NUMERO . RESTA NUMERO
    (95) expresion_alge1 -> NUMERO . MULTI NUMERO
    (96) expresion_alge1 -> NUMERO . DIVISION NUMERO

    CIERRA_P        shift and go to state 796
    SUMA            shift and go to state 127
    RESTA           shift and go to state 128
    MULTI           shift and go to state 129
    DIVISION        shift and go to state 130


state 697

    (227) Smaller -> SMALLER ABRE_P expresion_alge1 COMA RESTA . NUMERO CIERRA_P PUNTOCOMA

    NUMERO          shift and go to state 797


state 698

    (214) Smaller -> SMALLER ABRE_P expresion_alge2 COMA expresion_alge2 . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 798


state 699

    (218) Smaller -> SMALLER ABRE_P expresion_alge2 COMA Var . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 799


state 700

    (225) Smaller -> SMALLER ABRE_P expresion_alge2 COMA expresion_alge1 . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 800


state 701

    (228) Smaller -> SMALLER ABRE_P expresion_alge2 COMA NUMERO . CIERRA_P PUNTOCOMA
    (93) expresion_alge1 -> NUMERO . SUMA NUMERO
    (94) expresion_alge1 -> NUMERO . RESTA NUMERO
    (95) expresion_alge1 -> NUMERO . MULTI NUMERO
    (96) expresion_alge1 -> NUMERO . DIVISION NUMERO

    CIERRA_P        shift and go to state 801
    SUMA            shift and go to state 127
    RESTA           shift and go to state 128
    MULTI           shift and go to state 129
    DIVISION        shift and go to state 130


state 702

    (229) Smaller -> SMALLER ABRE_P expresion_alge2 COMA RESTA . NUMERO CIERRA_P PUNTOCOMA

    NUMERO          shift and go to state 802


state 703

    (215) Smaller -> SMALLER ABRE_P Var COMA Var . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 803


state 704

    (220) Smaller -> SMALLER ABRE_P Var COMA NUMERO . CIERRA_P PUNTOCOMA
    (93) expresion_alge1 -> NUMERO . SUMA NUMERO
    (94) expresion_alge1 -> NUMERO . RESTA NUMERO
    (95) expresion_alge1 -> NUMERO . MULTI NUMERO
    (96) expresion_alge1 -> NUMERO . DIVISION NUMERO

    CIERRA_P        shift and go to state 804
    SUMA            shift and go to state 127
    RESTA           shift and go to state 128
    MULTI           shift and go to state 129
    DIVISION        shift and go to state 130


state 705

    (221) Smaller -> SMALLER ABRE_P Var COMA RESTA . NUMERO CIERRA_P PUNTOCOMA

    NUMERO          shift and go to state 805


state 706

    (222) Smaller -> SMALLER ABRE_P Var COMA expresion_alge1 . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 806


state 707

    (223) Smaller -> SMALLER ABRE_P Var COMA expresion_alge2 . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 807


state 708

    (243) IfElse -> IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 . BRACKET1 funcion BRACKET2

    BRACKET1        shift and go to state 808


state 709

    (246) Until -> UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2 .

    PUNTOCOMA       reduce using rule 246 (Until -> UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2 .)
    NUMERO          reduce using rule 246 (Until -> UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2 .)
    ABRE_P          reduce using rule 246 (Until -> UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2 .)
    SUM             reduce using rule 246 (Until -> UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2 .)
    SUBSTR          reduce using rule 246 (Until -> UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2 .)
    MULTI           reduce using rule 246 (Until -> UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2 .)
    DIV             reduce using rule 246 (Until -> UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2 .)
    RANDOM          reduce using rule 246 (Until -> UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2 .)
    RUN             reduce using rule 246 (Until -> UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2 .)
    IF              reduce using rule 246 (Until -> UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2 .)
    IFELSE          reduce using rule 246 (Until -> UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2 .)
    REPEAT          reduce using rule 246 (Until -> UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2 .)
    UNTIL           reduce using rule 246 (Until -> UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2 .)
    WHILE           reduce using rule 246 (Until -> UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2 .)
    PRINTLINE       reduce using rule 246 (Until -> UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2 .)
    AND             reduce using rule 246 (Until -> UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2 .)
    OR              reduce using rule 246 (Until -> UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2 .)
    ADD             reduce using rule 246 (Until -> UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2 .)
    PUT             reduce using rule 246 (Until -> UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2 .)
    FIN             reduce using rule 246 (Until -> UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2 .)
    CIERRA_P        reduce using rule 246 (Until -> UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2 .)
    BRACKET2        reduce using rule 246 (Until -> UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2 .)


state 710

    (244) While -> WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2 .

    PUNTOCOMA       reduce using rule 244 (While -> WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2 .)
    NUMERO          reduce using rule 244 (While -> WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2 .)
    ABRE_P          reduce using rule 244 (While -> WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2 .)
    SUM             reduce using rule 244 (While -> WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2 .)
    SUBSTR          reduce using rule 244 (While -> WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2 .)
    MULTI           reduce using rule 244 (While -> WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2 .)
    DIV             reduce using rule 244 (While -> WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2 .)
    RANDOM          reduce using rule 244 (While -> WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2 .)
    RUN             reduce using rule 244 (While -> WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2 .)
    IF              reduce using rule 244 (While -> WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2 .)
    IFELSE          reduce using rule 244 (While -> WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2 .)
    REPEAT          reduce using rule 244 (While -> WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2 .)
    UNTIL           reduce using rule 244 (While -> WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2 .)
    WHILE           reduce using rule 244 (While -> WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2 .)
    PRINTLINE       reduce using rule 244 (While -> WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2 .)
    AND             reduce using rule 244 (While -> WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2 .)
    OR              reduce using rule 244 (While -> WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2 .)
    ADD             reduce using rule 244 (While -> WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2 .)
    PUT             reduce using rule 244 (While -> WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2 .)
    FIN             reduce using rule 244 (While -> WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2 .)
    CIERRA_P        reduce using rule 244 (While -> WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2 .)
    BRACKET2        reduce using rule 244 (While -> WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2 .)


state 711

    (234) And -> AND ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA .

    PUNTOCOMA       reduce using rule 234 (And -> AND ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    NUMERO          reduce using rule 234 (And -> AND ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    ABRE_P          reduce using rule 234 (And -> AND ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    SUM             reduce using rule 234 (And -> AND ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    SUBSTR          reduce using rule 234 (And -> AND ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    MULTI           reduce using rule 234 (And -> AND ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    DIV             reduce using rule 234 (And -> AND ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    RANDOM          reduce using rule 234 (And -> AND ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    RUN             reduce using rule 234 (And -> AND ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    IF              reduce using rule 234 (And -> AND ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    IFELSE          reduce using rule 234 (And -> AND ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    REPEAT          reduce using rule 234 (And -> AND ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    UNTIL           reduce using rule 234 (And -> AND ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    WHILE           reduce using rule 234 (And -> AND ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    PRINTLINE       reduce using rule 234 (And -> AND ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    AND             reduce using rule 234 (And -> AND ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    OR              reduce using rule 234 (And -> AND ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    ADD             reduce using rule 234 (And -> AND ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    PUT             reduce using rule 234 (And -> AND ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    FIN             reduce using rule 234 (And -> AND ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    CIERRA_P        reduce using rule 234 (And -> AND ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 234 (And -> AND ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)


state 712

    (235) And -> AND ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA .

    PUNTOCOMA       reduce using rule 235 (And -> AND ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    NUMERO          reduce using rule 235 (And -> AND ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    ABRE_P          reduce using rule 235 (And -> AND ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    SUM             reduce using rule 235 (And -> AND ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    SUBSTR          reduce using rule 235 (And -> AND ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    MULTI           reduce using rule 235 (And -> AND ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    DIV             reduce using rule 235 (And -> AND ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    RANDOM          reduce using rule 235 (And -> AND ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    RUN             reduce using rule 235 (And -> AND ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    IF              reduce using rule 235 (And -> AND ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    IFELSE          reduce using rule 235 (And -> AND ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    REPEAT          reduce using rule 235 (And -> AND ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    UNTIL           reduce using rule 235 (And -> AND ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    WHILE           reduce using rule 235 (And -> AND ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    PRINTLINE       reduce using rule 235 (And -> AND ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    AND             reduce using rule 235 (And -> AND ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    OR              reduce using rule 235 (And -> AND ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    ADD             reduce using rule 235 (And -> AND ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    PUT             reduce using rule 235 (And -> AND ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    FIN             reduce using rule 235 (And -> AND ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    CIERRA_P        reduce using rule 235 (And -> AND ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 235 (And -> AND ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)


state 713

    (237) And -> AND ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA .

    PUNTOCOMA       reduce using rule 237 (And -> AND ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    NUMERO          reduce using rule 237 (And -> AND ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    ABRE_P          reduce using rule 237 (And -> AND ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    SUM             reduce using rule 237 (And -> AND ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    SUBSTR          reduce using rule 237 (And -> AND ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    MULTI           reduce using rule 237 (And -> AND ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    DIV             reduce using rule 237 (And -> AND ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    RANDOM          reduce using rule 237 (And -> AND ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    RUN             reduce using rule 237 (And -> AND ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    IF              reduce using rule 237 (And -> AND ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    IFELSE          reduce using rule 237 (And -> AND ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    REPEAT          reduce using rule 237 (And -> AND ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    UNTIL           reduce using rule 237 (And -> AND ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    WHILE           reduce using rule 237 (And -> AND ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    PRINTLINE       reduce using rule 237 (And -> AND ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    AND             reduce using rule 237 (And -> AND ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    OR              reduce using rule 237 (And -> AND ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    ADD             reduce using rule 237 (And -> AND ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    PUT             reduce using rule 237 (And -> AND ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    FIN             reduce using rule 237 (And -> AND ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    CIERRA_P        reduce using rule 237 (And -> AND ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 237 (And -> AND ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)


state 714

    (236) And -> AND ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA .

    PUNTOCOMA       reduce using rule 236 (And -> AND ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    NUMERO          reduce using rule 236 (And -> AND ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    ABRE_P          reduce using rule 236 (And -> AND ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    SUM             reduce using rule 236 (And -> AND ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    SUBSTR          reduce using rule 236 (And -> AND ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    MULTI           reduce using rule 236 (And -> AND ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    DIV             reduce using rule 236 (And -> AND ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    RANDOM          reduce using rule 236 (And -> AND ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    RUN             reduce using rule 236 (And -> AND ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    IF              reduce using rule 236 (And -> AND ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    IFELSE          reduce using rule 236 (And -> AND ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    REPEAT          reduce using rule 236 (And -> AND ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    UNTIL           reduce using rule 236 (And -> AND ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    WHILE           reduce using rule 236 (And -> AND ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    PRINTLINE       reduce using rule 236 (And -> AND ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    AND             reduce using rule 236 (And -> AND ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    OR              reduce using rule 236 (And -> AND ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    ADD             reduce using rule 236 (And -> AND ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    PUT             reduce using rule 236 (And -> AND ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    FIN             reduce using rule 236 (And -> AND ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    CIERRA_P        reduce using rule 236 (And -> AND ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 236 (And -> AND ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)


state 715

    (238) Or -> OR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA .

    PUNTOCOMA       reduce using rule 238 (Or -> OR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    NUMERO          reduce using rule 238 (Or -> OR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    ABRE_P          reduce using rule 238 (Or -> OR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    SUM             reduce using rule 238 (Or -> OR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    SUBSTR          reduce using rule 238 (Or -> OR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    MULTI           reduce using rule 238 (Or -> OR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    DIV             reduce using rule 238 (Or -> OR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    RANDOM          reduce using rule 238 (Or -> OR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    RUN             reduce using rule 238 (Or -> OR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    IF              reduce using rule 238 (Or -> OR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    IFELSE          reduce using rule 238 (Or -> OR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    REPEAT          reduce using rule 238 (Or -> OR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    UNTIL           reduce using rule 238 (Or -> OR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    WHILE           reduce using rule 238 (Or -> OR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    PRINTLINE       reduce using rule 238 (Or -> OR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    AND             reduce using rule 238 (Or -> OR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    OR              reduce using rule 238 (Or -> OR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    ADD             reduce using rule 238 (Or -> OR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    PUT             reduce using rule 238 (Or -> OR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    FIN             reduce using rule 238 (Or -> OR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    CIERRA_P        reduce using rule 238 (Or -> OR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 238 (Or -> OR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)


state 716

    (239) Or -> OR ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA .

    PUNTOCOMA       reduce using rule 239 (Or -> OR ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    NUMERO          reduce using rule 239 (Or -> OR ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    ABRE_P          reduce using rule 239 (Or -> OR ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    SUM             reduce using rule 239 (Or -> OR ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    SUBSTR          reduce using rule 239 (Or -> OR ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    MULTI           reduce using rule 239 (Or -> OR ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    DIV             reduce using rule 239 (Or -> OR ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    RANDOM          reduce using rule 239 (Or -> OR ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    RUN             reduce using rule 239 (Or -> OR ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    IF              reduce using rule 239 (Or -> OR ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    IFELSE          reduce using rule 239 (Or -> OR ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    REPEAT          reduce using rule 239 (Or -> OR ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    UNTIL           reduce using rule 239 (Or -> OR ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    WHILE           reduce using rule 239 (Or -> OR ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    PRINTLINE       reduce using rule 239 (Or -> OR ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    AND             reduce using rule 239 (Or -> OR ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    OR              reduce using rule 239 (Or -> OR ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    ADD             reduce using rule 239 (Or -> OR ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    PUT             reduce using rule 239 (Or -> OR ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    FIN             reduce using rule 239 (Or -> OR ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    CIERRA_P        reduce using rule 239 (Or -> OR ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 239 (Or -> OR ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)


state 717

    (241) Or -> OR ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA .

    PUNTOCOMA       reduce using rule 241 (Or -> OR ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    NUMERO          reduce using rule 241 (Or -> OR ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    ABRE_P          reduce using rule 241 (Or -> OR ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    SUM             reduce using rule 241 (Or -> OR ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    SUBSTR          reduce using rule 241 (Or -> OR ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    MULTI           reduce using rule 241 (Or -> OR ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    DIV             reduce using rule 241 (Or -> OR ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    RANDOM          reduce using rule 241 (Or -> OR ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    RUN             reduce using rule 241 (Or -> OR ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    IF              reduce using rule 241 (Or -> OR ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    IFELSE          reduce using rule 241 (Or -> OR ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    REPEAT          reduce using rule 241 (Or -> OR ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    UNTIL           reduce using rule 241 (Or -> OR ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    WHILE           reduce using rule 241 (Or -> OR ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    PRINTLINE       reduce using rule 241 (Or -> OR ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    AND             reduce using rule 241 (Or -> OR ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    OR              reduce using rule 241 (Or -> OR ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    ADD             reduce using rule 241 (Or -> OR ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    PUT             reduce using rule 241 (Or -> OR ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    FIN             reduce using rule 241 (Or -> OR ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    CIERRA_P        reduce using rule 241 (Or -> OR ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 241 (Or -> OR ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)


state 718

    (240) Or -> OR ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA .

    PUNTOCOMA       reduce using rule 240 (Or -> OR ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    NUMERO          reduce using rule 240 (Or -> OR ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    ABRE_P          reduce using rule 240 (Or -> OR ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    SUM             reduce using rule 240 (Or -> OR ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    SUBSTR          reduce using rule 240 (Or -> OR ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    MULTI           reduce using rule 240 (Or -> OR ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    DIV             reduce using rule 240 (Or -> OR ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    RANDOM          reduce using rule 240 (Or -> OR ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    RUN             reduce using rule 240 (Or -> OR ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    IF              reduce using rule 240 (Or -> OR ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    IFELSE          reduce using rule 240 (Or -> OR ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    REPEAT          reduce using rule 240 (Or -> OR ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    UNTIL           reduce using rule 240 (Or -> OR ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    WHILE           reduce using rule 240 (Or -> OR ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    PRINTLINE       reduce using rule 240 (Or -> OR ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    AND             reduce using rule 240 (Or -> OR ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    OR              reduce using rule 240 (Or -> OR ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    ADD             reduce using rule 240 (Or -> OR ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    PUT             reduce using rule 240 (Or -> OR ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    FIN             reduce using rule 240 (Or -> OR ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    CIERRA_P        reduce using rule 240 (Or -> OR ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 240 (Or -> OR ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)


state 719

    (247) Add -> ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA .

    PUNTOCOMA       reduce using rule 247 (Add -> ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA .)
    NUMERO          reduce using rule 247 (Add -> ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA .)
    ABRE_P          reduce using rule 247 (Add -> ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA .)
    SUM             reduce using rule 247 (Add -> ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA .)
    SUBSTR          reduce using rule 247 (Add -> ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA .)
    MULTI           reduce using rule 247 (Add -> ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA .)
    DIV             reduce using rule 247 (Add -> ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA .)
    RANDOM          reduce using rule 247 (Add -> ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA .)
    RUN             reduce using rule 247 (Add -> ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA .)
    IF              reduce using rule 247 (Add -> ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA .)
    IFELSE          reduce using rule 247 (Add -> ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA .)
    REPEAT          reduce using rule 247 (Add -> ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA .)
    UNTIL           reduce using rule 247 (Add -> ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA .)
    WHILE           reduce using rule 247 (Add -> ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA .)
    PRINTLINE       reduce using rule 247 (Add -> ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA .)
    AND             reduce using rule 247 (Add -> ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA .)
    OR              reduce using rule 247 (Add -> ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA .)
    ADD             reduce using rule 247 (Add -> ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA .)
    PUT             reduce using rule 247 (Add -> ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA .)
    FIN             reduce using rule 247 (Add -> ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA .)
    CIERRA_P        reduce using rule 247 (Add -> ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 247 (Add -> ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA .)


state 720

    (251) Add -> ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA .

    PUNTOCOMA       reduce using rule 251 (Add -> ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA .)
    NUMERO          reduce using rule 251 (Add -> ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA .)
    ABRE_P          reduce using rule 251 (Add -> ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA .)
    SUM             reduce using rule 251 (Add -> ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA .)
    SUBSTR          reduce using rule 251 (Add -> ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA .)
    MULTI           reduce using rule 251 (Add -> ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA .)
    DIV             reduce using rule 251 (Add -> ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA .)
    RANDOM          reduce using rule 251 (Add -> ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA .)
    RUN             reduce using rule 251 (Add -> ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA .)
    IF              reduce using rule 251 (Add -> ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA .)
    IFELSE          reduce using rule 251 (Add -> ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA .)
    REPEAT          reduce using rule 251 (Add -> ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA .)
    UNTIL           reduce using rule 251 (Add -> ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA .)
    WHILE           reduce using rule 251 (Add -> ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA .)
    PRINTLINE       reduce using rule 251 (Add -> ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA .)
    AND             reduce using rule 251 (Add -> ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA .)
    OR              reduce using rule 251 (Add -> ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA .)
    ADD             reduce using rule 251 (Add -> ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA .)
    PUT             reduce using rule 251 (Add -> ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA .)
    FIN             reduce using rule 251 (Add -> ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA .)
    CIERRA_P        reduce using rule 251 (Add -> ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 251 (Add -> ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA .)


state 721

    (248) Add -> ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA .

    PUNTOCOMA       reduce using rule 248 (Add -> ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA .)
    NUMERO          reduce using rule 248 (Add -> ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA .)
    ABRE_P          reduce using rule 248 (Add -> ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA .)
    SUM             reduce using rule 248 (Add -> ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA .)
    SUBSTR          reduce using rule 248 (Add -> ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA .)
    MULTI           reduce using rule 248 (Add -> ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA .)
    DIV             reduce using rule 248 (Add -> ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA .)
    RANDOM          reduce using rule 248 (Add -> ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA .)
    RUN             reduce using rule 248 (Add -> ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA .)
    IF              reduce using rule 248 (Add -> ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA .)
    IFELSE          reduce using rule 248 (Add -> ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA .)
    REPEAT          reduce using rule 248 (Add -> ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA .)
    UNTIL           reduce using rule 248 (Add -> ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA .)
    WHILE           reduce using rule 248 (Add -> ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA .)
    PRINTLINE       reduce using rule 248 (Add -> ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA .)
    AND             reduce using rule 248 (Add -> ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA .)
    OR              reduce using rule 248 (Add -> ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA .)
    ADD             reduce using rule 248 (Add -> ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA .)
    PUT             reduce using rule 248 (Add -> ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA .)
    FIN             reduce using rule 248 (Add -> ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA .)
    CIERRA_P        reduce using rule 248 (Add -> ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 248 (Add -> ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA .)


state 722

    (249) Add -> ADD ABRE_P Var COMA RESTA NUMERO CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 809


state 723

    (250) Add -> ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA .

    PUNTOCOMA       reduce using rule 250 (Add -> ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    NUMERO          reduce using rule 250 (Add -> ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    ABRE_P          reduce using rule 250 (Add -> ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    SUM             reduce using rule 250 (Add -> ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    SUBSTR          reduce using rule 250 (Add -> ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    MULTI           reduce using rule 250 (Add -> ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    DIV             reduce using rule 250 (Add -> ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    RANDOM          reduce using rule 250 (Add -> ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    RUN             reduce using rule 250 (Add -> ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    IF              reduce using rule 250 (Add -> ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    IFELSE          reduce using rule 250 (Add -> ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    REPEAT          reduce using rule 250 (Add -> ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    UNTIL           reduce using rule 250 (Add -> ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    WHILE           reduce using rule 250 (Add -> ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    PRINTLINE       reduce using rule 250 (Add -> ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    AND             reduce using rule 250 (Add -> ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    OR              reduce using rule 250 (Add -> ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    ADD             reduce using rule 250 (Add -> ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    PUT             reduce using rule 250 (Add -> ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    FIN             reduce using rule 250 (Add -> ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    CIERRA_P        reduce using rule 250 (Add -> ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 250 (Add -> ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA .)


state 724

    (252) Add -> ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA .

    PUNTOCOMA       reduce using rule 252 (Add -> ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    NUMERO          reduce using rule 252 (Add -> ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    ABRE_P          reduce using rule 252 (Add -> ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    SUM             reduce using rule 252 (Add -> ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    SUBSTR          reduce using rule 252 (Add -> ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    MULTI           reduce using rule 252 (Add -> ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    DIV             reduce using rule 252 (Add -> ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    RANDOM          reduce using rule 252 (Add -> ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    RUN             reduce using rule 252 (Add -> ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    IF              reduce using rule 252 (Add -> ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    IFELSE          reduce using rule 252 (Add -> ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    REPEAT          reduce using rule 252 (Add -> ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    UNTIL           reduce using rule 252 (Add -> ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    WHILE           reduce using rule 252 (Add -> ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    PRINTLINE       reduce using rule 252 (Add -> ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    AND             reduce using rule 252 (Add -> ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    OR              reduce using rule 252 (Add -> ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    ADD             reduce using rule 252 (Add -> ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    PUT             reduce using rule 252 (Add -> ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    FIN             reduce using rule 252 (Add -> ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    CIERRA_P        reduce using rule 252 (Add -> ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 252 (Add -> ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA .)


state 725

    (25) llamadoproc -> PARA id BRACKET1 parametro BRACKET2 PUNTOCOMA .

    FIN             reduce using rule 25 (llamadoproc -> PARA id BRACKET1 parametro BRACKET2 PUNTOCOMA .)


state 726

    (277) Diag -> POS ABRE_P STRING COMA NUMERO CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 810


state 727

    (278) Pos -> POS ABRE_P NUMERO COMA NUMERO CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 811


state 728

    (280) Pos -> POS ABRE_P NUMERO COMA expresion_alge1 CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 812


state 729

    (283) Pos -> POS ABRE_P NUMERO COMA Var CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 813


state 730

    (281) Pos -> POS ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 814


state 731

    (279) Pos -> POS ABRE_P expresion_alge1 COMA NUMERO CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 815


state 732

    (285) Pos -> POS ABRE_P expresion_alge1 COMA Var CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 816


state 733

    (284) Pos -> POS ABRE_P Var COMA Var CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 817


state 734

    (282) Pos -> POS ABRE_P Var COMA NUMERO CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 818


state 735

    (286) Pos -> POS ABRE_P Var COMA expresion_alge1 CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 819


state 736

    (162) Equal -> EQUAL ABRE_P NUMERO COMA NUMERO CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 820


state 737

    (164) Equal -> EQUAL ABRE_P NUMERO COMA RESTA NUMERO . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 821


state 738

    (168) Equal -> EQUAL ABRE_P NUMERO COMA Var CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 822


state 739

    (182) Equal -> EQUAL ABRE_P NUMERO COMA expresion_alge1 CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 823


state 740

    (184) Equal -> EQUAL ABRE_P NUMERO COMA expresion_alge2 CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 824


state 741

    (163) Equal -> EQUAL ABRE_P RESTA NUMERO COMA NUMERO . CIERRA_P PUNTOCOMA
    (93) expresion_alge1 -> NUMERO . SUMA NUMERO
    (94) expresion_alge1 -> NUMERO . RESTA NUMERO
    (95) expresion_alge1 -> NUMERO . MULTI NUMERO
    (96) expresion_alge1 -> NUMERO . DIVISION NUMERO

    CIERRA_P        shift and go to state 825
    SUMA            shift and go to state 127
    RESTA           shift and go to state 128
    MULTI           shift and go to state 129
    DIVISION        shift and go to state 130


state 742

    (169) Equal -> EQUAL ABRE_P RESTA NUMERO COMA Var . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 826


state 743

    (183) Equal -> EQUAL ABRE_P RESTA NUMERO COMA expresion_alge1 . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 827


state 744

    (185) Equal -> EQUAL ABRE_P RESTA NUMERO COMA expresion_alge2 . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 828


state 745

    (165) Equal -> EQUAL ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 829


state 746

    (171) Equal -> EQUAL ABRE_P expresion_alge1 COMA Var CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 830


state 747

    (176) Equal -> EQUAL ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 831


state 748

    (178) Equal -> EQUAL ABRE_P expresion_alge1 COMA NUMERO CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 832


state 749

    (179) Equal -> EQUAL ABRE_P expresion_alge1 COMA RESTA NUMERO . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 833


state 750

    (166) Equal -> EQUAL ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 834


state 751

    (170) Equal -> EQUAL ABRE_P expresion_alge2 COMA Var CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 835


state 752

    (177) Equal -> EQUAL ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 836


state 753

    (180) Equal -> EQUAL ABRE_P expresion_alge2 COMA NUMERO CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 837


state 754

    (181) Equal -> EQUAL ABRE_P expresion_alge2 COMA RESTA NUMERO . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 838


state 755

    (167) Equal -> EQUAL ABRE_P Var COMA Var CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 839


state 756

    (172) Equal -> EQUAL ABRE_P Var COMA NUMERO CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 840


state 757

    (173) Equal -> EQUAL ABRE_P Var COMA RESTA NUMERO . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 841


state 758

    (174) Equal -> EQUAL ABRE_P Var COMA expresion_alge1 CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 842


state 759

    (175) Equal -> EQUAL ABRE_P Var COMA expresion_alge2 CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 843


state 760

    (186) Greater -> GREATER ABRE_P NUMERO COMA NUMERO CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 844


state 761

    (188) Greater -> GREATER ABRE_P NUMERO COMA RESTA NUMERO . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 845


state 762

    (192) Greater -> GREATER ABRE_P NUMERO COMA Var CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 846


state 763

    (206) Greater -> GREATER ABRE_P NUMERO COMA expresion_alge1 CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 847


state 764

    (208) Greater -> GREATER ABRE_P NUMERO COMA expresion_alge2 CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 848


state 765

    (187) Greater -> GREATER ABRE_P RESTA NUMERO COMA NUMERO . CIERRA_P PUNTOCOMA
    (93) expresion_alge1 -> NUMERO . SUMA NUMERO
    (94) expresion_alge1 -> NUMERO . RESTA NUMERO
    (95) expresion_alge1 -> NUMERO . MULTI NUMERO
    (96) expresion_alge1 -> NUMERO . DIVISION NUMERO

    CIERRA_P        shift and go to state 849
    SUMA            shift and go to state 127
    RESTA           shift and go to state 128
    MULTI           shift and go to state 129
    DIVISION        shift and go to state 130


state 766

    (193) Greater -> GREATER ABRE_P RESTA NUMERO COMA Var . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 850


state 767

    (207) Greater -> GREATER ABRE_P RESTA NUMERO COMA expresion_alge1 . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 851


state 768

    (209) Greater -> GREATER ABRE_P RESTA NUMERO COMA expresion_alge2 . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 852


state 769

    (189) Greater -> GREATER ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 853


state 770

    (195) Greater -> GREATER ABRE_P expresion_alge1 COMA Var CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 854


state 771

    (200) Greater -> GREATER ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 855


state 772

    (202) Greater -> GREATER ABRE_P expresion_alge1 COMA NUMERO CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 856


state 773

    (203) Greater -> GREATER ABRE_P expresion_alge1 COMA RESTA NUMERO . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 857


state 774

    (190) Greater -> GREATER ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 858


state 775

    (194) Greater -> GREATER ABRE_P expresion_alge2 COMA Var CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 859


state 776

    (201) Greater -> GREATER ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 860


state 777

    (204) Greater -> GREATER ABRE_P expresion_alge2 COMA NUMERO CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 861


state 778

    (205) Greater -> GREATER ABRE_P expresion_alge2 COMA RESTA NUMERO . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 862


state 779

    (191) Greater -> GREATER ABRE_P Var COMA Var CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 863


state 780

    (196) Greater -> GREATER ABRE_P Var COMA NUMERO CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 864


state 781

    (197) Greater -> GREATER ABRE_P Var COMA RESTA NUMERO . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 865


state 782

    (198) Greater -> GREATER ABRE_P Var COMA expresion_alge1 CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 866


state 783

    (199) Greater -> GREATER ABRE_P Var COMA expresion_alge2 CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 867


state 784

    (210) Smaller -> SMALLER ABRE_P NUMERO COMA NUMERO CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 868


state 785

    (212) Smaller -> SMALLER ABRE_P NUMERO COMA RESTA NUMERO . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 869


state 786

    (216) Smaller -> SMALLER ABRE_P NUMERO COMA Var CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 870


state 787

    (230) Smaller -> SMALLER ABRE_P NUMERO COMA expresion_alge1 CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 871


state 788

    (232) Smaller -> SMALLER ABRE_P NUMERO COMA expresion_alge2 CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 872


state 789

    (211) Smaller -> SMALLER ABRE_P RESTA NUMERO COMA NUMERO . CIERRA_P PUNTOCOMA
    (93) expresion_alge1 -> NUMERO . SUMA NUMERO
    (94) expresion_alge1 -> NUMERO . RESTA NUMERO
    (95) expresion_alge1 -> NUMERO . MULTI NUMERO
    (96) expresion_alge1 -> NUMERO . DIVISION NUMERO

    CIERRA_P        shift and go to state 873
    SUMA            shift and go to state 127
    RESTA           shift and go to state 128
    MULTI           shift and go to state 129
    DIVISION        shift and go to state 130


state 790

    (217) Smaller -> SMALLER ABRE_P RESTA NUMERO COMA Var . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 874


state 791

    (231) Smaller -> SMALLER ABRE_P RESTA NUMERO COMA expresion_alge1 . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 875


state 792

    (233) Smaller -> SMALLER ABRE_P RESTA NUMERO COMA expresion_alge2 . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 876


state 793

    (213) Smaller -> SMALLER ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 877


state 794

    (219) Smaller -> SMALLER ABRE_P expresion_alge1 COMA Var CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 878


state 795

    (224) Smaller -> SMALLER ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 879


state 796

    (226) Smaller -> SMALLER ABRE_P expresion_alge1 COMA NUMERO CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 880


state 797

    (227) Smaller -> SMALLER ABRE_P expresion_alge1 COMA RESTA NUMERO . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 881


state 798

    (214) Smaller -> SMALLER ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 882


state 799

    (218) Smaller -> SMALLER ABRE_P expresion_alge2 COMA Var CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 883


state 800

    (225) Smaller -> SMALLER ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 884


state 801

    (228) Smaller -> SMALLER ABRE_P expresion_alge2 COMA NUMERO CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 885


state 802

    (229) Smaller -> SMALLER ABRE_P expresion_alge2 COMA RESTA NUMERO . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 886


state 803

    (215) Smaller -> SMALLER ABRE_P Var COMA Var CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 887


state 804

    (220) Smaller -> SMALLER ABRE_P Var COMA NUMERO CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 888


state 805

    (221) Smaller -> SMALLER ABRE_P Var COMA RESTA NUMERO . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 889


state 806

    (222) Smaller -> SMALLER ABRE_P Var COMA expresion_alge1 CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 890


state 807

    (223) Smaller -> SMALLER ABRE_P Var COMA expresion_alge2 CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 891


state 808

    (243) IfElse -> IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 . funcion BRACKET2
    (69) funcion -> . Random empty
    (70) funcion -> . Run empty
    (71) funcion -> . If empty
    (72) funcion -> . IfElse empty
    (73) funcion -> . Repeat empty
    (74) funcion -> . Until empty
    (75) funcion -> . While empty
    (76) funcion -> . PrintLine empty
    (77) funcion -> . And empty
    (78) funcion -> . Or empty
    (79) funcion -> . Add empty
    (80) funcion -> . Put2 empty
    (81) funcion -> . Put empty
    (82) funcion -> . PUNTOCOMA funcion
    (83) funcion -> . empty empty
    (257) Random -> . RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA
    (300) Run -> . RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA
    (242) If -> . IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2
    (243) IfElse -> . IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2
    (245) Repeat -> . REPEAT NUMERO BRACKET1 ordenes BRACKET2
    (246) Until -> . UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2
    (244) While -> . WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2
    (309) PrintLine -> . PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA
    (234) And -> . AND ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (235) And -> . AND ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (236) And -> . AND ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (237) And -> . AND ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (238) Or -> . OR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (239) Or -> . OR ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (240) Or -> . OR ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (241) Or -> . OR ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (247) Add -> . ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA
    (248) Add -> . ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (249) Add -> . ADD ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (250) Add -> . ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (251) Add -> . ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (252) Add -> . ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (85) Put2 -> . PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (86) Put2 -> . PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (87) Put2 -> . PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (88) Put2 -> . PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (89) Put2 -> . PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA
    (84) Put -> . PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA
    (310) empty -> .

    PUNTOCOMA       shift and go to state 62
    RANDOM          shift and go to state 69
    RUN             shift and go to state 70
    IF              shift and go to state 71
    IFELSE          shift and go to state 72
    REPEAT          shift and go to state 73
    UNTIL           shift and go to state 74
    WHILE           shift and go to state 75
    PRINTLINE       shift and go to state 76
    AND             shift and go to state 77
    OR              shift and go to state 78
    ADD             shift and go to state 79
    PUT             shift and go to state 95
    BRACKET2        reduce using rule 310 (empty -> .)

    funcion                        shift and go to state 892
    Random                         shift and go to state 51
    empty                          shift and go to state 125
    Run                            shift and go to state 52
    If                             shift and go to state 53
    IfElse                         shift and go to state 54
    Repeat                         shift and go to state 55
    Until                          shift and go to state 56
    While                          shift and go to state 57
    PrintLine                      shift and go to state 58
    And                            shift and go to state 59
    Or                             shift and go to state 60
    Add                            shift and go to state 61
    Put2                           shift and go to state 93
    Put                            shift and go to state 94

state 809

    (249) Add -> ADD ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA .

    PUNTOCOMA       reduce using rule 249 (Add -> ADD ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)
    NUMERO          reduce using rule 249 (Add -> ADD ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)
    ABRE_P          reduce using rule 249 (Add -> ADD ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)
    SUM             reduce using rule 249 (Add -> ADD ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)
    SUBSTR          reduce using rule 249 (Add -> ADD ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)
    MULTI           reduce using rule 249 (Add -> ADD ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)
    DIV             reduce using rule 249 (Add -> ADD ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)
    RANDOM          reduce using rule 249 (Add -> ADD ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)
    RUN             reduce using rule 249 (Add -> ADD ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)
    IF              reduce using rule 249 (Add -> ADD ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)
    IFELSE          reduce using rule 249 (Add -> ADD ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)
    REPEAT          reduce using rule 249 (Add -> ADD ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)
    UNTIL           reduce using rule 249 (Add -> ADD ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)
    WHILE           reduce using rule 249 (Add -> ADD ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)
    PRINTLINE       reduce using rule 249 (Add -> ADD ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)
    AND             reduce using rule 249 (Add -> ADD ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)
    OR              reduce using rule 249 (Add -> ADD ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)
    ADD             reduce using rule 249 (Add -> ADD ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)
    PUT             reduce using rule 249 (Add -> ADD ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)
    FIN             reduce using rule 249 (Add -> ADD ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)
    CIERRA_P        reduce using rule 249 (Add -> ADD ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 249 (Add -> ADD ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)


state 810

    (277) Diag -> POS ABRE_P STRING COMA NUMERO CIERRA_P PUNTOCOMA .

    BRACKET2        reduce using rule 277 (Diag -> POS ABRE_P STRING COMA NUMERO CIERRA_P PUNTOCOMA .)


state 811

    (278) Pos -> POS ABRE_P NUMERO COMA NUMERO CIERRA_P PUNTOCOMA .

    BRACKET2        reduce using rule 278 (Pos -> POS ABRE_P NUMERO COMA NUMERO CIERRA_P PUNTOCOMA .)


state 812

    (280) Pos -> POS ABRE_P NUMERO COMA expresion_alge1 CIERRA_P PUNTOCOMA .

    BRACKET2        reduce using rule 280 (Pos -> POS ABRE_P NUMERO COMA expresion_alge1 CIERRA_P PUNTOCOMA .)


state 813

    (283) Pos -> POS ABRE_P NUMERO COMA Var CIERRA_P PUNTOCOMA .

    BRACKET2        reduce using rule 283 (Pos -> POS ABRE_P NUMERO COMA Var CIERRA_P PUNTOCOMA .)


state 814

    (281) Pos -> POS ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA .

    BRACKET2        reduce using rule 281 (Pos -> POS ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)


state 815

    (279) Pos -> POS ABRE_P expresion_alge1 COMA NUMERO CIERRA_P PUNTOCOMA .

    BRACKET2        reduce using rule 279 (Pos -> POS ABRE_P expresion_alge1 COMA NUMERO CIERRA_P PUNTOCOMA .)


state 816

    (285) Pos -> POS ABRE_P expresion_alge1 COMA Var CIERRA_P PUNTOCOMA .

    BRACKET2        reduce using rule 285 (Pos -> POS ABRE_P expresion_alge1 COMA Var CIERRA_P PUNTOCOMA .)


state 817

    (284) Pos -> POS ABRE_P Var COMA Var CIERRA_P PUNTOCOMA .

    BRACKET2        reduce using rule 284 (Pos -> POS ABRE_P Var COMA Var CIERRA_P PUNTOCOMA .)


state 818

    (282) Pos -> POS ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA .

    BRACKET2        reduce using rule 282 (Pos -> POS ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA .)


state 819

    (286) Pos -> POS ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA .

    BRACKET2        reduce using rule 286 (Pos -> POS ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA .)


state 820

    (162) Equal -> EQUAL ABRE_P NUMERO COMA NUMERO CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 162 (Equal -> EQUAL ABRE_P NUMERO COMA NUMERO CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 162 (Equal -> EQUAL ABRE_P NUMERO COMA NUMERO CIERRA_P PUNTOCOMA .)


state 821

    (164) Equal -> EQUAL ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 893


state 822

    (168) Equal -> EQUAL ABRE_P NUMERO COMA Var CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 168 (Equal -> EQUAL ABRE_P NUMERO COMA Var CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 168 (Equal -> EQUAL ABRE_P NUMERO COMA Var CIERRA_P PUNTOCOMA .)


state 823

    (182) Equal -> EQUAL ABRE_P NUMERO COMA expresion_alge1 CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 182 (Equal -> EQUAL ABRE_P NUMERO COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 182 (Equal -> EQUAL ABRE_P NUMERO COMA expresion_alge1 CIERRA_P PUNTOCOMA .)


state 824

    (184) Equal -> EQUAL ABRE_P NUMERO COMA expresion_alge2 CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 184 (Equal -> EQUAL ABRE_P NUMERO COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 184 (Equal -> EQUAL ABRE_P NUMERO COMA expresion_alge2 CIERRA_P PUNTOCOMA .)


state 825

    (163) Equal -> EQUAL ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 894


state 826

    (169) Equal -> EQUAL ABRE_P RESTA NUMERO COMA Var CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 895


state 827

    (183) Equal -> EQUAL ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 896


state 828

    (185) Equal -> EQUAL ABRE_P RESTA NUMERO COMA expresion_alge2 CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 897


state 829

    (165) Equal -> EQUAL ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 165 (Equal -> EQUAL ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 165 (Equal -> EQUAL ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)


state 830

    (171) Equal -> EQUAL ABRE_P expresion_alge1 COMA Var CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 171 (Equal -> EQUAL ABRE_P expresion_alge1 COMA Var CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 171 (Equal -> EQUAL ABRE_P expresion_alge1 COMA Var CIERRA_P PUNTOCOMA .)


state 831

    (176) Equal -> EQUAL ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 176 (Equal -> EQUAL ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 176 (Equal -> EQUAL ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)


state 832

    (178) Equal -> EQUAL ABRE_P expresion_alge1 COMA NUMERO CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 178 (Equal -> EQUAL ABRE_P expresion_alge1 COMA NUMERO CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 178 (Equal -> EQUAL ABRE_P expresion_alge1 COMA NUMERO CIERRA_P PUNTOCOMA .)


state 833

    (179) Equal -> EQUAL ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 898


state 834

    (166) Equal -> EQUAL ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 166 (Equal -> EQUAL ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 166 (Equal -> EQUAL ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)


state 835

    (170) Equal -> EQUAL ABRE_P expresion_alge2 COMA Var CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 170 (Equal -> EQUAL ABRE_P expresion_alge2 COMA Var CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 170 (Equal -> EQUAL ABRE_P expresion_alge2 COMA Var CIERRA_P PUNTOCOMA .)


state 836

    (177) Equal -> EQUAL ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 177 (Equal -> EQUAL ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 177 (Equal -> EQUAL ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)


state 837

    (180) Equal -> EQUAL ABRE_P expresion_alge2 COMA NUMERO CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 180 (Equal -> EQUAL ABRE_P expresion_alge2 COMA NUMERO CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 180 (Equal -> EQUAL ABRE_P expresion_alge2 COMA NUMERO CIERRA_P PUNTOCOMA .)


state 838

    (181) Equal -> EQUAL ABRE_P expresion_alge2 COMA RESTA NUMERO CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 899


state 839

    (167) Equal -> EQUAL ABRE_P Var COMA Var CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 167 (Equal -> EQUAL ABRE_P Var COMA Var CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 167 (Equal -> EQUAL ABRE_P Var COMA Var CIERRA_P PUNTOCOMA .)


state 840

    (172) Equal -> EQUAL ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 172 (Equal -> EQUAL ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 172 (Equal -> EQUAL ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA .)


state 841

    (173) Equal -> EQUAL ABRE_P Var COMA RESTA NUMERO CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 900


state 842

    (174) Equal -> EQUAL ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 174 (Equal -> EQUAL ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 174 (Equal -> EQUAL ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA .)


state 843

    (175) Equal -> EQUAL ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 175 (Equal -> EQUAL ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 175 (Equal -> EQUAL ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA .)


state 844

    (186) Greater -> GREATER ABRE_P NUMERO COMA NUMERO CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 186 (Greater -> GREATER ABRE_P NUMERO COMA NUMERO CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 186 (Greater -> GREATER ABRE_P NUMERO COMA NUMERO CIERRA_P PUNTOCOMA .)


state 845

    (188) Greater -> GREATER ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 901


state 846

    (192) Greater -> GREATER ABRE_P NUMERO COMA Var CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 192 (Greater -> GREATER ABRE_P NUMERO COMA Var CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 192 (Greater -> GREATER ABRE_P NUMERO COMA Var CIERRA_P PUNTOCOMA .)


state 847

    (206) Greater -> GREATER ABRE_P NUMERO COMA expresion_alge1 CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 206 (Greater -> GREATER ABRE_P NUMERO COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 206 (Greater -> GREATER ABRE_P NUMERO COMA expresion_alge1 CIERRA_P PUNTOCOMA .)


state 848

    (208) Greater -> GREATER ABRE_P NUMERO COMA expresion_alge2 CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 208 (Greater -> GREATER ABRE_P NUMERO COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 208 (Greater -> GREATER ABRE_P NUMERO COMA expresion_alge2 CIERRA_P PUNTOCOMA .)


state 849

    (187) Greater -> GREATER ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 902


state 850

    (193) Greater -> GREATER ABRE_P RESTA NUMERO COMA Var CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 903


state 851

    (207) Greater -> GREATER ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 904


state 852

    (209) Greater -> GREATER ABRE_P RESTA NUMERO COMA expresion_alge2 CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 905


state 853

    (189) Greater -> GREATER ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 189 (Greater -> GREATER ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 189 (Greater -> GREATER ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)


state 854

    (195) Greater -> GREATER ABRE_P expresion_alge1 COMA Var CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 195 (Greater -> GREATER ABRE_P expresion_alge1 COMA Var CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 195 (Greater -> GREATER ABRE_P expresion_alge1 COMA Var CIERRA_P PUNTOCOMA .)


state 855

    (200) Greater -> GREATER ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 200 (Greater -> GREATER ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 200 (Greater -> GREATER ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)


state 856

    (202) Greater -> GREATER ABRE_P expresion_alge1 COMA NUMERO CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 202 (Greater -> GREATER ABRE_P expresion_alge1 COMA NUMERO CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 202 (Greater -> GREATER ABRE_P expresion_alge1 COMA NUMERO CIERRA_P PUNTOCOMA .)


state 857

    (203) Greater -> GREATER ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 906


state 858

    (190) Greater -> GREATER ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 190 (Greater -> GREATER ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 190 (Greater -> GREATER ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)


state 859

    (194) Greater -> GREATER ABRE_P expresion_alge2 COMA Var CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 194 (Greater -> GREATER ABRE_P expresion_alge2 COMA Var CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 194 (Greater -> GREATER ABRE_P expresion_alge2 COMA Var CIERRA_P PUNTOCOMA .)


state 860

    (201) Greater -> GREATER ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 201 (Greater -> GREATER ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 201 (Greater -> GREATER ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)


state 861

    (204) Greater -> GREATER ABRE_P expresion_alge2 COMA NUMERO CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 204 (Greater -> GREATER ABRE_P expresion_alge2 COMA NUMERO CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 204 (Greater -> GREATER ABRE_P expresion_alge2 COMA NUMERO CIERRA_P PUNTOCOMA .)


state 862

    (205) Greater -> GREATER ABRE_P expresion_alge2 COMA RESTA NUMERO CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 907


state 863

    (191) Greater -> GREATER ABRE_P Var COMA Var CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 191 (Greater -> GREATER ABRE_P Var COMA Var CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 191 (Greater -> GREATER ABRE_P Var COMA Var CIERRA_P PUNTOCOMA .)


state 864

    (196) Greater -> GREATER ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 196 (Greater -> GREATER ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 196 (Greater -> GREATER ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA .)


state 865

    (197) Greater -> GREATER ABRE_P Var COMA RESTA NUMERO CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 908


state 866

    (198) Greater -> GREATER ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 198 (Greater -> GREATER ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 198 (Greater -> GREATER ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA .)


state 867

    (199) Greater -> GREATER ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 199 (Greater -> GREATER ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 199 (Greater -> GREATER ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA .)


state 868

    (210) Smaller -> SMALLER ABRE_P NUMERO COMA NUMERO CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 210 (Smaller -> SMALLER ABRE_P NUMERO COMA NUMERO CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 210 (Smaller -> SMALLER ABRE_P NUMERO COMA NUMERO CIERRA_P PUNTOCOMA .)


state 869

    (212) Smaller -> SMALLER ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 909


state 870

    (216) Smaller -> SMALLER ABRE_P NUMERO COMA Var CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 216 (Smaller -> SMALLER ABRE_P NUMERO COMA Var CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 216 (Smaller -> SMALLER ABRE_P NUMERO COMA Var CIERRA_P PUNTOCOMA .)


state 871

    (230) Smaller -> SMALLER ABRE_P NUMERO COMA expresion_alge1 CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 230 (Smaller -> SMALLER ABRE_P NUMERO COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 230 (Smaller -> SMALLER ABRE_P NUMERO COMA expresion_alge1 CIERRA_P PUNTOCOMA .)


state 872

    (232) Smaller -> SMALLER ABRE_P NUMERO COMA expresion_alge2 CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 232 (Smaller -> SMALLER ABRE_P NUMERO COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 232 (Smaller -> SMALLER ABRE_P NUMERO COMA expresion_alge2 CIERRA_P PUNTOCOMA .)


state 873

    (211) Smaller -> SMALLER ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 910


state 874

    (217) Smaller -> SMALLER ABRE_P RESTA NUMERO COMA Var CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 911


state 875

    (231) Smaller -> SMALLER ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 912


state 876

    (233) Smaller -> SMALLER ABRE_P RESTA NUMERO COMA expresion_alge2 CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 913


state 877

    (213) Smaller -> SMALLER ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 213 (Smaller -> SMALLER ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 213 (Smaller -> SMALLER ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)


state 878

    (219) Smaller -> SMALLER ABRE_P expresion_alge1 COMA Var CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 219 (Smaller -> SMALLER ABRE_P expresion_alge1 COMA Var CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 219 (Smaller -> SMALLER ABRE_P expresion_alge1 COMA Var CIERRA_P PUNTOCOMA .)


state 879

    (224) Smaller -> SMALLER ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 224 (Smaller -> SMALLER ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 224 (Smaller -> SMALLER ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)


state 880

    (226) Smaller -> SMALLER ABRE_P expresion_alge1 COMA NUMERO CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 226 (Smaller -> SMALLER ABRE_P expresion_alge1 COMA NUMERO CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 226 (Smaller -> SMALLER ABRE_P expresion_alge1 COMA NUMERO CIERRA_P PUNTOCOMA .)


state 881

    (227) Smaller -> SMALLER ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 914


state 882

    (214) Smaller -> SMALLER ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 214 (Smaller -> SMALLER ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 214 (Smaller -> SMALLER ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P PUNTOCOMA .)


state 883

    (218) Smaller -> SMALLER ABRE_P expresion_alge2 COMA Var CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 218 (Smaller -> SMALLER ABRE_P expresion_alge2 COMA Var CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 218 (Smaller -> SMALLER ABRE_P expresion_alge2 COMA Var CIERRA_P PUNTOCOMA .)


state 884

    (225) Smaller -> SMALLER ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 225 (Smaller -> SMALLER ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 225 (Smaller -> SMALLER ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P PUNTOCOMA .)


state 885

    (228) Smaller -> SMALLER ABRE_P expresion_alge2 COMA NUMERO CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 228 (Smaller -> SMALLER ABRE_P expresion_alge2 COMA NUMERO CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 228 (Smaller -> SMALLER ABRE_P expresion_alge2 COMA NUMERO CIERRA_P PUNTOCOMA .)


state 886

    (229) Smaller -> SMALLER ABRE_P expresion_alge2 COMA RESTA NUMERO CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 915


state 887

    (215) Smaller -> SMALLER ABRE_P Var COMA Var CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 215 (Smaller -> SMALLER ABRE_P Var COMA Var CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 215 (Smaller -> SMALLER ABRE_P Var COMA Var CIERRA_P PUNTOCOMA .)


state 888

    (220) Smaller -> SMALLER ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 220 (Smaller -> SMALLER ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 220 (Smaller -> SMALLER ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA .)


state 889

    (221) Smaller -> SMALLER ABRE_P Var COMA RESTA NUMERO CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 916


state 890

    (222) Smaller -> SMALLER ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 222 (Smaller -> SMALLER ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 222 (Smaller -> SMALLER ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA .)


state 891

    (223) Smaller -> SMALLER ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 223 (Smaller -> SMALLER ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 223 (Smaller -> SMALLER ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA .)


state 892

    (243) IfElse -> IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion . BRACKET2

    BRACKET2        shift and go to state 917


state 893

    (164) Equal -> EQUAL ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 164 (Equal -> EQUAL ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 164 (Equal -> EQUAL ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)


state 894

    (163) Equal -> EQUAL ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 163 (Equal -> EQUAL ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 163 (Equal -> EQUAL ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P PUNTOCOMA .)


state 895

    (169) Equal -> EQUAL ABRE_P RESTA NUMERO COMA Var CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 169 (Equal -> EQUAL ABRE_P RESTA NUMERO COMA Var CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 169 (Equal -> EQUAL ABRE_P RESTA NUMERO COMA Var CIERRA_P PUNTOCOMA .)


state 896

    (183) Equal -> EQUAL ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 183 (Equal -> EQUAL ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 183 (Equal -> EQUAL ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P PUNTOCOMA .)


state 897

    (185) Equal -> EQUAL ABRE_P RESTA NUMERO COMA expresion_alge2 CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 185 (Equal -> EQUAL ABRE_P RESTA NUMERO COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 185 (Equal -> EQUAL ABRE_P RESTA NUMERO COMA expresion_alge2 CIERRA_P PUNTOCOMA .)


state 898

    (179) Equal -> EQUAL ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 179 (Equal -> EQUAL ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 179 (Equal -> EQUAL ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)


state 899

    (181) Equal -> EQUAL ABRE_P expresion_alge2 COMA RESTA NUMERO CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 181 (Equal -> EQUAL ABRE_P expresion_alge2 COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 181 (Equal -> EQUAL ABRE_P expresion_alge2 COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)


state 900

    (173) Equal -> EQUAL ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 173 (Equal -> EQUAL ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 173 (Equal -> EQUAL ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)


state 901

    (188) Greater -> GREATER ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 188 (Greater -> GREATER ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 188 (Greater -> GREATER ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)


state 902

    (187) Greater -> GREATER ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 187 (Greater -> GREATER ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 187 (Greater -> GREATER ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P PUNTOCOMA .)


state 903

    (193) Greater -> GREATER ABRE_P RESTA NUMERO COMA Var CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 193 (Greater -> GREATER ABRE_P RESTA NUMERO COMA Var CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 193 (Greater -> GREATER ABRE_P RESTA NUMERO COMA Var CIERRA_P PUNTOCOMA .)


state 904

    (207) Greater -> GREATER ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 207 (Greater -> GREATER ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 207 (Greater -> GREATER ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P PUNTOCOMA .)


state 905

    (209) Greater -> GREATER ABRE_P RESTA NUMERO COMA expresion_alge2 CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 209 (Greater -> GREATER ABRE_P RESTA NUMERO COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 209 (Greater -> GREATER ABRE_P RESTA NUMERO COMA expresion_alge2 CIERRA_P PUNTOCOMA .)


state 906

    (203) Greater -> GREATER ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 203 (Greater -> GREATER ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 203 (Greater -> GREATER ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)


state 907

    (205) Greater -> GREATER ABRE_P expresion_alge2 COMA RESTA NUMERO CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 205 (Greater -> GREATER ABRE_P expresion_alge2 COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 205 (Greater -> GREATER ABRE_P expresion_alge2 COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)


state 908

    (197) Greater -> GREATER ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 197 (Greater -> GREATER ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 197 (Greater -> GREATER ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)


state 909

    (212) Smaller -> SMALLER ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 212 (Smaller -> SMALLER ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 212 (Smaller -> SMALLER ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)


state 910

    (211) Smaller -> SMALLER ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 211 (Smaller -> SMALLER ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 211 (Smaller -> SMALLER ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P PUNTOCOMA .)


state 911

    (217) Smaller -> SMALLER ABRE_P RESTA NUMERO COMA Var CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 217 (Smaller -> SMALLER ABRE_P RESTA NUMERO COMA Var CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 217 (Smaller -> SMALLER ABRE_P RESTA NUMERO COMA Var CIERRA_P PUNTOCOMA .)


state 912

    (231) Smaller -> SMALLER ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 231 (Smaller -> SMALLER ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 231 (Smaller -> SMALLER ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P PUNTOCOMA .)


state 913

    (233) Smaller -> SMALLER ABRE_P RESTA NUMERO COMA expresion_alge2 CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 233 (Smaller -> SMALLER ABRE_P RESTA NUMERO COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 233 (Smaller -> SMALLER ABRE_P RESTA NUMERO COMA expresion_alge2 CIERRA_P PUNTOCOMA .)


state 914

    (227) Smaller -> SMALLER ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 227 (Smaller -> SMALLER ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 227 (Smaller -> SMALLER ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)


state 915

    (229) Smaller -> SMALLER ABRE_P expresion_alge2 COMA RESTA NUMERO CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 229 (Smaller -> SMALLER ABRE_P expresion_alge2 COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 229 (Smaller -> SMALLER ABRE_P expresion_alge2 COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)


state 916

    (221) Smaller -> SMALLER ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA .

    CIERRA_P        reduce using rule 221 (Smaller -> SMALLER ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 221 (Smaller -> SMALLER ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)


state 917

    (243) IfElse -> IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2 .

    PUNTOCOMA       reduce using rule 243 (IfElse -> IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2 .)
    NUMERO          reduce using rule 243 (IfElse -> IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2 .)
    ABRE_P          reduce using rule 243 (IfElse -> IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2 .)
    SUM             reduce using rule 243 (IfElse -> IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2 .)
    SUBSTR          reduce using rule 243 (IfElse -> IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2 .)
    MULTI           reduce using rule 243 (IfElse -> IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2 .)
    DIV             reduce using rule 243 (IfElse -> IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2 .)
    RANDOM          reduce using rule 243 (IfElse -> IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2 .)
    RUN             reduce using rule 243 (IfElse -> IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2 .)
    IF              reduce using rule 243 (IfElse -> IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2 .)
    IFELSE          reduce using rule 243 (IfElse -> IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2 .)
    REPEAT          reduce using rule 243 (IfElse -> IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2 .)
    UNTIL           reduce using rule 243 (IfElse -> IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2 .)
    WHILE           reduce using rule 243 (IfElse -> IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2 .)
    PRINTLINE       reduce using rule 243 (IfElse -> IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2 .)
    AND             reduce using rule 243 (IfElse -> IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2 .)
    OR              reduce using rule 243 (IfElse -> IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2 .)
    ADD             reduce using rule 243 (IfElse -> IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2 .)
    PUT             reduce using rule 243 (IfElse -> IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2 .)
    FIN             reduce using rule 243 (IfElse -> IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2 .)
    CIERRA_P        reduce using rule 243 (IfElse -> IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2 .)
    BRACKET2        reduce using rule 243 (IfElse -> IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2 .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PUNTOCOMA in state 27 resolved as shift
WARNING: shift/reduce conflict for PUT in state 27 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 27 resolved as shift
WARNING: shift/reduce conflict for ABRE_P in state 27 resolved as shift
WARNING: shift/reduce conflict for SUM in state 27 resolved as shift
WARNING: shift/reduce conflict for SUBSTR in state 27 resolved as shift
WARNING: shift/reduce conflict for MULTI in state 27 resolved as shift
WARNING: shift/reduce conflict for DIV in state 27 resolved as shift
WARNING: shift/reduce conflict for RANDOM in state 27 resolved as shift
WARNING: shift/reduce conflict for RUN in state 27 resolved as shift
WARNING: shift/reduce conflict for IF in state 27 resolved as shift
WARNING: shift/reduce conflict for IFELSE in state 27 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 27 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 27 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 27 resolved as shift
WARNING: shift/reduce conflict for PRINTLINE in state 27 resolved as shift
WARNING: shift/reduce conflict for AND in state 27 resolved as shift
WARNING: shift/reduce conflict for OR in state 27 resolved as shift
WARNING: shift/reduce conflict for ADD in state 27 resolved as shift
WARNING: shift/reduce conflict for BRACKET2 in state 31 resolved as shift
WARNING: shift/reduce conflict for PUNTOCOMA in state 37 resolved as shift
WARNING: shift/reduce conflict for PUT in state 37 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 37 resolved as shift
WARNING: shift/reduce conflict for ABRE_P in state 37 resolved as shift
WARNING: shift/reduce conflict for SUM in state 37 resolved as shift
WARNING: shift/reduce conflict for SUBSTR in state 37 resolved as shift
WARNING: shift/reduce conflict for MULTI in state 37 resolved as shift
WARNING: shift/reduce conflict for DIV in state 37 resolved as shift
WARNING: shift/reduce conflict for RANDOM in state 37 resolved as shift
WARNING: shift/reduce conflict for RUN in state 37 resolved as shift
WARNING: shift/reduce conflict for IF in state 37 resolved as shift
WARNING: shift/reduce conflict for IFELSE in state 37 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 37 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 37 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 37 resolved as shift
WARNING: shift/reduce conflict for PRINTLINE in state 37 resolved as shift
WARNING: shift/reduce conflict for AND in state 37 resolved as shift
WARNING: shift/reduce conflict for OR in state 37 resolved as shift
WARNING: shift/reduce conflict for ADD in state 37 resolved as shift
WARNING: shift/reduce conflict for PUNTOCOMA in state 39 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 39 resolved as shift
WARNING: shift/reduce conflict for ABRE_P in state 39 resolved as shift
WARNING: shift/reduce conflict for SUM in state 39 resolved as shift
WARNING: shift/reduce conflict for SUBSTR in state 39 resolved as shift
WARNING: shift/reduce conflict for MULTI in state 39 resolved as shift
WARNING: shift/reduce conflict for DIV in state 39 resolved as shift
WARNING: shift/reduce conflict for RANDOM in state 39 resolved as shift
WARNING: shift/reduce conflict for RUN in state 39 resolved as shift
WARNING: shift/reduce conflict for IF in state 39 resolved as shift
WARNING: shift/reduce conflict for IFELSE in state 39 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 39 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 39 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 39 resolved as shift
WARNING: shift/reduce conflict for PRINTLINE in state 39 resolved as shift
WARNING: shift/reduce conflict for AND in state 39 resolved as shift
WARNING: shift/reduce conflict for OR in state 39 resolved as shift
WARNING: shift/reduce conflict for ADD in state 39 resolved as shift
WARNING: shift/reduce conflict for PUT in state 39 resolved as shift
WARNING: shift/reduce conflict for PUNTOCOMA in state 43 resolved as shift
WARNING: shift/reduce conflict for PUT in state 43 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 43 resolved as shift
WARNING: shift/reduce conflict for ABRE_P in state 43 resolved as shift
WARNING: shift/reduce conflict for SUM in state 43 resolved as shift
WARNING: shift/reduce conflict for SUBSTR in state 43 resolved as shift
WARNING: shift/reduce conflict for MULTI in state 43 resolved as shift
WARNING: shift/reduce conflict for DIV in state 43 resolved as shift
WARNING: shift/reduce conflict for RANDOM in state 43 resolved as shift
WARNING: shift/reduce conflict for RUN in state 43 resolved as shift
WARNING: shift/reduce conflict for IF in state 43 resolved as shift
WARNING: shift/reduce conflict for IFELSE in state 43 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 43 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 43 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 43 resolved as shift
WARNING: shift/reduce conflict for PRINTLINE in state 43 resolved as shift
WARNING: shift/reduce conflict for AND in state 43 resolved as shift
WARNING: shift/reduce conflict for OR in state 43 resolved as shift
WARNING: shift/reduce conflict for ADD in state 43 resolved as shift
WARNING: shift/reduce conflict for PUNTOCOMA in state 44 resolved as shift
WARNING: shift/reduce conflict for PUT in state 44 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 44 resolved as shift
WARNING: shift/reduce conflict for ABRE_P in state 44 resolved as shift
WARNING: shift/reduce conflict for SUM in state 44 resolved as shift
WARNING: shift/reduce conflict for SUBSTR in state 44 resolved as shift
WARNING: shift/reduce conflict for MULTI in state 44 resolved as shift
WARNING: shift/reduce conflict for DIV in state 44 resolved as shift
WARNING: shift/reduce conflict for RANDOM in state 44 resolved as shift
WARNING: shift/reduce conflict for RUN in state 44 resolved as shift
WARNING: shift/reduce conflict for IF in state 44 resolved as shift
WARNING: shift/reduce conflict for IFELSE in state 44 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 44 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 44 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 44 resolved as shift
WARNING: shift/reduce conflict for PRINTLINE in state 44 resolved as shift
WARNING: shift/reduce conflict for AND in state 44 resolved as shift
WARNING: shift/reduce conflict for OR in state 44 resolved as shift
WARNING: shift/reduce conflict for ADD in state 44 resolved as shift
WARNING: shift/reduce conflict for PUNTOCOMA in state 45 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 45 resolved as shift
WARNING: shift/reduce conflict for ABRE_P in state 45 resolved as shift
WARNING: shift/reduce conflict for SUM in state 45 resolved as shift
WARNING: shift/reduce conflict for SUBSTR in state 45 resolved as shift
WARNING: shift/reduce conflict for MULTI in state 45 resolved as shift
WARNING: shift/reduce conflict for DIV in state 45 resolved as shift
WARNING: shift/reduce conflict for RANDOM in state 45 resolved as shift
WARNING: shift/reduce conflict for RUN in state 45 resolved as shift
WARNING: shift/reduce conflict for IF in state 45 resolved as shift
WARNING: shift/reduce conflict for IFELSE in state 45 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 45 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 45 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 45 resolved as shift
WARNING: shift/reduce conflict for PRINTLINE in state 45 resolved as shift
WARNING: shift/reduce conflict for AND in state 45 resolved as shift
WARNING: shift/reduce conflict for OR in state 45 resolved as shift
WARNING: shift/reduce conflict for ADD in state 45 resolved as shift
WARNING: shift/reduce conflict for PUT in state 45 resolved as shift
WARNING: shift/reduce conflict for PUNTOCOMA in state 46 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 46 resolved as shift
WARNING: shift/reduce conflict for ABRE_P in state 46 resolved as shift
WARNING: shift/reduce conflict for SUM in state 46 resolved as shift
WARNING: shift/reduce conflict for SUBSTR in state 46 resolved as shift
WARNING: shift/reduce conflict for MULTI in state 46 resolved as shift
WARNING: shift/reduce conflict for DIV in state 46 resolved as shift
WARNING: shift/reduce conflict for RANDOM in state 46 resolved as shift
WARNING: shift/reduce conflict for RUN in state 46 resolved as shift
WARNING: shift/reduce conflict for IF in state 46 resolved as shift
WARNING: shift/reduce conflict for IFELSE in state 46 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 46 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 46 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 46 resolved as shift
WARNING: shift/reduce conflict for PRINTLINE in state 46 resolved as shift
WARNING: shift/reduce conflict for AND in state 46 resolved as shift
WARNING: shift/reduce conflict for OR in state 46 resolved as shift
WARNING: shift/reduce conflict for ADD in state 46 resolved as shift
WARNING: shift/reduce conflict for PUT in state 46 resolved as shift
WARNING: shift/reduce conflict for PUNTOCOMA in state 47 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 47 resolved as shift
WARNING: shift/reduce conflict for ABRE_P in state 47 resolved as shift
WARNING: shift/reduce conflict for SUM in state 47 resolved as shift
WARNING: shift/reduce conflict for SUBSTR in state 47 resolved as shift
WARNING: shift/reduce conflict for MULTI in state 47 resolved as shift
WARNING: shift/reduce conflict for DIV in state 47 resolved as shift
WARNING: shift/reduce conflict for RANDOM in state 47 resolved as shift
WARNING: shift/reduce conflict for RUN in state 47 resolved as shift
WARNING: shift/reduce conflict for IF in state 47 resolved as shift
WARNING: shift/reduce conflict for IFELSE in state 47 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 47 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 47 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 47 resolved as shift
WARNING: shift/reduce conflict for PRINTLINE in state 47 resolved as shift
WARNING: shift/reduce conflict for AND in state 47 resolved as shift
WARNING: shift/reduce conflict for OR in state 47 resolved as shift
WARNING: shift/reduce conflict for ADD in state 47 resolved as shift
WARNING: shift/reduce conflict for PUT in state 47 resolved as shift
WARNING: shift/reduce conflict for PUNTOCOMA in state 48 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 48 resolved as shift
WARNING: shift/reduce conflict for ABRE_P in state 48 resolved as shift
WARNING: shift/reduce conflict for SUM in state 48 resolved as shift
WARNING: shift/reduce conflict for SUBSTR in state 48 resolved as shift
WARNING: shift/reduce conflict for MULTI in state 48 resolved as shift
WARNING: shift/reduce conflict for DIV in state 48 resolved as shift
WARNING: shift/reduce conflict for RANDOM in state 48 resolved as shift
WARNING: shift/reduce conflict for RUN in state 48 resolved as shift
WARNING: shift/reduce conflict for IF in state 48 resolved as shift
WARNING: shift/reduce conflict for IFELSE in state 48 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 48 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 48 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 48 resolved as shift
WARNING: shift/reduce conflict for PRINTLINE in state 48 resolved as shift
WARNING: shift/reduce conflict for AND in state 48 resolved as shift
WARNING: shift/reduce conflict for OR in state 48 resolved as shift
WARNING: shift/reduce conflict for ADD in state 48 resolved as shift
WARNING: shift/reduce conflict for PUT in state 48 resolved as shift
WARNING: shift/reduce conflict for PUNTOCOMA in state 49 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 49 resolved as shift
WARNING: shift/reduce conflict for ABRE_P in state 49 resolved as shift
WARNING: shift/reduce conflict for SUM in state 49 resolved as shift
WARNING: shift/reduce conflict for SUBSTR in state 49 resolved as shift
WARNING: shift/reduce conflict for MULTI in state 49 resolved as shift
WARNING: shift/reduce conflict for DIV in state 49 resolved as shift
WARNING: shift/reduce conflict for RANDOM in state 49 resolved as shift
WARNING: shift/reduce conflict for RUN in state 49 resolved as shift
WARNING: shift/reduce conflict for IF in state 49 resolved as shift
WARNING: shift/reduce conflict for IFELSE in state 49 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 49 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 49 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 49 resolved as shift
WARNING: shift/reduce conflict for PRINTLINE in state 49 resolved as shift
WARNING: shift/reduce conflict for AND in state 49 resolved as shift
WARNING: shift/reduce conflict for OR in state 49 resolved as shift
WARNING: shift/reduce conflict for ADD in state 49 resolved as shift
WARNING: shift/reduce conflict for PUT in state 49 resolved as shift
WARNING: shift/reduce conflict for PUNTOCOMA in state 50 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 50 resolved as shift
WARNING: shift/reduce conflict for ABRE_P in state 50 resolved as shift
WARNING: shift/reduce conflict for SUM in state 50 resolved as shift
WARNING: shift/reduce conflict for SUBSTR in state 50 resolved as shift
WARNING: shift/reduce conflict for MULTI in state 50 resolved as shift
WARNING: shift/reduce conflict for DIV in state 50 resolved as shift
WARNING: shift/reduce conflict for RANDOM in state 50 resolved as shift
WARNING: shift/reduce conflict for RUN in state 50 resolved as shift
WARNING: shift/reduce conflict for IF in state 50 resolved as shift
WARNING: shift/reduce conflict for IFELSE in state 50 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 50 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 50 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 50 resolved as shift
WARNING: shift/reduce conflict for PRINTLINE in state 50 resolved as shift
WARNING: shift/reduce conflict for AND in state 50 resolved as shift
WARNING: shift/reduce conflict for OR in state 50 resolved as shift
WARNING: shift/reduce conflict for ADD in state 50 resolved as shift
WARNING: shift/reduce conflict for PUT in state 50 resolved as shift
WARNING: shift/reduce conflict for PUNTOCOMA in state 62 resolved as shift
WARNING: shift/reduce conflict for RANDOM in state 62 resolved as shift
WARNING: shift/reduce conflict for RUN in state 62 resolved as shift
WARNING: shift/reduce conflict for IF in state 62 resolved as shift
WARNING: shift/reduce conflict for IFELSE in state 62 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 62 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 62 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 62 resolved as shift
WARNING: shift/reduce conflict for PRINTLINE in state 62 resolved as shift
WARNING: shift/reduce conflict for AND in state 62 resolved as shift
WARNING: shift/reduce conflict for OR in state 62 resolved as shift
WARNING: shift/reduce conflict for ADD in state 62 resolved as shift
WARNING: shift/reduce conflict for PUT in state 62 resolved as shift
WARNING: shift/reduce conflict for PUT in state 84 resolved as shift
WARNING: shift/reduce conflict for PUNTOCOMA in state 84 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 84 resolved as shift
WARNING: shift/reduce conflict for ABRE_P in state 84 resolved as shift
WARNING: shift/reduce conflict for SUM in state 84 resolved as shift
WARNING: shift/reduce conflict for SUBSTR in state 84 resolved as shift
WARNING: shift/reduce conflict for MULTI in state 84 resolved as shift
WARNING: shift/reduce conflict for DIV in state 84 resolved as shift
WARNING: shift/reduce conflict for RANDOM in state 84 resolved as shift
WARNING: shift/reduce conflict for RUN in state 84 resolved as shift
WARNING: shift/reduce conflict for IF in state 84 resolved as shift
WARNING: shift/reduce conflict for IFELSE in state 84 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 84 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 84 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 84 resolved as shift
WARNING: shift/reduce conflict for PRINTLINE in state 84 resolved as shift
WARNING: shift/reduce conflict for AND in state 84 resolved as shift
WARNING: shift/reduce conflict for OR in state 84 resolved as shift
WARNING: shift/reduce conflict for ADD in state 84 resolved as shift
WARNING: shift/reduce conflict for PUT in state 85 resolved as shift
WARNING: shift/reduce conflict for PUNTOCOMA in state 85 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 85 resolved as shift
WARNING: shift/reduce conflict for ABRE_P in state 85 resolved as shift
WARNING: shift/reduce conflict for SUM in state 85 resolved as shift
WARNING: shift/reduce conflict for SUBSTR in state 85 resolved as shift
WARNING: shift/reduce conflict for MULTI in state 85 resolved as shift
WARNING: shift/reduce conflict for DIV in state 85 resolved as shift
WARNING: shift/reduce conflict for RANDOM in state 85 resolved as shift
WARNING: shift/reduce conflict for RUN in state 85 resolved as shift
WARNING: shift/reduce conflict for IF in state 85 resolved as shift
WARNING: shift/reduce conflict for IFELSE in state 85 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 85 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 85 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 85 resolved as shift
WARNING: shift/reduce conflict for PRINTLINE in state 85 resolved as shift
WARNING: shift/reduce conflict for AND in state 85 resolved as shift
WARNING: shift/reduce conflict for OR in state 85 resolved as shift
WARNING: shift/reduce conflict for ADD in state 85 resolved as shift
WARNING: shift/reduce conflict for PUNTOCOMA in state 90 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 90 resolved as shift
WARNING: shift/reduce conflict for ABRE_P in state 90 resolved as shift
WARNING: shift/reduce conflict for SUM in state 90 resolved as shift
WARNING: shift/reduce conflict for SUBSTR in state 90 resolved as shift
WARNING: shift/reduce conflict for MULTI in state 90 resolved as shift
WARNING: shift/reduce conflict for DIV in state 90 resolved as shift
WARNING: shift/reduce conflict for RANDOM in state 90 resolved as shift
WARNING: shift/reduce conflict for RUN in state 90 resolved as shift
WARNING: shift/reduce conflict for IF in state 90 resolved as shift
WARNING: shift/reduce conflict for IFELSE in state 90 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 90 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 90 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 90 resolved as shift
WARNING: shift/reduce conflict for PRINTLINE in state 90 resolved as shift
WARNING: shift/reduce conflict for AND in state 90 resolved as shift
WARNING: shift/reduce conflict for OR in state 90 resolved as shift
WARNING: shift/reduce conflict for ADD in state 90 resolved as shift
WARNING: shift/reduce conflict for PUT in state 90 resolved as shift
WARNING: shift/reduce conflict for PUT in state 159 resolved as shift
WARNING: shift/reduce conflict for PUNTOCOMA in state 159 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 159 resolved as shift
WARNING: shift/reduce conflict for ABRE_P in state 159 resolved as shift
WARNING: shift/reduce conflict for SUM in state 159 resolved as shift
WARNING: shift/reduce conflict for SUBSTR in state 159 resolved as shift
WARNING: shift/reduce conflict for MULTI in state 159 resolved as shift
WARNING: shift/reduce conflict for DIV in state 159 resolved as shift
WARNING: shift/reduce conflict for RANDOM in state 159 resolved as shift
WARNING: shift/reduce conflict for RUN in state 159 resolved as shift
WARNING: shift/reduce conflict for IF in state 159 resolved as shift
WARNING: shift/reduce conflict for IFELSE in state 159 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 159 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 159 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 159 resolved as shift
WARNING: shift/reduce conflict for PRINTLINE in state 159 resolved as shift
WARNING: shift/reduce conflict for AND in state 159 resolved as shift
WARNING: shift/reduce conflict for OR in state 159 resolved as shift
WARNING: shift/reduce conflict for ADD in state 159 resolved as shift
WARNING: shift/reduce conflict for PUT in state 164 resolved as shift
WARNING: shift/reduce conflict for PUNTOCOMA in state 164 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 164 resolved as shift
WARNING: shift/reduce conflict for ABRE_P in state 164 resolved as shift
WARNING: shift/reduce conflict for SUM in state 164 resolved as shift
WARNING: shift/reduce conflict for SUBSTR in state 164 resolved as shift
WARNING: shift/reduce conflict for MULTI in state 164 resolved as shift
WARNING: shift/reduce conflict for DIV in state 164 resolved as shift
WARNING: shift/reduce conflict for RANDOM in state 164 resolved as shift
WARNING: shift/reduce conflict for RUN in state 164 resolved as shift
WARNING: shift/reduce conflict for IF in state 164 resolved as shift
WARNING: shift/reduce conflict for IFELSE in state 164 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 164 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 164 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 164 resolved as shift
WARNING: shift/reduce conflict for PRINTLINE in state 164 resolved as shift
WARNING: shift/reduce conflict for AND in state 164 resolved as shift
WARNING: shift/reduce conflict for OR in state 164 resolved as shift
WARNING: shift/reduce conflict for ADD in state 164 resolved as shift
WARNING: shift/reduce conflict for PUT in state 165 resolved as shift
WARNING: shift/reduce conflict for PUNTOCOMA in state 165 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 165 resolved as shift
WARNING: shift/reduce conflict for ABRE_P in state 165 resolved as shift
WARNING: shift/reduce conflict for SUM in state 165 resolved as shift
WARNING: shift/reduce conflict for SUBSTR in state 165 resolved as shift
WARNING: shift/reduce conflict for MULTI in state 165 resolved as shift
WARNING: shift/reduce conflict for DIV in state 165 resolved as shift
WARNING: shift/reduce conflict for RANDOM in state 165 resolved as shift
WARNING: shift/reduce conflict for RUN in state 165 resolved as shift
WARNING: shift/reduce conflict for IF in state 165 resolved as shift
WARNING: shift/reduce conflict for IFELSE in state 165 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 165 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 165 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 165 resolved as shift
WARNING: shift/reduce conflict for PRINTLINE in state 165 resolved as shift
WARNING: shift/reduce conflict for AND in state 165 resolved as shift
WARNING: shift/reduce conflict for OR in state 165 resolved as shift
WARNING: shift/reduce conflict for ADD in state 165 resolved as shift
WARNING: reduce/reduce conflict in state 39 resolved using rule (cuerpo3 -> funcion)
WARNING: rejected rule (empty -> <empty>) in state 39
WARNING: reduce/reduce conflict in state 40 resolved using rule (cuerpo3 -> empty)
WARNING: rejected rule (empty -> <empty>) in state 40
WARNING: reduce/reduce conflict in state 41 resolved using rule (cuerpo3 -> Put)
WARNING: rejected rule (empty -> <empty>) in state 41
WARNING: reduce/reduce conflict in state 42 resolved using rule (cuerpo3 -> Put2)
WARNING: rejected rule (empty -> <empty>) in state 42
WARNING: reduce/reduce conflict in state 92 resolved using rule (expresion -> funcion empty)
WARNING: rejected rule (empty -> <empty>) in state 92
WARNING: reduce/reduce conflict in state 96 resolved using rule (variablexdd -> empty empty)
WARNING: rejected rule (expresion -> empty empty) in state 96
WARNING: reduce/reduce conflict in state 96 resolved using rule (variablexdd -> empty empty)
WARNING: rejected rule (funcion -> empty empty) in state 96
WARNING: reduce/reduce conflict in state 102 resolved using rule (expresion -> expresion_alge1 empty)
WARNING: rejected rule (empty -> <empty>) in state 102
WARNING: reduce/reduce conflict in state 104 resolved using rule (expresion -> expresion_alge2 empty)
WARNING: rejected rule (empty -> <empty>) in state 104
WARNING: reduce/reduce conflict in state 106 resolved using rule (expresion -> Sum empty)
WARNING: rejected rule (empty -> <empty>) in state 106
WARNING: reduce/reduce conflict in state 108 resolved using rule (expresion -> Substr empty)
WARNING: rejected rule (empty -> <empty>) in state 108
WARNING: reduce/reduce conflict in state 110 resolved using rule (expresion -> Mult empty)
WARNING: rejected rule (empty -> <empty>) in state 110
WARNING: reduce/reduce conflict in state 112 resolved using rule (expresion -> Div empty)
WARNING: rejected rule (empty -> <empty>) in state 112
WARNING: reduce/reduce conflict in state 156 resolved using rule (cuerpo2 -> empty)
WARNING: rejected rule (empty -> <empty>) in state 156
WARNING: reduce/reduce conflict in state 162 resolved using rule (cuerpo2 -> Put2)
WARNING: rejected rule (empty -> <empty>) in state 162
WARNING: reduce/reduce conflict in state 163 resolved using rule (cuerpo2 -> Put)
WARNING: rejected rule (empty -> <empty>) in state 163
WARNING: reduce/reduce conflict in state 171 resolved using rule (expresion -> empty empty)
WARNING: rejected rule (funcion -> empty empty) in state 171
WARNING: reduce/reduce conflict in state 253 resolved using rule (variablexd -> empty empty)
WARNING: rejected rule (expresion -> empty empty) in state 253
WARNING: reduce/reduce conflict in state 253 resolved using rule (variablexd -> empty empty)
WARNING: rejected rule (funcion -> empty empty) in state 253
