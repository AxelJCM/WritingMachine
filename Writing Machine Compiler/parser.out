Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ENDIF
    FALSE
    IGUAL_IGUAL
    START
    TRUE

Grammar

Rule 0     S' -> Start
Rule 1     Start -> COMMENT cuerpo
Rule 2     cuerpo -> variable
Rule 3     cuerpo -> procedimiento
Rule 4     cuerpo -> main
Rule 5     cuerpo -> COMMENT cuerpo
Rule 6     cuerpo -> Put
Rule 7     cuerpo -> Put2
Rule 8     cuerpo2 -> variablexd
Rule 9     cuerpo2 -> COMMENT cuerpo2
Rule 10    cuerpo2 -> expresion
Rule 11    cuerpo2 -> llamadoproc
Rule 12    cuerpo2 -> empty
Rule 13    cuerpo2 -> Put2
Rule 14    cuerpo2 -> Put
Rule 15    cuerpo3 -> variablexdd
Rule 16    cuerpo3 -> COMMENT cuerpo3
Rule 17    cuerpo3 -> expresion
Rule 18    cuerpo3 -> funcion
Rule 19    cuerpo3 -> empty
Rule 20    cuerpo3 -> Put
Rule 21    cuerpo3 -> Put2
Rule 22    cuerpo3 -> Run
Rule 23    cuerpo3 -> Repeat
Rule 24    id -> ID
Rule 25    procedimiento -> PARA id BRACKET1 empty BRACKET2 cuerpo2 FIN cuerpo
Rule 26    procedimiento -> PARA id BRACKET1 parametro BRACKET2 cuerpo2 FIN cuerpo
Rule 27    llamadoproc -> PARA id BRACKET1 parametro BRACKET2 PUNTOCOMA
Rule 28    main -> MAIN BRACKET1 BRACKET2 cuerpo3 FIN cuerpo
Rule 29    variable -> variable1 cuerpo
Rule 30    variable -> variable2 cuerpo
Rule 31    variable -> empty empty
Rule 32    variablexd -> variable1 cuerpo2
Rule 33    variablexd -> variable2 cuerpo2
Rule 34    variablexd -> empty empty
Rule 35    variablexdd -> variable1 cuerpo3
Rule 36    variablexdd -> variable2 cuerpo3
Rule 37    variablexdd -> empty empty
Rule 38    variable1 -> DEF VAR PUNTOCOMA
Rule 39    variable2 -> DEF VAR IGUAL NUMERO PUNTOCOMA
Rule 40    variable2 -> DEF VAR IGUAL RESTA NUMERO PUNTOCOMA
Rule 41    expresion -> funcion expresion
Rule 42    expresion -> expresion_alge1 expresion
Rule 43    expresion -> expresion_alge2 expresion
Rule 44    expresion -> Sum expresion
Rule 45    expresion -> Substr expresion
Rule 46    expresion -> Mult expresion
Rule 47    expresion -> Div expresion
Rule 48    expresion -> funcion empty
Rule 49    expresion -> expresion_alge1 empty
Rule 50    expresion -> expresion_alge2 empty
Rule 51    expresion -> Sum empty
Rule 52    expresion -> Substr empty
Rule 53    expresion -> Mult empty
Rule 54    expresion -> Div empty
Rule 55    expresion -> empty empty
Rule 56    ordenes -> Beginning empty
Rule 57    ordenes -> ContinueUp empty
Rule 58    ordenes -> ContinueDown empty
Rule 59    ordenes -> ContinueRight empty
Rule 60    ordenes -> ContinueLeft empty
Rule 61    ordenes -> Up empty
Rule 62    ordenes -> Down empty
Rule 63    ordenes -> Speed empty
Rule 64    ordenes -> Diag empty
Rule 65    ordenes -> Pos empty
Rule 66    ordenes -> PosX empty
Rule 67    ordenes -> PosY empty
Rule 68    ordenes -> UseColor empty
Rule 69    ordenes -> Beginning ordenes
Rule 70    ordenes -> ContinueUp ordenes
Rule 71    ordenes -> ContinueDown ordenes
Rule 72    ordenes -> ContinueRight ordenes
Rule 73    ordenes -> ContinueLeft ordenes
Rule 74    ordenes -> Up ordenes
Rule 75    ordenes -> Down ordenes
Rule 76    ordenes -> Speed ordenes
Rule 77    ordenes -> Diag ordenes
Rule 78    ordenes -> Pos ordenes
Rule 79    ordenes -> PosX ordenes
Rule 80    ordenes -> PosY ordenes
Rule 81    ordenes -> UseColor ordenes
Rule 82    funcion -> Random empty
Rule 83    funcion -> If empty
Rule 84    funcion -> IfElse empty
Rule 85    funcion -> Until empty
Rule 86    funcion -> While empty
Rule 87    funcion -> PrintLine empty
Rule 88    funcion -> And empty
Rule 89    funcion -> Or empty
Rule 90    funcion -> Add empty
Rule 91    funcion -> Put2 empty
Rule 92    funcion -> Put empty
Rule 93    funcion -> PUNTOCOMA funcion
Rule 94    funcion -> empty empty
Rule 95    Put -> PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA
Rule 96    Put2 -> PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
Rule 97    Put2 -> PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA
Rule 98    Put2 -> PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
Rule 99    Put2 -> PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
Rule 100   Put2 -> PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA
Rule 101   condicion -> Equal
Rule 102   condicion -> Greater
Rule 103   condicion -> Smaller
Rule 104   expresion_alge1 -> NUMERO SUMA NUMERO
Rule 105   expresion_alge1 -> NUMERO RESTA NUMERO
Rule 106   expresion_alge1 -> NUMERO MULTI NUMERO
Rule 107   expresion_alge1 -> NUMERO DIVISION NUMERO
Rule 108   expresion_alge1 -> RESTA NUMERO SUMA NUMERO
Rule 109   expresion_alge1 -> RESTA NUMERO RESTA NUMERO
Rule 110   expresion_alge1 -> RESTA NUMERO MULTI NUMERO
Rule 111   expresion_alge1 -> RESTA NUMERO DIVISION NUMERO
Rule 112   expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
Rule 113   expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
Rule 114   expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
Rule 115   expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
Rule 116   Sum -> SUM ABRE_P NUMERO COMA NUMERO CIERRA_P
Rule 117   Sum -> SUM ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
Rule 118   Sum -> SUM ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
Rule 119   Sum -> SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
Rule 120   Sum -> SUM ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
Rule 121   Sum -> SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
Rule 122   Sum -> SUM ABRE_P NUMERO COMA Var CIERRA_P
Rule 123   Sum -> SUM ABRE_P RESTA NUMERO COMA Var CIERRA_P
Rule 124   Sum -> SUM ABRE_P Var COMA NUMERO CIERRA_P
Rule 125   Sum -> SUM ABRE_P Var COMA RESTA NUMERO CIERRA_P
Rule 126   Sum -> SUM ABRE_P Var COMA Var CIERRA_P
Rule 127   Sum -> SUM ABRE_P expresion_alge1 COMA Var CIERRA_P
Rule 128   Sum -> SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
Rule 129   Sum -> SUM ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
Rule 130   Sum -> SUM ABRE_P Var COMA expresion_alge1 CIERRA_P
Rule 131   Sum -> SUM ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P
Rule 132   Substr -> SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P
Rule 133   Substr -> SUBSTR ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
Rule 134   Substr -> SUBSTR ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
Rule 135   Substr -> SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
Rule 136   Substr -> SUBSTR ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
Rule 137   Substr -> SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
Rule 138   Substr -> SUBSTR ABRE_P NUMERO COMA Var CIERRA_P
Rule 139   Substr -> SUBSTR ABRE_P RESTA NUMERO COMA Var CIERRA_P
Rule 140   Substr -> SUBSTR ABRE_P Var COMA NUMERO CIERRA_P
Rule 141   Substr -> SUBSTR ABRE_P Var COMA RESTA NUMERO CIERRA_P
Rule 142   Substr -> SUBSTR ABRE_P Var COMA Var CIERRA_P
Rule 143   Substr -> SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P
Rule 144   Substr -> SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
Rule 145   Substr -> SUBSTR ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
Rule 146   Substr -> SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P
Rule 147   Substr -> SUBSTR ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P
Rule 148   Mult -> MULT ABRE_P NUMERO COMA NUMERO CIERRA_P
Rule 149   Mult -> MULT ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
Rule 150   Mult -> MULT ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
Rule 151   Mult -> MULT ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
Rule 152   Mult -> MULT ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
Rule 153   Mult -> MULT ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
Rule 154   Mult -> MULT ABRE_P NUMERO COMA Var CIERRA_P
Rule 155   Mult -> MULT ABRE_P RESTA NUMERO COMA Var CIERRA_P
Rule 156   Mult -> MULT ABRE_P Var COMA NUMERO CIERRA_P
Rule 157   Mult -> MULT ABRE_P Var COMA RESTA NUMERO CIERRA_P
Rule 158   Mult -> MULT ABRE_P Var COMA Var CIERRA_P
Rule 159   Mult -> MULT ABRE_P expresion_alge1 COMA Var CIERRA_P
Rule 160   Mult -> MULT ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
Rule 161   Mult -> MULT ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
Rule 162   Mult -> MULT ABRE_P Var COMA expresion_alge1 CIERRA_P
Rule 163   Mult -> MULT ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P
Rule 164   Div -> DIV ABRE_P NUMERO COMA NUMERO CIERRA_P
Rule 165   Div -> DIV ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
Rule 166   Div -> DIV ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
Rule 167   Div -> DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
Rule 168   Div -> DIV ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
Rule 169   Div -> DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
Rule 170   Div -> DIV ABRE_P NUMERO COMA Var CIERRA_P
Rule 171   Div -> DIV ABRE_P RESTA NUMERO COMA Var CIERRA_P
Rule 172   Div -> DIV ABRE_P Var COMA NUMERO CIERRA_P
Rule 173   Div -> DIV ABRE_P Var COMA RESTA NUMERO CIERRA_P
Rule 174   Div -> DIV ABRE_P Var COMA Var CIERRA_P
Rule 175   Div -> DIV ABRE_P expresion_alge1 COMA Var CIERRA_P
Rule 176   Div -> DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
Rule 177   Div -> DIV ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
Rule 178   Div -> DIV ABRE_P Var COMA expresion_alge1 CIERRA_P
Rule 179   Div -> DIV ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P
Rule 180   Var -> VAR
Rule 181   Equal -> EQUAL ABRE_P NUMERO COMA NUMERO CIERRA_P
Rule 182   Equal -> EQUAL ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
Rule 183   Equal -> EQUAL ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
Rule 184   Equal -> EQUAL ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
Rule 185   Equal -> EQUAL ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P
Rule 186   Equal -> EQUAL ABRE_P Var COMA Var CIERRA_P
Rule 187   Equal -> EQUAL ABRE_P NUMERO COMA Var CIERRA_P
Rule 188   Equal -> EQUAL ABRE_P RESTA NUMERO COMA Var CIERRA_P
Rule 189   Equal -> EQUAL ABRE_P expresion_alge2 COMA Var CIERRA_P
Rule 190   Equal -> EQUAL ABRE_P expresion_alge1 COMA Var CIERRA_P
Rule 191   Equal -> EQUAL ABRE_P Var COMA NUMERO CIERRA_P
Rule 192   Equal -> EQUAL ABRE_P Var COMA RESTA NUMERO CIERRA_P
Rule 193   Equal -> EQUAL ABRE_P Var COMA expresion_alge1 CIERRA_P
Rule 194   Equal -> EQUAL ABRE_P Var COMA expresion_alge2 CIERRA_P
Rule 195   Equal -> EQUAL ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P
Rule 196   Equal -> EQUAL ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P
Rule 197   Equal -> EQUAL ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
Rule 198   Equal -> EQUAL ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
Rule 199   Equal -> EQUAL ABRE_P expresion_alge2 COMA NUMERO CIERRA_P
Rule 200   Equal -> EQUAL ABRE_P expresion_alge2 COMA RESTA NUMERO CIERRA_P
Rule 201   Equal -> EQUAL ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
Rule 202   Equal -> EQUAL ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
Rule 203   Equal -> EQUAL ABRE_P NUMERO COMA expresion_alge2 CIERRA_P
Rule 204   Equal -> EQUAL ABRE_P RESTA NUMERO COMA expresion_alge2 CIERRA_P
Rule 205   Equal -> EQUAL ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P
Rule 206   Greater -> GREATER ABRE_P NUMERO COMA NUMERO CIERRA_P
Rule 207   Greater -> GREATER ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
Rule 208   Greater -> GREATER ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
Rule 209   Greater -> GREATER ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
Rule 210   Greater -> GREATER ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P
Rule 211   Greater -> GREATER ABRE_P Var COMA Var CIERRA_P
Rule 212   Greater -> GREATER ABRE_P NUMERO COMA Var CIERRA_P
Rule 213   Greater -> GREATER ABRE_P RESTA NUMERO COMA Var CIERRA_P
Rule 214   Greater -> GREATER ABRE_P expresion_alge2 COMA Var CIERRA_P
Rule 215   Greater -> GREATER ABRE_P expresion_alge1 COMA Var CIERRA_P
Rule 216   Greater -> GREATER ABRE_P Var COMA NUMERO CIERRA_P
Rule 217   Greater -> GREATER ABRE_P Var COMA RESTA NUMERO CIERRA_P
Rule 218   Greater -> GREATER ABRE_P Var COMA expresion_alge1 CIERRA_P
Rule 219   Greater -> GREATER ABRE_P Var COMA expresion_alge2 CIERRA_P
Rule 220   Greater -> GREATER ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P
Rule 221   Greater -> GREATER ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P
Rule 222   Greater -> GREATER ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
Rule 223   Greater -> GREATER ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
Rule 224   Greater -> GREATER ABRE_P expresion_alge2 COMA NUMERO CIERRA_P
Rule 225   Greater -> GREATER ABRE_P expresion_alge2 COMA RESTA NUMERO CIERRA_P
Rule 226   Greater -> GREATER ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
Rule 227   Greater -> GREATER ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
Rule 228   Greater -> GREATER ABRE_P NUMERO COMA expresion_alge2 CIERRA_P
Rule 229   Greater -> GREATER ABRE_P RESTA NUMERO COMA expresion_alge2 CIERRA_P
Rule 230   Greater -> GREATER ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P
Rule 231   Smaller -> SMALLER ABRE_P NUMERO COMA NUMERO CIERRA_P
Rule 232   Smaller -> SMALLER ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
Rule 233   Smaller -> SMALLER ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
Rule 234   Smaller -> SMALLER ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
Rule 235   Smaller -> SMALLER ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P
Rule 236   Smaller -> SMALLER ABRE_P Var COMA Var CIERRA_P
Rule 237   Smaller -> SMALLER ABRE_P NUMERO COMA Var CIERRA_P
Rule 238   Smaller -> SMALLER ABRE_P RESTA NUMERO COMA Var CIERRA_P
Rule 239   Smaller -> SMALLER ABRE_P expresion_alge2 COMA Var CIERRA_P
Rule 240   Smaller -> SMALLER ABRE_P expresion_alge1 COMA Var CIERRA_P
Rule 241   Smaller -> SMALLER ABRE_P Var COMA NUMERO CIERRA_P
Rule 242   Smaller -> SMALLER ABRE_P Var COMA RESTA NUMERO CIERRA_P
Rule 243   Smaller -> SMALLER ABRE_P Var COMA expresion_alge1 CIERRA_P
Rule 244   Smaller -> SMALLER ABRE_P Var COMA expresion_alge2 CIERRA_P
Rule 245   Smaller -> SMALLER ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P
Rule 246   Smaller -> SMALLER ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P
Rule 247   Smaller -> SMALLER ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
Rule 248   Smaller -> SMALLER ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
Rule 249   Smaller -> SMALLER ABRE_P expresion_alge2 COMA NUMERO CIERRA_P
Rule 250   Smaller -> SMALLER ABRE_P expresion_alge2 COMA RESTA NUMERO CIERRA_P
Rule 251   Smaller -> SMALLER ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
Rule 252   Smaller -> SMALLER ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
Rule 253   Smaller -> SMALLER ABRE_P NUMERO COMA expresion_alge2 CIERRA_P
Rule 254   Smaller -> SMALLER ABRE_P RESTA NUMERO COMA expresion_alge2 CIERRA_P
Rule 255   Smaller -> SMALLER ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P
Rule 256   And -> AND ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
Rule 257   And -> AND ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P
Rule 258   And -> AND ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P
Rule 259   And -> AND ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P
Rule 260   Or -> OR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
Rule 261   Or -> OR ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P
Rule 262   Or -> OR ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P
Rule 263   Or -> OR ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P
Rule 264   If -> IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2
Rule 265   IfElse -> IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2
Rule 266   While -> WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2
Rule 267   Repeat -> REPEAT NUMERO BRACKET1 ordenes BRACKET2 cuerpo3
Rule 268   Until -> UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2
Rule 269   Add -> ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA
Rule 270   Add -> ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
Rule 271   Add -> ADD ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA
Rule 272   Add -> ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
Rule 273   Add -> ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
Rule 274   Add -> ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA
Rule 275   parametro -> Var COMA parametro
Rule 276   parametro -> Var empty empty
Rule 277   parametro -> empty empty empty
Rule 278   Beginning -> BEGINNING PUNTOCOMA
Rule 279   Random -> RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA
Rule 280   ContinueUp -> CONTINUEUP NUMERO PUNTOCOMA
Rule 281   ContinueUp -> CONTINUEUP expresion_alge1 PUNTOCOMA
Rule 282   ContinueUp -> CONTINUEUP expresion_alge2 PUNTOCOMA
Rule 283   ContinueUp -> CONTINUEUP Var PUNTOCOMA
Rule 284   ContinueDown -> CONTINUEDOWN NUMERO PUNTOCOMA
Rule 285   ContinueDown -> CONTINUEDOWN expresion_alge1 PUNTOCOMA
Rule 286   ContinueDown -> CONTINUEDOWN expresion_alge2 PUNTOCOMA
Rule 287   ContinueDown -> CONTINUEDOWN Var PUNTOCOMA
Rule 288   ContinueRight -> CONTINUERIGHT NUMERO PUNTOCOMA
Rule 289   ContinueRight -> CONTINUERIGHT expresion_alge1 PUNTOCOMA
Rule 290   ContinueRight -> CONTINUERIGHT expresion_alge2 PUNTOCOMA
Rule 291   ContinueRight -> CONTINUERIGHT Var PUNTOCOMA
Rule 292   ContinueLeft -> CONTINUELEFT NUMERO PUNTOCOMA
Rule 293   ContinueLeft -> CONTINUELEFT expresion_alge1 PUNTOCOMA
Rule 294   ContinueLeft -> CONTINUELEFT expresion_alge2 PUNTOCOMA
Rule 295   ContinueLeft -> CONTINUELEFT Var PUNTOCOMA
Rule 296   Up -> UP PUNTOCOMA
Rule 297   Down -> DOWN PUNTOCOMA
Rule 298   Speed -> SPEED NUMERO PUNTOCOMA
Rule 299   Diag -> POS ABRE_P STRING COMA NUMERO CIERRA_P PUNTOCOMA
Rule 300   Pos -> POS ABRE_P NUMERO COMA NUMERO CIERRA_P
Rule 301   Pos -> POS ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
Rule 302   Pos -> POS ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
Rule 303   Pos -> POS ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
Rule 304   Pos -> POS ABRE_P Var COMA NUMERO CIERRA_P
Rule 305   Pos -> POS ABRE_P NUMERO COMA Var CIERRA_P
Rule 306   Pos -> POS ABRE_P Var COMA Var CIERRA_P
Rule 307   Pos -> POS ABRE_P expresion_alge1 COMA Var CIERRA_P
Rule 308   Pos -> POS ABRE_P Var COMA expresion_alge1 CIERRA_P
Rule 309   Pos -> POS ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P
Rule 310   Pos -> POS ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
Rule 311   Pos -> POS ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
Rule 312   Pos -> POS ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
Rule 313   Pos -> POS ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
Rule 314   Pos -> POS ABRE_P Var COMA RESTA NUMERO CIERRA_P
Rule 315   Pos -> POS ABRE_P RESTA NUMERO COMA Var CIERRA_P
Rule 316   PosX -> POSX NUMERO PUNTOCOMA
Rule 317   PosX -> POSX RESTA NUMERO PUNTOCOMA
Rule 318   PosX -> POSX expresion_alge1 PUNTOCOMA
Rule 319   PosX -> POSX expresion_alge2 PUNTOCOMA
Rule 320   PosX -> POSX Var PUNTOCOMA
Rule 321   PosY -> POSY NUMERO PUNTOCOMA
Rule 322   PosY -> POSY RESTA NUMERO PUNTOCOMA
Rule 323   PosY -> POSY expresion_alge1 PUNTOCOMA
Rule 324   PosY -> POSY expresion_alge2 PUNTOCOMA
Rule 325   PosY -> POSY Var PUNTOCOMA
Rule 326   UseColor -> USECOLOR NUMERO PUNTOCOMA
Rule 327   UseColor -> USECOLOR empty PUNTOCOMA
Rule 328   Run -> RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA cuerpo3
Rule 329   exp -> NUMERO COMA exp
Rule 330   exp -> STRING COMA exp
Rule 331   exp -> Var COMA exp
Rule 332   exp -> NUMERO empty empty
Rule 333   exp -> RESTA NUMERO empty empty
Rule 334   exp -> RESTA NUMERO COMA empty
Rule 335   exp -> STRING empty empty
Rule 336   exp -> Var empty empty
Rule 337   PrintLine -> PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA
Rule 338   empty -> <empty>

Terminals, with rules where they appear

ABRE_P               : 95 96 97 98 99 100 112 112 113 113 114 114 115 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 269 270 271 272 273 274 279 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 337
ADD                  : 269 270 271 272 273 274
AND                  : 256 257 258 259
BEGINNING            : 278
BRACKET1             : 25 26 27 28 264 265 265 266 266 267 268 268 328
BRACKET2             : 25 26 27 28 264 265 265 266 266 267 268 268 328
CIERRA_P             : 95 96 97 98 99 100 112 112 113 113 114 114 115 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 269 270 271 272 273 274 279 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 337
COMA                 : 95 96 97 98 99 100 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 270 271 272 273 274 275 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 329 330 331 334
COMMENT              : 1 5 9 16
CONTINUEDOWN         : 284 285 286 287
CONTINUELEFT         : 292 293 294 295
CONTINUERIGHT        : 288 289 290 291
CONTINUEUP           : 280 281 282 283
DEF                  : 38 39 40
DIV                  : 115 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179
DIVISION             : 107 111
DOWN                 : 297
ENDIF                : 
EQUAL                : 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205
FALSE                : 
FIN                  : 25 26 28
GREATER              : 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230
ID                   : 24
IF                   : 264
IFELSE               : 265
IGUAL                : 39 40
IGUAL_IGUAL          : 
MAIN                 : 28
MULT                 : 114 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163
MULTI                : 106 110
NUMERO               : 39 40 96 97 104 104 105 105 106 106 107 107 108 108 109 109 110 110 111 111 116 116 117 117 118 118 119 120 122 123 124 125 128 129 131 131 132 132 133 133 134 134 135 136 138 139 140 141 144 145 147 147 148 148 149 149 150 150 151 152 154 155 156 157 160 161 163 163 164 164 165 165 166 166 167 168 170 171 172 173 176 177 179 179 181 181 182 182 183 183 187 188 191 192 197 198 199 200 201 202 203 204 205 205 206 206 207 207 208 208 212 213 216 217 222 223 224 225 226 227 228 229 230 230 231 231 232 232 233 233 237 238 241 242 247 248 249 250 251 252 253 254 255 255 267 270 271 279 280 284 288 292 298 299 300 300 301 302 304 305 309 309 310 310 311 311 312 313 314 315 316 317 321 322 326 329 332 333 334
OR                   : 260 261 262 263
PARA                 : 25 26 27
POS                  : 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315
POSX                 : 316 317 318 319 320
POSY                 : 321 322 323 324 325
PRINTLINE            : 337
PUNTOCOMA            : 27 38 39 40 93 95 96 97 98 99 100 269 270 271 272 273 274 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 316 317 318 319 320 321 322 323 324 325 326 327 328 337
PUT                  : 95 96 97 98 99 100
RANDOM               : 279
REPEAT               : 267
RESTA                : 40 97 105 108 109 109 110 111 113 117 118 120 123 125 129 131 131 133 134 136 139 141 145 147 147 149 150 152 155 157 161 163 163 165 166 168 171 173 177 179 179 182 183 188 192 198 200 202 204 205 205 207 208 213 217 223 225 227 229 230 230 232 233 238 242 248 250 252 254 255 255 271 309 309 310 311 312 313 314 315 317 322 333 334
RUN                  : 328
SMALLER              : 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255
SPEED                : 298
START                : 
STRING               : 299 330 335
SUBSTR               : 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147
SUM                  : 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131
SUMA                 : 104 108 112
TRUE                 : 
UNTIL                : 268
UP                   : 296
USECOLOR             : 326 327
VAR                  : 38 39 40 95 95 96 97 98 99 100 180
WHILE                : 266
error                : 

Nonterminals, with rules where they appear

Add                  : 90
And                  : 88
Beginning            : 56 69
ContinueDown         : 58 71
ContinueLeft         : 60 73
ContinueRight        : 59 72
ContinueUp           : 57 70
Diag                 : 64 77
Div                  : 47 54
Down                 : 62 75
Equal                : 101
Greater              : 102
If                   : 83
IfElse               : 84
Mult                 : 46 53
Or                   : 89
Pos                  : 65 78
PosX                 : 66 79
PosY                 : 67 80
PrintLine            : 87
Put                  : 6 14 20 92
Put2                 : 7 13 21 91
Random               : 82
Repeat               : 23
Run                  : 22
Smaller              : 103
Speed                : 63 76
Start                : 0
Substr               : 45 52
Sum                  : 44 51
Until                : 85
Up                   : 61 74
UseColor             : 68 81
Var                  : 122 123 124 125 126 126 127 130 138 139 140 141 142 142 143 146 154 155 156 157 158 158 159 162 170 171 172 173 174 174 175 178 186 186 187 188 189 190 191 192 193 194 211 211 212 213 214 215 216 217 218 219 236 236 237 238 239 240 241 242 243 244 269 270 271 272 273 273 274 275 276 283 287 291 295 304 305 306 306 307 308 314 315 320 325 331 336
While                : 86
condicion            : 264 265 266 268
cuerpo               : 1 5 25 26 28 29 30
cuerpo2              : 9 25 26 32 33
cuerpo3              : 16 28 35 36 267 328
empty                : 12 19 25 31 31 34 34 37 37 48 49 50 51 52 53 54 55 55 56 57 58 59 60 61 62 63 64 65 66 67 68 82 83 84 85 86 87 88 89 90 91 92 94 94 269 269 276 276 277 277 277 327 332 332 333 333 334 335 335 336 336
exp                  : 329 330 331 337
expresion            : 10 17 41 42 43 44 45 46 47
expresion_alge1      : 42 49 98 112 112 113 113 114 114 115 115 119 120 121 121 127 128 129 130 135 136 137 137 143 144 145 146 151 152 153 153 159 160 161 162 167 168 169 169 175 176 177 178 184 184 190 193 195 196 197 198 201 202 209 209 215 218 220 221 222 223 226 227 234 234 240 243 245 246 247 248 251 252 256 256 257 258 260 260 261 262 272 281 285 289 293 301 302 303 303 307 308 312 313 318 323
expresion_alge2      : 43 50 99 185 185 189 194 195 196 199 200 203 204 210 210 214 219 220 221 224 225 228 229 235 235 239 244 245 246 249 250 253 254 257 258 259 259 261 262 263 263 274 282 286 290 294 319 324
funcion              : 18 41 48 93 100 264 265 265 266 268
id                   : 25 26 27
llamadoproc          : 11
main                 : 4
ordenes              : 69 70 71 72 73 74 75 76 77 78 79 80 81 267 328
parametro            : 26 27 275
procedimiento        : 3
variable             : 2
variable1            : 29 32 35
variable2            : 30 33 36
variablexd           : 8
variablexdd          : 15

Parsing method: LALR

state 0

    (0) S' -> . Start
    (1) Start -> . COMMENT cuerpo

    COMMENT         shift and go to state 2

    Start                          shift and go to state 1

state 1

    (0) S' -> Start .



state 2

    (1) Start -> COMMENT . cuerpo
    (2) cuerpo -> . variable
    (3) cuerpo -> . procedimiento
    (4) cuerpo -> . main
    (5) cuerpo -> . COMMENT cuerpo
    (6) cuerpo -> . Put
    (7) cuerpo -> . Put2
    (29) variable -> . variable1 cuerpo
    (30) variable -> . variable2 cuerpo
    (31) variable -> . empty empty
    (25) procedimiento -> . PARA id BRACKET1 empty BRACKET2 cuerpo2 FIN cuerpo
    (26) procedimiento -> . PARA id BRACKET1 parametro BRACKET2 cuerpo2 FIN cuerpo
    (28) main -> . MAIN BRACKET1 BRACKET2 cuerpo3 FIN cuerpo
    (95) Put -> . PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA
    (96) Put2 -> . PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (97) Put2 -> . PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (98) Put2 -> . PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (99) Put2 -> . PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (100) Put2 -> . PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA
    (38) variable1 -> . DEF VAR PUNTOCOMA
    (39) variable2 -> . DEF VAR IGUAL NUMERO PUNTOCOMA
    (40) variable2 -> . DEF VAR IGUAL RESTA NUMERO PUNTOCOMA
    (338) empty -> .

    COMMENT         shift and go to state 3
    PARA            shift and go to state 13
    MAIN            shift and go to state 14
    PUT             shift and go to state 15
    DEF             shift and go to state 16
    $end            reduce using rule 338 (empty -> .)

    cuerpo                         shift and go to state 4
    variable                       shift and go to state 5
    procedimiento                  shift and go to state 6
    main                           shift and go to state 7
    Put                            shift and go to state 8
    Put2                           shift and go to state 9
    variable1                      shift and go to state 10
    variable2                      shift and go to state 11
    empty                          shift and go to state 12

state 3

    (5) cuerpo -> COMMENT . cuerpo
    (2) cuerpo -> . variable
    (3) cuerpo -> . procedimiento
    (4) cuerpo -> . main
    (5) cuerpo -> . COMMENT cuerpo
    (6) cuerpo -> . Put
    (7) cuerpo -> . Put2
    (29) variable -> . variable1 cuerpo
    (30) variable -> . variable2 cuerpo
    (31) variable -> . empty empty
    (25) procedimiento -> . PARA id BRACKET1 empty BRACKET2 cuerpo2 FIN cuerpo
    (26) procedimiento -> . PARA id BRACKET1 parametro BRACKET2 cuerpo2 FIN cuerpo
    (28) main -> . MAIN BRACKET1 BRACKET2 cuerpo3 FIN cuerpo
    (95) Put -> . PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA
    (96) Put2 -> . PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (97) Put2 -> . PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (98) Put2 -> . PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (99) Put2 -> . PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (100) Put2 -> . PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA
    (38) variable1 -> . DEF VAR PUNTOCOMA
    (39) variable2 -> . DEF VAR IGUAL NUMERO PUNTOCOMA
    (40) variable2 -> . DEF VAR IGUAL RESTA NUMERO PUNTOCOMA
    (338) empty -> .

    COMMENT         shift and go to state 3
    PARA            shift and go to state 13
    MAIN            shift and go to state 14
    PUT             shift and go to state 15
    DEF             shift and go to state 16
    $end            reduce using rule 338 (empty -> .)

    cuerpo                         shift and go to state 17
    variable                       shift and go to state 5
    procedimiento                  shift and go to state 6
    main                           shift and go to state 7
    Put                            shift and go to state 8
    Put2                           shift and go to state 9
    variable1                      shift and go to state 10
    variable2                      shift and go to state 11
    empty                          shift and go to state 12

state 4

    (1) Start -> COMMENT cuerpo .

    $end            reduce using rule 1 (Start -> COMMENT cuerpo .)


state 5

    (2) cuerpo -> variable .

    $end            reduce using rule 2 (cuerpo -> variable .)


state 6

    (3) cuerpo -> procedimiento .

    $end            reduce using rule 3 (cuerpo -> procedimiento .)


state 7

    (4) cuerpo -> main .

    $end            reduce using rule 4 (cuerpo -> main .)


state 8

    (6) cuerpo -> Put .

    $end            reduce using rule 6 (cuerpo -> Put .)


state 9

    (7) cuerpo -> Put2 .

    $end            reduce using rule 7 (cuerpo -> Put2 .)


state 10

    (29) variable -> variable1 . cuerpo
    (2) cuerpo -> . variable
    (3) cuerpo -> . procedimiento
    (4) cuerpo -> . main
    (5) cuerpo -> . COMMENT cuerpo
    (6) cuerpo -> . Put
    (7) cuerpo -> . Put2
    (29) variable -> . variable1 cuerpo
    (30) variable -> . variable2 cuerpo
    (31) variable -> . empty empty
    (25) procedimiento -> . PARA id BRACKET1 empty BRACKET2 cuerpo2 FIN cuerpo
    (26) procedimiento -> . PARA id BRACKET1 parametro BRACKET2 cuerpo2 FIN cuerpo
    (28) main -> . MAIN BRACKET1 BRACKET2 cuerpo3 FIN cuerpo
    (95) Put -> . PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA
    (96) Put2 -> . PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (97) Put2 -> . PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (98) Put2 -> . PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (99) Put2 -> . PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (100) Put2 -> . PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA
    (38) variable1 -> . DEF VAR PUNTOCOMA
    (39) variable2 -> . DEF VAR IGUAL NUMERO PUNTOCOMA
    (40) variable2 -> . DEF VAR IGUAL RESTA NUMERO PUNTOCOMA
    (338) empty -> .

    COMMENT         shift and go to state 3
    PARA            shift and go to state 13
    MAIN            shift and go to state 14
    PUT             shift and go to state 15
    DEF             shift and go to state 16
    $end            reduce using rule 338 (empty -> .)

    variable1                      shift and go to state 10
    cuerpo                         shift and go to state 18
    variable                       shift and go to state 5
    procedimiento                  shift and go to state 6
    main                           shift and go to state 7
    Put                            shift and go to state 8
    Put2                           shift and go to state 9
    variable2                      shift and go to state 11
    empty                          shift and go to state 12

state 11

    (30) variable -> variable2 . cuerpo
    (2) cuerpo -> . variable
    (3) cuerpo -> . procedimiento
    (4) cuerpo -> . main
    (5) cuerpo -> . COMMENT cuerpo
    (6) cuerpo -> . Put
    (7) cuerpo -> . Put2
    (29) variable -> . variable1 cuerpo
    (30) variable -> . variable2 cuerpo
    (31) variable -> . empty empty
    (25) procedimiento -> . PARA id BRACKET1 empty BRACKET2 cuerpo2 FIN cuerpo
    (26) procedimiento -> . PARA id BRACKET1 parametro BRACKET2 cuerpo2 FIN cuerpo
    (28) main -> . MAIN BRACKET1 BRACKET2 cuerpo3 FIN cuerpo
    (95) Put -> . PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA
    (96) Put2 -> . PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (97) Put2 -> . PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (98) Put2 -> . PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (99) Put2 -> . PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (100) Put2 -> . PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA
    (38) variable1 -> . DEF VAR PUNTOCOMA
    (39) variable2 -> . DEF VAR IGUAL NUMERO PUNTOCOMA
    (40) variable2 -> . DEF VAR IGUAL RESTA NUMERO PUNTOCOMA
    (338) empty -> .

    COMMENT         shift and go to state 3
    PARA            shift and go to state 13
    MAIN            shift and go to state 14
    PUT             shift and go to state 15
    DEF             shift and go to state 16
    $end            reduce using rule 338 (empty -> .)

    variable2                      shift and go to state 11
    cuerpo                         shift and go to state 19
    variable                       shift and go to state 5
    procedimiento                  shift and go to state 6
    main                           shift and go to state 7
    Put                            shift and go to state 8
    Put2                           shift and go to state 9
    variable1                      shift and go to state 10
    empty                          shift and go to state 12

state 12

    (31) variable -> empty . empty
    (338) empty -> .

    $end            reduce using rule 338 (empty -> .)

    empty                          shift and go to state 20

state 13

    (25) procedimiento -> PARA . id BRACKET1 empty BRACKET2 cuerpo2 FIN cuerpo
    (26) procedimiento -> PARA . id BRACKET1 parametro BRACKET2 cuerpo2 FIN cuerpo
    (24) id -> . ID

    ID              shift and go to state 22

    id                             shift and go to state 21

state 14

    (28) main -> MAIN . BRACKET1 BRACKET2 cuerpo3 FIN cuerpo

    BRACKET1        shift and go to state 23


state 15

    (95) Put -> PUT . ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA
    (96) Put2 -> PUT . ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (97) Put2 -> PUT . ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (98) Put2 -> PUT . ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (99) Put2 -> PUT . ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (100) Put2 -> PUT . ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA

    ABRE_P          shift and go to state 24


state 16

    (38) variable1 -> DEF . VAR PUNTOCOMA
    (39) variable2 -> DEF . VAR IGUAL NUMERO PUNTOCOMA
    (40) variable2 -> DEF . VAR IGUAL RESTA NUMERO PUNTOCOMA

    VAR             shift and go to state 25


state 17

    (5) cuerpo -> COMMENT cuerpo .

    $end            reduce using rule 5 (cuerpo -> COMMENT cuerpo .)


state 18

    (29) variable -> variable1 cuerpo .

    $end            reduce using rule 29 (variable -> variable1 cuerpo .)


state 19

    (30) variable -> variable2 cuerpo .

    $end            reduce using rule 30 (variable -> variable2 cuerpo .)


state 20

    (31) variable -> empty empty .

    $end            reduce using rule 31 (variable -> empty empty .)


state 21

    (25) procedimiento -> PARA id . BRACKET1 empty BRACKET2 cuerpo2 FIN cuerpo
    (26) procedimiento -> PARA id . BRACKET1 parametro BRACKET2 cuerpo2 FIN cuerpo

    BRACKET1        shift and go to state 26


state 22

    (24) id -> ID .

    BRACKET1        reduce using rule 24 (id -> ID .)


state 23

    (28) main -> MAIN BRACKET1 . BRACKET2 cuerpo3 FIN cuerpo

    BRACKET2        shift and go to state 27


state 24

    (95) Put -> PUT ABRE_P . VAR COMA VAR CIERRA_P PUNTOCOMA
    (96) Put2 -> PUT ABRE_P . VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (97) Put2 -> PUT ABRE_P . VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (98) Put2 -> PUT ABRE_P . VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (99) Put2 -> PUT ABRE_P . VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (100) Put2 -> PUT ABRE_P . VAR COMA funcion CIERRA_P PUNTOCOMA

    VAR             shift and go to state 28


state 25

    (38) variable1 -> DEF VAR . PUNTOCOMA
    (39) variable2 -> DEF VAR . IGUAL NUMERO PUNTOCOMA
    (40) variable2 -> DEF VAR . IGUAL RESTA NUMERO PUNTOCOMA

    PUNTOCOMA       shift and go to state 29
    IGUAL           shift and go to state 30


state 26

    (25) procedimiento -> PARA id BRACKET1 . empty BRACKET2 cuerpo2 FIN cuerpo
    (26) procedimiento -> PARA id BRACKET1 . parametro BRACKET2 cuerpo2 FIN cuerpo
    (338) empty -> .
    (275) parametro -> . Var COMA parametro
    (276) parametro -> . Var empty empty
    (277) parametro -> . empty empty empty
    (180) Var -> . VAR

    BRACKET2        reduce using rule 338 (empty -> .)
    VAR             shift and go to state 34

    empty                          shift and go to state 31
    parametro                      shift and go to state 32
    Var                            shift and go to state 33

state 27

    (28) main -> MAIN BRACKET1 BRACKET2 . cuerpo3 FIN cuerpo
    (15) cuerpo3 -> . variablexdd
    (16) cuerpo3 -> . COMMENT cuerpo3
    (17) cuerpo3 -> . expresion
    (18) cuerpo3 -> . funcion
    (19) cuerpo3 -> . empty
    (20) cuerpo3 -> . Put
    (21) cuerpo3 -> . Put2
    (22) cuerpo3 -> . Run
    (23) cuerpo3 -> . Repeat
    (35) variablexdd -> . variable1 cuerpo3
    (36) variablexdd -> . variable2 cuerpo3
    (37) variablexdd -> . empty empty
    (41) expresion -> . funcion expresion
    (42) expresion -> . expresion_alge1 expresion
    (43) expresion -> . expresion_alge2 expresion
    (44) expresion -> . Sum expresion
    (45) expresion -> . Substr expresion
    (46) expresion -> . Mult expresion
    (47) expresion -> . Div expresion
    (48) expresion -> . funcion empty
    (49) expresion -> . expresion_alge1 empty
    (50) expresion -> . expresion_alge2 empty
    (51) expresion -> . Sum empty
    (52) expresion -> . Substr empty
    (53) expresion -> . Mult empty
    (54) expresion -> . Div empty
    (55) expresion -> . empty empty
    (82) funcion -> . Random empty
    (83) funcion -> . If empty
    (84) funcion -> . IfElse empty
    (85) funcion -> . Until empty
    (86) funcion -> . While empty
    (87) funcion -> . PrintLine empty
    (88) funcion -> . And empty
    (89) funcion -> . Or empty
    (90) funcion -> . Add empty
    (91) funcion -> . Put2 empty
    (92) funcion -> . Put empty
    (93) funcion -> . PUNTOCOMA funcion
    (94) funcion -> . empty empty
    (338) empty -> .
    (95) Put -> . PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA
    (96) Put2 -> . PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (97) Put2 -> . PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (98) Put2 -> . PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (99) Put2 -> . PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (100) Put2 -> . PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA
    (328) Run -> . RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA cuerpo3
    (267) Repeat -> . REPEAT NUMERO BRACKET1 ordenes BRACKET2 cuerpo3
    (38) variable1 -> . DEF VAR PUNTOCOMA
    (39) variable2 -> . DEF VAR IGUAL NUMERO PUNTOCOMA
    (40) variable2 -> . DEF VAR IGUAL RESTA NUMERO PUNTOCOMA
    (104) expresion_alge1 -> . NUMERO SUMA NUMERO
    (105) expresion_alge1 -> . NUMERO RESTA NUMERO
    (106) expresion_alge1 -> . NUMERO MULTI NUMERO
    (107) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (108) expresion_alge1 -> . RESTA NUMERO SUMA NUMERO
    (109) expresion_alge1 -> . RESTA NUMERO RESTA NUMERO
    (110) expresion_alge1 -> . RESTA NUMERO MULTI NUMERO
    (111) expresion_alge1 -> . RESTA NUMERO DIVISION NUMERO
    (112) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (113) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (114) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (115) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (116) Sum -> . SUM ABRE_P NUMERO COMA NUMERO CIERRA_P
    (117) Sum -> . SUM ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (118) Sum -> . SUM ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (119) Sum -> . SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (120) Sum -> . SUM ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (121) Sum -> . SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (122) Sum -> . SUM ABRE_P NUMERO COMA Var CIERRA_P
    (123) Sum -> . SUM ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (124) Sum -> . SUM ABRE_P Var COMA NUMERO CIERRA_P
    (125) Sum -> . SUM ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (126) Sum -> . SUM ABRE_P Var COMA Var CIERRA_P
    (127) Sum -> . SUM ABRE_P expresion_alge1 COMA Var CIERRA_P
    (128) Sum -> . SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (129) Sum -> . SUM ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (130) Sum -> . SUM ABRE_P Var COMA expresion_alge1 CIERRA_P
    (131) Sum -> . SUM ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P
    (132) Substr -> . SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P
    (133) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (134) Substr -> . SUBSTR ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (135) Substr -> . SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (136) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (137) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (138) Substr -> . SUBSTR ABRE_P NUMERO COMA Var CIERRA_P
    (139) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (140) Substr -> . SUBSTR ABRE_P Var COMA NUMERO CIERRA_P
    (141) Substr -> . SUBSTR ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (142) Substr -> . SUBSTR ABRE_P Var COMA Var CIERRA_P
    (143) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P
    (144) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (145) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (146) Substr -> . SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P
    (147) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P
    (148) Mult -> . MULT ABRE_P NUMERO COMA NUMERO CIERRA_P
    (149) Mult -> . MULT ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (150) Mult -> . MULT ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (151) Mult -> . MULT ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (152) Mult -> . MULT ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (153) Mult -> . MULT ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (154) Mult -> . MULT ABRE_P NUMERO COMA Var CIERRA_P
    (155) Mult -> . MULT ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (156) Mult -> . MULT ABRE_P Var COMA NUMERO CIERRA_P
    (157) Mult -> . MULT ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (158) Mult -> . MULT ABRE_P Var COMA Var CIERRA_P
    (159) Mult -> . MULT ABRE_P expresion_alge1 COMA Var CIERRA_P
    (160) Mult -> . MULT ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (161) Mult -> . MULT ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (162) Mult -> . MULT ABRE_P Var COMA expresion_alge1 CIERRA_P
    (163) Mult -> . MULT ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P
    (164) Div -> . DIV ABRE_P NUMERO COMA NUMERO CIERRA_P
    (165) Div -> . DIV ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (166) Div -> . DIV ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (167) Div -> . DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (168) Div -> . DIV ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (169) Div -> . DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (170) Div -> . DIV ABRE_P NUMERO COMA Var CIERRA_P
    (171) Div -> . DIV ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (172) Div -> . DIV ABRE_P Var COMA NUMERO CIERRA_P
    (173) Div -> . DIV ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (174) Div -> . DIV ABRE_P Var COMA Var CIERRA_P
    (175) Div -> . DIV ABRE_P expresion_alge1 COMA Var CIERRA_P
    (176) Div -> . DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (177) Div -> . DIV ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (178) Div -> . DIV ABRE_P Var COMA expresion_alge1 CIERRA_P
    (179) Div -> . DIV ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P
    (279) Random -> . RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA
    (264) If -> . IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2
    (265) IfElse -> . IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2
    (268) Until -> . UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2
    (266) While -> . WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2
    (337) PrintLine -> . PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA
    (256) And -> . AND ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (257) And -> . AND ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P
    (258) And -> . AND ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P
    (259) And -> . AND ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P
    (260) Or -> . OR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (261) Or -> . OR ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P
    (262) Or -> . OR ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P
    (263) Or -> . OR ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P
    (269) Add -> . ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA
    (270) Add -> . ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (271) Add -> . ADD ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (272) Add -> . ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (273) Add -> . ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (274) Add -> . ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA

  ! shift/reduce conflict for PUNTOCOMA resolved as shift
  ! shift/reduce conflict for PUT resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for ABRE_P resolved as shift
  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for SUBSTR resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for RANDOM resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for IFELSE resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for PRINTLINE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
    COMMENT         shift and go to state 37
    PUNTOCOMA       shift and go to state 62
    FIN             reduce using rule 338 (empty -> .)
    PUT             shift and go to state 15
    RUN             shift and go to state 66
    REPEAT          shift and go to state 67
    DEF             shift and go to state 16
    NUMERO          shift and go to state 64
    RESTA           shift and go to state 65
    ABRE_P          shift and go to state 63
    SUM             shift and go to state 70
    SUBSTR          shift and go to state 71
    MULT            shift and go to state 68
    DIV             shift and go to state 69
    RANDOM          shift and go to state 72
    IF              shift and go to state 73
    IFELSE          shift and go to state 74
    UNTIL           shift and go to state 75
    WHILE           shift and go to state 76
    PRINTLINE       shift and go to state 77
    AND             shift and go to state 78
    OR              shift and go to state 79
    ADD             shift and go to state 80

  ! PUNTOCOMA       [ reduce using rule 338 (empty -> .) ]
  ! NUMERO          [ reduce using rule 338 (empty -> .) ]
  ! RESTA           [ reduce using rule 338 (empty -> .) ]
  ! ABRE_P          [ reduce using rule 338 (empty -> .) ]
  ! SUM             [ reduce using rule 338 (empty -> .) ]
  ! SUBSTR          [ reduce using rule 338 (empty -> .) ]
  ! MULT            [ reduce using rule 338 (empty -> .) ]
  ! DIV             [ reduce using rule 338 (empty -> .) ]
  ! RANDOM          [ reduce using rule 338 (empty -> .) ]
  ! IF              [ reduce using rule 338 (empty -> .) ]
  ! IFELSE          [ reduce using rule 338 (empty -> .) ]
  ! UNTIL           [ reduce using rule 338 (empty -> .) ]
  ! WHILE           [ reduce using rule 338 (empty -> .) ]
  ! PRINTLINE       [ reduce using rule 338 (empty -> .) ]
  ! AND             [ reduce using rule 338 (empty -> .) ]
  ! OR              [ reduce using rule 338 (empty -> .) ]
  ! ADD             [ reduce using rule 338 (empty -> .) ]
  ! PUT             [ reduce using rule 338 (empty -> .) ]

    cuerpo3                        shift and go to state 35
    variablexdd                    shift and go to state 36
    expresion                      shift and go to state 38
    funcion                        shift and go to state 39
    empty                          shift and go to state 40
    Put                            shift and go to state 41
    Put2                           shift and go to state 42
    Run                            shift and go to state 43
    Repeat                         shift and go to state 44
    variable1                      shift and go to state 45
    variable2                      shift and go to state 46
    expresion_alge1                shift and go to state 47
    expresion_alge2                shift and go to state 48
    Sum                            shift and go to state 49
    Substr                         shift and go to state 50
    Mult                           shift and go to state 51
    Div                            shift and go to state 52
    Random                         shift and go to state 53
    If                             shift and go to state 54
    IfElse                         shift and go to state 55
    Until                          shift and go to state 56
    While                          shift and go to state 57
    PrintLine                      shift and go to state 58
    And                            shift and go to state 59
    Or                             shift and go to state 60
    Add                            shift and go to state 61

state 28

    (95) Put -> PUT ABRE_P VAR . COMA VAR CIERRA_P PUNTOCOMA
    (96) Put2 -> PUT ABRE_P VAR . COMA NUMERO CIERRA_P PUNTOCOMA
    (97) Put2 -> PUT ABRE_P VAR . COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (98) Put2 -> PUT ABRE_P VAR . COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (99) Put2 -> PUT ABRE_P VAR . COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (100) Put2 -> PUT ABRE_P VAR . COMA funcion CIERRA_P PUNTOCOMA

    COMA            shift and go to state 81


state 29

    (38) variable1 -> DEF VAR PUNTOCOMA .

    COMMENT         reduce using rule 38 (variable1 -> DEF VAR PUNTOCOMA .)
    PARA            reduce using rule 38 (variable1 -> DEF VAR PUNTOCOMA .)
    MAIN            reduce using rule 38 (variable1 -> DEF VAR PUNTOCOMA .)
    PUT             reduce using rule 38 (variable1 -> DEF VAR PUNTOCOMA .)
    DEF             reduce using rule 38 (variable1 -> DEF VAR PUNTOCOMA .)
    $end            reduce using rule 38 (variable1 -> DEF VAR PUNTOCOMA .)
    PUNTOCOMA       reduce using rule 38 (variable1 -> DEF VAR PUNTOCOMA .)
    RUN             reduce using rule 38 (variable1 -> DEF VAR PUNTOCOMA .)
    REPEAT          reduce using rule 38 (variable1 -> DEF VAR PUNTOCOMA .)
    NUMERO          reduce using rule 38 (variable1 -> DEF VAR PUNTOCOMA .)
    RESTA           reduce using rule 38 (variable1 -> DEF VAR PUNTOCOMA .)
    ABRE_P          reduce using rule 38 (variable1 -> DEF VAR PUNTOCOMA .)
    SUM             reduce using rule 38 (variable1 -> DEF VAR PUNTOCOMA .)
    SUBSTR          reduce using rule 38 (variable1 -> DEF VAR PUNTOCOMA .)
    MULT            reduce using rule 38 (variable1 -> DEF VAR PUNTOCOMA .)
    DIV             reduce using rule 38 (variable1 -> DEF VAR PUNTOCOMA .)
    RANDOM          reduce using rule 38 (variable1 -> DEF VAR PUNTOCOMA .)
    IF              reduce using rule 38 (variable1 -> DEF VAR PUNTOCOMA .)
    IFELSE          reduce using rule 38 (variable1 -> DEF VAR PUNTOCOMA .)
    UNTIL           reduce using rule 38 (variable1 -> DEF VAR PUNTOCOMA .)
    WHILE           reduce using rule 38 (variable1 -> DEF VAR PUNTOCOMA .)
    PRINTLINE       reduce using rule 38 (variable1 -> DEF VAR PUNTOCOMA .)
    AND             reduce using rule 38 (variable1 -> DEF VAR PUNTOCOMA .)
    OR              reduce using rule 38 (variable1 -> DEF VAR PUNTOCOMA .)
    ADD             reduce using rule 38 (variable1 -> DEF VAR PUNTOCOMA .)
    FIN             reduce using rule 38 (variable1 -> DEF VAR PUNTOCOMA .)


state 30

    (39) variable2 -> DEF VAR IGUAL . NUMERO PUNTOCOMA
    (40) variable2 -> DEF VAR IGUAL . RESTA NUMERO PUNTOCOMA

    NUMERO          shift and go to state 82
    RESTA           shift and go to state 83


state 31

    (25) procedimiento -> PARA id BRACKET1 empty . BRACKET2 cuerpo2 FIN cuerpo
    (277) parametro -> empty . empty empty
    (338) empty -> .

  ! shift/reduce conflict for BRACKET2 resolved as shift
    BRACKET2        shift and go to state 85

  ! BRACKET2        [ reduce using rule 338 (empty -> .) ]

    empty                          shift and go to state 84

state 32

    (26) procedimiento -> PARA id BRACKET1 parametro . BRACKET2 cuerpo2 FIN cuerpo

    BRACKET2        shift and go to state 86


state 33

    (275) parametro -> Var . COMA parametro
    (276) parametro -> Var . empty empty
    (338) empty -> .

    COMA            shift and go to state 87
    BRACKET2        reduce using rule 338 (empty -> .)

    empty                          shift and go to state 88

state 34

    (180) Var -> VAR .

    COMA            reduce using rule 180 (Var -> VAR .)
    BRACKET2        reduce using rule 180 (Var -> VAR .)
    CIERRA_P        reduce using rule 180 (Var -> VAR .)
    PUNTOCOMA       reduce using rule 180 (Var -> VAR .)


state 35

    (28) main -> MAIN BRACKET1 BRACKET2 cuerpo3 . FIN cuerpo

    FIN             shift and go to state 89


state 36

    (15) cuerpo3 -> variablexdd .

    FIN             reduce using rule 15 (cuerpo3 -> variablexdd .)


state 37

    (16) cuerpo3 -> COMMENT . cuerpo3
    (15) cuerpo3 -> . variablexdd
    (16) cuerpo3 -> . COMMENT cuerpo3
    (17) cuerpo3 -> . expresion
    (18) cuerpo3 -> . funcion
    (19) cuerpo3 -> . empty
    (20) cuerpo3 -> . Put
    (21) cuerpo3 -> . Put2
    (22) cuerpo3 -> . Run
    (23) cuerpo3 -> . Repeat
    (35) variablexdd -> . variable1 cuerpo3
    (36) variablexdd -> . variable2 cuerpo3
    (37) variablexdd -> . empty empty
    (41) expresion -> . funcion expresion
    (42) expresion -> . expresion_alge1 expresion
    (43) expresion -> . expresion_alge2 expresion
    (44) expresion -> . Sum expresion
    (45) expresion -> . Substr expresion
    (46) expresion -> . Mult expresion
    (47) expresion -> . Div expresion
    (48) expresion -> . funcion empty
    (49) expresion -> . expresion_alge1 empty
    (50) expresion -> . expresion_alge2 empty
    (51) expresion -> . Sum empty
    (52) expresion -> . Substr empty
    (53) expresion -> . Mult empty
    (54) expresion -> . Div empty
    (55) expresion -> . empty empty
    (82) funcion -> . Random empty
    (83) funcion -> . If empty
    (84) funcion -> . IfElse empty
    (85) funcion -> . Until empty
    (86) funcion -> . While empty
    (87) funcion -> . PrintLine empty
    (88) funcion -> . And empty
    (89) funcion -> . Or empty
    (90) funcion -> . Add empty
    (91) funcion -> . Put2 empty
    (92) funcion -> . Put empty
    (93) funcion -> . PUNTOCOMA funcion
    (94) funcion -> . empty empty
    (338) empty -> .
    (95) Put -> . PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA
    (96) Put2 -> . PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (97) Put2 -> . PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (98) Put2 -> . PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (99) Put2 -> . PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (100) Put2 -> . PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA
    (328) Run -> . RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA cuerpo3
    (267) Repeat -> . REPEAT NUMERO BRACKET1 ordenes BRACKET2 cuerpo3
    (38) variable1 -> . DEF VAR PUNTOCOMA
    (39) variable2 -> . DEF VAR IGUAL NUMERO PUNTOCOMA
    (40) variable2 -> . DEF VAR IGUAL RESTA NUMERO PUNTOCOMA
    (104) expresion_alge1 -> . NUMERO SUMA NUMERO
    (105) expresion_alge1 -> . NUMERO RESTA NUMERO
    (106) expresion_alge1 -> . NUMERO MULTI NUMERO
    (107) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (108) expresion_alge1 -> . RESTA NUMERO SUMA NUMERO
    (109) expresion_alge1 -> . RESTA NUMERO RESTA NUMERO
    (110) expresion_alge1 -> . RESTA NUMERO MULTI NUMERO
    (111) expresion_alge1 -> . RESTA NUMERO DIVISION NUMERO
    (112) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (113) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (114) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (115) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (116) Sum -> . SUM ABRE_P NUMERO COMA NUMERO CIERRA_P
    (117) Sum -> . SUM ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (118) Sum -> . SUM ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (119) Sum -> . SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (120) Sum -> . SUM ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (121) Sum -> . SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (122) Sum -> . SUM ABRE_P NUMERO COMA Var CIERRA_P
    (123) Sum -> . SUM ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (124) Sum -> . SUM ABRE_P Var COMA NUMERO CIERRA_P
    (125) Sum -> . SUM ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (126) Sum -> . SUM ABRE_P Var COMA Var CIERRA_P
    (127) Sum -> . SUM ABRE_P expresion_alge1 COMA Var CIERRA_P
    (128) Sum -> . SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (129) Sum -> . SUM ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (130) Sum -> . SUM ABRE_P Var COMA expresion_alge1 CIERRA_P
    (131) Sum -> . SUM ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P
    (132) Substr -> . SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P
    (133) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (134) Substr -> . SUBSTR ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (135) Substr -> . SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (136) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (137) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (138) Substr -> . SUBSTR ABRE_P NUMERO COMA Var CIERRA_P
    (139) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (140) Substr -> . SUBSTR ABRE_P Var COMA NUMERO CIERRA_P
    (141) Substr -> . SUBSTR ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (142) Substr -> . SUBSTR ABRE_P Var COMA Var CIERRA_P
    (143) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P
    (144) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (145) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (146) Substr -> . SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P
    (147) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P
    (148) Mult -> . MULT ABRE_P NUMERO COMA NUMERO CIERRA_P
    (149) Mult -> . MULT ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (150) Mult -> . MULT ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (151) Mult -> . MULT ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (152) Mult -> . MULT ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (153) Mult -> . MULT ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (154) Mult -> . MULT ABRE_P NUMERO COMA Var CIERRA_P
    (155) Mult -> . MULT ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (156) Mult -> . MULT ABRE_P Var COMA NUMERO CIERRA_P
    (157) Mult -> . MULT ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (158) Mult -> . MULT ABRE_P Var COMA Var CIERRA_P
    (159) Mult -> . MULT ABRE_P expresion_alge1 COMA Var CIERRA_P
    (160) Mult -> . MULT ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (161) Mult -> . MULT ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (162) Mult -> . MULT ABRE_P Var COMA expresion_alge1 CIERRA_P
    (163) Mult -> . MULT ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P
    (164) Div -> . DIV ABRE_P NUMERO COMA NUMERO CIERRA_P
    (165) Div -> . DIV ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (166) Div -> . DIV ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (167) Div -> . DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (168) Div -> . DIV ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (169) Div -> . DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (170) Div -> . DIV ABRE_P NUMERO COMA Var CIERRA_P
    (171) Div -> . DIV ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (172) Div -> . DIV ABRE_P Var COMA NUMERO CIERRA_P
    (173) Div -> . DIV ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (174) Div -> . DIV ABRE_P Var COMA Var CIERRA_P
    (175) Div -> . DIV ABRE_P expresion_alge1 COMA Var CIERRA_P
    (176) Div -> . DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (177) Div -> . DIV ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (178) Div -> . DIV ABRE_P Var COMA expresion_alge1 CIERRA_P
    (179) Div -> . DIV ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P
    (279) Random -> . RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA
    (264) If -> . IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2
    (265) IfElse -> . IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2
    (268) Until -> . UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2
    (266) While -> . WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2
    (337) PrintLine -> . PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA
    (256) And -> . AND ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (257) And -> . AND ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P
    (258) And -> . AND ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P
    (259) And -> . AND ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P
    (260) Or -> . OR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (261) Or -> . OR ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P
    (262) Or -> . OR ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P
    (263) Or -> . OR ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P
    (269) Add -> . ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA
    (270) Add -> . ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (271) Add -> . ADD ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (272) Add -> . ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (273) Add -> . ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (274) Add -> . ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA

  ! shift/reduce conflict for PUNTOCOMA resolved as shift
  ! shift/reduce conflict for PUT resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for ABRE_P resolved as shift
  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for SUBSTR resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for RANDOM resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for IFELSE resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for PRINTLINE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
    COMMENT         shift and go to state 37
    PUNTOCOMA       shift and go to state 62
    FIN             reduce using rule 338 (empty -> .)
    PUT             shift and go to state 15
    RUN             shift and go to state 66
    REPEAT          shift and go to state 67
    DEF             shift and go to state 16
    NUMERO          shift and go to state 64
    RESTA           shift and go to state 65
    ABRE_P          shift and go to state 63
    SUM             shift and go to state 70
    SUBSTR          shift and go to state 71
    MULT            shift and go to state 68
    DIV             shift and go to state 69
    RANDOM          shift and go to state 72
    IF              shift and go to state 73
    IFELSE          shift and go to state 74
    UNTIL           shift and go to state 75
    WHILE           shift and go to state 76
    PRINTLINE       shift and go to state 77
    AND             shift and go to state 78
    OR              shift and go to state 79
    ADD             shift and go to state 80

  ! PUNTOCOMA       [ reduce using rule 338 (empty -> .) ]
  ! NUMERO          [ reduce using rule 338 (empty -> .) ]
  ! RESTA           [ reduce using rule 338 (empty -> .) ]
  ! ABRE_P          [ reduce using rule 338 (empty -> .) ]
  ! SUM             [ reduce using rule 338 (empty -> .) ]
  ! SUBSTR          [ reduce using rule 338 (empty -> .) ]
  ! MULT            [ reduce using rule 338 (empty -> .) ]
  ! DIV             [ reduce using rule 338 (empty -> .) ]
  ! RANDOM          [ reduce using rule 338 (empty -> .) ]
  ! IF              [ reduce using rule 338 (empty -> .) ]
  ! IFELSE          [ reduce using rule 338 (empty -> .) ]
  ! UNTIL           [ reduce using rule 338 (empty -> .) ]
  ! WHILE           [ reduce using rule 338 (empty -> .) ]
  ! PRINTLINE       [ reduce using rule 338 (empty -> .) ]
  ! AND             [ reduce using rule 338 (empty -> .) ]
  ! OR              [ reduce using rule 338 (empty -> .) ]
  ! ADD             [ reduce using rule 338 (empty -> .) ]
  ! PUT             [ reduce using rule 338 (empty -> .) ]

    cuerpo3                        shift and go to state 90
    variablexdd                    shift and go to state 36
    expresion                      shift and go to state 38
    funcion                        shift and go to state 39
    empty                          shift and go to state 40
    Put                            shift and go to state 41
    Put2                           shift and go to state 42
    Run                            shift and go to state 43
    Repeat                         shift and go to state 44
    variable1                      shift and go to state 45
    variable2                      shift and go to state 46
    expresion_alge1                shift and go to state 47
    expresion_alge2                shift and go to state 48
    Sum                            shift and go to state 49
    Substr                         shift and go to state 50
    Mult                           shift and go to state 51
    Div                            shift and go to state 52
    Random                         shift and go to state 53
    If                             shift and go to state 54
    IfElse                         shift and go to state 55
    Until                          shift and go to state 56
    While                          shift and go to state 57
    PrintLine                      shift and go to state 58
    And                            shift and go to state 59
    Or                             shift and go to state 60
    Add                            shift and go to state 61

state 38

    (17) cuerpo3 -> expresion .

    FIN             reduce using rule 17 (cuerpo3 -> expresion .)


state 39

    (18) cuerpo3 -> funcion .
    (41) expresion -> funcion . expresion
    (48) expresion -> funcion . empty
    (41) expresion -> . funcion expresion
    (42) expresion -> . expresion_alge1 expresion
    (43) expresion -> . expresion_alge2 expresion
    (44) expresion -> . Sum expresion
    (45) expresion -> . Substr expresion
    (46) expresion -> . Mult expresion
    (47) expresion -> . Div expresion
    (48) expresion -> . funcion empty
    (49) expresion -> . expresion_alge1 empty
    (50) expresion -> . expresion_alge2 empty
    (51) expresion -> . Sum empty
    (52) expresion -> . Substr empty
    (53) expresion -> . Mult empty
    (54) expresion -> . Div empty
    (55) expresion -> . empty empty
    (338) empty -> .
    (82) funcion -> . Random empty
    (83) funcion -> . If empty
    (84) funcion -> . IfElse empty
    (85) funcion -> . Until empty
    (86) funcion -> . While empty
    (87) funcion -> . PrintLine empty
    (88) funcion -> . And empty
    (89) funcion -> . Or empty
    (90) funcion -> . Add empty
    (91) funcion -> . Put2 empty
    (92) funcion -> . Put empty
    (93) funcion -> . PUNTOCOMA funcion
    (94) funcion -> . empty empty
    (104) expresion_alge1 -> . NUMERO SUMA NUMERO
    (105) expresion_alge1 -> . NUMERO RESTA NUMERO
    (106) expresion_alge1 -> . NUMERO MULTI NUMERO
    (107) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (108) expresion_alge1 -> . RESTA NUMERO SUMA NUMERO
    (109) expresion_alge1 -> . RESTA NUMERO RESTA NUMERO
    (110) expresion_alge1 -> . RESTA NUMERO MULTI NUMERO
    (111) expresion_alge1 -> . RESTA NUMERO DIVISION NUMERO
    (112) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (113) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (114) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (115) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (116) Sum -> . SUM ABRE_P NUMERO COMA NUMERO CIERRA_P
    (117) Sum -> . SUM ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (118) Sum -> . SUM ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (119) Sum -> . SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (120) Sum -> . SUM ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (121) Sum -> . SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (122) Sum -> . SUM ABRE_P NUMERO COMA Var CIERRA_P
    (123) Sum -> . SUM ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (124) Sum -> . SUM ABRE_P Var COMA NUMERO CIERRA_P
    (125) Sum -> . SUM ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (126) Sum -> . SUM ABRE_P Var COMA Var CIERRA_P
    (127) Sum -> . SUM ABRE_P expresion_alge1 COMA Var CIERRA_P
    (128) Sum -> . SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (129) Sum -> . SUM ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (130) Sum -> . SUM ABRE_P Var COMA expresion_alge1 CIERRA_P
    (131) Sum -> . SUM ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P
    (132) Substr -> . SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P
    (133) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (134) Substr -> . SUBSTR ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (135) Substr -> . SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (136) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (137) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (138) Substr -> . SUBSTR ABRE_P NUMERO COMA Var CIERRA_P
    (139) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (140) Substr -> . SUBSTR ABRE_P Var COMA NUMERO CIERRA_P
    (141) Substr -> . SUBSTR ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (142) Substr -> . SUBSTR ABRE_P Var COMA Var CIERRA_P
    (143) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P
    (144) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (145) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (146) Substr -> . SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P
    (147) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P
    (148) Mult -> . MULT ABRE_P NUMERO COMA NUMERO CIERRA_P
    (149) Mult -> . MULT ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (150) Mult -> . MULT ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (151) Mult -> . MULT ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (152) Mult -> . MULT ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (153) Mult -> . MULT ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (154) Mult -> . MULT ABRE_P NUMERO COMA Var CIERRA_P
    (155) Mult -> . MULT ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (156) Mult -> . MULT ABRE_P Var COMA NUMERO CIERRA_P
    (157) Mult -> . MULT ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (158) Mult -> . MULT ABRE_P Var COMA Var CIERRA_P
    (159) Mult -> . MULT ABRE_P expresion_alge1 COMA Var CIERRA_P
    (160) Mult -> . MULT ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (161) Mult -> . MULT ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (162) Mult -> . MULT ABRE_P Var COMA expresion_alge1 CIERRA_P
    (163) Mult -> . MULT ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P
    (164) Div -> . DIV ABRE_P NUMERO COMA NUMERO CIERRA_P
    (165) Div -> . DIV ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (166) Div -> . DIV ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (167) Div -> . DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (168) Div -> . DIV ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (169) Div -> . DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (170) Div -> . DIV ABRE_P NUMERO COMA Var CIERRA_P
    (171) Div -> . DIV ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (172) Div -> . DIV ABRE_P Var COMA NUMERO CIERRA_P
    (173) Div -> . DIV ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (174) Div -> . DIV ABRE_P Var COMA Var CIERRA_P
    (175) Div -> . DIV ABRE_P expresion_alge1 COMA Var CIERRA_P
    (176) Div -> . DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (177) Div -> . DIV ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (178) Div -> . DIV ABRE_P Var COMA expresion_alge1 CIERRA_P
    (179) Div -> . DIV ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P
    (279) Random -> . RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA
    (264) If -> . IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2
    (265) IfElse -> . IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2
    (268) Until -> . UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2
    (266) While -> . WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2
    (337) PrintLine -> . PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA
    (256) And -> . AND ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (257) And -> . AND ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P
    (258) And -> . AND ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P
    (259) And -> . AND ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P
    (260) Or -> . OR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (261) Or -> . OR ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P
    (262) Or -> . OR ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P
    (263) Or -> . OR ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P
    (269) Add -> . ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA
    (270) Add -> . ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (271) Add -> . ADD ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (272) Add -> . ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (273) Add -> . ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (274) Add -> . ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (96) Put2 -> . PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (97) Put2 -> . PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (98) Put2 -> . PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (99) Put2 -> . PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (100) Put2 -> . PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA
    (95) Put -> . PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA

  ! reduce/reduce conflict for FIN resolved using rule 18 (cuerpo3 -> funcion .)
  ! shift/reduce conflict for PUNTOCOMA resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for ABRE_P resolved as shift
  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for SUBSTR resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for RANDOM resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for IFELSE resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for PRINTLINE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for PUT resolved as shift
    FIN             reduce using rule 18 (cuerpo3 -> funcion .)
    PUNTOCOMA       shift and go to state 62
    NUMERO          shift and go to state 64
    RESTA           shift and go to state 65
    ABRE_P          shift and go to state 63
    SUM             shift and go to state 70
    SUBSTR          shift and go to state 71
    MULT            shift and go to state 68
    DIV             shift and go to state 69
    RANDOM          shift and go to state 72
    IF              shift and go to state 73
    IFELSE          shift and go to state 74
    UNTIL           shift and go to state 75
    WHILE           shift and go to state 76
    PRINTLINE       shift and go to state 77
    AND             shift and go to state 78
    OR              shift and go to state 79
    ADD             shift and go to state 80
    PUT             shift and go to state 96

  ! FIN             [ reduce using rule 338 (empty -> .) ]
  ! PUNTOCOMA       [ reduce using rule 338 (empty -> .) ]
  ! NUMERO          [ reduce using rule 338 (empty -> .) ]
  ! RESTA           [ reduce using rule 338 (empty -> .) ]
  ! ABRE_P          [ reduce using rule 338 (empty -> .) ]
  ! SUM             [ reduce using rule 338 (empty -> .) ]
  ! SUBSTR          [ reduce using rule 338 (empty -> .) ]
  ! MULT            [ reduce using rule 338 (empty -> .) ]
  ! DIV             [ reduce using rule 338 (empty -> .) ]
  ! RANDOM          [ reduce using rule 338 (empty -> .) ]
  ! IF              [ reduce using rule 338 (empty -> .) ]
  ! IFELSE          [ reduce using rule 338 (empty -> .) ]
  ! UNTIL           [ reduce using rule 338 (empty -> .) ]
  ! WHILE           [ reduce using rule 338 (empty -> .) ]
  ! PRINTLINE       [ reduce using rule 338 (empty -> .) ]
  ! AND             [ reduce using rule 338 (empty -> .) ]
  ! OR              [ reduce using rule 338 (empty -> .) ]
  ! ADD             [ reduce using rule 338 (empty -> .) ]
  ! PUT             [ reduce using rule 338 (empty -> .) ]

    funcion                        shift and go to state 91
    expresion                      shift and go to state 92
    empty                          shift and go to state 93
    expresion_alge1                shift and go to state 47
    expresion_alge2                shift and go to state 48
    Sum                            shift and go to state 49
    Substr                         shift and go to state 50
    Mult                           shift and go to state 51
    Div                            shift and go to state 52
    Random                         shift and go to state 53
    If                             shift and go to state 54
    IfElse                         shift and go to state 55
    Until                          shift and go to state 56
    While                          shift and go to state 57
    PrintLine                      shift and go to state 58
    And                            shift and go to state 59
    Or                             shift and go to state 60
    Add                            shift and go to state 61
    Put2                           shift and go to state 94
    Put                            shift and go to state 95

state 40

    (19) cuerpo3 -> empty .
    (37) variablexdd -> empty . empty
    (55) expresion -> empty . empty
    (94) funcion -> empty . empty
    (338) empty -> .

  ! reduce/reduce conflict for FIN resolved using rule 19 (cuerpo3 -> empty .)
    FIN             reduce using rule 19 (cuerpo3 -> empty .)
    PUNTOCOMA       reduce using rule 338 (empty -> .)
    NUMERO          reduce using rule 338 (empty -> .)
    RESTA           reduce using rule 338 (empty -> .)
    ABRE_P          reduce using rule 338 (empty -> .)
    SUM             reduce using rule 338 (empty -> .)
    SUBSTR          reduce using rule 338 (empty -> .)
    MULT            reduce using rule 338 (empty -> .)
    DIV             reduce using rule 338 (empty -> .)
    RANDOM          reduce using rule 338 (empty -> .)
    IF              reduce using rule 338 (empty -> .)
    IFELSE          reduce using rule 338 (empty -> .)
    UNTIL           reduce using rule 338 (empty -> .)
    WHILE           reduce using rule 338 (empty -> .)
    PRINTLINE       reduce using rule 338 (empty -> .)
    AND             reduce using rule 338 (empty -> .)
    OR              reduce using rule 338 (empty -> .)
    ADD             reduce using rule 338 (empty -> .)
    PUT             reduce using rule 338 (empty -> .)

  ! FIN             [ reduce using rule 338 (empty -> .) ]

    empty                          shift and go to state 97

state 41

    (20) cuerpo3 -> Put .
    (92) funcion -> Put . empty
    (338) empty -> .

  ! reduce/reduce conflict for FIN resolved using rule 20 (cuerpo3 -> Put .)
    FIN             reduce using rule 20 (cuerpo3 -> Put .)
    PUNTOCOMA       reduce using rule 338 (empty -> .)
    NUMERO          reduce using rule 338 (empty -> .)
    RESTA           reduce using rule 338 (empty -> .)
    ABRE_P          reduce using rule 338 (empty -> .)
    SUM             reduce using rule 338 (empty -> .)
    SUBSTR          reduce using rule 338 (empty -> .)
    MULT            reduce using rule 338 (empty -> .)
    DIV             reduce using rule 338 (empty -> .)
    RANDOM          reduce using rule 338 (empty -> .)
    IF              reduce using rule 338 (empty -> .)
    IFELSE          reduce using rule 338 (empty -> .)
    UNTIL           reduce using rule 338 (empty -> .)
    WHILE           reduce using rule 338 (empty -> .)
    PRINTLINE       reduce using rule 338 (empty -> .)
    AND             reduce using rule 338 (empty -> .)
    OR              reduce using rule 338 (empty -> .)
    ADD             reduce using rule 338 (empty -> .)
    PUT             reduce using rule 338 (empty -> .)

  ! FIN             [ reduce using rule 338 (empty -> .) ]

    empty                          shift and go to state 98

state 42

    (21) cuerpo3 -> Put2 .
    (91) funcion -> Put2 . empty
    (338) empty -> .

  ! reduce/reduce conflict for FIN resolved using rule 21 (cuerpo3 -> Put2 .)
    FIN             reduce using rule 21 (cuerpo3 -> Put2 .)
    PUNTOCOMA       reduce using rule 338 (empty -> .)
    NUMERO          reduce using rule 338 (empty -> .)
    RESTA           reduce using rule 338 (empty -> .)
    ABRE_P          reduce using rule 338 (empty -> .)
    SUM             reduce using rule 338 (empty -> .)
    SUBSTR          reduce using rule 338 (empty -> .)
    MULT            reduce using rule 338 (empty -> .)
    DIV             reduce using rule 338 (empty -> .)
    RANDOM          reduce using rule 338 (empty -> .)
    IF              reduce using rule 338 (empty -> .)
    IFELSE          reduce using rule 338 (empty -> .)
    UNTIL           reduce using rule 338 (empty -> .)
    WHILE           reduce using rule 338 (empty -> .)
    PRINTLINE       reduce using rule 338 (empty -> .)
    AND             reduce using rule 338 (empty -> .)
    OR              reduce using rule 338 (empty -> .)
    ADD             reduce using rule 338 (empty -> .)
    PUT             reduce using rule 338 (empty -> .)

  ! FIN             [ reduce using rule 338 (empty -> .) ]

    empty                          shift and go to state 99

state 43

    (22) cuerpo3 -> Run .

    FIN             reduce using rule 22 (cuerpo3 -> Run .)


state 44

    (23) cuerpo3 -> Repeat .

    FIN             reduce using rule 23 (cuerpo3 -> Repeat .)


state 45

    (35) variablexdd -> variable1 . cuerpo3
    (15) cuerpo3 -> . variablexdd
    (16) cuerpo3 -> . COMMENT cuerpo3
    (17) cuerpo3 -> . expresion
    (18) cuerpo3 -> . funcion
    (19) cuerpo3 -> . empty
    (20) cuerpo3 -> . Put
    (21) cuerpo3 -> . Put2
    (22) cuerpo3 -> . Run
    (23) cuerpo3 -> . Repeat
    (35) variablexdd -> . variable1 cuerpo3
    (36) variablexdd -> . variable2 cuerpo3
    (37) variablexdd -> . empty empty
    (41) expresion -> . funcion expresion
    (42) expresion -> . expresion_alge1 expresion
    (43) expresion -> . expresion_alge2 expresion
    (44) expresion -> . Sum expresion
    (45) expresion -> . Substr expresion
    (46) expresion -> . Mult expresion
    (47) expresion -> . Div expresion
    (48) expresion -> . funcion empty
    (49) expresion -> . expresion_alge1 empty
    (50) expresion -> . expresion_alge2 empty
    (51) expresion -> . Sum empty
    (52) expresion -> . Substr empty
    (53) expresion -> . Mult empty
    (54) expresion -> . Div empty
    (55) expresion -> . empty empty
    (82) funcion -> . Random empty
    (83) funcion -> . If empty
    (84) funcion -> . IfElse empty
    (85) funcion -> . Until empty
    (86) funcion -> . While empty
    (87) funcion -> . PrintLine empty
    (88) funcion -> . And empty
    (89) funcion -> . Or empty
    (90) funcion -> . Add empty
    (91) funcion -> . Put2 empty
    (92) funcion -> . Put empty
    (93) funcion -> . PUNTOCOMA funcion
    (94) funcion -> . empty empty
    (338) empty -> .
    (95) Put -> . PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA
    (96) Put2 -> . PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (97) Put2 -> . PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (98) Put2 -> . PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (99) Put2 -> . PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (100) Put2 -> . PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA
    (328) Run -> . RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA cuerpo3
    (267) Repeat -> . REPEAT NUMERO BRACKET1 ordenes BRACKET2 cuerpo3
    (38) variable1 -> . DEF VAR PUNTOCOMA
    (39) variable2 -> . DEF VAR IGUAL NUMERO PUNTOCOMA
    (40) variable2 -> . DEF VAR IGUAL RESTA NUMERO PUNTOCOMA
    (104) expresion_alge1 -> . NUMERO SUMA NUMERO
    (105) expresion_alge1 -> . NUMERO RESTA NUMERO
    (106) expresion_alge1 -> . NUMERO MULTI NUMERO
    (107) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (108) expresion_alge1 -> . RESTA NUMERO SUMA NUMERO
    (109) expresion_alge1 -> . RESTA NUMERO RESTA NUMERO
    (110) expresion_alge1 -> . RESTA NUMERO MULTI NUMERO
    (111) expresion_alge1 -> . RESTA NUMERO DIVISION NUMERO
    (112) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (113) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (114) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (115) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (116) Sum -> . SUM ABRE_P NUMERO COMA NUMERO CIERRA_P
    (117) Sum -> . SUM ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (118) Sum -> . SUM ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (119) Sum -> . SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (120) Sum -> . SUM ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (121) Sum -> . SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (122) Sum -> . SUM ABRE_P NUMERO COMA Var CIERRA_P
    (123) Sum -> . SUM ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (124) Sum -> . SUM ABRE_P Var COMA NUMERO CIERRA_P
    (125) Sum -> . SUM ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (126) Sum -> . SUM ABRE_P Var COMA Var CIERRA_P
    (127) Sum -> . SUM ABRE_P expresion_alge1 COMA Var CIERRA_P
    (128) Sum -> . SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (129) Sum -> . SUM ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (130) Sum -> . SUM ABRE_P Var COMA expresion_alge1 CIERRA_P
    (131) Sum -> . SUM ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P
    (132) Substr -> . SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P
    (133) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (134) Substr -> . SUBSTR ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (135) Substr -> . SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (136) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (137) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (138) Substr -> . SUBSTR ABRE_P NUMERO COMA Var CIERRA_P
    (139) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (140) Substr -> . SUBSTR ABRE_P Var COMA NUMERO CIERRA_P
    (141) Substr -> . SUBSTR ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (142) Substr -> . SUBSTR ABRE_P Var COMA Var CIERRA_P
    (143) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P
    (144) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (145) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (146) Substr -> . SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P
    (147) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P
    (148) Mult -> . MULT ABRE_P NUMERO COMA NUMERO CIERRA_P
    (149) Mult -> . MULT ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (150) Mult -> . MULT ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (151) Mult -> . MULT ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (152) Mult -> . MULT ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (153) Mult -> . MULT ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (154) Mult -> . MULT ABRE_P NUMERO COMA Var CIERRA_P
    (155) Mult -> . MULT ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (156) Mult -> . MULT ABRE_P Var COMA NUMERO CIERRA_P
    (157) Mult -> . MULT ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (158) Mult -> . MULT ABRE_P Var COMA Var CIERRA_P
    (159) Mult -> . MULT ABRE_P expresion_alge1 COMA Var CIERRA_P
    (160) Mult -> . MULT ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (161) Mult -> . MULT ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (162) Mult -> . MULT ABRE_P Var COMA expresion_alge1 CIERRA_P
    (163) Mult -> . MULT ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P
    (164) Div -> . DIV ABRE_P NUMERO COMA NUMERO CIERRA_P
    (165) Div -> . DIV ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (166) Div -> . DIV ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (167) Div -> . DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (168) Div -> . DIV ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (169) Div -> . DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (170) Div -> . DIV ABRE_P NUMERO COMA Var CIERRA_P
    (171) Div -> . DIV ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (172) Div -> . DIV ABRE_P Var COMA NUMERO CIERRA_P
    (173) Div -> . DIV ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (174) Div -> . DIV ABRE_P Var COMA Var CIERRA_P
    (175) Div -> . DIV ABRE_P expresion_alge1 COMA Var CIERRA_P
    (176) Div -> . DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (177) Div -> . DIV ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (178) Div -> . DIV ABRE_P Var COMA expresion_alge1 CIERRA_P
    (179) Div -> . DIV ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P
    (279) Random -> . RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA
    (264) If -> . IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2
    (265) IfElse -> . IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2
    (268) Until -> . UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2
    (266) While -> . WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2
    (337) PrintLine -> . PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA
    (256) And -> . AND ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (257) And -> . AND ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P
    (258) And -> . AND ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P
    (259) And -> . AND ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P
    (260) Or -> . OR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (261) Or -> . OR ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P
    (262) Or -> . OR ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P
    (263) Or -> . OR ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P
    (269) Add -> . ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA
    (270) Add -> . ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (271) Add -> . ADD ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (272) Add -> . ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (273) Add -> . ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (274) Add -> . ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA

  ! shift/reduce conflict for PUNTOCOMA resolved as shift
  ! shift/reduce conflict for PUT resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for ABRE_P resolved as shift
  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for SUBSTR resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for RANDOM resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for IFELSE resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for PRINTLINE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
    COMMENT         shift and go to state 37
    PUNTOCOMA       shift and go to state 62
    FIN             reduce using rule 338 (empty -> .)
    PUT             shift and go to state 15
    RUN             shift and go to state 66
    REPEAT          shift and go to state 67
    DEF             shift and go to state 16
    NUMERO          shift and go to state 64
    RESTA           shift and go to state 65
    ABRE_P          shift and go to state 63
    SUM             shift and go to state 70
    SUBSTR          shift and go to state 71
    MULT            shift and go to state 68
    DIV             shift and go to state 69
    RANDOM          shift and go to state 72
    IF              shift and go to state 73
    IFELSE          shift and go to state 74
    UNTIL           shift and go to state 75
    WHILE           shift and go to state 76
    PRINTLINE       shift and go to state 77
    AND             shift and go to state 78
    OR              shift and go to state 79
    ADD             shift and go to state 80

  ! PUNTOCOMA       [ reduce using rule 338 (empty -> .) ]
  ! NUMERO          [ reduce using rule 338 (empty -> .) ]
  ! RESTA           [ reduce using rule 338 (empty -> .) ]
  ! ABRE_P          [ reduce using rule 338 (empty -> .) ]
  ! SUM             [ reduce using rule 338 (empty -> .) ]
  ! SUBSTR          [ reduce using rule 338 (empty -> .) ]
  ! MULT            [ reduce using rule 338 (empty -> .) ]
  ! DIV             [ reduce using rule 338 (empty -> .) ]
  ! RANDOM          [ reduce using rule 338 (empty -> .) ]
  ! IF              [ reduce using rule 338 (empty -> .) ]
  ! IFELSE          [ reduce using rule 338 (empty -> .) ]
  ! UNTIL           [ reduce using rule 338 (empty -> .) ]
  ! WHILE           [ reduce using rule 338 (empty -> .) ]
  ! PRINTLINE       [ reduce using rule 338 (empty -> .) ]
  ! AND             [ reduce using rule 338 (empty -> .) ]
  ! OR              [ reduce using rule 338 (empty -> .) ]
  ! ADD             [ reduce using rule 338 (empty -> .) ]
  ! PUT             [ reduce using rule 338 (empty -> .) ]

    variable1                      shift and go to state 45
    cuerpo3                        shift and go to state 100
    variablexdd                    shift and go to state 36
    expresion                      shift and go to state 38
    funcion                        shift and go to state 39
    empty                          shift and go to state 40
    Put                            shift and go to state 41
    Put2                           shift and go to state 42
    Run                            shift and go to state 43
    Repeat                         shift and go to state 44
    variable2                      shift and go to state 46
    expresion_alge1                shift and go to state 47
    expresion_alge2                shift and go to state 48
    Sum                            shift and go to state 49
    Substr                         shift and go to state 50
    Mult                           shift and go to state 51
    Div                            shift and go to state 52
    Random                         shift and go to state 53
    If                             shift and go to state 54
    IfElse                         shift and go to state 55
    Until                          shift and go to state 56
    While                          shift and go to state 57
    PrintLine                      shift and go to state 58
    And                            shift and go to state 59
    Or                             shift and go to state 60
    Add                            shift and go to state 61

state 46

    (36) variablexdd -> variable2 . cuerpo3
    (15) cuerpo3 -> . variablexdd
    (16) cuerpo3 -> . COMMENT cuerpo3
    (17) cuerpo3 -> . expresion
    (18) cuerpo3 -> . funcion
    (19) cuerpo3 -> . empty
    (20) cuerpo3 -> . Put
    (21) cuerpo3 -> . Put2
    (22) cuerpo3 -> . Run
    (23) cuerpo3 -> . Repeat
    (35) variablexdd -> . variable1 cuerpo3
    (36) variablexdd -> . variable2 cuerpo3
    (37) variablexdd -> . empty empty
    (41) expresion -> . funcion expresion
    (42) expresion -> . expresion_alge1 expresion
    (43) expresion -> . expresion_alge2 expresion
    (44) expresion -> . Sum expresion
    (45) expresion -> . Substr expresion
    (46) expresion -> . Mult expresion
    (47) expresion -> . Div expresion
    (48) expresion -> . funcion empty
    (49) expresion -> . expresion_alge1 empty
    (50) expresion -> . expresion_alge2 empty
    (51) expresion -> . Sum empty
    (52) expresion -> . Substr empty
    (53) expresion -> . Mult empty
    (54) expresion -> . Div empty
    (55) expresion -> . empty empty
    (82) funcion -> . Random empty
    (83) funcion -> . If empty
    (84) funcion -> . IfElse empty
    (85) funcion -> . Until empty
    (86) funcion -> . While empty
    (87) funcion -> . PrintLine empty
    (88) funcion -> . And empty
    (89) funcion -> . Or empty
    (90) funcion -> . Add empty
    (91) funcion -> . Put2 empty
    (92) funcion -> . Put empty
    (93) funcion -> . PUNTOCOMA funcion
    (94) funcion -> . empty empty
    (338) empty -> .
    (95) Put -> . PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA
    (96) Put2 -> . PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (97) Put2 -> . PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (98) Put2 -> . PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (99) Put2 -> . PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (100) Put2 -> . PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA
    (328) Run -> . RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA cuerpo3
    (267) Repeat -> . REPEAT NUMERO BRACKET1 ordenes BRACKET2 cuerpo3
    (38) variable1 -> . DEF VAR PUNTOCOMA
    (39) variable2 -> . DEF VAR IGUAL NUMERO PUNTOCOMA
    (40) variable2 -> . DEF VAR IGUAL RESTA NUMERO PUNTOCOMA
    (104) expresion_alge1 -> . NUMERO SUMA NUMERO
    (105) expresion_alge1 -> . NUMERO RESTA NUMERO
    (106) expresion_alge1 -> . NUMERO MULTI NUMERO
    (107) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (108) expresion_alge1 -> . RESTA NUMERO SUMA NUMERO
    (109) expresion_alge1 -> . RESTA NUMERO RESTA NUMERO
    (110) expresion_alge1 -> . RESTA NUMERO MULTI NUMERO
    (111) expresion_alge1 -> . RESTA NUMERO DIVISION NUMERO
    (112) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (113) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (114) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (115) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (116) Sum -> . SUM ABRE_P NUMERO COMA NUMERO CIERRA_P
    (117) Sum -> . SUM ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (118) Sum -> . SUM ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (119) Sum -> . SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (120) Sum -> . SUM ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (121) Sum -> . SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (122) Sum -> . SUM ABRE_P NUMERO COMA Var CIERRA_P
    (123) Sum -> . SUM ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (124) Sum -> . SUM ABRE_P Var COMA NUMERO CIERRA_P
    (125) Sum -> . SUM ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (126) Sum -> . SUM ABRE_P Var COMA Var CIERRA_P
    (127) Sum -> . SUM ABRE_P expresion_alge1 COMA Var CIERRA_P
    (128) Sum -> . SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (129) Sum -> . SUM ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (130) Sum -> . SUM ABRE_P Var COMA expresion_alge1 CIERRA_P
    (131) Sum -> . SUM ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P
    (132) Substr -> . SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P
    (133) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (134) Substr -> . SUBSTR ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (135) Substr -> . SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (136) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (137) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (138) Substr -> . SUBSTR ABRE_P NUMERO COMA Var CIERRA_P
    (139) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (140) Substr -> . SUBSTR ABRE_P Var COMA NUMERO CIERRA_P
    (141) Substr -> . SUBSTR ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (142) Substr -> . SUBSTR ABRE_P Var COMA Var CIERRA_P
    (143) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P
    (144) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (145) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (146) Substr -> . SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P
    (147) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P
    (148) Mult -> . MULT ABRE_P NUMERO COMA NUMERO CIERRA_P
    (149) Mult -> . MULT ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (150) Mult -> . MULT ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (151) Mult -> . MULT ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (152) Mult -> . MULT ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (153) Mult -> . MULT ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (154) Mult -> . MULT ABRE_P NUMERO COMA Var CIERRA_P
    (155) Mult -> . MULT ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (156) Mult -> . MULT ABRE_P Var COMA NUMERO CIERRA_P
    (157) Mult -> . MULT ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (158) Mult -> . MULT ABRE_P Var COMA Var CIERRA_P
    (159) Mult -> . MULT ABRE_P expresion_alge1 COMA Var CIERRA_P
    (160) Mult -> . MULT ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (161) Mult -> . MULT ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (162) Mult -> . MULT ABRE_P Var COMA expresion_alge1 CIERRA_P
    (163) Mult -> . MULT ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P
    (164) Div -> . DIV ABRE_P NUMERO COMA NUMERO CIERRA_P
    (165) Div -> . DIV ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (166) Div -> . DIV ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (167) Div -> . DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (168) Div -> . DIV ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (169) Div -> . DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (170) Div -> . DIV ABRE_P NUMERO COMA Var CIERRA_P
    (171) Div -> . DIV ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (172) Div -> . DIV ABRE_P Var COMA NUMERO CIERRA_P
    (173) Div -> . DIV ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (174) Div -> . DIV ABRE_P Var COMA Var CIERRA_P
    (175) Div -> . DIV ABRE_P expresion_alge1 COMA Var CIERRA_P
    (176) Div -> . DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (177) Div -> . DIV ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (178) Div -> . DIV ABRE_P Var COMA expresion_alge1 CIERRA_P
    (179) Div -> . DIV ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P
    (279) Random -> . RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA
    (264) If -> . IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2
    (265) IfElse -> . IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2
    (268) Until -> . UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2
    (266) While -> . WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2
    (337) PrintLine -> . PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA
    (256) And -> . AND ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (257) And -> . AND ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P
    (258) And -> . AND ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P
    (259) And -> . AND ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P
    (260) Or -> . OR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (261) Or -> . OR ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P
    (262) Or -> . OR ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P
    (263) Or -> . OR ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P
    (269) Add -> . ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA
    (270) Add -> . ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (271) Add -> . ADD ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (272) Add -> . ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (273) Add -> . ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (274) Add -> . ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA

  ! shift/reduce conflict for PUNTOCOMA resolved as shift
  ! shift/reduce conflict for PUT resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for ABRE_P resolved as shift
  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for SUBSTR resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for RANDOM resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for IFELSE resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for PRINTLINE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
    COMMENT         shift and go to state 37
    PUNTOCOMA       shift and go to state 62
    FIN             reduce using rule 338 (empty -> .)
    PUT             shift and go to state 15
    RUN             shift and go to state 66
    REPEAT          shift and go to state 67
    DEF             shift and go to state 16
    NUMERO          shift and go to state 64
    RESTA           shift and go to state 65
    ABRE_P          shift and go to state 63
    SUM             shift and go to state 70
    SUBSTR          shift and go to state 71
    MULT            shift and go to state 68
    DIV             shift and go to state 69
    RANDOM          shift and go to state 72
    IF              shift and go to state 73
    IFELSE          shift and go to state 74
    UNTIL           shift and go to state 75
    WHILE           shift and go to state 76
    PRINTLINE       shift and go to state 77
    AND             shift and go to state 78
    OR              shift and go to state 79
    ADD             shift and go to state 80

  ! PUNTOCOMA       [ reduce using rule 338 (empty -> .) ]
  ! NUMERO          [ reduce using rule 338 (empty -> .) ]
  ! RESTA           [ reduce using rule 338 (empty -> .) ]
  ! ABRE_P          [ reduce using rule 338 (empty -> .) ]
  ! SUM             [ reduce using rule 338 (empty -> .) ]
  ! SUBSTR          [ reduce using rule 338 (empty -> .) ]
  ! MULT            [ reduce using rule 338 (empty -> .) ]
  ! DIV             [ reduce using rule 338 (empty -> .) ]
  ! RANDOM          [ reduce using rule 338 (empty -> .) ]
  ! IF              [ reduce using rule 338 (empty -> .) ]
  ! IFELSE          [ reduce using rule 338 (empty -> .) ]
  ! UNTIL           [ reduce using rule 338 (empty -> .) ]
  ! WHILE           [ reduce using rule 338 (empty -> .) ]
  ! PRINTLINE       [ reduce using rule 338 (empty -> .) ]
  ! AND             [ reduce using rule 338 (empty -> .) ]
  ! OR              [ reduce using rule 338 (empty -> .) ]
  ! ADD             [ reduce using rule 338 (empty -> .) ]
  ! PUT             [ reduce using rule 338 (empty -> .) ]

    variable2                      shift and go to state 46
    cuerpo3                        shift and go to state 101
    variablexdd                    shift and go to state 36
    expresion                      shift and go to state 38
    funcion                        shift and go to state 39
    empty                          shift and go to state 40
    Put                            shift and go to state 41
    Put2                           shift and go to state 42
    Run                            shift and go to state 43
    Repeat                         shift and go to state 44
    variable1                      shift and go to state 45
    expresion_alge1                shift and go to state 47
    expresion_alge2                shift and go to state 48
    Sum                            shift and go to state 49
    Substr                         shift and go to state 50
    Mult                           shift and go to state 51
    Div                            shift and go to state 52
    Random                         shift and go to state 53
    If                             shift and go to state 54
    IfElse                         shift and go to state 55
    Until                          shift and go to state 56
    While                          shift and go to state 57
    PrintLine                      shift and go to state 58
    And                            shift and go to state 59
    Or                             shift and go to state 60
    Add                            shift and go to state 61

state 47

    (42) expresion -> expresion_alge1 . expresion
    (49) expresion -> expresion_alge1 . empty
    (41) expresion -> . funcion expresion
    (42) expresion -> . expresion_alge1 expresion
    (43) expresion -> . expresion_alge2 expresion
    (44) expresion -> . Sum expresion
    (45) expresion -> . Substr expresion
    (46) expresion -> . Mult expresion
    (47) expresion -> . Div expresion
    (48) expresion -> . funcion empty
    (49) expresion -> . expresion_alge1 empty
    (50) expresion -> . expresion_alge2 empty
    (51) expresion -> . Sum empty
    (52) expresion -> . Substr empty
    (53) expresion -> . Mult empty
    (54) expresion -> . Div empty
    (55) expresion -> . empty empty
    (338) empty -> .
    (82) funcion -> . Random empty
    (83) funcion -> . If empty
    (84) funcion -> . IfElse empty
    (85) funcion -> . Until empty
    (86) funcion -> . While empty
    (87) funcion -> . PrintLine empty
    (88) funcion -> . And empty
    (89) funcion -> . Or empty
    (90) funcion -> . Add empty
    (91) funcion -> . Put2 empty
    (92) funcion -> . Put empty
    (93) funcion -> . PUNTOCOMA funcion
    (94) funcion -> . empty empty
    (104) expresion_alge1 -> . NUMERO SUMA NUMERO
    (105) expresion_alge1 -> . NUMERO RESTA NUMERO
    (106) expresion_alge1 -> . NUMERO MULTI NUMERO
    (107) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (108) expresion_alge1 -> . RESTA NUMERO SUMA NUMERO
    (109) expresion_alge1 -> . RESTA NUMERO RESTA NUMERO
    (110) expresion_alge1 -> . RESTA NUMERO MULTI NUMERO
    (111) expresion_alge1 -> . RESTA NUMERO DIVISION NUMERO
    (112) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (113) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (114) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (115) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (116) Sum -> . SUM ABRE_P NUMERO COMA NUMERO CIERRA_P
    (117) Sum -> . SUM ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (118) Sum -> . SUM ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (119) Sum -> . SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (120) Sum -> . SUM ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (121) Sum -> . SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (122) Sum -> . SUM ABRE_P NUMERO COMA Var CIERRA_P
    (123) Sum -> . SUM ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (124) Sum -> . SUM ABRE_P Var COMA NUMERO CIERRA_P
    (125) Sum -> . SUM ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (126) Sum -> . SUM ABRE_P Var COMA Var CIERRA_P
    (127) Sum -> . SUM ABRE_P expresion_alge1 COMA Var CIERRA_P
    (128) Sum -> . SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (129) Sum -> . SUM ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (130) Sum -> . SUM ABRE_P Var COMA expresion_alge1 CIERRA_P
    (131) Sum -> . SUM ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P
    (132) Substr -> . SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P
    (133) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (134) Substr -> . SUBSTR ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (135) Substr -> . SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (136) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (137) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (138) Substr -> . SUBSTR ABRE_P NUMERO COMA Var CIERRA_P
    (139) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (140) Substr -> . SUBSTR ABRE_P Var COMA NUMERO CIERRA_P
    (141) Substr -> . SUBSTR ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (142) Substr -> . SUBSTR ABRE_P Var COMA Var CIERRA_P
    (143) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P
    (144) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (145) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (146) Substr -> . SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P
    (147) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P
    (148) Mult -> . MULT ABRE_P NUMERO COMA NUMERO CIERRA_P
    (149) Mult -> . MULT ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (150) Mult -> . MULT ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (151) Mult -> . MULT ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (152) Mult -> . MULT ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (153) Mult -> . MULT ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (154) Mult -> . MULT ABRE_P NUMERO COMA Var CIERRA_P
    (155) Mult -> . MULT ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (156) Mult -> . MULT ABRE_P Var COMA NUMERO CIERRA_P
    (157) Mult -> . MULT ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (158) Mult -> . MULT ABRE_P Var COMA Var CIERRA_P
    (159) Mult -> . MULT ABRE_P expresion_alge1 COMA Var CIERRA_P
    (160) Mult -> . MULT ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (161) Mult -> . MULT ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (162) Mult -> . MULT ABRE_P Var COMA expresion_alge1 CIERRA_P
    (163) Mult -> . MULT ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P
    (164) Div -> . DIV ABRE_P NUMERO COMA NUMERO CIERRA_P
    (165) Div -> . DIV ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (166) Div -> . DIV ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (167) Div -> . DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (168) Div -> . DIV ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (169) Div -> . DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (170) Div -> . DIV ABRE_P NUMERO COMA Var CIERRA_P
    (171) Div -> . DIV ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (172) Div -> . DIV ABRE_P Var COMA NUMERO CIERRA_P
    (173) Div -> . DIV ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (174) Div -> . DIV ABRE_P Var COMA Var CIERRA_P
    (175) Div -> . DIV ABRE_P expresion_alge1 COMA Var CIERRA_P
    (176) Div -> . DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (177) Div -> . DIV ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (178) Div -> . DIV ABRE_P Var COMA expresion_alge1 CIERRA_P
    (179) Div -> . DIV ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P
    (279) Random -> . RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA
    (264) If -> . IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2
    (265) IfElse -> . IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2
    (268) Until -> . UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2
    (266) While -> . WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2
    (337) PrintLine -> . PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA
    (256) And -> . AND ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (257) And -> . AND ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P
    (258) And -> . AND ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P
    (259) And -> . AND ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P
    (260) Or -> . OR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (261) Or -> . OR ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P
    (262) Or -> . OR ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P
    (263) Or -> . OR ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P
    (269) Add -> . ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA
    (270) Add -> . ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (271) Add -> . ADD ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (272) Add -> . ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (273) Add -> . ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (274) Add -> . ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (96) Put2 -> . PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (97) Put2 -> . PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (98) Put2 -> . PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (99) Put2 -> . PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (100) Put2 -> . PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA
    (95) Put -> . PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA

  ! shift/reduce conflict for PUNTOCOMA resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for ABRE_P resolved as shift
  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for SUBSTR resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for RANDOM resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for IFELSE resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for PRINTLINE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for PUT resolved as shift
    FIN             reduce using rule 338 (empty -> .)
    PUNTOCOMA       shift and go to state 62
    NUMERO          shift and go to state 64
    RESTA           shift and go to state 65
    ABRE_P          shift and go to state 63
    SUM             shift and go to state 70
    SUBSTR          shift and go to state 71
    MULT            shift and go to state 68
    DIV             shift and go to state 69
    RANDOM          shift and go to state 72
    IF              shift and go to state 73
    IFELSE          shift and go to state 74
    UNTIL           shift and go to state 75
    WHILE           shift and go to state 76
    PRINTLINE       shift and go to state 77
    AND             shift and go to state 78
    OR              shift and go to state 79
    ADD             shift and go to state 80
    PUT             shift and go to state 96

  ! PUNTOCOMA       [ reduce using rule 338 (empty -> .) ]
  ! NUMERO          [ reduce using rule 338 (empty -> .) ]
  ! RESTA           [ reduce using rule 338 (empty -> .) ]
  ! ABRE_P          [ reduce using rule 338 (empty -> .) ]
  ! SUM             [ reduce using rule 338 (empty -> .) ]
  ! SUBSTR          [ reduce using rule 338 (empty -> .) ]
  ! MULT            [ reduce using rule 338 (empty -> .) ]
  ! DIV             [ reduce using rule 338 (empty -> .) ]
  ! RANDOM          [ reduce using rule 338 (empty -> .) ]
  ! IF              [ reduce using rule 338 (empty -> .) ]
  ! IFELSE          [ reduce using rule 338 (empty -> .) ]
  ! UNTIL           [ reduce using rule 338 (empty -> .) ]
  ! WHILE           [ reduce using rule 338 (empty -> .) ]
  ! PRINTLINE       [ reduce using rule 338 (empty -> .) ]
  ! AND             [ reduce using rule 338 (empty -> .) ]
  ! OR              [ reduce using rule 338 (empty -> .) ]
  ! ADD             [ reduce using rule 338 (empty -> .) ]
  ! PUT             [ reduce using rule 338 (empty -> .) ]

    expresion_alge1                shift and go to state 47
    expresion                      shift and go to state 102
    empty                          shift and go to state 103
    funcion                        shift and go to state 91
    expresion_alge2                shift and go to state 48
    Sum                            shift and go to state 49
    Substr                         shift and go to state 50
    Mult                           shift and go to state 51
    Div                            shift and go to state 52
    Random                         shift and go to state 53
    If                             shift and go to state 54
    IfElse                         shift and go to state 55
    Until                          shift and go to state 56
    While                          shift and go to state 57
    PrintLine                      shift and go to state 58
    And                            shift and go to state 59
    Or                             shift and go to state 60
    Add                            shift and go to state 61
    Put2                           shift and go to state 94
    Put                            shift and go to state 95

state 48

    (43) expresion -> expresion_alge2 . expresion
    (50) expresion -> expresion_alge2 . empty
    (41) expresion -> . funcion expresion
    (42) expresion -> . expresion_alge1 expresion
    (43) expresion -> . expresion_alge2 expresion
    (44) expresion -> . Sum expresion
    (45) expresion -> . Substr expresion
    (46) expresion -> . Mult expresion
    (47) expresion -> . Div expresion
    (48) expresion -> . funcion empty
    (49) expresion -> . expresion_alge1 empty
    (50) expresion -> . expresion_alge2 empty
    (51) expresion -> . Sum empty
    (52) expresion -> . Substr empty
    (53) expresion -> . Mult empty
    (54) expresion -> . Div empty
    (55) expresion -> . empty empty
    (338) empty -> .
    (82) funcion -> . Random empty
    (83) funcion -> . If empty
    (84) funcion -> . IfElse empty
    (85) funcion -> . Until empty
    (86) funcion -> . While empty
    (87) funcion -> . PrintLine empty
    (88) funcion -> . And empty
    (89) funcion -> . Or empty
    (90) funcion -> . Add empty
    (91) funcion -> . Put2 empty
    (92) funcion -> . Put empty
    (93) funcion -> . PUNTOCOMA funcion
    (94) funcion -> . empty empty
    (104) expresion_alge1 -> . NUMERO SUMA NUMERO
    (105) expresion_alge1 -> . NUMERO RESTA NUMERO
    (106) expresion_alge1 -> . NUMERO MULTI NUMERO
    (107) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (108) expresion_alge1 -> . RESTA NUMERO SUMA NUMERO
    (109) expresion_alge1 -> . RESTA NUMERO RESTA NUMERO
    (110) expresion_alge1 -> . RESTA NUMERO MULTI NUMERO
    (111) expresion_alge1 -> . RESTA NUMERO DIVISION NUMERO
    (112) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (113) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (114) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (115) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (116) Sum -> . SUM ABRE_P NUMERO COMA NUMERO CIERRA_P
    (117) Sum -> . SUM ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (118) Sum -> . SUM ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (119) Sum -> . SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (120) Sum -> . SUM ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (121) Sum -> . SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (122) Sum -> . SUM ABRE_P NUMERO COMA Var CIERRA_P
    (123) Sum -> . SUM ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (124) Sum -> . SUM ABRE_P Var COMA NUMERO CIERRA_P
    (125) Sum -> . SUM ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (126) Sum -> . SUM ABRE_P Var COMA Var CIERRA_P
    (127) Sum -> . SUM ABRE_P expresion_alge1 COMA Var CIERRA_P
    (128) Sum -> . SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (129) Sum -> . SUM ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (130) Sum -> . SUM ABRE_P Var COMA expresion_alge1 CIERRA_P
    (131) Sum -> . SUM ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P
    (132) Substr -> . SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P
    (133) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (134) Substr -> . SUBSTR ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (135) Substr -> . SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (136) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (137) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (138) Substr -> . SUBSTR ABRE_P NUMERO COMA Var CIERRA_P
    (139) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (140) Substr -> . SUBSTR ABRE_P Var COMA NUMERO CIERRA_P
    (141) Substr -> . SUBSTR ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (142) Substr -> . SUBSTR ABRE_P Var COMA Var CIERRA_P
    (143) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P
    (144) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (145) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (146) Substr -> . SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P
    (147) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P
    (148) Mult -> . MULT ABRE_P NUMERO COMA NUMERO CIERRA_P
    (149) Mult -> . MULT ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (150) Mult -> . MULT ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (151) Mult -> . MULT ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (152) Mult -> . MULT ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (153) Mult -> . MULT ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (154) Mult -> . MULT ABRE_P NUMERO COMA Var CIERRA_P
    (155) Mult -> . MULT ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (156) Mult -> . MULT ABRE_P Var COMA NUMERO CIERRA_P
    (157) Mult -> . MULT ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (158) Mult -> . MULT ABRE_P Var COMA Var CIERRA_P
    (159) Mult -> . MULT ABRE_P expresion_alge1 COMA Var CIERRA_P
    (160) Mult -> . MULT ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (161) Mult -> . MULT ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (162) Mult -> . MULT ABRE_P Var COMA expresion_alge1 CIERRA_P
    (163) Mult -> . MULT ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P
    (164) Div -> . DIV ABRE_P NUMERO COMA NUMERO CIERRA_P
    (165) Div -> . DIV ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (166) Div -> . DIV ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (167) Div -> . DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (168) Div -> . DIV ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (169) Div -> . DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (170) Div -> . DIV ABRE_P NUMERO COMA Var CIERRA_P
    (171) Div -> . DIV ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (172) Div -> . DIV ABRE_P Var COMA NUMERO CIERRA_P
    (173) Div -> . DIV ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (174) Div -> . DIV ABRE_P Var COMA Var CIERRA_P
    (175) Div -> . DIV ABRE_P expresion_alge1 COMA Var CIERRA_P
    (176) Div -> . DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (177) Div -> . DIV ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (178) Div -> . DIV ABRE_P Var COMA expresion_alge1 CIERRA_P
    (179) Div -> . DIV ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P
    (279) Random -> . RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA
    (264) If -> . IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2
    (265) IfElse -> . IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2
    (268) Until -> . UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2
    (266) While -> . WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2
    (337) PrintLine -> . PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA
    (256) And -> . AND ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (257) And -> . AND ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P
    (258) And -> . AND ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P
    (259) And -> . AND ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P
    (260) Or -> . OR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (261) Or -> . OR ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P
    (262) Or -> . OR ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P
    (263) Or -> . OR ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P
    (269) Add -> . ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA
    (270) Add -> . ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (271) Add -> . ADD ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (272) Add -> . ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (273) Add -> . ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (274) Add -> . ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (96) Put2 -> . PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (97) Put2 -> . PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (98) Put2 -> . PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (99) Put2 -> . PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (100) Put2 -> . PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA
    (95) Put -> . PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA

  ! shift/reduce conflict for PUNTOCOMA resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for ABRE_P resolved as shift
  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for SUBSTR resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for RANDOM resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for IFELSE resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for PRINTLINE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for PUT resolved as shift
    FIN             reduce using rule 338 (empty -> .)
    PUNTOCOMA       shift and go to state 62
    NUMERO          shift and go to state 64
    RESTA           shift and go to state 65
    ABRE_P          shift and go to state 63
    SUM             shift and go to state 70
    SUBSTR          shift and go to state 71
    MULT            shift and go to state 68
    DIV             shift and go to state 69
    RANDOM          shift and go to state 72
    IF              shift and go to state 73
    IFELSE          shift and go to state 74
    UNTIL           shift and go to state 75
    WHILE           shift and go to state 76
    PRINTLINE       shift and go to state 77
    AND             shift and go to state 78
    OR              shift and go to state 79
    ADD             shift and go to state 80
    PUT             shift and go to state 96

  ! PUNTOCOMA       [ reduce using rule 338 (empty -> .) ]
  ! NUMERO          [ reduce using rule 338 (empty -> .) ]
  ! RESTA           [ reduce using rule 338 (empty -> .) ]
  ! ABRE_P          [ reduce using rule 338 (empty -> .) ]
  ! SUM             [ reduce using rule 338 (empty -> .) ]
  ! SUBSTR          [ reduce using rule 338 (empty -> .) ]
  ! MULT            [ reduce using rule 338 (empty -> .) ]
  ! DIV             [ reduce using rule 338 (empty -> .) ]
  ! RANDOM          [ reduce using rule 338 (empty -> .) ]
  ! IF              [ reduce using rule 338 (empty -> .) ]
  ! IFELSE          [ reduce using rule 338 (empty -> .) ]
  ! UNTIL           [ reduce using rule 338 (empty -> .) ]
  ! WHILE           [ reduce using rule 338 (empty -> .) ]
  ! PRINTLINE       [ reduce using rule 338 (empty -> .) ]
  ! AND             [ reduce using rule 338 (empty -> .) ]
  ! OR              [ reduce using rule 338 (empty -> .) ]
  ! ADD             [ reduce using rule 338 (empty -> .) ]
  ! PUT             [ reduce using rule 338 (empty -> .) ]

    expresion_alge2                shift and go to state 48
    expresion                      shift and go to state 104
    empty                          shift and go to state 105
    funcion                        shift and go to state 91
    expresion_alge1                shift and go to state 47
    Sum                            shift and go to state 49
    Substr                         shift and go to state 50
    Mult                           shift and go to state 51
    Div                            shift and go to state 52
    Random                         shift and go to state 53
    If                             shift and go to state 54
    IfElse                         shift and go to state 55
    Until                          shift and go to state 56
    While                          shift and go to state 57
    PrintLine                      shift and go to state 58
    And                            shift and go to state 59
    Or                             shift and go to state 60
    Add                            shift and go to state 61
    Put2                           shift and go to state 94
    Put                            shift and go to state 95

state 49

    (44) expresion -> Sum . expresion
    (51) expresion -> Sum . empty
    (41) expresion -> . funcion expresion
    (42) expresion -> . expresion_alge1 expresion
    (43) expresion -> . expresion_alge2 expresion
    (44) expresion -> . Sum expresion
    (45) expresion -> . Substr expresion
    (46) expresion -> . Mult expresion
    (47) expresion -> . Div expresion
    (48) expresion -> . funcion empty
    (49) expresion -> . expresion_alge1 empty
    (50) expresion -> . expresion_alge2 empty
    (51) expresion -> . Sum empty
    (52) expresion -> . Substr empty
    (53) expresion -> . Mult empty
    (54) expresion -> . Div empty
    (55) expresion -> . empty empty
    (338) empty -> .
    (82) funcion -> . Random empty
    (83) funcion -> . If empty
    (84) funcion -> . IfElse empty
    (85) funcion -> . Until empty
    (86) funcion -> . While empty
    (87) funcion -> . PrintLine empty
    (88) funcion -> . And empty
    (89) funcion -> . Or empty
    (90) funcion -> . Add empty
    (91) funcion -> . Put2 empty
    (92) funcion -> . Put empty
    (93) funcion -> . PUNTOCOMA funcion
    (94) funcion -> . empty empty
    (104) expresion_alge1 -> . NUMERO SUMA NUMERO
    (105) expresion_alge1 -> . NUMERO RESTA NUMERO
    (106) expresion_alge1 -> . NUMERO MULTI NUMERO
    (107) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (108) expresion_alge1 -> . RESTA NUMERO SUMA NUMERO
    (109) expresion_alge1 -> . RESTA NUMERO RESTA NUMERO
    (110) expresion_alge1 -> . RESTA NUMERO MULTI NUMERO
    (111) expresion_alge1 -> . RESTA NUMERO DIVISION NUMERO
    (112) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (113) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (114) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (115) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (116) Sum -> . SUM ABRE_P NUMERO COMA NUMERO CIERRA_P
    (117) Sum -> . SUM ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (118) Sum -> . SUM ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (119) Sum -> . SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (120) Sum -> . SUM ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (121) Sum -> . SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (122) Sum -> . SUM ABRE_P NUMERO COMA Var CIERRA_P
    (123) Sum -> . SUM ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (124) Sum -> . SUM ABRE_P Var COMA NUMERO CIERRA_P
    (125) Sum -> . SUM ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (126) Sum -> . SUM ABRE_P Var COMA Var CIERRA_P
    (127) Sum -> . SUM ABRE_P expresion_alge1 COMA Var CIERRA_P
    (128) Sum -> . SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (129) Sum -> . SUM ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (130) Sum -> . SUM ABRE_P Var COMA expresion_alge1 CIERRA_P
    (131) Sum -> . SUM ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P
    (132) Substr -> . SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P
    (133) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (134) Substr -> . SUBSTR ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (135) Substr -> . SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (136) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (137) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (138) Substr -> . SUBSTR ABRE_P NUMERO COMA Var CIERRA_P
    (139) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (140) Substr -> . SUBSTR ABRE_P Var COMA NUMERO CIERRA_P
    (141) Substr -> . SUBSTR ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (142) Substr -> . SUBSTR ABRE_P Var COMA Var CIERRA_P
    (143) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P
    (144) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (145) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (146) Substr -> . SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P
    (147) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P
    (148) Mult -> . MULT ABRE_P NUMERO COMA NUMERO CIERRA_P
    (149) Mult -> . MULT ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (150) Mult -> . MULT ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (151) Mult -> . MULT ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (152) Mult -> . MULT ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (153) Mult -> . MULT ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (154) Mult -> . MULT ABRE_P NUMERO COMA Var CIERRA_P
    (155) Mult -> . MULT ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (156) Mult -> . MULT ABRE_P Var COMA NUMERO CIERRA_P
    (157) Mult -> . MULT ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (158) Mult -> . MULT ABRE_P Var COMA Var CIERRA_P
    (159) Mult -> . MULT ABRE_P expresion_alge1 COMA Var CIERRA_P
    (160) Mult -> . MULT ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (161) Mult -> . MULT ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (162) Mult -> . MULT ABRE_P Var COMA expresion_alge1 CIERRA_P
    (163) Mult -> . MULT ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P
    (164) Div -> . DIV ABRE_P NUMERO COMA NUMERO CIERRA_P
    (165) Div -> . DIV ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (166) Div -> . DIV ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (167) Div -> . DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (168) Div -> . DIV ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (169) Div -> . DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (170) Div -> . DIV ABRE_P NUMERO COMA Var CIERRA_P
    (171) Div -> . DIV ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (172) Div -> . DIV ABRE_P Var COMA NUMERO CIERRA_P
    (173) Div -> . DIV ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (174) Div -> . DIV ABRE_P Var COMA Var CIERRA_P
    (175) Div -> . DIV ABRE_P expresion_alge1 COMA Var CIERRA_P
    (176) Div -> . DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (177) Div -> . DIV ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (178) Div -> . DIV ABRE_P Var COMA expresion_alge1 CIERRA_P
    (179) Div -> . DIV ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P
    (279) Random -> . RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA
    (264) If -> . IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2
    (265) IfElse -> . IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2
    (268) Until -> . UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2
    (266) While -> . WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2
    (337) PrintLine -> . PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA
    (256) And -> . AND ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (257) And -> . AND ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P
    (258) And -> . AND ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P
    (259) And -> . AND ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P
    (260) Or -> . OR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (261) Or -> . OR ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P
    (262) Or -> . OR ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P
    (263) Or -> . OR ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P
    (269) Add -> . ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA
    (270) Add -> . ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (271) Add -> . ADD ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (272) Add -> . ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (273) Add -> . ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (274) Add -> . ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (96) Put2 -> . PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (97) Put2 -> . PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (98) Put2 -> . PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (99) Put2 -> . PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (100) Put2 -> . PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA
    (95) Put -> . PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA

  ! shift/reduce conflict for PUNTOCOMA resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for ABRE_P resolved as shift
  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for SUBSTR resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for RANDOM resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for IFELSE resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for PRINTLINE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for PUT resolved as shift
    FIN             reduce using rule 338 (empty -> .)
    PUNTOCOMA       shift and go to state 62
    NUMERO          shift and go to state 64
    RESTA           shift and go to state 65
    ABRE_P          shift and go to state 63
    SUM             shift and go to state 70
    SUBSTR          shift and go to state 71
    MULT            shift and go to state 68
    DIV             shift and go to state 69
    RANDOM          shift and go to state 72
    IF              shift and go to state 73
    IFELSE          shift and go to state 74
    UNTIL           shift and go to state 75
    WHILE           shift and go to state 76
    PRINTLINE       shift and go to state 77
    AND             shift and go to state 78
    OR              shift and go to state 79
    ADD             shift and go to state 80
    PUT             shift and go to state 96

  ! PUNTOCOMA       [ reduce using rule 338 (empty -> .) ]
  ! NUMERO          [ reduce using rule 338 (empty -> .) ]
  ! RESTA           [ reduce using rule 338 (empty -> .) ]
  ! ABRE_P          [ reduce using rule 338 (empty -> .) ]
  ! SUM             [ reduce using rule 338 (empty -> .) ]
  ! SUBSTR          [ reduce using rule 338 (empty -> .) ]
  ! MULT            [ reduce using rule 338 (empty -> .) ]
  ! DIV             [ reduce using rule 338 (empty -> .) ]
  ! RANDOM          [ reduce using rule 338 (empty -> .) ]
  ! IF              [ reduce using rule 338 (empty -> .) ]
  ! IFELSE          [ reduce using rule 338 (empty -> .) ]
  ! UNTIL           [ reduce using rule 338 (empty -> .) ]
  ! WHILE           [ reduce using rule 338 (empty -> .) ]
  ! PRINTLINE       [ reduce using rule 338 (empty -> .) ]
  ! AND             [ reduce using rule 338 (empty -> .) ]
  ! OR              [ reduce using rule 338 (empty -> .) ]
  ! ADD             [ reduce using rule 338 (empty -> .) ]
  ! PUT             [ reduce using rule 338 (empty -> .) ]

    Sum                            shift and go to state 49
    expresion                      shift and go to state 106
    empty                          shift and go to state 107
    funcion                        shift and go to state 91
    expresion_alge1                shift and go to state 47
    expresion_alge2                shift and go to state 48
    Substr                         shift and go to state 50
    Mult                           shift and go to state 51
    Div                            shift and go to state 52
    Random                         shift and go to state 53
    If                             shift and go to state 54
    IfElse                         shift and go to state 55
    Until                          shift and go to state 56
    While                          shift and go to state 57
    PrintLine                      shift and go to state 58
    And                            shift and go to state 59
    Or                             shift and go to state 60
    Add                            shift and go to state 61
    Put2                           shift and go to state 94
    Put                            shift and go to state 95

state 50

    (45) expresion -> Substr . expresion
    (52) expresion -> Substr . empty
    (41) expresion -> . funcion expresion
    (42) expresion -> . expresion_alge1 expresion
    (43) expresion -> . expresion_alge2 expresion
    (44) expresion -> . Sum expresion
    (45) expresion -> . Substr expresion
    (46) expresion -> . Mult expresion
    (47) expresion -> . Div expresion
    (48) expresion -> . funcion empty
    (49) expresion -> . expresion_alge1 empty
    (50) expresion -> . expresion_alge2 empty
    (51) expresion -> . Sum empty
    (52) expresion -> . Substr empty
    (53) expresion -> . Mult empty
    (54) expresion -> . Div empty
    (55) expresion -> . empty empty
    (338) empty -> .
    (82) funcion -> . Random empty
    (83) funcion -> . If empty
    (84) funcion -> . IfElse empty
    (85) funcion -> . Until empty
    (86) funcion -> . While empty
    (87) funcion -> . PrintLine empty
    (88) funcion -> . And empty
    (89) funcion -> . Or empty
    (90) funcion -> . Add empty
    (91) funcion -> . Put2 empty
    (92) funcion -> . Put empty
    (93) funcion -> . PUNTOCOMA funcion
    (94) funcion -> . empty empty
    (104) expresion_alge1 -> . NUMERO SUMA NUMERO
    (105) expresion_alge1 -> . NUMERO RESTA NUMERO
    (106) expresion_alge1 -> . NUMERO MULTI NUMERO
    (107) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (108) expresion_alge1 -> . RESTA NUMERO SUMA NUMERO
    (109) expresion_alge1 -> . RESTA NUMERO RESTA NUMERO
    (110) expresion_alge1 -> . RESTA NUMERO MULTI NUMERO
    (111) expresion_alge1 -> . RESTA NUMERO DIVISION NUMERO
    (112) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (113) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (114) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (115) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (116) Sum -> . SUM ABRE_P NUMERO COMA NUMERO CIERRA_P
    (117) Sum -> . SUM ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (118) Sum -> . SUM ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (119) Sum -> . SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (120) Sum -> . SUM ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (121) Sum -> . SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (122) Sum -> . SUM ABRE_P NUMERO COMA Var CIERRA_P
    (123) Sum -> . SUM ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (124) Sum -> . SUM ABRE_P Var COMA NUMERO CIERRA_P
    (125) Sum -> . SUM ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (126) Sum -> . SUM ABRE_P Var COMA Var CIERRA_P
    (127) Sum -> . SUM ABRE_P expresion_alge1 COMA Var CIERRA_P
    (128) Sum -> . SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (129) Sum -> . SUM ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (130) Sum -> . SUM ABRE_P Var COMA expresion_alge1 CIERRA_P
    (131) Sum -> . SUM ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P
    (132) Substr -> . SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P
    (133) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (134) Substr -> . SUBSTR ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (135) Substr -> . SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (136) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (137) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (138) Substr -> . SUBSTR ABRE_P NUMERO COMA Var CIERRA_P
    (139) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (140) Substr -> . SUBSTR ABRE_P Var COMA NUMERO CIERRA_P
    (141) Substr -> . SUBSTR ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (142) Substr -> . SUBSTR ABRE_P Var COMA Var CIERRA_P
    (143) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P
    (144) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (145) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (146) Substr -> . SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P
    (147) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P
    (148) Mult -> . MULT ABRE_P NUMERO COMA NUMERO CIERRA_P
    (149) Mult -> . MULT ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (150) Mult -> . MULT ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (151) Mult -> . MULT ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (152) Mult -> . MULT ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (153) Mult -> . MULT ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (154) Mult -> . MULT ABRE_P NUMERO COMA Var CIERRA_P
    (155) Mult -> . MULT ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (156) Mult -> . MULT ABRE_P Var COMA NUMERO CIERRA_P
    (157) Mult -> . MULT ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (158) Mult -> . MULT ABRE_P Var COMA Var CIERRA_P
    (159) Mult -> . MULT ABRE_P expresion_alge1 COMA Var CIERRA_P
    (160) Mult -> . MULT ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (161) Mult -> . MULT ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (162) Mult -> . MULT ABRE_P Var COMA expresion_alge1 CIERRA_P
    (163) Mult -> . MULT ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P
    (164) Div -> . DIV ABRE_P NUMERO COMA NUMERO CIERRA_P
    (165) Div -> . DIV ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (166) Div -> . DIV ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (167) Div -> . DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (168) Div -> . DIV ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (169) Div -> . DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (170) Div -> . DIV ABRE_P NUMERO COMA Var CIERRA_P
    (171) Div -> . DIV ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (172) Div -> . DIV ABRE_P Var COMA NUMERO CIERRA_P
    (173) Div -> . DIV ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (174) Div -> . DIV ABRE_P Var COMA Var CIERRA_P
    (175) Div -> . DIV ABRE_P expresion_alge1 COMA Var CIERRA_P
    (176) Div -> . DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (177) Div -> . DIV ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (178) Div -> . DIV ABRE_P Var COMA expresion_alge1 CIERRA_P
    (179) Div -> . DIV ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P
    (279) Random -> . RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA
    (264) If -> . IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2
    (265) IfElse -> . IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2
    (268) Until -> . UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2
    (266) While -> . WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2
    (337) PrintLine -> . PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA
    (256) And -> . AND ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (257) And -> . AND ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P
    (258) And -> . AND ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P
    (259) And -> . AND ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P
    (260) Or -> . OR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (261) Or -> . OR ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P
    (262) Or -> . OR ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P
    (263) Or -> . OR ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P
    (269) Add -> . ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA
    (270) Add -> . ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (271) Add -> . ADD ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (272) Add -> . ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (273) Add -> . ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (274) Add -> . ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (96) Put2 -> . PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (97) Put2 -> . PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (98) Put2 -> . PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (99) Put2 -> . PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (100) Put2 -> . PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA
    (95) Put -> . PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA

  ! shift/reduce conflict for PUNTOCOMA resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for ABRE_P resolved as shift
  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for SUBSTR resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for RANDOM resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for IFELSE resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for PRINTLINE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for PUT resolved as shift
    FIN             reduce using rule 338 (empty -> .)
    PUNTOCOMA       shift and go to state 62
    NUMERO          shift and go to state 64
    RESTA           shift and go to state 65
    ABRE_P          shift and go to state 63
    SUM             shift and go to state 70
    SUBSTR          shift and go to state 71
    MULT            shift and go to state 68
    DIV             shift and go to state 69
    RANDOM          shift and go to state 72
    IF              shift and go to state 73
    IFELSE          shift and go to state 74
    UNTIL           shift and go to state 75
    WHILE           shift and go to state 76
    PRINTLINE       shift and go to state 77
    AND             shift and go to state 78
    OR              shift and go to state 79
    ADD             shift and go to state 80
    PUT             shift and go to state 96

  ! PUNTOCOMA       [ reduce using rule 338 (empty -> .) ]
  ! NUMERO          [ reduce using rule 338 (empty -> .) ]
  ! RESTA           [ reduce using rule 338 (empty -> .) ]
  ! ABRE_P          [ reduce using rule 338 (empty -> .) ]
  ! SUM             [ reduce using rule 338 (empty -> .) ]
  ! SUBSTR          [ reduce using rule 338 (empty -> .) ]
  ! MULT            [ reduce using rule 338 (empty -> .) ]
  ! DIV             [ reduce using rule 338 (empty -> .) ]
  ! RANDOM          [ reduce using rule 338 (empty -> .) ]
  ! IF              [ reduce using rule 338 (empty -> .) ]
  ! IFELSE          [ reduce using rule 338 (empty -> .) ]
  ! UNTIL           [ reduce using rule 338 (empty -> .) ]
  ! WHILE           [ reduce using rule 338 (empty -> .) ]
  ! PRINTLINE       [ reduce using rule 338 (empty -> .) ]
  ! AND             [ reduce using rule 338 (empty -> .) ]
  ! OR              [ reduce using rule 338 (empty -> .) ]
  ! ADD             [ reduce using rule 338 (empty -> .) ]
  ! PUT             [ reduce using rule 338 (empty -> .) ]

    Substr                         shift and go to state 50
    expresion                      shift and go to state 108
    empty                          shift and go to state 109
    funcion                        shift and go to state 91
    expresion_alge1                shift and go to state 47
    expresion_alge2                shift and go to state 48
    Sum                            shift and go to state 49
    Mult                           shift and go to state 51
    Div                            shift and go to state 52
    Random                         shift and go to state 53
    If                             shift and go to state 54
    IfElse                         shift and go to state 55
    Until                          shift and go to state 56
    While                          shift and go to state 57
    PrintLine                      shift and go to state 58
    And                            shift and go to state 59
    Or                             shift and go to state 60
    Add                            shift and go to state 61
    Put2                           shift and go to state 94
    Put                            shift and go to state 95

state 51

    (46) expresion -> Mult . expresion
    (53) expresion -> Mult . empty
    (41) expresion -> . funcion expresion
    (42) expresion -> . expresion_alge1 expresion
    (43) expresion -> . expresion_alge2 expresion
    (44) expresion -> . Sum expresion
    (45) expresion -> . Substr expresion
    (46) expresion -> . Mult expresion
    (47) expresion -> . Div expresion
    (48) expresion -> . funcion empty
    (49) expresion -> . expresion_alge1 empty
    (50) expresion -> . expresion_alge2 empty
    (51) expresion -> . Sum empty
    (52) expresion -> . Substr empty
    (53) expresion -> . Mult empty
    (54) expresion -> . Div empty
    (55) expresion -> . empty empty
    (338) empty -> .
    (82) funcion -> . Random empty
    (83) funcion -> . If empty
    (84) funcion -> . IfElse empty
    (85) funcion -> . Until empty
    (86) funcion -> . While empty
    (87) funcion -> . PrintLine empty
    (88) funcion -> . And empty
    (89) funcion -> . Or empty
    (90) funcion -> . Add empty
    (91) funcion -> . Put2 empty
    (92) funcion -> . Put empty
    (93) funcion -> . PUNTOCOMA funcion
    (94) funcion -> . empty empty
    (104) expresion_alge1 -> . NUMERO SUMA NUMERO
    (105) expresion_alge1 -> . NUMERO RESTA NUMERO
    (106) expresion_alge1 -> . NUMERO MULTI NUMERO
    (107) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (108) expresion_alge1 -> . RESTA NUMERO SUMA NUMERO
    (109) expresion_alge1 -> . RESTA NUMERO RESTA NUMERO
    (110) expresion_alge1 -> . RESTA NUMERO MULTI NUMERO
    (111) expresion_alge1 -> . RESTA NUMERO DIVISION NUMERO
    (112) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (113) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (114) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (115) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (116) Sum -> . SUM ABRE_P NUMERO COMA NUMERO CIERRA_P
    (117) Sum -> . SUM ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (118) Sum -> . SUM ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (119) Sum -> . SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (120) Sum -> . SUM ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (121) Sum -> . SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (122) Sum -> . SUM ABRE_P NUMERO COMA Var CIERRA_P
    (123) Sum -> . SUM ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (124) Sum -> . SUM ABRE_P Var COMA NUMERO CIERRA_P
    (125) Sum -> . SUM ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (126) Sum -> . SUM ABRE_P Var COMA Var CIERRA_P
    (127) Sum -> . SUM ABRE_P expresion_alge1 COMA Var CIERRA_P
    (128) Sum -> . SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (129) Sum -> . SUM ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (130) Sum -> . SUM ABRE_P Var COMA expresion_alge1 CIERRA_P
    (131) Sum -> . SUM ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P
    (132) Substr -> . SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P
    (133) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (134) Substr -> . SUBSTR ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (135) Substr -> . SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (136) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (137) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (138) Substr -> . SUBSTR ABRE_P NUMERO COMA Var CIERRA_P
    (139) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (140) Substr -> . SUBSTR ABRE_P Var COMA NUMERO CIERRA_P
    (141) Substr -> . SUBSTR ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (142) Substr -> . SUBSTR ABRE_P Var COMA Var CIERRA_P
    (143) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P
    (144) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (145) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (146) Substr -> . SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P
    (147) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P
    (148) Mult -> . MULT ABRE_P NUMERO COMA NUMERO CIERRA_P
    (149) Mult -> . MULT ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (150) Mult -> . MULT ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (151) Mult -> . MULT ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (152) Mult -> . MULT ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (153) Mult -> . MULT ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (154) Mult -> . MULT ABRE_P NUMERO COMA Var CIERRA_P
    (155) Mult -> . MULT ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (156) Mult -> . MULT ABRE_P Var COMA NUMERO CIERRA_P
    (157) Mult -> . MULT ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (158) Mult -> . MULT ABRE_P Var COMA Var CIERRA_P
    (159) Mult -> . MULT ABRE_P expresion_alge1 COMA Var CIERRA_P
    (160) Mult -> . MULT ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (161) Mult -> . MULT ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (162) Mult -> . MULT ABRE_P Var COMA expresion_alge1 CIERRA_P
    (163) Mult -> . MULT ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P
    (164) Div -> . DIV ABRE_P NUMERO COMA NUMERO CIERRA_P
    (165) Div -> . DIV ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (166) Div -> . DIV ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (167) Div -> . DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (168) Div -> . DIV ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (169) Div -> . DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (170) Div -> . DIV ABRE_P NUMERO COMA Var CIERRA_P
    (171) Div -> . DIV ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (172) Div -> . DIV ABRE_P Var COMA NUMERO CIERRA_P
    (173) Div -> . DIV ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (174) Div -> . DIV ABRE_P Var COMA Var CIERRA_P
    (175) Div -> . DIV ABRE_P expresion_alge1 COMA Var CIERRA_P
    (176) Div -> . DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (177) Div -> . DIV ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (178) Div -> . DIV ABRE_P Var COMA expresion_alge1 CIERRA_P
    (179) Div -> . DIV ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P
    (279) Random -> . RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA
    (264) If -> . IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2
    (265) IfElse -> . IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2
    (268) Until -> . UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2
    (266) While -> . WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2
    (337) PrintLine -> . PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA
    (256) And -> . AND ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (257) And -> . AND ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P
    (258) And -> . AND ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P
    (259) And -> . AND ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P
    (260) Or -> . OR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (261) Or -> . OR ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P
    (262) Or -> . OR ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P
    (263) Or -> . OR ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P
    (269) Add -> . ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA
    (270) Add -> . ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (271) Add -> . ADD ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (272) Add -> . ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (273) Add -> . ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (274) Add -> . ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (96) Put2 -> . PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (97) Put2 -> . PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (98) Put2 -> . PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (99) Put2 -> . PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (100) Put2 -> . PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA
    (95) Put -> . PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA

  ! shift/reduce conflict for PUNTOCOMA resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for ABRE_P resolved as shift
  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for SUBSTR resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for RANDOM resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for IFELSE resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for PRINTLINE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for PUT resolved as shift
    FIN             reduce using rule 338 (empty -> .)
    PUNTOCOMA       shift and go to state 62
    NUMERO          shift and go to state 64
    RESTA           shift and go to state 65
    ABRE_P          shift and go to state 63
    SUM             shift and go to state 70
    SUBSTR          shift and go to state 71
    MULT            shift and go to state 68
    DIV             shift and go to state 69
    RANDOM          shift and go to state 72
    IF              shift and go to state 73
    IFELSE          shift and go to state 74
    UNTIL           shift and go to state 75
    WHILE           shift and go to state 76
    PRINTLINE       shift and go to state 77
    AND             shift and go to state 78
    OR              shift and go to state 79
    ADD             shift and go to state 80
    PUT             shift and go to state 96

  ! PUNTOCOMA       [ reduce using rule 338 (empty -> .) ]
  ! NUMERO          [ reduce using rule 338 (empty -> .) ]
  ! RESTA           [ reduce using rule 338 (empty -> .) ]
  ! ABRE_P          [ reduce using rule 338 (empty -> .) ]
  ! SUM             [ reduce using rule 338 (empty -> .) ]
  ! SUBSTR          [ reduce using rule 338 (empty -> .) ]
  ! MULT            [ reduce using rule 338 (empty -> .) ]
  ! DIV             [ reduce using rule 338 (empty -> .) ]
  ! RANDOM          [ reduce using rule 338 (empty -> .) ]
  ! IF              [ reduce using rule 338 (empty -> .) ]
  ! IFELSE          [ reduce using rule 338 (empty -> .) ]
  ! UNTIL           [ reduce using rule 338 (empty -> .) ]
  ! WHILE           [ reduce using rule 338 (empty -> .) ]
  ! PRINTLINE       [ reduce using rule 338 (empty -> .) ]
  ! AND             [ reduce using rule 338 (empty -> .) ]
  ! OR              [ reduce using rule 338 (empty -> .) ]
  ! ADD             [ reduce using rule 338 (empty -> .) ]
  ! PUT             [ reduce using rule 338 (empty -> .) ]

    Mult                           shift and go to state 51
    expresion                      shift and go to state 110
    empty                          shift and go to state 111
    funcion                        shift and go to state 91
    expresion_alge1                shift and go to state 47
    expresion_alge2                shift and go to state 48
    Sum                            shift and go to state 49
    Substr                         shift and go to state 50
    Div                            shift and go to state 52
    Random                         shift and go to state 53
    If                             shift and go to state 54
    IfElse                         shift and go to state 55
    Until                          shift and go to state 56
    While                          shift and go to state 57
    PrintLine                      shift and go to state 58
    And                            shift and go to state 59
    Or                             shift and go to state 60
    Add                            shift and go to state 61
    Put2                           shift and go to state 94
    Put                            shift and go to state 95

state 52

    (47) expresion -> Div . expresion
    (54) expresion -> Div . empty
    (41) expresion -> . funcion expresion
    (42) expresion -> . expresion_alge1 expresion
    (43) expresion -> . expresion_alge2 expresion
    (44) expresion -> . Sum expresion
    (45) expresion -> . Substr expresion
    (46) expresion -> . Mult expresion
    (47) expresion -> . Div expresion
    (48) expresion -> . funcion empty
    (49) expresion -> . expresion_alge1 empty
    (50) expresion -> . expresion_alge2 empty
    (51) expresion -> . Sum empty
    (52) expresion -> . Substr empty
    (53) expresion -> . Mult empty
    (54) expresion -> . Div empty
    (55) expresion -> . empty empty
    (338) empty -> .
    (82) funcion -> . Random empty
    (83) funcion -> . If empty
    (84) funcion -> . IfElse empty
    (85) funcion -> . Until empty
    (86) funcion -> . While empty
    (87) funcion -> . PrintLine empty
    (88) funcion -> . And empty
    (89) funcion -> . Or empty
    (90) funcion -> . Add empty
    (91) funcion -> . Put2 empty
    (92) funcion -> . Put empty
    (93) funcion -> . PUNTOCOMA funcion
    (94) funcion -> . empty empty
    (104) expresion_alge1 -> . NUMERO SUMA NUMERO
    (105) expresion_alge1 -> . NUMERO RESTA NUMERO
    (106) expresion_alge1 -> . NUMERO MULTI NUMERO
    (107) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (108) expresion_alge1 -> . RESTA NUMERO SUMA NUMERO
    (109) expresion_alge1 -> . RESTA NUMERO RESTA NUMERO
    (110) expresion_alge1 -> . RESTA NUMERO MULTI NUMERO
    (111) expresion_alge1 -> . RESTA NUMERO DIVISION NUMERO
    (112) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (113) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (114) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (115) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (116) Sum -> . SUM ABRE_P NUMERO COMA NUMERO CIERRA_P
    (117) Sum -> . SUM ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (118) Sum -> . SUM ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (119) Sum -> . SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (120) Sum -> . SUM ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (121) Sum -> . SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (122) Sum -> . SUM ABRE_P NUMERO COMA Var CIERRA_P
    (123) Sum -> . SUM ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (124) Sum -> . SUM ABRE_P Var COMA NUMERO CIERRA_P
    (125) Sum -> . SUM ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (126) Sum -> . SUM ABRE_P Var COMA Var CIERRA_P
    (127) Sum -> . SUM ABRE_P expresion_alge1 COMA Var CIERRA_P
    (128) Sum -> . SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (129) Sum -> . SUM ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (130) Sum -> . SUM ABRE_P Var COMA expresion_alge1 CIERRA_P
    (131) Sum -> . SUM ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P
    (132) Substr -> . SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P
    (133) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (134) Substr -> . SUBSTR ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (135) Substr -> . SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (136) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (137) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (138) Substr -> . SUBSTR ABRE_P NUMERO COMA Var CIERRA_P
    (139) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (140) Substr -> . SUBSTR ABRE_P Var COMA NUMERO CIERRA_P
    (141) Substr -> . SUBSTR ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (142) Substr -> . SUBSTR ABRE_P Var COMA Var CIERRA_P
    (143) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P
    (144) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (145) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (146) Substr -> . SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P
    (147) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P
    (148) Mult -> . MULT ABRE_P NUMERO COMA NUMERO CIERRA_P
    (149) Mult -> . MULT ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (150) Mult -> . MULT ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (151) Mult -> . MULT ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (152) Mult -> . MULT ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (153) Mult -> . MULT ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (154) Mult -> . MULT ABRE_P NUMERO COMA Var CIERRA_P
    (155) Mult -> . MULT ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (156) Mult -> . MULT ABRE_P Var COMA NUMERO CIERRA_P
    (157) Mult -> . MULT ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (158) Mult -> . MULT ABRE_P Var COMA Var CIERRA_P
    (159) Mult -> . MULT ABRE_P expresion_alge1 COMA Var CIERRA_P
    (160) Mult -> . MULT ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (161) Mult -> . MULT ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (162) Mult -> . MULT ABRE_P Var COMA expresion_alge1 CIERRA_P
    (163) Mult -> . MULT ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P
    (164) Div -> . DIV ABRE_P NUMERO COMA NUMERO CIERRA_P
    (165) Div -> . DIV ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (166) Div -> . DIV ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (167) Div -> . DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (168) Div -> . DIV ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (169) Div -> . DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (170) Div -> . DIV ABRE_P NUMERO COMA Var CIERRA_P
    (171) Div -> . DIV ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (172) Div -> . DIV ABRE_P Var COMA NUMERO CIERRA_P
    (173) Div -> . DIV ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (174) Div -> . DIV ABRE_P Var COMA Var CIERRA_P
    (175) Div -> . DIV ABRE_P expresion_alge1 COMA Var CIERRA_P
    (176) Div -> . DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (177) Div -> . DIV ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (178) Div -> . DIV ABRE_P Var COMA expresion_alge1 CIERRA_P
    (179) Div -> . DIV ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P
    (279) Random -> . RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA
    (264) If -> . IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2
    (265) IfElse -> . IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2
    (268) Until -> . UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2
    (266) While -> . WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2
    (337) PrintLine -> . PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA
    (256) And -> . AND ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (257) And -> . AND ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P
    (258) And -> . AND ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P
    (259) And -> . AND ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P
    (260) Or -> . OR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (261) Or -> . OR ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P
    (262) Or -> . OR ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P
    (263) Or -> . OR ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P
    (269) Add -> . ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA
    (270) Add -> . ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (271) Add -> . ADD ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (272) Add -> . ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (273) Add -> . ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (274) Add -> . ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (96) Put2 -> . PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (97) Put2 -> . PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (98) Put2 -> . PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (99) Put2 -> . PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (100) Put2 -> . PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA
    (95) Put -> . PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA

  ! shift/reduce conflict for PUNTOCOMA resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for ABRE_P resolved as shift
  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for SUBSTR resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for RANDOM resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for IFELSE resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for PRINTLINE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for PUT resolved as shift
    FIN             reduce using rule 338 (empty -> .)
    PUNTOCOMA       shift and go to state 62
    NUMERO          shift and go to state 64
    RESTA           shift and go to state 65
    ABRE_P          shift and go to state 63
    SUM             shift and go to state 70
    SUBSTR          shift and go to state 71
    MULT            shift and go to state 68
    DIV             shift and go to state 69
    RANDOM          shift and go to state 72
    IF              shift and go to state 73
    IFELSE          shift and go to state 74
    UNTIL           shift and go to state 75
    WHILE           shift and go to state 76
    PRINTLINE       shift and go to state 77
    AND             shift and go to state 78
    OR              shift and go to state 79
    ADD             shift and go to state 80
    PUT             shift and go to state 96

  ! PUNTOCOMA       [ reduce using rule 338 (empty -> .) ]
  ! NUMERO          [ reduce using rule 338 (empty -> .) ]
  ! RESTA           [ reduce using rule 338 (empty -> .) ]
  ! ABRE_P          [ reduce using rule 338 (empty -> .) ]
  ! SUM             [ reduce using rule 338 (empty -> .) ]
  ! SUBSTR          [ reduce using rule 338 (empty -> .) ]
  ! MULT            [ reduce using rule 338 (empty -> .) ]
  ! DIV             [ reduce using rule 338 (empty -> .) ]
  ! RANDOM          [ reduce using rule 338 (empty -> .) ]
  ! IF              [ reduce using rule 338 (empty -> .) ]
  ! IFELSE          [ reduce using rule 338 (empty -> .) ]
  ! UNTIL           [ reduce using rule 338 (empty -> .) ]
  ! WHILE           [ reduce using rule 338 (empty -> .) ]
  ! PRINTLINE       [ reduce using rule 338 (empty -> .) ]
  ! AND             [ reduce using rule 338 (empty -> .) ]
  ! OR              [ reduce using rule 338 (empty -> .) ]
  ! ADD             [ reduce using rule 338 (empty -> .) ]
  ! PUT             [ reduce using rule 338 (empty -> .) ]

    Div                            shift and go to state 52
    expresion                      shift and go to state 112
    empty                          shift and go to state 113
    funcion                        shift and go to state 91
    expresion_alge1                shift and go to state 47
    expresion_alge2                shift and go to state 48
    Sum                            shift and go to state 49
    Substr                         shift and go to state 50
    Mult                           shift and go to state 51
    Random                         shift and go to state 53
    If                             shift and go to state 54
    IfElse                         shift and go to state 55
    Until                          shift and go to state 56
    While                          shift and go to state 57
    PrintLine                      shift and go to state 58
    And                            shift and go to state 59
    Or                             shift and go to state 60
    Add                            shift and go to state 61
    Put2                           shift and go to state 94
    Put                            shift and go to state 95

state 53

    (82) funcion -> Random . empty
    (338) empty -> .

    PUNTOCOMA       reduce using rule 338 (empty -> .)
    NUMERO          reduce using rule 338 (empty -> .)
    RESTA           reduce using rule 338 (empty -> .)
    ABRE_P          reduce using rule 338 (empty -> .)
    SUM             reduce using rule 338 (empty -> .)
    SUBSTR          reduce using rule 338 (empty -> .)
    MULT            reduce using rule 338 (empty -> .)
    DIV             reduce using rule 338 (empty -> .)
    RANDOM          reduce using rule 338 (empty -> .)
    IF              reduce using rule 338 (empty -> .)
    IFELSE          reduce using rule 338 (empty -> .)
    UNTIL           reduce using rule 338 (empty -> .)
    WHILE           reduce using rule 338 (empty -> .)
    PRINTLINE       reduce using rule 338 (empty -> .)
    AND             reduce using rule 338 (empty -> .)
    OR              reduce using rule 338 (empty -> .)
    ADD             reduce using rule 338 (empty -> .)
    PUT             reduce using rule 338 (empty -> .)
    FIN             reduce using rule 338 (empty -> .)
    CIERRA_P        reduce using rule 338 (empty -> .)
    BRACKET2        reduce using rule 338 (empty -> .)

    empty                          shift and go to state 114

state 54

    (83) funcion -> If . empty
    (338) empty -> .

    PUNTOCOMA       reduce using rule 338 (empty -> .)
    NUMERO          reduce using rule 338 (empty -> .)
    RESTA           reduce using rule 338 (empty -> .)
    ABRE_P          reduce using rule 338 (empty -> .)
    SUM             reduce using rule 338 (empty -> .)
    SUBSTR          reduce using rule 338 (empty -> .)
    MULT            reduce using rule 338 (empty -> .)
    DIV             reduce using rule 338 (empty -> .)
    RANDOM          reduce using rule 338 (empty -> .)
    IF              reduce using rule 338 (empty -> .)
    IFELSE          reduce using rule 338 (empty -> .)
    UNTIL           reduce using rule 338 (empty -> .)
    WHILE           reduce using rule 338 (empty -> .)
    PRINTLINE       reduce using rule 338 (empty -> .)
    AND             reduce using rule 338 (empty -> .)
    OR              reduce using rule 338 (empty -> .)
    ADD             reduce using rule 338 (empty -> .)
    PUT             reduce using rule 338 (empty -> .)
    FIN             reduce using rule 338 (empty -> .)
    CIERRA_P        reduce using rule 338 (empty -> .)
    BRACKET2        reduce using rule 338 (empty -> .)

    empty                          shift and go to state 115

state 55

    (84) funcion -> IfElse . empty
    (338) empty -> .

    PUNTOCOMA       reduce using rule 338 (empty -> .)
    NUMERO          reduce using rule 338 (empty -> .)
    RESTA           reduce using rule 338 (empty -> .)
    ABRE_P          reduce using rule 338 (empty -> .)
    SUM             reduce using rule 338 (empty -> .)
    SUBSTR          reduce using rule 338 (empty -> .)
    MULT            reduce using rule 338 (empty -> .)
    DIV             reduce using rule 338 (empty -> .)
    RANDOM          reduce using rule 338 (empty -> .)
    IF              reduce using rule 338 (empty -> .)
    IFELSE          reduce using rule 338 (empty -> .)
    UNTIL           reduce using rule 338 (empty -> .)
    WHILE           reduce using rule 338 (empty -> .)
    PRINTLINE       reduce using rule 338 (empty -> .)
    AND             reduce using rule 338 (empty -> .)
    OR              reduce using rule 338 (empty -> .)
    ADD             reduce using rule 338 (empty -> .)
    PUT             reduce using rule 338 (empty -> .)
    FIN             reduce using rule 338 (empty -> .)
    CIERRA_P        reduce using rule 338 (empty -> .)
    BRACKET2        reduce using rule 338 (empty -> .)

    empty                          shift and go to state 116

state 56

    (85) funcion -> Until . empty
    (338) empty -> .

    PUNTOCOMA       reduce using rule 338 (empty -> .)
    NUMERO          reduce using rule 338 (empty -> .)
    RESTA           reduce using rule 338 (empty -> .)
    ABRE_P          reduce using rule 338 (empty -> .)
    SUM             reduce using rule 338 (empty -> .)
    SUBSTR          reduce using rule 338 (empty -> .)
    MULT            reduce using rule 338 (empty -> .)
    DIV             reduce using rule 338 (empty -> .)
    RANDOM          reduce using rule 338 (empty -> .)
    IF              reduce using rule 338 (empty -> .)
    IFELSE          reduce using rule 338 (empty -> .)
    UNTIL           reduce using rule 338 (empty -> .)
    WHILE           reduce using rule 338 (empty -> .)
    PRINTLINE       reduce using rule 338 (empty -> .)
    AND             reduce using rule 338 (empty -> .)
    OR              reduce using rule 338 (empty -> .)
    ADD             reduce using rule 338 (empty -> .)
    PUT             reduce using rule 338 (empty -> .)
    FIN             reduce using rule 338 (empty -> .)
    CIERRA_P        reduce using rule 338 (empty -> .)
    BRACKET2        reduce using rule 338 (empty -> .)

    empty                          shift and go to state 117

state 57

    (86) funcion -> While . empty
    (338) empty -> .

    PUNTOCOMA       reduce using rule 338 (empty -> .)
    NUMERO          reduce using rule 338 (empty -> .)
    RESTA           reduce using rule 338 (empty -> .)
    ABRE_P          reduce using rule 338 (empty -> .)
    SUM             reduce using rule 338 (empty -> .)
    SUBSTR          reduce using rule 338 (empty -> .)
    MULT            reduce using rule 338 (empty -> .)
    DIV             reduce using rule 338 (empty -> .)
    RANDOM          reduce using rule 338 (empty -> .)
    IF              reduce using rule 338 (empty -> .)
    IFELSE          reduce using rule 338 (empty -> .)
    UNTIL           reduce using rule 338 (empty -> .)
    WHILE           reduce using rule 338 (empty -> .)
    PRINTLINE       reduce using rule 338 (empty -> .)
    AND             reduce using rule 338 (empty -> .)
    OR              reduce using rule 338 (empty -> .)
    ADD             reduce using rule 338 (empty -> .)
    PUT             reduce using rule 338 (empty -> .)
    FIN             reduce using rule 338 (empty -> .)
    CIERRA_P        reduce using rule 338 (empty -> .)
    BRACKET2        reduce using rule 338 (empty -> .)

    empty                          shift and go to state 118

state 58

    (87) funcion -> PrintLine . empty
    (338) empty -> .

    PUNTOCOMA       reduce using rule 338 (empty -> .)
    NUMERO          reduce using rule 338 (empty -> .)
    RESTA           reduce using rule 338 (empty -> .)
    ABRE_P          reduce using rule 338 (empty -> .)
    SUM             reduce using rule 338 (empty -> .)
    SUBSTR          reduce using rule 338 (empty -> .)
    MULT            reduce using rule 338 (empty -> .)
    DIV             reduce using rule 338 (empty -> .)
    RANDOM          reduce using rule 338 (empty -> .)
    IF              reduce using rule 338 (empty -> .)
    IFELSE          reduce using rule 338 (empty -> .)
    UNTIL           reduce using rule 338 (empty -> .)
    WHILE           reduce using rule 338 (empty -> .)
    PRINTLINE       reduce using rule 338 (empty -> .)
    AND             reduce using rule 338 (empty -> .)
    OR              reduce using rule 338 (empty -> .)
    ADD             reduce using rule 338 (empty -> .)
    PUT             reduce using rule 338 (empty -> .)
    FIN             reduce using rule 338 (empty -> .)
    CIERRA_P        reduce using rule 338 (empty -> .)
    BRACKET2        reduce using rule 338 (empty -> .)

    empty                          shift and go to state 119

state 59

    (88) funcion -> And . empty
    (338) empty -> .

    PUNTOCOMA       reduce using rule 338 (empty -> .)
    NUMERO          reduce using rule 338 (empty -> .)
    RESTA           reduce using rule 338 (empty -> .)
    ABRE_P          reduce using rule 338 (empty -> .)
    SUM             reduce using rule 338 (empty -> .)
    SUBSTR          reduce using rule 338 (empty -> .)
    MULT            reduce using rule 338 (empty -> .)
    DIV             reduce using rule 338 (empty -> .)
    RANDOM          reduce using rule 338 (empty -> .)
    IF              reduce using rule 338 (empty -> .)
    IFELSE          reduce using rule 338 (empty -> .)
    UNTIL           reduce using rule 338 (empty -> .)
    WHILE           reduce using rule 338 (empty -> .)
    PRINTLINE       reduce using rule 338 (empty -> .)
    AND             reduce using rule 338 (empty -> .)
    OR              reduce using rule 338 (empty -> .)
    ADD             reduce using rule 338 (empty -> .)
    PUT             reduce using rule 338 (empty -> .)
    FIN             reduce using rule 338 (empty -> .)
    CIERRA_P        reduce using rule 338 (empty -> .)
    BRACKET2        reduce using rule 338 (empty -> .)

    empty                          shift and go to state 120

state 60

    (89) funcion -> Or . empty
    (338) empty -> .

    PUNTOCOMA       reduce using rule 338 (empty -> .)
    NUMERO          reduce using rule 338 (empty -> .)
    RESTA           reduce using rule 338 (empty -> .)
    ABRE_P          reduce using rule 338 (empty -> .)
    SUM             reduce using rule 338 (empty -> .)
    SUBSTR          reduce using rule 338 (empty -> .)
    MULT            reduce using rule 338 (empty -> .)
    DIV             reduce using rule 338 (empty -> .)
    RANDOM          reduce using rule 338 (empty -> .)
    IF              reduce using rule 338 (empty -> .)
    IFELSE          reduce using rule 338 (empty -> .)
    UNTIL           reduce using rule 338 (empty -> .)
    WHILE           reduce using rule 338 (empty -> .)
    PRINTLINE       reduce using rule 338 (empty -> .)
    AND             reduce using rule 338 (empty -> .)
    OR              reduce using rule 338 (empty -> .)
    ADD             reduce using rule 338 (empty -> .)
    PUT             reduce using rule 338 (empty -> .)
    FIN             reduce using rule 338 (empty -> .)
    CIERRA_P        reduce using rule 338 (empty -> .)
    BRACKET2        reduce using rule 338 (empty -> .)

    empty                          shift and go to state 121

state 61

    (90) funcion -> Add . empty
    (338) empty -> .

    PUNTOCOMA       reduce using rule 338 (empty -> .)
    NUMERO          reduce using rule 338 (empty -> .)
    RESTA           reduce using rule 338 (empty -> .)
    ABRE_P          reduce using rule 338 (empty -> .)
    SUM             reduce using rule 338 (empty -> .)
    SUBSTR          reduce using rule 338 (empty -> .)
    MULT            reduce using rule 338 (empty -> .)
    DIV             reduce using rule 338 (empty -> .)
    RANDOM          reduce using rule 338 (empty -> .)
    IF              reduce using rule 338 (empty -> .)
    IFELSE          reduce using rule 338 (empty -> .)
    UNTIL           reduce using rule 338 (empty -> .)
    WHILE           reduce using rule 338 (empty -> .)
    PRINTLINE       reduce using rule 338 (empty -> .)
    AND             reduce using rule 338 (empty -> .)
    OR              reduce using rule 338 (empty -> .)
    ADD             reduce using rule 338 (empty -> .)
    PUT             reduce using rule 338 (empty -> .)
    FIN             reduce using rule 338 (empty -> .)
    CIERRA_P        reduce using rule 338 (empty -> .)
    BRACKET2        reduce using rule 338 (empty -> .)

    empty                          shift and go to state 122

state 62

    (93) funcion -> PUNTOCOMA . funcion
    (82) funcion -> . Random empty
    (83) funcion -> . If empty
    (84) funcion -> . IfElse empty
    (85) funcion -> . Until empty
    (86) funcion -> . While empty
    (87) funcion -> . PrintLine empty
    (88) funcion -> . And empty
    (89) funcion -> . Or empty
    (90) funcion -> . Add empty
    (91) funcion -> . Put2 empty
    (92) funcion -> . Put empty
    (93) funcion -> . PUNTOCOMA funcion
    (94) funcion -> . empty empty
    (279) Random -> . RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA
    (264) If -> . IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2
    (265) IfElse -> . IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2
    (268) Until -> . UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2
    (266) While -> . WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2
    (337) PrintLine -> . PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA
    (256) And -> . AND ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (257) And -> . AND ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P
    (258) And -> . AND ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P
    (259) And -> . AND ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P
    (260) Or -> . OR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (261) Or -> . OR ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P
    (262) Or -> . OR ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P
    (263) Or -> . OR ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P
    (269) Add -> . ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA
    (270) Add -> . ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (271) Add -> . ADD ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (272) Add -> . ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (273) Add -> . ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (274) Add -> . ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (96) Put2 -> . PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (97) Put2 -> . PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (98) Put2 -> . PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (99) Put2 -> . PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (100) Put2 -> . PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA
    (95) Put -> . PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA
    (338) empty -> .

  ! shift/reduce conflict for PUNTOCOMA resolved as shift
  ! shift/reduce conflict for RANDOM resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for IFELSE resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for PRINTLINE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for PUT resolved as shift
    PUNTOCOMA       shift and go to state 62
    RANDOM          shift and go to state 72
    IF              shift and go to state 73
    IFELSE          shift and go to state 74
    UNTIL           shift and go to state 75
    WHILE           shift and go to state 76
    PRINTLINE       shift and go to state 77
    AND             shift and go to state 78
    OR              shift and go to state 79
    ADD             shift and go to state 80
    PUT             shift and go to state 96
    NUMERO          reduce using rule 338 (empty -> .)
    RESTA           reduce using rule 338 (empty -> .)
    ABRE_P          reduce using rule 338 (empty -> .)
    SUM             reduce using rule 338 (empty -> .)
    SUBSTR          reduce using rule 338 (empty -> .)
    MULT            reduce using rule 338 (empty -> .)
    DIV             reduce using rule 338 (empty -> .)
    FIN             reduce using rule 338 (empty -> .)
    CIERRA_P        reduce using rule 338 (empty -> .)
    BRACKET2        reduce using rule 338 (empty -> .)

  ! PUNTOCOMA       [ reduce using rule 338 (empty -> .) ]
  ! RANDOM          [ reduce using rule 338 (empty -> .) ]
  ! IF              [ reduce using rule 338 (empty -> .) ]
  ! IFELSE          [ reduce using rule 338 (empty -> .) ]
  ! UNTIL           [ reduce using rule 338 (empty -> .) ]
  ! WHILE           [ reduce using rule 338 (empty -> .) ]
  ! PRINTLINE       [ reduce using rule 338 (empty -> .) ]
  ! AND             [ reduce using rule 338 (empty -> .) ]
  ! OR              [ reduce using rule 338 (empty -> .) ]
  ! ADD             [ reduce using rule 338 (empty -> .) ]
  ! PUT             [ reduce using rule 338 (empty -> .) ]

    funcion                        shift and go to state 123
    Random                         shift and go to state 53
    empty                          shift and go to state 124
    If                             shift and go to state 54
    IfElse                         shift and go to state 55
    Until                          shift and go to state 56
    While                          shift and go to state 57
    PrintLine                      shift and go to state 58
    And                            shift and go to state 59
    Or                             shift and go to state 60
    Add                            shift and go to state 61
    Put2                           shift and go to state 94
    Put                            shift and go to state 95

state 63

    (112) expresion_alge2 -> ABRE_P . expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (113) expresion_alge2 -> ABRE_P . expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (114) expresion_alge2 -> ABRE_P . expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (115) expresion_alge2 -> ABRE_P . expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (104) expresion_alge1 -> . NUMERO SUMA NUMERO
    (105) expresion_alge1 -> . NUMERO RESTA NUMERO
    (106) expresion_alge1 -> . NUMERO MULTI NUMERO
    (107) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (108) expresion_alge1 -> . RESTA NUMERO SUMA NUMERO
    (109) expresion_alge1 -> . RESTA NUMERO RESTA NUMERO
    (110) expresion_alge1 -> . RESTA NUMERO MULTI NUMERO
    (111) expresion_alge1 -> . RESTA NUMERO DIVISION NUMERO

    NUMERO          shift and go to state 64
    RESTA           shift and go to state 65

    expresion_alge1                shift and go to state 125

state 64

    (104) expresion_alge1 -> NUMERO . SUMA NUMERO
    (105) expresion_alge1 -> NUMERO . RESTA NUMERO
    (106) expresion_alge1 -> NUMERO . MULTI NUMERO
    (107) expresion_alge1 -> NUMERO . DIVISION NUMERO

    SUMA            shift and go to state 126
    RESTA           shift and go to state 127
    MULTI           shift and go to state 128
    DIVISION        shift and go to state 129


state 65

    (108) expresion_alge1 -> RESTA . NUMERO SUMA NUMERO
    (109) expresion_alge1 -> RESTA . NUMERO RESTA NUMERO
    (110) expresion_alge1 -> RESTA . NUMERO MULTI NUMERO
    (111) expresion_alge1 -> RESTA . NUMERO DIVISION NUMERO

    NUMERO          shift and go to state 130


state 66

    (328) Run -> RUN . BRACKET1 ordenes BRACKET2 PUNTOCOMA cuerpo3

    BRACKET1        shift and go to state 131


state 67

    (267) Repeat -> REPEAT . NUMERO BRACKET1 ordenes BRACKET2 cuerpo3

    NUMERO          shift and go to state 132


state 68

    (148) Mult -> MULT . ABRE_P NUMERO COMA NUMERO CIERRA_P
    (149) Mult -> MULT . ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (150) Mult -> MULT . ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (151) Mult -> MULT . ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (152) Mult -> MULT . ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (153) Mult -> MULT . ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (154) Mult -> MULT . ABRE_P NUMERO COMA Var CIERRA_P
    (155) Mult -> MULT . ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (156) Mult -> MULT . ABRE_P Var COMA NUMERO CIERRA_P
    (157) Mult -> MULT . ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (158) Mult -> MULT . ABRE_P Var COMA Var CIERRA_P
    (159) Mult -> MULT . ABRE_P expresion_alge1 COMA Var CIERRA_P
    (160) Mult -> MULT . ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (161) Mult -> MULT . ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (162) Mult -> MULT . ABRE_P Var COMA expresion_alge1 CIERRA_P
    (163) Mult -> MULT . ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P

    ABRE_P          shift and go to state 133


state 69

    (164) Div -> DIV . ABRE_P NUMERO COMA NUMERO CIERRA_P
    (165) Div -> DIV . ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (166) Div -> DIV . ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (167) Div -> DIV . ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (168) Div -> DIV . ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (169) Div -> DIV . ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (170) Div -> DIV . ABRE_P NUMERO COMA Var CIERRA_P
    (171) Div -> DIV . ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (172) Div -> DIV . ABRE_P Var COMA NUMERO CIERRA_P
    (173) Div -> DIV . ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (174) Div -> DIV . ABRE_P Var COMA Var CIERRA_P
    (175) Div -> DIV . ABRE_P expresion_alge1 COMA Var CIERRA_P
    (176) Div -> DIV . ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (177) Div -> DIV . ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (178) Div -> DIV . ABRE_P Var COMA expresion_alge1 CIERRA_P
    (179) Div -> DIV . ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P

    ABRE_P          shift and go to state 134


state 70

    (116) Sum -> SUM . ABRE_P NUMERO COMA NUMERO CIERRA_P
    (117) Sum -> SUM . ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (118) Sum -> SUM . ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (119) Sum -> SUM . ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (120) Sum -> SUM . ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (121) Sum -> SUM . ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (122) Sum -> SUM . ABRE_P NUMERO COMA Var CIERRA_P
    (123) Sum -> SUM . ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (124) Sum -> SUM . ABRE_P Var COMA NUMERO CIERRA_P
    (125) Sum -> SUM . ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (126) Sum -> SUM . ABRE_P Var COMA Var CIERRA_P
    (127) Sum -> SUM . ABRE_P expresion_alge1 COMA Var CIERRA_P
    (128) Sum -> SUM . ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (129) Sum -> SUM . ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (130) Sum -> SUM . ABRE_P Var COMA expresion_alge1 CIERRA_P
    (131) Sum -> SUM . ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P

    ABRE_P          shift and go to state 135


state 71

    (132) Substr -> SUBSTR . ABRE_P NUMERO COMA NUMERO CIERRA_P
    (133) Substr -> SUBSTR . ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (134) Substr -> SUBSTR . ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (135) Substr -> SUBSTR . ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (136) Substr -> SUBSTR . ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (137) Substr -> SUBSTR . ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (138) Substr -> SUBSTR . ABRE_P NUMERO COMA Var CIERRA_P
    (139) Substr -> SUBSTR . ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (140) Substr -> SUBSTR . ABRE_P Var COMA NUMERO CIERRA_P
    (141) Substr -> SUBSTR . ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (142) Substr -> SUBSTR . ABRE_P Var COMA Var CIERRA_P
    (143) Substr -> SUBSTR . ABRE_P expresion_alge1 COMA Var CIERRA_P
    (144) Substr -> SUBSTR . ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (145) Substr -> SUBSTR . ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (146) Substr -> SUBSTR . ABRE_P Var COMA expresion_alge1 CIERRA_P
    (147) Substr -> SUBSTR . ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P

    ABRE_P          shift and go to state 136


state 72

    (279) Random -> RANDOM . ABRE_P NUMERO CIERRA_P PUNTOCOMA

    ABRE_P          shift and go to state 137


state 73

    (264) If -> IF . ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2

    ABRE_P          shift and go to state 138


state 74

    (265) IfElse -> IFELSE . ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2

    ABRE_P          shift and go to state 139


state 75

    (268) Until -> UNTIL . BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2

    BRACKET1        shift and go to state 140


state 76

    (266) While -> WHILE . BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2

    BRACKET1        shift and go to state 141


state 77

    (337) PrintLine -> PRINTLINE . ABRE_P exp CIERRA_P PUNTOCOMA

    ABRE_P          shift and go to state 142


state 78

    (256) And -> AND . ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (257) And -> AND . ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P
    (258) And -> AND . ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P
    (259) And -> AND . ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P

    ABRE_P          shift and go to state 143


state 79

    (260) Or -> OR . ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (261) Or -> OR . ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P
    (262) Or -> OR . ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P
    (263) Or -> OR . ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P

    ABRE_P          shift and go to state 144


state 80

    (269) Add -> ADD . ABRE_P Var empty empty CIERRA_P PUNTOCOMA
    (270) Add -> ADD . ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (271) Add -> ADD . ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (272) Add -> ADD . ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (273) Add -> ADD . ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (274) Add -> ADD . ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA

    ABRE_P          shift and go to state 145


state 81

    (95) Put -> PUT ABRE_P VAR COMA . VAR CIERRA_P PUNTOCOMA
    (96) Put2 -> PUT ABRE_P VAR COMA . NUMERO CIERRA_P PUNTOCOMA
    (97) Put2 -> PUT ABRE_P VAR COMA . RESTA NUMERO CIERRA_P PUNTOCOMA
    (98) Put2 -> PUT ABRE_P VAR COMA . expresion_alge1 CIERRA_P PUNTOCOMA
    (99) Put2 -> PUT ABRE_P VAR COMA . expresion_alge2 CIERRA_P PUNTOCOMA
    (100) Put2 -> PUT ABRE_P VAR COMA . funcion CIERRA_P PUNTOCOMA
    (104) expresion_alge1 -> . NUMERO SUMA NUMERO
    (105) expresion_alge1 -> . NUMERO RESTA NUMERO
    (106) expresion_alge1 -> . NUMERO MULTI NUMERO
    (107) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (108) expresion_alge1 -> . RESTA NUMERO SUMA NUMERO
    (109) expresion_alge1 -> . RESTA NUMERO RESTA NUMERO
    (110) expresion_alge1 -> . RESTA NUMERO MULTI NUMERO
    (111) expresion_alge1 -> . RESTA NUMERO DIVISION NUMERO
    (112) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (113) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (114) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (115) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (82) funcion -> . Random empty
    (83) funcion -> . If empty
    (84) funcion -> . IfElse empty
    (85) funcion -> . Until empty
    (86) funcion -> . While empty
    (87) funcion -> . PrintLine empty
    (88) funcion -> . And empty
    (89) funcion -> . Or empty
    (90) funcion -> . Add empty
    (91) funcion -> . Put2 empty
    (92) funcion -> . Put empty
    (93) funcion -> . PUNTOCOMA funcion
    (94) funcion -> . empty empty
    (279) Random -> . RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA
    (264) If -> . IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2
    (265) IfElse -> . IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2
    (268) Until -> . UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2
    (266) While -> . WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2
    (337) PrintLine -> . PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA
    (256) And -> . AND ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (257) And -> . AND ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P
    (258) And -> . AND ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P
    (259) And -> . AND ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P
    (260) Or -> . OR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (261) Or -> . OR ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P
    (262) Or -> . OR ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P
    (263) Or -> . OR ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P
    (269) Add -> . ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA
    (270) Add -> . ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (271) Add -> . ADD ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (272) Add -> . ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (273) Add -> . ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (274) Add -> . ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (96) Put2 -> . PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (97) Put2 -> . PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (98) Put2 -> . PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (99) Put2 -> . PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (100) Put2 -> . PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA
    (95) Put -> . PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA
    (338) empty -> .

    VAR             shift and go to state 146
    NUMERO          shift and go to state 147
    RESTA           shift and go to state 148
    ABRE_P          shift and go to state 63
    PUNTOCOMA       shift and go to state 62
    RANDOM          shift and go to state 72
    IF              shift and go to state 73
    IFELSE          shift and go to state 74
    UNTIL           shift and go to state 75
    WHILE           shift and go to state 76
    PRINTLINE       shift and go to state 77
    AND             shift and go to state 78
    OR              shift and go to state 79
    ADD             shift and go to state 80
    PUT             shift and go to state 96
    CIERRA_P        reduce using rule 338 (empty -> .)

    expresion_alge1                shift and go to state 149
    expresion_alge2                shift and go to state 150
    funcion                        shift and go to state 151
    Random                         shift and go to state 53
    empty                          shift and go to state 124
    If                             shift and go to state 54
    IfElse                         shift and go to state 55
    Until                          shift and go to state 56
    While                          shift and go to state 57
    PrintLine                      shift and go to state 58
    And                            shift and go to state 59
    Or                             shift and go to state 60
    Add                            shift and go to state 61
    Put2                           shift and go to state 94
    Put                            shift and go to state 95

state 82

    (39) variable2 -> DEF VAR IGUAL NUMERO . PUNTOCOMA

    PUNTOCOMA       shift and go to state 152


state 83

    (40) variable2 -> DEF VAR IGUAL RESTA . NUMERO PUNTOCOMA

    NUMERO          shift and go to state 153


state 84

    (277) parametro -> empty empty . empty
    (338) empty -> .

    BRACKET2        reduce using rule 338 (empty -> .)

    empty                          shift and go to state 154

state 85

    (25) procedimiento -> PARA id BRACKET1 empty BRACKET2 . cuerpo2 FIN cuerpo
    (8) cuerpo2 -> . variablexd
    (9) cuerpo2 -> . COMMENT cuerpo2
    (10) cuerpo2 -> . expresion
    (11) cuerpo2 -> . llamadoproc
    (12) cuerpo2 -> . empty
    (13) cuerpo2 -> . Put2
    (14) cuerpo2 -> . Put
    (32) variablexd -> . variable1 cuerpo2
    (33) variablexd -> . variable2 cuerpo2
    (34) variablexd -> . empty empty
    (41) expresion -> . funcion expresion
    (42) expresion -> . expresion_alge1 expresion
    (43) expresion -> . expresion_alge2 expresion
    (44) expresion -> . Sum expresion
    (45) expresion -> . Substr expresion
    (46) expresion -> . Mult expresion
    (47) expresion -> . Div expresion
    (48) expresion -> . funcion empty
    (49) expresion -> . expresion_alge1 empty
    (50) expresion -> . expresion_alge2 empty
    (51) expresion -> . Sum empty
    (52) expresion -> . Substr empty
    (53) expresion -> . Mult empty
    (54) expresion -> . Div empty
    (55) expresion -> . empty empty
    (27) llamadoproc -> . PARA id BRACKET1 parametro BRACKET2 PUNTOCOMA
    (338) empty -> .
    (96) Put2 -> . PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (97) Put2 -> . PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (98) Put2 -> . PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (99) Put2 -> . PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (100) Put2 -> . PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA
    (95) Put -> . PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA
    (38) variable1 -> . DEF VAR PUNTOCOMA
    (39) variable2 -> . DEF VAR IGUAL NUMERO PUNTOCOMA
    (40) variable2 -> . DEF VAR IGUAL RESTA NUMERO PUNTOCOMA
    (82) funcion -> . Random empty
    (83) funcion -> . If empty
    (84) funcion -> . IfElse empty
    (85) funcion -> . Until empty
    (86) funcion -> . While empty
    (87) funcion -> . PrintLine empty
    (88) funcion -> . And empty
    (89) funcion -> . Or empty
    (90) funcion -> . Add empty
    (91) funcion -> . Put2 empty
    (92) funcion -> . Put empty
    (93) funcion -> . PUNTOCOMA funcion
    (94) funcion -> . empty empty
    (104) expresion_alge1 -> . NUMERO SUMA NUMERO
    (105) expresion_alge1 -> . NUMERO RESTA NUMERO
    (106) expresion_alge1 -> . NUMERO MULTI NUMERO
    (107) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (108) expresion_alge1 -> . RESTA NUMERO SUMA NUMERO
    (109) expresion_alge1 -> . RESTA NUMERO RESTA NUMERO
    (110) expresion_alge1 -> . RESTA NUMERO MULTI NUMERO
    (111) expresion_alge1 -> . RESTA NUMERO DIVISION NUMERO
    (112) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (113) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (114) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (115) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (116) Sum -> . SUM ABRE_P NUMERO COMA NUMERO CIERRA_P
    (117) Sum -> . SUM ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (118) Sum -> . SUM ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (119) Sum -> . SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (120) Sum -> . SUM ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (121) Sum -> . SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (122) Sum -> . SUM ABRE_P NUMERO COMA Var CIERRA_P
    (123) Sum -> . SUM ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (124) Sum -> . SUM ABRE_P Var COMA NUMERO CIERRA_P
    (125) Sum -> . SUM ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (126) Sum -> . SUM ABRE_P Var COMA Var CIERRA_P
    (127) Sum -> . SUM ABRE_P expresion_alge1 COMA Var CIERRA_P
    (128) Sum -> . SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (129) Sum -> . SUM ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (130) Sum -> . SUM ABRE_P Var COMA expresion_alge1 CIERRA_P
    (131) Sum -> . SUM ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P
    (132) Substr -> . SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P
    (133) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (134) Substr -> . SUBSTR ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (135) Substr -> . SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (136) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (137) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (138) Substr -> . SUBSTR ABRE_P NUMERO COMA Var CIERRA_P
    (139) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (140) Substr -> . SUBSTR ABRE_P Var COMA NUMERO CIERRA_P
    (141) Substr -> . SUBSTR ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (142) Substr -> . SUBSTR ABRE_P Var COMA Var CIERRA_P
    (143) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P
    (144) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (145) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (146) Substr -> . SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P
    (147) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P
    (148) Mult -> . MULT ABRE_P NUMERO COMA NUMERO CIERRA_P
    (149) Mult -> . MULT ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (150) Mult -> . MULT ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (151) Mult -> . MULT ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (152) Mult -> . MULT ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (153) Mult -> . MULT ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (154) Mult -> . MULT ABRE_P NUMERO COMA Var CIERRA_P
    (155) Mult -> . MULT ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (156) Mult -> . MULT ABRE_P Var COMA NUMERO CIERRA_P
    (157) Mult -> . MULT ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (158) Mult -> . MULT ABRE_P Var COMA Var CIERRA_P
    (159) Mult -> . MULT ABRE_P expresion_alge1 COMA Var CIERRA_P
    (160) Mult -> . MULT ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (161) Mult -> . MULT ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (162) Mult -> . MULT ABRE_P Var COMA expresion_alge1 CIERRA_P
    (163) Mult -> . MULT ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P
    (164) Div -> . DIV ABRE_P NUMERO COMA NUMERO CIERRA_P
    (165) Div -> . DIV ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (166) Div -> . DIV ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (167) Div -> . DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (168) Div -> . DIV ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (169) Div -> . DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (170) Div -> . DIV ABRE_P NUMERO COMA Var CIERRA_P
    (171) Div -> . DIV ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (172) Div -> . DIV ABRE_P Var COMA NUMERO CIERRA_P
    (173) Div -> . DIV ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (174) Div -> . DIV ABRE_P Var COMA Var CIERRA_P
    (175) Div -> . DIV ABRE_P expresion_alge1 COMA Var CIERRA_P
    (176) Div -> . DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (177) Div -> . DIV ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (178) Div -> . DIV ABRE_P Var COMA expresion_alge1 CIERRA_P
    (179) Div -> . DIV ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P
    (279) Random -> . RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA
    (264) If -> . IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2
    (265) IfElse -> . IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2
    (268) Until -> . UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2
    (266) While -> . WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2
    (337) PrintLine -> . PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA
    (256) And -> . AND ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (257) And -> . AND ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P
    (258) And -> . AND ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P
    (259) And -> . AND ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P
    (260) Or -> . OR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (261) Or -> . OR ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P
    (262) Or -> . OR ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P
    (263) Or -> . OR ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P
    (269) Add -> . ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA
    (270) Add -> . ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (271) Add -> . ADD ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (272) Add -> . ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (273) Add -> . ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (274) Add -> . ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA

  ! shift/reduce conflict for PUT resolved as shift
  ! shift/reduce conflict for PUNTOCOMA resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for ABRE_P resolved as shift
  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for SUBSTR resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for RANDOM resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for IFELSE resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for PRINTLINE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
    COMMENT         shift and go to state 159
    PARA            shift and go to state 155
    FIN             reduce using rule 338 (empty -> .)
    PUT             shift and go to state 96
    DEF             shift and go to state 16
    PUNTOCOMA       shift and go to state 62
    NUMERO          shift and go to state 64
    RESTA           shift and go to state 65
    ABRE_P          shift and go to state 63
    SUM             shift and go to state 70
    SUBSTR          shift and go to state 71
    MULT            shift and go to state 68
    DIV             shift and go to state 69
    RANDOM          shift and go to state 72
    IF              shift and go to state 73
    IFELSE          shift and go to state 74
    UNTIL           shift and go to state 75
    WHILE           shift and go to state 76
    PRINTLINE       shift and go to state 77
    AND             shift and go to state 78
    OR              shift and go to state 79
    ADD             shift and go to state 80

  ! PUNTOCOMA       [ reduce using rule 338 (empty -> .) ]
  ! NUMERO          [ reduce using rule 338 (empty -> .) ]
  ! RESTA           [ reduce using rule 338 (empty -> .) ]
  ! ABRE_P          [ reduce using rule 338 (empty -> .) ]
  ! SUM             [ reduce using rule 338 (empty -> .) ]
  ! SUBSTR          [ reduce using rule 338 (empty -> .) ]
  ! MULT            [ reduce using rule 338 (empty -> .) ]
  ! DIV             [ reduce using rule 338 (empty -> .) ]
  ! RANDOM          [ reduce using rule 338 (empty -> .) ]
  ! IF              [ reduce using rule 338 (empty -> .) ]
  ! IFELSE          [ reduce using rule 338 (empty -> .) ]
  ! UNTIL           [ reduce using rule 338 (empty -> .) ]
  ! WHILE           [ reduce using rule 338 (empty -> .) ]
  ! PRINTLINE       [ reduce using rule 338 (empty -> .) ]
  ! AND             [ reduce using rule 338 (empty -> .) ]
  ! OR              [ reduce using rule 338 (empty -> .) ]
  ! ADD             [ reduce using rule 338 (empty -> .) ]
  ! PUT             [ reduce using rule 338 (empty -> .) ]

    empty                          shift and go to state 156
    cuerpo2                        shift and go to state 157
    variablexd                     shift and go to state 158
    expresion                      shift and go to state 160
    llamadoproc                    shift and go to state 161
    Put2                           shift and go to state 162
    Put                            shift and go to state 163
    variable1                      shift and go to state 164
    variable2                      shift and go to state 165
    funcion                        shift and go to state 91
    expresion_alge1                shift and go to state 47
    expresion_alge2                shift and go to state 48
    Sum                            shift and go to state 49
    Substr                         shift and go to state 50
    Mult                           shift and go to state 51
    Div                            shift and go to state 52
    Random                         shift and go to state 53
    If                             shift and go to state 54
    IfElse                         shift and go to state 55
    Until                          shift and go to state 56
    While                          shift and go to state 57
    PrintLine                      shift and go to state 58
    And                            shift and go to state 59
    Or                             shift and go to state 60
    Add                            shift and go to state 61

state 86

    (26) procedimiento -> PARA id BRACKET1 parametro BRACKET2 . cuerpo2 FIN cuerpo
    (8) cuerpo2 -> . variablexd
    (9) cuerpo2 -> . COMMENT cuerpo2
    (10) cuerpo2 -> . expresion
    (11) cuerpo2 -> . llamadoproc
    (12) cuerpo2 -> . empty
    (13) cuerpo2 -> . Put2
    (14) cuerpo2 -> . Put
    (32) variablexd -> . variable1 cuerpo2
    (33) variablexd -> . variable2 cuerpo2
    (34) variablexd -> . empty empty
    (41) expresion -> . funcion expresion
    (42) expresion -> . expresion_alge1 expresion
    (43) expresion -> . expresion_alge2 expresion
    (44) expresion -> . Sum expresion
    (45) expresion -> . Substr expresion
    (46) expresion -> . Mult expresion
    (47) expresion -> . Div expresion
    (48) expresion -> . funcion empty
    (49) expresion -> . expresion_alge1 empty
    (50) expresion -> . expresion_alge2 empty
    (51) expresion -> . Sum empty
    (52) expresion -> . Substr empty
    (53) expresion -> . Mult empty
    (54) expresion -> . Div empty
    (55) expresion -> . empty empty
    (27) llamadoproc -> . PARA id BRACKET1 parametro BRACKET2 PUNTOCOMA
    (338) empty -> .
    (96) Put2 -> . PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (97) Put2 -> . PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (98) Put2 -> . PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (99) Put2 -> . PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (100) Put2 -> . PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA
    (95) Put -> . PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA
    (38) variable1 -> . DEF VAR PUNTOCOMA
    (39) variable2 -> . DEF VAR IGUAL NUMERO PUNTOCOMA
    (40) variable2 -> . DEF VAR IGUAL RESTA NUMERO PUNTOCOMA
    (82) funcion -> . Random empty
    (83) funcion -> . If empty
    (84) funcion -> . IfElse empty
    (85) funcion -> . Until empty
    (86) funcion -> . While empty
    (87) funcion -> . PrintLine empty
    (88) funcion -> . And empty
    (89) funcion -> . Or empty
    (90) funcion -> . Add empty
    (91) funcion -> . Put2 empty
    (92) funcion -> . Put empty
    (93) funcion -> . PUNTOCOMA funcion
    (94) funcion -> . empty empty
    (104) expresion_alge1 -> . NUMERO SUMA NUMERO
    (105) expresion_alge1 -> . NUMERO RESTA NUMERO
    (106) expresion_alge1 -> . NUMERO MULTI NUMERO
    (107) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (108) expresion_alge1 -> . RESTA NUMERO SUMA NUMERO
    (109) expresion_alge1 -> . RESTA NUMERO RESTA NUMERO
    (110) expresion_alge1 -> . RESTA NUMERO MULTI NUMERO
    (111) expresion_alge1 -> . RESTA NUMERO DIVISION NUMERO
    (112) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (113) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (114) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (115) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (116) Sum -> . SUM ABRE_P NUMERO COMA NUMERO CIERRA_P
    (117) Sum -> . SUM ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (118) Sum -> . SUM ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (119) Sum -> . SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (120) Sum -> . SUM ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (121) Sum -> . SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (122) Sum -> . SUM ABRE_P NUMERO COMA Var CIERRA_P
    (123) Sum -> . SUM ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (124) Sum -> . SUM ABRE_P Var COMA NUMERO CIERRA_P
    (125) Sum -> . SUM ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (126) Sum -> . SUM ABRE_P Var COMA Var CIERRA_P
    (127) Sum -> . SUM ABRE_P expresion_alge1 COMA Var CIERRA_P
    (128) Sum -> . SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (129) Sum -> . SUM ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (130) Sum -> . SUM ABRE_P Var COMA expresion_alge1 CIERRA_P
    (131) Sum -> . SUM ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P
    (132) Substr -> . SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P
    (133) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (134) Substr -> . SUBSTR ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (135) Substr -> . SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (136) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (137) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (138) Substr -> . SUBSTR ABRE_P NUMERO COMA Var CIERRA_P
    (139) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (140) Substr -> . SUBSTR ABRE_P Var COMA NUMERO CIERRA_P
    (141) Substr -> . SUBSTR ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (142) Substr -> . SUBSTR ABRE_P Var COMA Var CIERRA_P
    (143) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P
    (144) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (145) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (146) Substr -> . SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P
    (147) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P
    (148) Mult -> . MULT ABRE_P NUMERO COMA NUMERO CIERRA_P
    (149) Mult -> . MULT ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (150) Mult -> . MULT ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (151) Mult -> . MULT ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (152) Mult -> . MULT ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (153) Mult -> . MULT ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (154) Mult -> . MULT ABRE_P NUMERO COMA Var CIERRA_P
    (155) Mult -> . MULT ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (156) Mult -> . MULT ABRE_P Var COMA NUMERO CIERRA_P
    (157) Mult -> . MULT ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (158) Mult -> . MULT ABRE_P Var COMA Var CIERRA_P
    (159) Mult -> . MULT ABRE_P expresion_alge1 COMA Var CIERRA_P
    (160) Mult -> . MULT ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (161) Mult -> . MULT ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (162) Mult -> . MULT ABRE_P Var COMA expresion_alge1 CIERRA_P
    (163) Mult -> . MULT ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P
    (164) Div -> . DIV ABRE_P NUMERO COMA NUMERO CIERRA_P
    (165) Div -> . DIV ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (166) Div -> . DIV ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (167) Div -> . DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (168) Div -> . DIV ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (169) Div -> . DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (170) Div -> . DIV ABRE_P NUMERO COMA Var CIERRA_P
    (171) Div -> . DIV ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (172) Div -> . DIV ABRE_P Var COMA NUMERO CIERRA_P
    (173) Div -> . DIV ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (174) Div -> . DIV ABRE_P Var COMA Var CIERRA_P
    (175) Div -> . DIV ABRE_P expresion_alge1 COMA Var CIERRA_P
    (176) Div -> . DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (177) Div -> . DIV ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (178) Div -> . DIV ABRE_P Var COMA expresion_alge1 CIERRA_P
    (179) Div -> . DIV ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P
    (279) Random -> . RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA
    (264) If -> . IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2
    (265) IfElse -> . IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2
    (268) Until -> . UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2
    (266) While -> . WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2
    (337) PrintLine -> . PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA
    (256) And -> . AND ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (257) And -> . AND ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P
    (258) And -> . AND ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P
    (259) And -> . AND ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P
    (260) Or -> . OR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (261) Or -> . OR ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P
    (262) Or -> . OR ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P
    (263) Or -> . OR ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P
    (269) Add -> . ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA
    (270) Add -> . ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (271) Add -> . ADD ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (272) Add -> . ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (273) Add -> . ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (274) Add -> . ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA

  ! shift/reduce conflict for PUT resolved as shift
  ! shift/reduce conflict for PUNTOCOMA resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for ABRE_P resolved as shift
  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for SUBSTR resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for RANDOM resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for IFELSE resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for PRINTLINE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
    COMMENT         shift and go to state 159
    PARA            shift and go to state 155
    FIN             reduce using rule 338 (empty -> .)
    PUT             shift and go to state 96
    DEF             shift and go to state 16
    PUNTOCOMA       shift and go to state 62
    NUMERO          shift and go to state 64
    RESTA           shift and go to state 65
    ABRE_P          shift and go to state 63
    SUM             shift and go to state 70
    SUBSTR          shift and go to state 71
    MULT            shift and go to state 68
    DIV             shift and go to state 69
    RANDOM          shift and go to state 72
    IF              shift and go to state 73
    IFELSE          shift and go to state 74
    UNTIL           shift and go to state 75
    WHILE           shift and go to state 76
    PRINTLINE       shift and go to state 77
    AND             shift and go to state 78
    OR              shift and go to state 79
    ADD             shift and go to state 80

  ! PUNTOCOMA       [ reduce using rule 338 (empty -> .) ]
  ! NUMERO          [ reduce using rule 338 (empty -> .) ]
  ! RESTA           [ reduce using rule 338 (empty -> .) ]
  ! ABRE_P          [ reduce using rule 338 (empty -> .) ]
  ! SUM             [ reduce using rule 338 (empty -> .) ]
  ! SUBSTR          [ reduce using rule 338 (empty -> .) ]
  ! MULT            [ reduce using rule 338 (empty -> .) ]
  ! DIV             [ reduce using rule 338 (empty -> .) ]
  ! RANDOM          [ reduce using rule 338 (empty -> .) ]
  ! IF              [ reduce using rule 338 (empty -> .) ]
  ! IFELSE          [ reduce using rule 338 (empty -> .) ]
  ! UNTIL           [ reduce using rule 338 (empty -> .) ]
  ! WHILE           [ reduce using rule 338 (empty -> .) ]
  ! PRINTLINE       [ reduce using rule 338 (empty -> .) ]
  ! AND             [ reduce using rule 338 (empty -> .) ]
  ! OR              [ reduce using rule 338 (empty -> .) ]
  ! ADD             [ reduce using rule 338 (empty -> .) ]
  ! PUT             [ reduce using rule 338 (empty -> .) ]

    cuerpo2                        shift and go to state 166
    variablexd                     shift and go to state 158
    expresion                      shift and go to state 160
    llamadoproc                    shift and go to state 161
    empty                          shift and go to state 156
    Put2                           shift and go to state 162
    Put                            shift and go to state 163
    variable1                      shift and go to state 164
    variable2                      shift and go to state 165
    funcion                        shift and go to state 91
    expresion_alge1                shift and go to state 47
    expresion_alge2                shift and go to state 48
    Sum                            shift and go to state 49
    Substr                         shift and go to state 50
    Mult                           shift and go to state 51
    Div                            shift and go to state 52
    Random                         shift and go to state 53
    If                             shift and go to state 54
    IfElse                         shift and go to state 55
    Until                          shift and go to state 56
    While                          shift and go to state 57
    PrintLine                      shift and go to state 58
    And                            shift and go to state 59
    Or                             shift and go to state 60
    Add                            shift and go to state 61

state 87

    (275) parametro -> Var COMA . parametro
    (275) parametro -> . Var COMA parametro
    (276) parametro -> . Var empty empty
    (277) parametro -> . empty empty empty
    (180) Var -> . VAR
    (338) empty -> .

    VAR             shift and go to state 34
    BRACKET2        reduce using rule 338 (empty -> .)

    Var                            shift and go to state 33
    parametro                      shift and go to state 167
    empty                          shift and go to state 168

state 88

    (276) parametro -> Var empty . empty
    (338) empty -> .

    BRACKET2        reduce using rule 338 (empty -> .)

    empty                          shift and go to state 169

state 89

    (28) main -> MAIN BRACKET1 BRACKET2 cuerpo3 FIN . cuerpo
    (2) cuerpo -> . variable
    (3) cuerpo -> . procedimiento
    (4) cuerpo -> . main
    (5) cuerpo -> . COMMENT cuerpo
    (6) cuerpo -> . Put
    (7) cuerpo -> . Put2
    (29) variable -> . variable1 cuerpo
    (30) variable -> . variable2 cuerpo
    (31) variable -> . empty empty
    (25) procedimiento -> . PARA id BRACKET1 empty BRACKET2 cuerpo2 FIN cuerpo
    (26) procedimiento -> . PARA id BRACKET1 parametro BRACKET2 cuerpo2 FIN cuerpo
    (28) main -> . MAIN BRACKET1 BRACKET2 cuerpo3 FIN cuerpo
    (95) Put -> . PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA
    (96) Put2 -> . PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (97) Put2 -> . PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (98) Put2 -> . PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (99) Put2 -> . PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (100) Put2 -> . PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA
    (38) variable1 -> . DEF VAR PUNTOCOMA
    (39) variable2 -> . DEF VAR IGUAL NUMERO PUNTOCOMA
    (40) variable2 -> . DEF VAR IGUAL RESTA NUMERO PUNTOCOMA
    (338) empty -> .

    COMMENT         shift and go to state 3
    PARA            shift and go to state 13
    MAIN            shift and go to state 14
    PUT             shift and go to state 15
    DEF             shift and go to state 16
    $end            reduce using rule 338 (empty -> .)

    cuerpo                         shift and go to state 170
    variable                       shift and go to state 5
    procedimiento                  shift and go to state 6
    main                           shift and go to state 7
    Put                            shift and go to state 8
    Put2                           shift and go to state 9
    variable1                      shift and go to state 10
    variable2                      shift and go to state 11
    empty                          shift and go to state 12

state 90

    (16) cuerpo3 -> COMMENT cuerpo3 .

    FIN             reduce using rule 16 (cuerpo3 -> COMMENT cuerpo3 .)


state 91

    (41) expresion -> funcion . expresion
    (48) expresion -> funcion . empty
    (41) expresion -> . funcion expresion
    (42) expresion -> . expresion_alge1 expresion
    (43) expresion -> . expresion_alge2 expresion
    (44) expresion -> . Sum expresion
    (45) expresion -> . Substr expresion
    (46) expresion -> . Mult expresion
    (47) expresion -> . Div expresion
    (48) expresion -> . funcion empty
    (49) expresion -> . expresion_alge1 empty
    (50) expresion -> . expresion_alge2 empty
    (51) expresion -> . Sum empty
    (52) expresion -> . Substr empty
    (53) expresion -> . Mult empty
    (54) expresion -> . Div empty
    (55) expresion -> . empty empty
    (338) empty -> .
    (82) funcion -> . Random empty
    (83) funcion -> . If empty
    (84) funcion -> . IfElse empty
    (85) funcion -> . Until empty
    (86) funcion -> . While empty
    (87) funcion -> . PrintLine empty
    (88) funcion -> . And empty
    (89) funcion -> . Or empty
    (90) funcion -> . Add empty
    (91) funcion -> . Put2 empty
    (92) funcion -> . Put empty
    (93) funcion -> . PUNTOCOMA funcion
    (94) funcion -> . empty empty
    (104) expresion_alge1 -> . NUMERO SUMA NUMERO
    (105) expresion_alge1 -> . NUMERO RESTA NUMERO
    (106) expresion_alge1 -> . NUMERO MULTI NUMERO
    (107) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (108) expresion_alge1 -> . RESTA NUMERO SUMA NUMERO
    (109) expresion_alge1 -> . RESTA NUMERO RESTA NUMERO
    (110) expresion_alge1 -> . RESTA NUMERO MULTI NUMERO
    (111) expresion_alge1 -> . RESTA NUMERO DIVISION NUMERO
    (112) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (113) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (114) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (115) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (116) Sum -> . SUM ABRE_P NUMERO COMA NUMERO CIERRA_P
    (117) Sum -> . SUM ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (118) Sum -> . SUM ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (119) Sum -> . SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (120) Sum -> . SUM ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (121) Sum -> . SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (122) Sum -> . SUM ABRE_P NUMERO COMA Var CIERRA_P
    (123) Sum -> . SUM ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (124) Sum -> . SUM ABRE_P Var COMA NUMERO CIERRA_P
    (125) Sum -> . SUM ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (126) Sum -> . SUM ABRE_P Var COMA Var CIERRA_P
    (127) Sum -> . SUM ABRE_P expresion_alge1 COMA Var CIERRA_P
    (128) Sum -> . SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (129) Sum -> . SUM ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (130) Sum -> . SUM ABRE_P Var COMA expresion_alge1 CIERRA_P
    (131) Sum -> . SUM ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P
    (132) Substr -> . SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P
    (133) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (134) Substr -> . SUBSTR ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (135) Substr -> . SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (136) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (137) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (138) Substr -> . SUBSTR ABRE_P NUMERO COMA Var CIERRA_P
    (139) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (140) Substr -> . SUBSTR ABRE_P Var COMA NUMERO CIERRA_P
    (141) Substr -> . SUBSTR ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (142) Substr -> . SUBSTR ABRE_P Var COMA Var CIERRA_P
    (143) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P
    (144) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (145) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (146) Substr -> . SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P
    (147) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P
    (148) Mult -> . MULT ABRE_P NUMERO COMA NUMERO CIERRA_P
    (149) Mult -> . MULT ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (150) Mult -> . MULT ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (151) Mult -> . MULT ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (152) Mult -> . MULT ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (153) Mult -> . MULT ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (154) Mult -> . MULT ABRE_P NUMERO COMA Var CIERRA_P
    (155) Mult -> . MULT ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (156) Mult -> . MULT ABRE_P Var COMA NUMERO CIERRA_P
    (157) Mult -> . MULT ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (158) Mult -> . MULT ABRE_P Var COMA Var CIERRA_P
    (159) Mult -> . MULT ABRE_P expresion_alge1 COMA Var CIERRA_P
    (160) Mult -> . MULT ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (161) Mult -> . MULT ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (162) Mult -> . MULT ABRE_P Var COMA expresion_alge1 CIERRA_P
    (163) Mult -> . MULT ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P
    (164) Div -> . DIV ABRE_P NUMERO COMA NUMERO CIERRA_P
    (165) Div -> . DIV ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (166) Div -> . DIV ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (167) Div -> . DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (168) Div -> . DIV ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (169) Div -> . DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (170) Div -> . DIV ABRE_P NUMERO COMA Var CIERRA_P
    (171) Div -> . DIV ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (172) Div -> . DIV ABRE_P Var COMA NUMERO CIERRA_P
    (173) Div -> . DIV ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (174) Div -> . DIV ABRE_P Var COMA Var CIERRA_P
    (175) Div -> . DIV ABRE_P expresion_alge1 COMA Var CIERRA_P
    (176) Div -> . DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (177) Div -> . DIV ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (178) Div -> . DIV ABRE_P Var COMA expresion_alge1 CIERRA_P
    (179) Div -> . DIV ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P
    (279) Random -> . RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA
    (264) If -> . IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2
    (265) IfElse -> . IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2
    (268) Until -> . UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2
    (266) While -> . WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2
    (337) PrintLine -> . PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA
    (256) And -> . AND ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (257) And -> . AND ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P
    (258) And -> . AND ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P
    (259) And -> . AND ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P
    (260) Or -> . OR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (261) Or -> . OR ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P
    (262) Or -> . OR ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P
    (263) Or -> . OR ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P
    (269) Add -> . ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA
    (270) Add -> . ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (271) Add -> . ADD ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (272) Add -> . ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (273) Add -> . ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (274) Add -> . ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (96) Put2 -> . PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (97) Put2 -> . PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (98) Put2 -> . PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (99) Put2 -> . PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (100) Put2 -> . PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA
    (95) Put -> . PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA

  ! shift/reduce conflict for PUNTOCOMA resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for ABRE_P resolved as shift
  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for SUBSTR resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for RANDOM resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for IFELSE resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for PRINTLINE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for PUT resolved as shift
    FIN             reduce using rule 338 (empty -> .)
    PUNTOCOMA       shift and go to state 62
    NUMERO          shift and go to state 64
    RESTA           shift and go to state 65
    ABRE_P          shift and go to state 63
    SUM             shift and go to state 70
    SUBSTR          shift and go to state 71
    MULT            shift and go to state 68
    DIV             shift and go to state 69
    RANDOM          shift and go to state 72
    IF              shift and go to state 73
    IFELSE          shift and go to state 74
    UNTIL           shift and go to state 75
    WHILE           shift and go to state 76
    PRINTLINE       shift and go to state 77
    AND             shift and go to state 78
    OR              shift and go to state 79
    ADD             shift and go to state 80
    PUT             shift and go to state 96

  ! PUNTOCOMA       [ reduce using rule 338 (empty -> .) ]
  ! NUMERO          [ reduce using rule 338 (empty -> .) ]
  ! RESTA           [ reduce using rule 338 (empty -> .) ]
  ! ABRE_P          [ reduce using rule 338 (empty -> .) ]
  ! SUM             [ reduce using rule 338 (empty -> .) ]
  ! SUBSTR          [ reduce using rule 338 (empty -> .) ]
  ! MULT            [ reduce using rule 338 (empty -> .) ]
  ! DIV             [ reduce using rule 338 (empty -> .) ]
  ! RANDOM          [ reduce using rule 338 (empty -> .) ]
  ! IF              [ reduce using rule 338 (empty -> .) ]
  ! IFELSE          [ reduce using rule 338 (empty -> .) ]
  ! UNTIL           [ reduce using rule 338 (empty -> .) ]
  ! WHILE           [ reduce using rule 338 (empty -> .) ]
  ! PRINTLINE       [ reduce using rule 338 (empty -> .) ]
  ! AND             [ reduce using rule 338 (empty -> .) ]
  ! OR              [ reduce using rule 338 (empty -> .) ]
  ! ADD             [ reduce using rule 338 (empty -> .) ]
  ! PUT             [ reduce using rule 338 (empty -> .) ]

    funcion                        shift and go to state 91
    expresion                      shift and go to state 92
    empty                          shift and go to state 93
    expresion_alge1                shift and go to state 47
    expresion_alge2                shift and go to state 48
    Sum                            shift and go to state 49
    Substr                         shift and go to state 50
    Mult                           shift and go to state 51
    Div                            shift and go to state 52
    Random                         shift and go to state 53
    If                             shift and go to state 54
    IfElse                         shift and go to state 55
    Until                          shift and go to state 56
    While                          shift and go to state 57
    PrintLine                      shift and go to state 58
    And                            shift and go to state 59
    Or                             shift and go to state 60
    Add                            shift and go to state 61
    Put2                           shift and go to state 94
    Put                            shift and go to state 95

state 92

    (41) expresion -> funcion expresion .

    FIN             reduce using rule 41 (expresion -> funcion expresion .)


state 93

    (48) expresion -> funcion empty .
    (55) expresion -> empty . empty
    (94) funcion -> empty . empty
    (338) empty -> .

  ! reduce/reduce conflict for FIN resolved using rule 48 (expresion -> funcion empty .)
    FIN             reduce using rule 48 (expresion -> funcion empty .)
    PUNTOCOMA       reduce using rule 338 (empty -> .)
    NUMERO          reduce using rule 338 (empty -> .)
    RESTA           reduce using rule 338 (empty -> .)
    ABRE_P          reduce using rule 338 (empty -> .)
    SUM             reduce using rule 338 (empty -> .)
    SUBSTR          reduce using rule 338 (empty -> .)
    MULT            reduce using rule 338 (empty -> .)
    DIV             reduce using rule 338 (empty -> .)
    RANDOM          reduce using rule 338 (empty -> .)
    IF              reduce using rule 338 (empty -> .)
    IFELSE          reduce using rule 338 (empty -> .)
    UNTIL           reduce using rule 338 (empty -> .)
    WHILE           reduce using rule 338 (empty -> .)
    PRINTLINE       reduce using rule 338 (empty -> .)
    AND             reduce using rule 338 (empty -> .)
    OR              reduce using rule 338 (empty -> .)
    ADD             reduce using rule 338 (empty -> .)
    PUT             reduce using rule 338 (empty -> .)

  ! FIN             [ reduce using rule 338 (empty -> .) ]

    empty                          shift and go to state 171

state 94

    (91) funcion -> Put2 . empty
    (338) empty -> .

    PUNTOCOMA       reduce using rule 338 (empty -> .)
    NUMERO          reduce using rule 338 (empty -> .)
    RESTA           reduce using rule 338 (empty -> .)
    ABRE_P          reduce using rule 338 (empty -> .)
    SUM             reduce using rule 338 (empty -> .)
    SUBSTR          reduce using rule 338 (empty -> .)
    MULT            reduce using rule 338 (empty -> .)
    DIV             reduce using rule 338 (empty -> .)
    RANDOM          reduce using rule 338 (empty -> .)
    IF              reduce using rule 338 (empty -> .)
    IFELSE          reduce using rule 338 (empty -> .)
    UNTIL           reduce using rule 338 (empty -> .)
    WHILE           reduce using rule 338 (empty -> .)
    PRINTLINE       reduce using rule 338 (empty -> .)
    AND             reduce using rule 338 (empty -> .)
    OR              reduce using rule 338 (empty -> .)
    ADD             reduce using rule 338 (empty -> .)
    PUT             reduce using rule 338 (empty -> .)
    FIN             reduce using rule 338 (empty -> .)
    CIERRA_P        reduce using rule 338 (empty -> .)
    BRACKET2        reduce using rule 338 (empty -> .)

    empty                          shift and go to state 99

state 95

    (92) funcion -> Put . empty
    (338) empty -> .

    PUNTOCOMA       reduce using rule 338 (empty -> .)
    NUMERO          reduce using rule 338 (empty -> .)
    RESTA           reduce using rule 338 (empty -> .)
    ABRE_P          reduce using rule 338 (empty -> .)
    SUM             reduce using rule 338 (empty -> .)
    SUBSTR          reduce using rule 338 (empty -> .)
    MULT            reduce using rule 338 (empty -> .)
    DIV             reduce using rule 338 (empty -> .)
    RANDOM          reduce using rule 338 (empty -> .)
    IF              reduce using rule 338 (empty -> .)
    IFELSE          reduce using rule 338 (empty -> .)
    UNTIL           reduce using rule 338 (empty -> .)
    WHILE           reduce using rule 338 (empty -> .)
    PRINTLINE       reduce using rule 338 (empty -> .)
    AND             reduce using rule 338 (empty -> .)
    OR              reduce using rule 338 (empty -> .)
    ADD             reduce using rule 338 (empty -> .)
    PUT             reduce using rule 338 (empty -> .)
    FIN             reduce using rule 338 (empty -> .)
    CIERRA_P        reduce using rule 338 (empty -> .)
    BRACKET2        reduce using rule 338 (empty -> .)

    empty                          shift and go to state 98

state 96

    (96) Put2 -> PUT . ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (97) Put2 -> PUT . ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (98) Put2 -> PUT . ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (99) Put2 -> PUT . ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (100) Put2 -> PUT . ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA
    (95) Put -> PUT . ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA

    ABRE_P          shift and go to state 172


state 97

    (37) variablexdd -> empty empty .
    (55) expresion -> empty empty .
    (94) funcion -> empty empty .

  ! reduce/reduce conflict for FIN resolved using rule 37 (variablexdd -> empty empty .)
  ! reduce/reduce conflict for FIN resolved using rule 37 (variablexdd -> empty empty .)
    FIN             reduce using rule 37 (variablexdd -> empty empty .)
    PUNTOCOMA       reduce using rule 94 (funcion -> empty empty .)
    NUMERO          reduce using rule 94 (funcion -> empty empty .)
    RESTA           reduce using rule 94 (funcion -> empty empty .)
    ABRE_P          reduce using rule 94 (funcion -> empty empty .)
    SUM             reduce using rule 94 (funcion -> empty empty .)
    SUBSTR          reduce using rule 94 (funcion -> empty empty .)
    MULT            reduce using rule 94 (funcion -> empty empty .)
    DIV             reduce using rule 94 (funcion -> empty empty .)
    RANDOM          reduce using rule 94 (funcion -> empty empty .)
    IF              reduce using rule 94 (funcion -> empty empty .)
    IFELSE          reduce using rule 94 (funcion -> empty empty .)
    UNTIL           reduce using rule 94 (funcion -> empty empty .)
    WHILE           reduce using rule 94 (funcion -> empty empty .)
    PRINTLINE       reduce using rule 94 (funcion -> empty empty .)
    AND             reduce using rule 94 (funcion -> empty empty .)
    OR              reduce using rule 94 (funcion -> empty empty .)
    ADD             reduce using rule 94 (funcion -> empty empty .)
    PUT             reduce using rule 94 (funcion -> empty empty .)

  ! FIN             [ reduce using rule 55 (expresion -> empty empty .) ]
  ! FIN             [ reduce using rule 94 (funcion -> empty empty .) ]


state 98

    (92) funcion -> Put empty .

    PUNTOCOMA       reduce using rule 92 (funcion -> Put empty .)
    NUMERO          reduce using rule 92 (funcion -> Put empty .)
    RESTA           reduce using rule 92 (funcion -> Put empty .)
    ABRE_P          reduce using rule 92 (funcion -> Put empty .)
    SUM             reduce using rule 92 (funcion -> Put empty .)
    SUBSTR          reduce using rule 92 (funcion -> Put empty .)
    MULT            reduce using rule 92 (funcion -> Put empty .)
    DIV             reduce using rule 92 (funcion -> Put empty .)
    RANDOM          reduce using rule 92 (funcion -> Put empty .)
    IF              reduce using rule 92 (funcion -> Put empty .)
    IFELSE          reduce using rule 92 (funcion -> Put empty .)
    UNTIL           reduce using rule 92 (funcion -> Put empty .)
    WHILE           reduce using rule 92 (funcion -> Put empty .)
    PRINTLINE       reduce using rule 92 (funcion -> Put empty .)
    AND             reduce using rule 92 (funcion -> Put empty .)
    OR              reduce using rule 92 (funcion -> Put empty .)
    ADD             reduce using rule 92 (funcion -> Put empty .)
    PUT             reduce using rule 92 (funcion -> Put empty .)
    FIN             reduce using rule 92 (funcion -> Put empty .)
    CIERRA_P        reduce using rule 92 (funcion -> Put empty .)
    BRACKET2        reduce using rule 92 (funcion -> Put empty .)


state 99

    (91) funcion -> Put2 empty .

    PUNTOCOMA       reduce using rule 91 (funcion -> Put2 empty .)
    NUMERO          reduce using rule 91 (funcion -> Put2 empty .)
    RESTA           reduce using rule 91 (funcion -> Put2 empty .)
    ABRE_P          reduce using rule 91 (funcion -> Put2 empty .)
    SUM             reduce using rule 91 (funcion -> Put2 empty .)
    SUBSTR          reduce using rule 91 (funcion -> Put2 empty .)
    MULT            reduce using rule 91 (funcion -> Put2 empty .)
    DIV             reduce using rule 91 (funcion -> Put2 empty .)
    RANDOM          reduce using rule 91 (funcion -> Put2 empty .)
    IF              reduce using rule 91 (funcion -> Put2 empty .)
    IFELSE          reduce using rule 91 (funcion -> Put2 empty .)
    UNTIL           reduce using rule 91 (funcion -> Put2 empty .)
    WHILE           reduce using rule 91 (funcion -> Put2 empty .)
    PRINTLINE       reduce using rule 91 (funcion -> Put2 empty .)
    AND             reduce using rule 91 (funcion -> Put2 empty .)
    OR              reduce using rule 91 (funcion -> Put2 empty .)
    ADD             reduce using rule 91 (funcion -> Put2 empty .)
    PUT             reduce using rule 91 (funcion -> Put2 empty .)
    FIN             reduce using rule 91 (funcion -> Put2 empty .)
    CIERRA_P        reduce using rule 91 (funcion -> Put2 empty .)
    BRACKET2        reduce using rule 91 (funcion -> Put2 empty .)


state 100

    (35) variablexdd -> variable1 cuerpo3 .

    FIN             reduce using rule 35 (variablexdd -> variable1 cuerpo3 .)


state 101

    (36) variablexdd -> variable2 cuerpo3 .

    FIN             reduce using rule 36 (variablexdd -> variable2 cuerpo3 .)


state 102

    (42) expresion -> expresion_alge1 expresion .

    FIN             reduce using rule 42 (expresion -> expresion_alge1 expresion .)


state 103

    (49) expresion -> expresion_alge1 empty .
    (55) expresion -> empty . empty
    (94) funcion -> empty . empty
    (338) empty -> .

  ! reduce/reduce conflict for FIN resolved using rule 49 (expresion -> expresion_alge1 empty .)
    FIN             reduce using rule 49 (expresion -> expresion_alge1 empty .)
    PUNTOCOMA       reduce using rule 338 (empty -> .)
    NUMERO          reduce using rule 338 (empty -> .)
    RESTA           reduce using rule 338 (empty -> .)
    ABRE_P          reduce using rule 338 (empty -> .)
    SUM             reduce using rule 338 (empty -> .)
    SUBSTR          reduce using rule 338 (empty -> .)
    MULT            reduce using rule 338 (empty -> .)
    DIV             reduce using rule 338 (empty -> .)
    RANDOM          reduce using rule 338 (empty -> .)
    IF              reduce using rule 338 (empty -> .)
    IFELSE          reduce using rule 338 (empty -> .)
    UNTIL           reduce using rule 338 (empty -> .)
    WHILE           reduce using rule 338 (empty -> .)
    PRINTLINE       reduce using rule 338 (empty -> .)
    AND             reduce using rule 338 (empty -> .)
    OR              reduce using rule 338 (empty -> .)
    ADD             reduce using rule 338 (empty -> .)
    PUT             reduce using rule 338 (empty -> .)

  ! FIN             [ reduce using rule 338 (empty -> .) ]

    empty                          shift and go to state 171

state 104

    (43) expresion -> expresion_alge2 expresion .

    FIN             reduce using rule 43 (expresion -> expresion_alge2 expresion .)


state 105

    (50) expresion -> expresion_alge2 empty .
    (55) expresion -> empty . empty
    (94) funcion -> empty . empty
    (338) empty -> .

  ! reduce/reduce conflict for FIN resolved using rule 50 (expresion -> expresion_alge2 empty .)
    FIN             reduce using rule 50 (expresion -> expresion_alge2 empty .)
    PUNTOCOMA       reduce using rule 338 (empty -> .)
    NUMERO          reduce using rule 338 (empty -> .)
    RESTA           reduce using rule 338 (empty -> .)
    ABRE_P          reduce using rule 338 (empty -> .)
    SUM             reduce using rule 338 (empty -> .)
    SUBSTR          reduce using rule 338 (empty -> .)
    MULT            reduce using rule 338 (empty -> .)
    DIV             reduce using rule 338 (empty -> .)
    RANDOM          reduce using rule 338 (empty -> .)
    IF              reduce using rule 338 (empty -> .)
    IFELSE          reduce using rule 338 (empty -> .)
    UNTIL           reduce using rule 338 (empty -> .)
    WHILE           reduce using rule 338 (empty -> .)
    PRINTLINE       reduce using rule 338 (empty -> .)
    AND             reduce using rule 338 (empty -> .)
    OR              reduce using rule 338 (empty -> .)
    ADD             reduce using rule 338 (empty -> .)
    PUT             reduce using rule 338 (empty -> .)

  ! FIN             [ reduce using rule 338 (empty -> .) ]

    empty                          shift and go to state 171

state 106

    (44) expresion -> Sum expresion .

    FIN             reduce using rule 44 (expresion -> Sum expresion .)


state 107

    (51) expresion -> Sum empty .
    (55) expresion -> empty . empty
    (94) funcion -> empty . empty
    (338) empty -> .

  ! reduce/reduce conflict for FIN resolved using rule 51 (expresion -> Sum empty .)
    FIN             reduce using rule 51 (expresion -> Sum empty .)
    PUNTOCOMA       reduce using rule 338 (empty -> .)
    NUMERO          reduce using rule 338 (empty -> .)
    RESTA           reduce using rule 338 (empty -> .)
    ABRE_P          reduce using rule 338 (empty -> .)
    SUM             reduce using rule 338 (empty -> .)
    SUBSTR          reduce using rule 338 (empty -> .)
    MULT            reduce using rule 338 (empty -> .)
    DIV             reduce using rule 338 (empty -> .)
    RANDOM          reduce using rule 338 (empty -> .)
    IF              reduce using rule 338 (empty -> .)
    IFELSE          reduce using rule 338 (empty -> .)
    UNTIL           reduce using rule 338 (empty -> .)
    WHILE           reduce using rule 338 (empty -> .)
    PRINTLINE       reduce using rule 338 (empty -> .)
    AND             reduce using rule 338 (empty -> .)
    OR              reduce using rule 338 (empty -> .)
    ADD             reduce using rule 338 (empty -> .)
    PUT             reduce using rule 338 (empty -> .)

  ! FIN             [ reduce using rule 338 (empty -> .) ]

    empty                          shift and go to state 171

state 108

    (45) expresion -> Substr expresion .

    FIN             reduce using rule 45 (expresion -> Substr expresion .)


state 109

    (52) expresion -> Substr empty .
    (55) expresion -> empty . empty
    (94) funcion -> empty . empty
    (338) empty -> .

  ! reduce/reduce conflict for FIN resolved using rule 52 (expresion -> Substr empty .)
    FIN             reduce using rule 52 (expresion -> Substr empty .)
    PUNTOCOMA       reduce using rule 338 (empty -> .)
    NUMERO          reduce using rule 338 (empty -> .)
    RESTA           reduce using rule 338 (empty -> .)
    ABRE_P          reduce using rule 338 (empty -> .)
    SUM             reduce using rule 338 (empty -> .)
    SUBSTR          reduce using rule 338 (empty -> .)
    MULT            reduce using rule 338 (empty -> .)
    DIV             reduce using rule 338 (empty -> .)
    RANDOM          reduce using rule 338 (empty -> .)
    IF              reduce using rule 338 (empty -> .)
    IFELSE          reduce using rule 338 (empty -> .)
    UNTIL           reduce using rule 338 (empty -> .)
    WHILE           reduce using rule 338 (empty -> .)
    PRINTLINE       reduce using rule 338 (empty -> .)
    AND             reduce using rule 338 (empty -> .)
    OR              reduce using rule 338 (empty -> .)
    ADD             reduce using rule 338 (empty -> .)
    PUT             reduce using rule 338 (empty -> .)

  ! FIN             [ reduce using rule 338 (empty -> .) ]

    empty                          shift and go to state 171

state 110

    (46) expresion -> Mult expresion .

    FIN             reduce using rule 46 (expresion -> Mult expresion .)


state 111

    (53) expresion -> Mult empty .
    (55) expresion -> empty . empty
    (94) funcion -> empty . empty
    (338) empty -> .

  ! reduce/reduce conflict for FIN resolved using rule 53 (expresion -> Mult empty .)
    FIN             reduce using rule 53 (expresion -> Mult empty .)
    PUNTOCOMA       reduce using rule 338 (empty -> .)
    NUMERO          reduce using rule 338 (empty -> .)
    RESTA           reduce using rule 338 (empty -> .)
    ABRE_P          reduce using rule 338 (empty -> .)
    SUM             reduce using rule 338 (empty -> .)
    SUBSTR          reduce using rule 338 (empty -> .)
    MULT            reduce using rule 338 (empty -> .)
    DIV             reduce using rule 338 (empty -> .)
    RANDOM          reduce using rule 338 (empty -> .)
    IF              reduce using rule 338 (empty -> .)
    IFELSE          reduce using rule 338 (empty -> .)
    UNTIL           reduce using rule 338 (empty -> .)
    WHILE           reduce using rule 338 (empty -> .)
    PRINTLINE       reduce using rule 338 (empty -> .)
    AND             reduce using rule 338 (empty -> .)
    OR              reduce using rule 338 (empty -> .)
    ADD             reduce using rule 338 (empty -> .)
    PUT             reduce using rule 338 (empty -> .)

  ! FIN             [ reduce using rule 338 (empty -> .) ]

    empty                          shift and go to state 171

state 112

    (47) expresion -> Div expresion .

    FIN             reduce using rule 47 (expresion -> Div expresion .)


state 113

    (54) expresion -> Div empty .
    (55) expresion -> empty . empty
    (94) funcion -> empty . empty
    (338) empty -> .

  ! reduce/reduce conflict for FIN resolved using rule 54 (expresion -> Div empty .)
    FIN             reduce using rule 54 (expresion -> Div empty .)
    PUNTOCOMA       reduce using rule 338 (empty -> .)
    NUMERO          reduce using rule 338 (empty -> .)
    RESTA           reduce using rule 338 (empty -> .)
    ABRE_P          reduce using rule 338 (empty -> .)
    SUM             reduce using rule 338 (empty -> .)
    SUBSTR          reduce using rule 338 (empty -> .)
    MULT            reduce using rule 338 (empty -> .)
    DIV             reduce using rule 338 (empty -> .)
    RANDOM          reduce using rule 338 (empty -> .)
    IF              reduce using rule 338 (empty -> .)
    IFELSE          reduce using rule 338 (empty -> .)
    UNTIL           reduce using rule 338 (empty -> .)
    WHILE           reduce using rule 338 (empty -> .)
    PRINTLINE       reduce using rule 338 (empty -> .)
    AND             reduce using rule 338 (empty -> .)
    OR              reduce using rule 338 (empty -> .)
    ADD             reduce using rule 338 (empty -> .)
    PUT             reduce using rule 338 (empty -> .)

  ! FIN             [ reduce using rule 338 (empty -> .) ]

    empty                          shift and go to state 171

state 114

    (82) funcion -> Random empty .

    PUNTOCOMA       reduce using rule 82 (funcion -> Random empty .)
    NUMERO          reduce using rule 82 (funcion -> Random empty .)
    RESTA           reduce using rule 82 (funcion -> Random empty .)
    ABRE_P          reduce using rule 82 (funcion -> Random empty .)
    SUM             reduce using rule 82 (funcion -> Random empty .)
    SUBSTR          reduce using rule 82 (funcion -> Random empty .)
    MULT            reduce using rule 82 (funcion -> Random empty .)
    DIV             reduce using rule 82 (funcion -> Random empty .)
    RANDOM          reduce using rule 82 (funcion -> Random empty .)
    IF              reduce using rule 82 (funcion -> Random empty .)
    IFELSE          reduce using rule 82 (funcion -> Random empty .)
    UNTIL           reduce using rule 82 (funcion -> Random empty .)
    WHILE           reduce using rule 82 (funcion -> Random empty .)
    PRINTLINE       reduce using rule 82 (funcion -> Random empty .)
    AND             reduce using rule 82 (funcion -> Random empty .)
    OR              reduce using rule 82 (funcion -> Random empty .)
    ADD             reduce using rule 82 (funcion -> Random empty .)
    PUT             reduce using rule 82 (funcion -> Random empty .)
    FIN             reduce using rule 82 (funcion -> Random empty .)
    CIERRA_P        reduce using rule 82 (funcion -> Random empty .)
    BRACKET2        reduce using rule 82 (funcion -> Random empty .)


state 115

    (83) funcion -> If empty .

    PUNTOCOMA       reduce using rule 83 (funcion -> If empty .)
    NUMERO          reduce using rule 83 (funcion -> If empty .)
    RESTA           reduce using rule 83 (funcion -> If empty .)
    ABRE_P          reduce using rule 83 (funcion -> If empty .)
    SUM             reduce using rule 83 (funcion -> If empty .)
    SUBSTR          reduce using rule 83 (funcion -> If empty .)
    MULT            reduce using rule 83 (funcion -> If empty .)
    DIV             reduce using rule 83 (funcion -> If empty .)
    RANDOM          reduce using rule 83 (funcion -> If empty .)
    IF              reduce using rule 83 (funcion -> If empty .)
    IFELSE          reduce using rule 83 (funcion -> If empty .)
    UNTIL           reduce using rule 83 (funcion -> If empty .)
    WHILE           reduce using rule 83 (funcion -> If empty .)
    PRINTLINE       reduce using rule 83 (funcion -> If empty .)
    AND             reduce using rule 83 (funcion -> If empty .)
    OR              reduce using rule 83 (funcion -> If empty .)
    ADD             reduce using rule 83 (funcion -> If empty .)
    PUT             reduce using rule 83 (funcion -> If empty .)
    FIN             reduce using rule 83 (funcion -> If empty .)
    CIERRA_P        reduce using rule 83 (funcion -> If empty .)
    BRACKET2        reduce using rule 83 (funcion -> If empty .)


state 116

    (84) funcion -> IfElse empty .

    PUNTOCOMA       reduce using rule 84 (funcion -> IfElse empty .)
    NUMERO          reduce using rule 84 (funcion -> IfElse empty .)
    RESTA           reduce using rule 84 (funcion -> IfElse empty .)
    ABRE_P          reduce using rule 84 (funcion -> IfElse empty .)
    SUM             reduce using rule 84 (funcion -> IfElse empty .)
    SUBSTR          reduce using rule 84 (funcion -> IfElse empty .)
    MULT            reduce using rule 84 (funcion -> IfElse empty .)
    DIV             reduce using rule 84 (funcion -> IfElse empty .)
    RANDOM          reduce using rule 84 (funcion -> IfElse empty .)
    IF              reduce using rule 84 (funcion -> IfElse empty .)
    IFELSE          reduce using rule 84 (funcion -> IfElse empty .)
    UNTIL           reduce using rule 84 (funcion -> IfElse empty .)
    WHILE           reduce using rule 84 (funcion -> IfElse empty .)
    PRINTLINE       reduce using rule 84 (funcion -> IfElse empty .)
    AND             reduce using rule 84 (funcion -> IfElse empty .)
    OR              reduce using rule 84 (funcion -> IfElse empty .)
    ADD             reduce using rule 84 (funcion -> IfElse empty .)
    PUT             reduce using rule 84 (funcion -> IfElse empty .)
    FIN             reduce using rule 84 (funcion -> IfElse empty .)
    CIERRA_P        reduce using rule 84 (funcion -> IfElse empty .)
    BRACKET2        reduce using rule 84 (funcion -> IfElse empty .)


state 117

    (85) funcion -> Until empty .

    PUNTOCOMA       reduce using rule 85 (funcion -> Until empty .)
    NUMERO          reduce using rule 85 (funcion -> Until empty .)
    RESTA           reduce using rule 85 (funcion -> Until empty .)
    ABRE_P          reduce using rule 85 (funcion -> Until empty .)
    SUM             reduce using rule 85 (funcion -> Until empty .)
    SUBSTR          reduce using rule 85 (funcion -> Until empty .)
    MULT            reduce using rule 85 (funcion -> Until empty .)
    DIV             reduce using rule 85 (funcion -> Until empty .)
    RANDOM          reduce using rule 85 (funcion -> Until empty .)
    IF              reduce using rule 85 (funcion -> Until empty .)
    IFELSE          reduce using rule 85 (funcion -> Until empty .)
    UNTIL           reduce using rule 85 (funcion -> Until empty .)
    WHILE           reduce using rule 85 (funcion -> Until empty .)
    PRINTLINE       reduce using rule 85 (funcion -> Until empty .)
    AND             reduce using rule 85 (funcion -> Until empty .)
    OR              reduce using rule 85 (funcion -> Until empty .)
    ADD             reduce using rule 85 (funcion -> Until empty .)
    PUT             reduce using rule 85 (funcion -> Until empty .)
    FIN             reduce using rule 85 (funcion -> Until empty .)
    CIERRA_P        reduce using rule 85 (funcion -> Until empty .)
    BRACKET2        reduce using rule 85 (funcion -> Until empty .)


state 118

    (86) funcion -> While empty .

    PUNTOCOMA       reduce using rule 86 (funcion -> While empty .)
    NUMERO          reduce using rule 86 (funcion -> While empty .)
    RESTA           reduce using rule 86 (funcion -> While empty .)
    ABRE_P          reduce using rule 86 (funcion -> While empty .)
    SUM             reduce using rule 86 (funcion -> While empty .)
    SUBSTR          reduce using rule 86 (funcion -> While empty .)
    MULT            reduce using rule 86 (funcion -> While empty .)
    DIV             reduce using rule 86 (funcion -> While empty .)
    RANDOM          reduce using rule 86 (funcion -> While empty .)
    IF              reduce using rule 86 (funcion -> While empty .)
    IFELSE          reduce using rule 86 (funcion -> While empty .)
    UNTIL           reduce using rule 86 (funcion -> While empty .)
    WHILE           reduce using rule 86 (funcion -> While empty .)
    PRINTLINE       reduce using rule 86 (funcion -> While empty .)
    AND             reduce using rule 86 (funcion -> While empty .)
    OR              reduce using rule 86 (funcion -> While empty .)
    ADD             reduce using rule 86 (funcion -> While empty .)
    PUT             reduce using rule 86 (funcion -> While empty .)
    FIN             reduce using rule 86 (funcion -> While empty .)
    CIERRA_P        reduce using rule 86 (funcion -> While empty .)
    BRACKET2        reduce using rule 86 (funcion -> While empty .)


state 119

    (87) funcion -> PrintLine empty .

    PUNTOCOMA       reduce using rule 87 (funcion -> PrintLine empty .)
    NUMERO          reduce using rule 87 (funcion -> PrintLine empty .)
    RESTA           reduce using rule 87 (funcion -> PrintLine empty .)
    ABRE_P          reduce using rule 87 (funcion -> PrintLine empty .)
    SUM             reduce using rule 87 (funcion -> PrintLine empty .)
    SUBSTR          reduce using rule 87 (funcion -> PrintLine empty .)
    MULT            reduce using rule 87 (funcion -> PrintLine empty .)
    DIV             reduce using rule 87 (funcion -> PrintLine empty .)
    RANDOM          reduce using rule 87 (funcion -> PrintLine empty .)
    IF              reduce using rule 87 (funcion -> PrintLine empty .)
    IFELSE          reduce using rule 87 (funcion -> PrintLine empty .)
    UNTIL           reduce using rule 87 (funcion -> PrintLine empty .)
    WHILE           reduce using rule 87 (funcion -> PrintLine empty .)
    PRINTLINE       reduce using rule 87 (funcion -> PrintLine empty .)
    AND             reduce using rule 87 (funcion -> PrintLine empty .)
    OR              reduce using rule 87 (funcion -> PrintLine empty .)
    ADD             reduce using rule 87 (funcion -> PrintLine empty .)
    PUT             reduce using rule 87 (funcion -> PrintLine empty .)
    FIN             reduce using rule 87 (funcion -> PrintLine empty .)
    CIERRA_P        reduce using rule 87 (funcion -> PrintLine empty .)
    BRACKET2        reduce using rule 87 (funcion -> PrintLine empty .)


state 120

    (88) funcion -> And empty .

    PUNTOCOMA       reduce using rule 88 (funcion -> And empty .)
    NUMERO          reduce using rule 88 (funcion -> And empty .)
    RESTA           reduce using rule 88 (funcion -> And empty .)
    ABRE_P          reduce using rule 88 (funcion -> And empty .)
    SUM             reduce using rule 88 (funcion -> And empty .)
    SUBSTR          reduce using rule 88 (funcion -> And empty .)
    MULT            reduce using rule 88 (funcion -> And empty .)
    DIV             reduce using rule 88 (funcion -> And empty .)
    RANDOM          reduce using rule 88 (funcion -> And empty .)
    IF              reduce using rule 88 (funcion -> And empty .)
    IFELSE          reduce using rule 88 (funcion -> And empty .)
    UNTIL           reduce using rule 88 (funcion -> And empty .)
    WHILE           reduce using rule 88 (funcion -> And empty .)
    PRINTLINE       reduce using rule 88 (funcion -> And empty .)
    AND             reduce using rule 88 (funcion -> And empty .)
    OR              reduce using rule 88 (funcion -> And empty .)
    ADD             reduce using rule 88 (funcion -> And empty .)
    PUT             reduce using rule 88 (funcion -> And empty .)
    FIN             reduce using rule 88 (funcion -> And empty .)
    CIERRA_P        reduce using rule 88 (funcion -> And empty .)
    BRACKET2        reduce using rule 88 (funcion -> And empty .)


state 121

    (89) funcion -> Or empty .

    PUNTOCOMA       reduce using rule 89 (funcion -> Or empty .)
    NUMERO          reduce using rule 89 (funcion -> Or empty .)
    RESTA           reduce using rule 89 (funcion -> Or empty .)
    ABRE_P          reduce using rule 89 (funcion -> Or empty .)
    SUM             reduce using rule 89 (funcion -> Or empty .)
    SUBSTR          reduce using rule 89 (funcion -> Or empty .)
    MULT            reduce using rule 89 (funcion -> Or empty .)
    DIV             reduce using rule 89 (funcion -> Or empty .)
    RANDOM          reduce using rule 89 (funcion -> Or empty .)
    IF              reduce using rule 89 (funcion -> Or empty .)
    IFELSE          reduce using rule 89 (funcion -> Or empty .)
    UNTIL           reduce using rule 89 (funcion -> Or empty .)
    WHILE           reduce using rule 89 (funcion -> Or empty .)
    PRINTLINE       reduce using rule 89 (funcion -> Or empty .)
    AND             reduce using rule 89 (funcion -> Or empty .)
    OR              reduce using rule 89 (funcion -> Or empty .)
    ADD             reduce using rule 89 (funcion -> Or empty .)
    PUT             reduce using rule 89 (funcion -> Or empty .)
    FIN             reduce using rule 89 (funcion -> Or empty .)
    CIERRA_P        reduce using rule 89 (funcion -> Or empty .)
    BRACKET2        reduce using rule 89 (funcion -> Or empty .)


state 122

    (90) funcion -> Add empty .

    PUNTOCOMA       reduce using rule 90 (funcion -> Add empty .)
    NUMERO          reduce using rule 90 (funcion -> Add empty .)
    RESTA           reduce using rule 90 (funcion -> Add empty .)
    ABRE_P          reduce using rule 90 (funcion -> Add empty .)
    SUM             reduce using rule 90 (funcion -> Add empty .)
    SUBSTR          reduce using rule 90 (funcion -> Add empty .)
    MULT            reduce using rule 90 (funcion -> Add empty .)
    DIV             reduce using rule 90 (funcion -> Add empty .)
    RANDOM          reduce using rule 90 (funcion -> Add empty .)
    IF              reduce using rule 90 (funcion -> Add empty .)
    IFELSE          reduce using rule 90 (funcion -> Add empty .)
    UNTIL           reduce using rule 90 (funcion -> Add empty .)
    WHILE           reduce using rule 90 (funcion -> Add empty .)
    PRINTLINE       reduce using rule 90 (funcion -> Add empty .)
    AND             reduce using rule 90 (funcion -> Add empty .)
    OR              reduce using rule 90 (funcion -> Add empty .)
    ADD             reduce using rule 90 (funcion -> Add empty .)
    PUT             reduce using rule 90 (funcion -> Add empty .)
    FIN             reduce using rule 90 (funcion -> Add empty .)
    CIERRA_P        reduce using rule 90 (funcion -> Add empty .)
    BRACKET2        reduce using rule 90 (funcion -> Add empty .)


state 123

    (93) funcion -> PUNTOCOMA funcion .

    PUNTOCOMA       reduce using rule 93 (funcion -> PUNTOCOMA funcion .)
    NUMERO          reduce using rule 93 (funcion -> PUNTOCOMA funcion .)
    RESTA           reduce using rule 93 (funcion -> PUNTOCOMA funcion .)
    ABRE_P          reduce using rule 93 (funcion -> PUNTOCOMA funcion .)
    SUM             reduce using rule 93 (funcion -> PUNTOCOMA funcion .)
    SUBSTR          reduce using rule 93 (funcion -> PUNTOCOMA funcion .)
    MULT            reduce using rule 93 (funcion -> PUNTOCOMA funcion .)
    DIV             reduce using rule 93 (funcion -> PUNTOCOMA funcion .)
    RANDOM          reduce using rule 93 (funcion -> PUNTOCOMA funcion .)
    IF              reduce using rule 93 (funcion -> PUNTOCOMA funcion .)
    IFELSE          reduce using rule 93 (funcion -> PUNTOCOMA funcion .)
    UNTIL           reduce using rule 93 (funcion -> PUNTOCOMA funcion .)
    WHILE           reduce using rule 93 (funcion -> PUNTOCOMA funcion .)
    PRINTLINE       reduce using rule 93 (funcion -> PUNTOCOMA funcion .)
    AND             reduce using rule 93 (funcion -> PUNTOCOMA funcion .)
    OR              reduce using rule 93 (funcion -> PUNTOCOMA funcion .)
    ADD             reduce using rule 93 (funcion -> PUNTOCOMA funcion .)
    PUT             reduce using rule 93 (funcion -> PUNTOCOMA funcion .)
    FIN             reduce using rule 93 (funcion -> PUNTOCOMA funcion .)
    CIERRA_P        reduce using rule 93 (funcion -> PUNTOCOMA funcion .)
    BRACKET2        reduce using rule 93 (funcion -> PUNTOCOMA funcion .)


state 124

    (94) funcion -> empty . empty
    (338) empty -> .

    PUNTOCOMA       reduce using rule 338 (empty -> .)
    NUMERO          reduce using rule 338 (empty -> .)
    RESTA           reduce using rule 338 (empty -> .)
    ABRE_P          reduce using rule 338 (empty -> .)
    SUM             reduce using rule 338 (empty -> .)
    SUBSTR          reduce using rule 338 (empty -> .)
    MULT            reduce using rule 338 (empty -> .)
    DIV             reduce using rule 338 (empty -> .)
    RANDOM          reduce using rule 338 (empty -> .)
    IF              reduce using rule 338 (empty -> .)
    IFELSE          reduce using rule 338 (empty -> .)
    UNTIL           reduce using rule 338 (empty -> .)
    WHILE           reduce using rule 338 (empty -> .)
    PRINTLINE       reduce using rule 338 (empty -> .)
    AND             reduce using rule 338 (empty -> .)
    OR              reduce using rule 338 (empty -> .)
    ADD             reduce using rule 338 (empty -> .)
    PUT             reduce using rule 338 (empty -> .)
    FIN             reduce using rule 338 (empty -> .)
    CIERRA_P        reduce using rule 338 (empty -> .)
    BRACKET2        reduce using rule 338 (empty -> .)

    empty                          shift and go to state 173

state 125

    (112) expresion_alge2 -> ABRE_P expresion_alge1 . CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (113) expresion_alge2 -> ABRE_P expresion_alge1 . CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (114) expresion_alge2 -> ABRE_P expresion_alge1 . CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (115) expresion_alge2 -> ABRE_P expresion_alge1 . CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P

    CIERRA_P        shift and go to state 174


state 126

    (104) expresion_alge1 -> NUMERO SUMA . NUMERO

    NUMERO          shift and go to state 175


state 127

    (105) expresion_alge1 -> NUMERO RESTA . NUMERO

    NUMERO          shift and go to state 176


state 128

    (106) expresion_alge1 -> NUMERO MULTI . NUMERO

    NUMERO          shift and go to state 177


state 129

    (107) expresion_alge1 -> NUMERO DIVISION . NUMERO

    NUMERO          shift and go to state 178


state 130

    (108) expresion_alge1 -> RESTA NUMERO . SUMA NUMERO
    (109) expresion_alge1 -> RESTA NUMERO . RESTA NUMERO
    (110) expresion_alge1 -> RESTA NUMERO . MULTI NUMERO
    (111) expresion_alge1 -> RESTA NUMERO . DIVISION NUMERO

    SUMA            shift and go to state 180
    RESTA           shift and go to state 179
    MULTI           shift and go to state 181
    DIVISION        shift and go to state 182


state 131

    (328) Run -> RUN BRACKET1 . ordenes BRACKET2 PUNTOCOMA cuerpo3
    (56) ordenes -> . Beginning empty
    (57) ordenes -> . ContinueUp empty
    (58) ordenes -> . ContinueDown empty
    (59) ordenes -> . ContinueRight empty
    (60) ordenes -> . ContinueLeft empty
    (61) ordenes -> . Up empty
    (62) ordenes -> . Down empty
    (63) ordenes -> . Speed empty
    (64) ordenes -> . Diag empty
    (65) ordenes -> . Pos empty
    (66) ordenes -> . PosX empty
    (67) ordenes -> . PosY empty
    (68) ordenes -> . UseColor empty
    (69) ordenes -> . Beginning ordenes
    (70) ordenes -> . ContinueUp ordenes
    (71) ordenes -> . ContinueDown ordenes
    (72) ordenes -> . ContinueRight ordenes
    (73) ordenes -> . ContinueLeft ordenes
    (74) ordenes -> . Up ordenes
    (75) ordenes -> . Down ordenes
    (76) ordenes -> . Speed ordenes
    (77) ordenes -> . Diag ordenes
    (78) ordenes -> . Pos ordenes
    (79) ordenes -> . PosX ordenes
    (80) ordenes -> . PosY ordenes
    (81) ordenes -> . UseColor ordenes
    (278) Beginning -> . BEGINNING PUNTOCOMA
    (280) ContinueUp -> . CONTINUEUP NUMERO PUNTOCOMA
    (281) ContinueUp -> . CONTINUEUP expresion_alge1 PUNTOCOMA
    (282) ContinueUp -> . CONTINUEUP expresion_alge2 PUNTOCOMA
    (283) ContinueUp -> . CONTINUEUP Var PUNTOCOMA
    (284) ContinueDown -> . CONTINUEDOWN NUMERO PUNTOCOMA
    (285) ContinueDown -> . CONTINUEDOWN expresion_alge1 PUNTOCOMA
    (286) ContinueDown -> . CONTINUEDOWN expresion_alge2 PUNTOCOMA
    (287) ContinueDown -> . CONTINUEDOWN Var PUNTOCOMA
    (288) ContinueRight -> . CONTINUERIGHT NUMERO PUNTOCOMA
    (289) ContinueRight -> . CONTINUERIGHT expresion_alge1 PUNTOCOMA
    (290) ContinueRight -> . CONTINUERIGHT expresion_alge2 PUNTOCOMA
    (291) ContinueRight -> . CONTINUERIGHT Var PUNTOCOMA
    (292) ContinueLeft -> . CONTINUELEFT NUMERO PUNTOCOMA
    (293) ContinueLeft -> . CONTINUELEFT expresion_alge1 PUNTOCOMA
    (294) ContinueLeft -> . CONTINUELEFT expresion_alge2 PUNTOCOMA
    (295) ContinueLeft -> . CONTINUELEFT Var PUNTOCOMA
    (296) Up -> . UP PUNTOCOMA
    (297) Down -> . DOWN PUNTOCOMA
    (298) Speed -> . SPEED NUMERO PUNTOCOMA
    (299) Diag -> . POS ABRE_P STRING COMA NUMERO CIERRA_P PUNTOCOMA
    (300) Pos -> . POS ABRE_P NUMERO COMA NUMERO CIERRA_P
    (301) Pos -> . POS ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (302) Pos -> . POS ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (303) Pos -> . POS ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (304) Pos -> . POS ABRE_P Var COMA NUMERO CIERRA_P
    (305) Pos -> . POS ABRE_P NUMERO COMA Var CIERRA_P
    (306) Pos -> . POS ABRE_P Var COMA Var CIERRA_P
    (307) Pos -> . POS ABRE_P expresion_alge1 COMA Var CIERRA_P
    (308) Pos -> . POS ABRE_P Var COMA expresion_alge1 CIERRA_P
    (309) Pos -> . POS ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P
    (310) Pos -> . POS ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (311) Pos -> . POS ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (312) Pos -> . POS ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (313) Pos -> . POS ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (314) Pos -> . POS ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (315) Pos -> . POS ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (316) PosX -> . POSX NUMERO PUNTOCOMA
    (317) PosX -> . POSX RESTA NUMERO PUNTOCOMA
    (318) PosX -> . POSX expresion_alge1 PUNTOCOMA
    (319) PosX -> . POSX expresion_alge2 PUNTOCOMA
    (320) PosX -> . POSX Var PUNTOCOMA
    (321) PosY -> . POSY NUMERO PUNTOCOMA
    (322) PosY -> . POSY RESTA NUMERO PUNTOCOMA
    (323) PosY -> . POSY expresion_alge1 PUNTOCOMA
    (324) PosY -> . POSY expresion_alge2 PUNTOCOMA
    (325) PosY -> . POSY Var PUNTOCOMA
    (326) UseColor -> . USECOLOR NUMERO PUNTOCOMA
    (327) UseColor -> . USECOLOR empty PUNTOCOMA

    BEGINNING       shift and go to state 197
    CONTINUEUP      shift and go to state 198
    CONTINUEDOWN    shift and go to state 199
    CONTINUERIGHT   shift and go to state 200
    CONTINUELEFT    shift and go to state 201
    UP              shift and go to state 202
    DOWN            shift and go to state 203
    SPEED           shift and go to state 204
    POS             shift and go to state 205
    POSX            shift and go to state 206
    POSY            shift and go to state 207
    USECOLOR        shift and go to state 208

    ordenes                        shift and go to state 183
    Beginning                      shift and go to state 184
    ContinueUp                     shift and go to state 185
    ContinueDown                   shift and go to state 186
    ContinueRight                  shift and go to state 187
    ContinueLeft                   shift and go to state 188
    Up                             shift and go to state 189
    Down                           shift and go to state 190
    Speed                          shift and go to state 191
    Diag                           shift and go to state 192
    Pos                            shift and go to state 193
    PosX                           shift and go to state 194
    PosY                           shift and go to state 195
    UseColor                       shift and go to state 196

state 132

    (267) Repeat -> REPEAT NUMERO . BRACKET1 ordenes BRACKET2 cuerpo3

    BRACKET1        shift and go to state 209


state 133

    (148) Mult -> MULT ABRE_P . NUMERO COMA NUMERO CIERRA_P
    (149) Mult -> MULT ABRE_P . RESTA NUMERO COMA NUMERO CIERRA_P
    (150) Mult -> MULT ABRE_P . NUMERO COMA RESTA NUMERO CIERRA_P
    (151) Mult -> MULT ABRE_P . NUMERO COMA expresion_alge1 CIERRA_P
    (152) Mult -> MULT ABRE_P . RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (153) Mult -> MULT ABRE_P . expresion_alge1 COMA expresion_alge1 CIERRA_P
    (154) Mult -> MULT ABRE_P . NUMERO COMA Var CIERRA_P
    (155) Mult -> MULT ABRE_P . RESTA NUMERO COMA Var CIERRA_P
    (156) Mult -> MULT ABRE_P . Var COMA NUMERO CIERRA_P
    (157) Mult -> MULT ABRE_P . Var COMA RESTA NUMERO CIERRA_P
    (158) Mult -> MULT ABRE_P . Var COMA Var CIERRA_P
    (159) Mult -> MULT ABRE_P . expresion_alge1 COMA Var CIERRA_P
    (160) Mult -> MULT ABRE_P . expresion_alge1 COMA NUMERO CIERRA_P
    (161) Mult -> MULT ABRE_P . expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (162) Mult -> MULT ABRE_P . Var COMA expresion_alge1 CIERRA_P
    (163) Mult -> MULT ABRE_P . RESTA NUMERO COMA RESTA NUMERO CIERRA_P
    (104) expresion_alge1 -> . NUMERO SUMA NUMERO
    (105) expresion_alge1 -> . NUMERO RESTA NUMERO
    (106) expresion_alge1 -> . NUMERO MULTI NUMERO
    (107) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (108) expresion_alge1 -> . RESTA NUMERO SUMA NUMERO
    (109) expresion_alge1 -> . RESTA NUMERO RESTA NUMERO
    (110) expresion_alge1 -> . RESTA NUMERO MULTI NUMERO
    (111) expresion_alge1 -> . RESTA NUMERO DIVISION NUMERO
    (180) Var -> . VAR

    NUMERO          shift and go to state 210
    RESTA           shift and go to state 211
    VAR             shift and go to state 34

    expresion_alge1                shift and go to state 212
    Var                            shift and go to state 213

state 134

    (164) Div -> DIV ABRE_P . NUMERO COMA NUMERO CIERRA_P
    (165) Div -> DIV ABRE_P . RESTA NUMERO COMA NUMERO CIERRA_P
    (166) Div -> DIV ABRE_P . NUMERO COMA RESTA NUMERO CIERRA_P
    (167) Div -> DIV ABRE_P . NUMERO COMA expresion_alge1 CIERRA_P
    (168) Div -> DIV ABRE_P . RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (169) Div -> DIV ABRE_P . expresion_alge1 COMA expresion_alge1 CIERRA_P
    (170) Div -> DIV ABRE_P . NUMERO COMA Var CIERRA_P
    (171) Div -> DIV ABRE_P . RESTA NUMERO COMA Var CIERRA_P
    (172) Div -> DIV ABRE_P . Var COMA NUMERO CIERRA_P
    (173) Div -> DIV ABRE_P . Var COMA RESTA NUMERO CIERRA_P
    (174) Div -> DIV ABRE_P . Var COMA Var CIERRA_P
    (175) Div -> DIV ABRE_P . expresion_alge1 COMA Var CIERRA_P
    (176) Div -> DIV ABRE_P . expresion_alge1 COMA NUMERO CIERRA_P
    (177) Div -> DIV ABRE_P . expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (178) Div -> DIV ABRE_P . Var COMA expresion_alge1 CIERRA_P
    (179) Div -> DIV ABRE_P . RESTA NUMERO COMA RESTA NUMERO CIERRA_P
    (104) expresion_alge1 -> . NUMERO SUMA NUMERO
    (105) expresion_alge1 -> . NUMERO RESTA NUMERO
    (106) expresion_alge1 -> . NUMERO MULTI NUMERO
    (107) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (108) expresion_alge1 -> . RESTA NUMERO SUMA NUMERO
    (109) expresion_alge1 -> . RESTA NUMERO RESTA NUMERO
    (110) expresion_alge1 -> . RESTA NUMERO MULTI NUMERO
    (111) expresion_alge1 -> . RESTA NUMERO DIVISION NUMERO
    (180) Var -> . VAR

    NUMERO          shift and go to state 214
    RESTA           shift and go to state 215
    VAR             shift and go to state 34

    expresion_alge1                shift and go to state 216
    Var                            shift and go to state 217

state 135

    (116) Sum -> SUM ABRE_P . NUMERO COMA NUMERO CIERRA_P
    (117) Sum -> SUM ABRE_P . RESTA NUMERO COMA NUMERO CIERRA_P
    (118) Sum -> SUM ABRE_P . NUMERO COMA RESTA NUMERO CIERRA_P
    (119) Sum -> SUM ABRE_P . NUMERO COMA expresion_alge1 CIERRA_P
    (120) Sum -> SUM ABRE_P . RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (121) Sum -> SUM ABRE_P . expresion_alge1 COMA expresion_alge1 CIERRA_P
    (122) Sum -> SUM ABRE_P . NUMERO COMA Var CIERRA_P
    (123) Sum -> SUM ABRE_P . RESTA NUMERO COMA Var CIERRA_P
    (124) Sum -> SUM ABRE_P . Var COMA NUMERO CIERRA_P
    (125) Sum -> SUM ABRE_P . Var COMA RESTA NUMERO CIERRA_P
    (126) Sum -> SUM ABRE_P . Var COMA Var CIERRA_P
    (127) Sum -> SUM ABRE_P . expresion_alge1 COMA Var CIERRA_P
    (128) Sum -> SUM ABRE_P . expresion_alge1 COMA NUMERO CIERRA_P
    (129) Sum -> SUM ABRE_P . expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (130) Sum -> SUM ABRE_P . Var COMA expresion_alge1 CIERRA_P
    (131) Sum -> SUM ABRE_P . RESTA NUMERO COMA RESTA NUMERO CIERRA_P
    (104) expresion_alge1 -> . NUMERO SUMA NUMERO
    (105) expresion_alge1 -> . NUMERO RESTA NUMERO
    (106) expresion_alge1 -> . NUMERO MULTI NUMERO
    (107) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (108) expresion_alge1 -> . RESTA NUMERO SUMA NUMERO
    (109) expresion_alge1 -> . RESTA NUMERO RESTA NUMERO
    (110) expresion_alge1 -> . RESTA NUMERO MULTI NUMERO
    (111) expresion_alge1 -> . RESTA NUMERO DIVISION NUMERO
    (180) Var -> . VAR

    NUMERO          shift and go to state 218
    RESTA           shift and go to state 219
    VAR             shift and go to state 34

    expresion_alge1                shift and go to state 220
    Var                            shift and go to state 221

state 136

    (132) Substr -> SUBSTR ABRE_P . NUMERO COMA NUMERO CIERRA_P
    (133) Substr -> SUBSTR ABRE_P . RESTA NUMERO COMA NUMERO CIERRA_P
    (134) Substr -> SUBSTR ABRE_P . NUMERO COMA RESTA NUMERO CIERRA_P
    (135) Substr -> SUBSTR ABRE_P . NUMERO COMA expresion_alge1 CIERRA_P
    (136) Substr -> SUBSTR ABRE_P . RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (137) Substr -> SUBSTR ABRE_P . expresion_alge1 COMA expresion_alge1 CIERRA_P
    (138) Substr -> SUBSTR ABRE_P . NUMERO COMA Var CIERRA_P
    (139) Substr -> SUBSTR ABRE_P . RESTA NUMERO COMA Var CIERRA_P
    (140) Substr -> SUBSTR ABRE_P . Var COMA NUMERO CIERRA_P
    (141) Substr -> SUBSTR ABRE_P . Var COMA RESTA NUMERO CIERRA_P
    (142) Substr -> SUBSTR ABRE_P . Var COMA Var CIERRA_P
    (143) Substr -> SUBSTR ABRE_P . expresion_alge1 COMA Var CIERRA_P
    (144) Substr -> SUBSTR ABRE_P . expresion_alge1 COMA NUMERO CIERRA_P
    (145) Substr -> SUBSTR ABRE_P . expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (146) Substr -> SUBSTR ABRE_P . Var COMA expresion_alge1 CIERRA_P
    (147) Substr -> SUBSTR ABRE_P . RESTA NUMERO COMA RESTA NUMERO CIERRA_P
    (104) expresion_alge1 -> . NUMERO SUMA NUMERO
    (105) expresion_alge1 -> . NUMERO RESTA NUMERO
    (106) expresion_alge1 -> . NUMERO MULTI NUMERO
    (107) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (108) expresion_alge1 -> . RESTA NUMERO SUMA NUMERO
    (109) expresion_alge1 -> . RESTA NUMERO RESTA NUMERO
    (110) expresion_alge1 -> . RESTA NUMERO MULTI NUMERO
    (111) expresion_alge1 -> . RESTA NUMERO DIVISION NUMERO
    (180) Var -> . VAR

    NUMERO          shift and go to state 222
    RESTA           shift and go to state 223
    VAR             shift and go to state 34

    expresion_alge1                shift and go to state 224
    Var                            shift and go to state 225

state 137

    (279) Random -> RANDOM ABRE_P . NUMERO CIERRA_P PUNTOCOMA

    NUMERO          shift and go to state 226


state 138

    (264) If -> IF ABRE_P . condicion CIERRA_P BRACKET1 funcion BRACKET2
    (101) condicion -> . Equal
    (102) condicion -> . Greater
    (103) condicion -> . Smaller
    (181) Equal -> . EQUAL ABRE_P NUMERO COMA NUMERO CIERRA_P
    (182) Equal -> . EQUAL ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (183) Equal -> . EQUAL ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (184) Equal -> . EQUAL ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (185) Equal -> . EQUAL ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P
    (186) Equal -> . EQUAL ABRE_P Var COMA Var CIERRA_P
    (187) Equal -> . EQUAL ABRE_P NUMERO COMA Var CIERRA_P
    (188) Equal -> . EQUAL ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (189) Equal -> . EQUAL ABRE_P expresion_alge2 COMA Var CIERRA_P
    (190) Equal -> . EQUAL ABRE_P expresion_alge1 COMA Var CIERRA_P
    (191) Equal -> . EQUAL ABRE_P Var COMA NUMERO CIERRA_P
    (192) Equal -> . EQUAL ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (193) Equal -> . EQUAL ABRE_P Var COMA expresion_alge1 CIERRA_P
    (194) Equal -> . EQUAL ABRE_P Var COMA expresion_alge2 CIERRA_P
    (195) Equal -> . EQUAL ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P
    (196) Equal -> . EQUAL ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P
    (197) Equal -> . EQUAL ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (198) Equal -> . EQUAL ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (199) Equal -> . EQUAL ABRE_P expresion_alge2 COMA NUMERO CIERRA_P
    (200) Equal -> . EQUAL ABRE_P expresion_alge2 COMA RESTA NUMERO CIERRA_P
    (201) Equal -> . EQUAL ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (202) Equal -> . EQUAL ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (203) Equal -> . EQUAL ABRE_P NUMERO COMA expresion_alge2 CIERRA_P
    (204) Equal -> . EQUAL ABRE_P RESTA NUMERO COMA expresion_alge2 CIERRA_P
    (205) Equal -> . EQUAL ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P
    (206) Greater -> . GREATER ABRE_P NUMERO COMA NUMERO CIERRA_P
    (207) Greater -> . GREATER ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (208) Greater -> . GREATER ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (209) Greater -> . GREATER ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (210) Greater -> . GREATER ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P
    (211) Greater -> . GREATER ABRE_P Var COMA Var CIERRA_P
    (212) Greater -> . GREATER ABRE_P NUMERO COMA Var CIERRA_P
    (213) Greater -> . GREATER ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (214) Greater -> . GREATER ABRE_P expresion_alge2 COMA Var CIERRA_P
    (215) Greater -> . GREATER ABRE_P expresion_alge1 COMA Var CIERRA_P
    (216) Greater -> . GREATER ABRE_P Var COMA NUMERO CIERRA_P
    (217) Greater -> . GREATER ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (218) Greater -> . GREATER ABRE_P Var COMA expresion_alge1 CIERRA_P
    (219) Greater -> . GREATER ABRE_P Var COMA expresion_alge2 CIERRA_P
    (220) Greater -> . GREATER ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P
    (221) Greater -> . GREATER ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P
    (222) Greater -> . GREATER ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (223) Greater -> . GREATER ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (224) Greater -> . GREATER ABRE_P expresion_alge2 COMA NUMERO CIERRA_P
    (225) Greater -> . GREATER ABRE_P expresion_alge2 COMA RESTA NUMERO CIERRA_P
    (226) Greater -> . GREATER ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (227) Greater -> . GREATER ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (228) Greater -> . GREATER ABRE_P NUMERO COMA expresion_alge2 CIERRA_P
    (229) Greater -> . GREATER ABRE_P RESTA NUMERO COMA expresion_alge2 CIERRA_P
    (230) Greater -> . GREATER ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P
    (231) Smaller -> . SMALLER ABRE_P NUMERO COMA NUMERO CIERRA_P
    (232) Smaller -> . SMALLER ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (233) Smaller -> . SMALLER ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (234) Smaller -> . SMALLER ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (235) Smaller -> . SMALLER ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P
    (236) Smaller -> . SMALLER ABRE_P Var COMA Var CIERRA_P
    (237) Smaller -> . SMALLER ABRE_P NUMERO COMA Var CIERRA_P
    (238) Smaller -> . SMALLER ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (239) Smaller -> . SMALLER ABRE_P expresion_alge2 COMA Var CIERRA_P
    (240) Smaller -> . SMALLER ABRE_P expresion_alge1 COMA Var CIERRA_P
    (241) Smaller -> . SMALLER ABRE_P Var COMA NUMERO CIERRA_P
    (242) Smaller -> . SMALLER ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (243) Smaller -> . SMALLER ABRE_P Var COMA expresion_alge1 CIERRA_P
    (244) Smaller -> . SMALLER ABRE_P Var COMA expresion_alge2 CIERRA_P
    (245) Smaller -> . SMALLER ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P
    (246) Smaller -> . SMALLER ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P
    (247) Smaller -> . SMALLER ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (248) Smaller -> . SMALLER ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (249) Smaller -> . SMALLER ABRE_P expresion_alge2 COMA NUMERO CIERRA_P
    (250) Smaller -> . SMALLER ABRE_P expresion_alge2 COMA RESTA NUMERO CIERRA_P
    (251) Smaller -> . SMALLER ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (252) Smaller -> . SMALLER ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (253) Smaller -> . SMALLER ABRE_P NUMERO COMA expresion_alge2 CIERRA_P
    (254) Smaller -> . SMALLER ABRE_P RESTA NUMERO COMA expresion_alge2 CIERRA_P
    (255) Smaller -> . SMALLER ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P

    EQUAL           shift and go to state 231
    GREATER         shift and go to state 232
    SMALLER         shift and go to state 233

    condicion                      shift and go to state 227
    Equal                          shift and go to state 228
    Greater                        shift and go to state 229
    Smaller                        shift and go to state 230

state 139

    (265) IfElse -> IFELSE ABRE_P . condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2
    (101) condicion -> . Equal
    (102) condicion -> . Greater
    (103) condicion -> . Smaller
    (181) Equal -> . EQUAL ABRE_P NUMERO COMA NUMERO CIERRA_P
    (182) Equal -> . EQUAL ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (183) Equal -> . EQUAL ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (184) Equal -> . EQUAL ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (185) Equal -> . EQUAL ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P
    (186) Equal -> . EQUAL ABRE_P Var COMA Var CIERRA_P
    (187) Equal -> . EQUAL ABRE_P NUMERO COMA Var CIERRA_P
    (188) Equal -> . EQUAL ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (189) Equal -> . EQUAL ABRE_P expresion_alge2 COMA Var CIERRA_P
    (190) Equal -> . EQUAL ABRE_P expresion_alge1 COMA Var CIERRA_P
    (191) Equal -> . EQUAL ABRE_P Var COMA NUMERO CIERRA_P
    (192) Equal -> . EQUAL ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (193) Equal -> . EQUAL ABRE_P Var COMA expresion_alge1 CIERRA_P
    (194) Equal -> . EQUAL ABRE_P Var COMA expresion_alge2 CIERRA_P
    (195) Equal -> . EQUAL ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P
    (196) Equal -> . EQUAL ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P
    (197) Equal -> . EQUAL ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (198) Equal -> . EQUAL ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (199) Equal -> . EQUAL ABRE_P expresion_alge2 COMA NUMERO CIERRA_P
    (200) Equal -> . EQUAL ABRE_P expresion_alge2 COMA RESTA NUMERO CIERRA_P
    (201) Equal -> . EQUAL ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (202) Equal -> . EQUAL ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (203) Equal -> . EQUAL ABRE_P NUMERO COMA expresion_alge2 CIERRA_P
    (204) Equal -> . EQUAL ABRE_P RESTA NUMERO COMA expresion_alge2 CIERRA_P
    (205) Equal -> . EQUAL ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P
    (206) Greater -> . GREATER ABRE_P NUMERO COMA NUMERO CIERRA_P
    (207) Greater -> . GREATER ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (208) Greater -> . GREATER ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (209) Greater -> . GREATER ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (210) Greater -> . GREATER ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P
    (211) Greater -> . GREATER ABRE_P Var COMA Var CIERRA_P
    (212) Greater -> . GREATER ABRE_P NUMERO COMA Var CIERRA_P
    (213) Greater -> . GREATER ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (214) Greater -> . GREATER ABRE_P expresion_alge2 COMA Var CIERRA_P
    (215) Greater -> . GREATER ABRE_P expresion_alge1 COMA Var CIERRA_P
    (216) Greater -> . GREATER ABRE_P Var COMA NUMERO CIERRA_P
    (217) Greater -> . GREATER ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (218) Greater -> . GREATER ABRE_P Var COMA expresion_alge1 CIERRA_P
    (219) Greater -> . GREATER ABRE_P Var COMA expresion_alge2 CIERRA_P
    (220) Greater -> . GREATER ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P
    (221) Greater -> . GREATER ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P
    (222) Greater -> . GREATER ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (223) Greater -> . GREATER ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (224) Greater -> . GREATER ABRE_P expresion_alge2 COMA NUMERO CIERRA_P
    (225) Greater -> . GREATER ABRE_P expresion_alge2 COMA RESTA NUMERO CIERRA_P
    (226) Greater -> . GREATER ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (227) Greater -> . GREATER ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (228) Greater -> . GREATER ABRE_P NUMERO COMA expresion_alge2 CIERRA_P
    (229) Greater -> . GREATER ABRE_P RESTA NUMERO COMA expresion_alge2 CIERRA_P
    (230) Greater -> . GREATER ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P
    (231) Smaller -> . SMALLER ABRE_P NUMERO COMA NUMERO CIERRA_P
    (232) Smaller -> . SMALLER ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (233) Smaller -> . SMALLER ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (234) Smaller -> . SMALLER ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (235) Smaller -> . SMALLER ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P
    (236) Smaller -> . SMALLER ABRE_P Var COMA Var CIERRA_P
    (237) Smaller -> . SMALLER ABRE_P NUMERO COMA Var CIERRA_P
    (238) Smaller -> . SMALLER ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (239) Smaller -> . SMALLER ABRE_P expresion_alge2 COMA Var CIERRA_P
    (240) Smaller -> . SMALLER ABRE_P expresion_alge1 COMA Var CIERRA_P
    (241) Smaller -> . SMALLER ABRE_P Var COMA NUMERO CIERRA_P
    (242) Smaller -> . SMALLER ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (243) Smaller -> . SMALLER ABRE_P Var COMA expresion_alge1 CIERRA_P
    (244) Smaller -> . SMALLER ABRE_P Var COMA expresion_alge2 CIERRA_P
    (245) Smaller -> . SMALLER ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P
    (246) Smaller -> . SMALLER ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P
    (247) Smaller -> . SMALLER ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (248) Smaller -> . SMALLER ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (249) Smaller -> . SMALLER ABRE_P expresion_alge2 COMA NUMERO CIERRA_P
    (250) Smaller -> . SMALLER ABRE_P expresion_alge2 COMA RESTA NUMERO CIERRA_P
    (251) Smaller -> . SMALLER ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (252) Smaller -> . SMALLER ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (253) Smaller -> . SMALLER ABRE_P NUMERO COMA expresion_alge2 CIERRA_P
    (254) Smaller -> . SMALLER ABRE_P RESTA NUMERO COMA expresion_alge2 CIERRA_P
    (255) Smaller -> . SMALLER ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P

    EQUAL           shift and go to state 231
    GREATER         shift and go to state 232
    SMALLER         shift and go to state 233

    condicion                      shift and go to state 234
    Equal                          shift and go to state 228
    Greater                        shift and go to state 229
    Smaller                        shift and go to state 230

state 140

    (268) Until -> UNTIL BRACKET1 . funcion BRACKET2 BRACKET1 condicion BRACKET2
    (82) funcion -> . Random empty
    (83) funcion -> . If empty
    (84) funcion -> . IfElse empty
    (85) funcion -> . Until empty
    (86) funcion -> . While empty
    (87) funcion -> . PrintLine empty
    (88) funcion -> . And empty
    (89) funcion -> . Or empty
    (90) funcion -> . Add empty
    (91) funcion -> . Put2 empty
    (92) funcion -> . Put empty
    (93) funcion -> . PUNTOCOMA funcion
    (94) funcion -> . empty empty
    (279) Random -> . RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA
    (264) If -> . IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2
    (265) IfElse -> . IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2
    (268) Until -> . UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2
    (266) While -> . WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2
    (337) PrintLine -> . PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA
    (256) And -> . AND ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (257) And -> . AND ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P
    (258) And -> . AND ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P
    (259) And -> . AND ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P
    (260) Or -> . OR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (261) Or -> . OR ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P
    (262) Or -> . OR ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P
    (263) Or -> . OR ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P
    (269) Add -> . ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA
    (270) Add -> . ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (271) Add -> . ADD ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (272) Add -> . ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (273) Add -> . ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (274) Add -> . ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (96) Put2 -> . PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (97) Put2 -> . PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (98) Put2 -> . PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (99) Put2 -> . PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (100) Put2 -> . PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA
    (95) Put -> . PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA
    (338) empty -> .

    PUNTOCOMA       shift and go to state 62
    RANDOM          shift and go to state 72
    IF              shift and go to state 73
    IFELSE          shift and go to state 74
    UNTIL           shift and go to state 75
    WHILE           shift and go to state 76
    PRINTLINE       shift and go to state 77
    AND             shift and go to state 78
    OR              shift and go to state 79
    ADD             shift and go to state 80
    PUT             shift and go to state 96
    BRACKET2        reduce using rule 338 (empty -> .)

    funcion                        shift and go to state 235
    Random                         shift and go to state 53
    empty                          shift and go to state 124
    If                             shift and go to state 54
    IfElse                         shift and go to state 55
    Until                          shift and go to state 56
    While                          shift and go to state 57
    PrintLine                      shift and go to state 58
    And                            shift and go to state 59
    Or                             shift and go to state 60
    Add                            shift and go to state 61
    Put2                           shift and go to state 94
    Put                            shift and go to state 95

state 141

    (266) While -> WHILE BRACKET1 . condicion BRACKET2 BRACKET1 funcion BRACKET2
    (101) condicion -> . Equal
    (102) condicion -> . Greater
    (103) condicion -> . Smaller
    (181) Equal -> . EQUAL ABRE_P NUMERO COMA NUMERO CIERRA_P
    (182) Equal -> . EQUAL ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (183) Equal -> . EQUAL ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (184) Equal -> . EQUAL ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (185) Equal -> . EQUAL ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P
    (186) Equal -> . EQUAL ABRE_P Var COMA Var CIERRA_P
    (187) Equal -> . EQUAL ABRE_P NUMERO COMA Var CIERRA_P
    (188) Equal -> . EQUAL ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (189) Equal -> . EQUAL ABRE_P expresion_alge2 COMA Var CIERRA_P
    (190) Equal -> . EQUAL ABRE_P expresion_alge1 COMA Var CIERRA_P
    (191) Equal -> . EQUAL ABRE_P Var COMA NUMERO CIERRA_P
    (192) Equal -> . EQUAL ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (193) Equal -> . EQUAL ABRE_P Var COMA expresion_alge1 CIERRA_P
    (194) Equal -> . EQUAL ABRE_P Var COMA expresion_alge2 CIERRA_P
    (195) Equal -> . EQUAL ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P
    (196) Equal -> . EQUAL ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P
    (197) Equal -> . EQUAL ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (198) Equal -> . EQUAL ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (199) Equal -> . EQUAL ABRE_P expresion_alge2 COMA NUMERO CIERRA_P
    (200) Equal -> . EQUAL ABRE_P expresion_alge2 COMA RESTA NUMERO CIERRA_P
    (201) Equal -> . EQUAL ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (202) Equal -> . EQUAL ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (203) Equal -> . EQUAL ABRE_P NUMERO COMA expresion_alge2 CIERRA_P
    (204) Equal -> . EQUAL ABRE_P RESTA NUMERO COMA expresion_alge2 CIERRA_P
    (205) Equal -> . EQUAL ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P
    (206) Greater -> . GREATER ABRE_P NUMERO COMA NUMERO CIERRA_P
    (207) Greater -> . GREATER ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (208) Greater -> . GREATER ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (209) Greater -> . GREATER ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (210) Greater -> . GREATER ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P
    (211) Greater -> . GREATER ABRE_P Var COMA Var CIERRA_P
    (212) Greater -> . GREATER ABRE_P NUMERO COMA Var CIERRA_P
    (213) Greater -> . GREATER ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (214) Greater -> . GREATER ABRE_P expresion_alge2 COMA Var CIERRA_P
    (215) Greater -> . GREATER ABRE_P expresion_alge1 COMA Var CIERRA_P
    (216) Greater -> . GREATER ABRE_P Var COMA NUMERO CIERRA_P
    (217) Greater -> . GREATER ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (218) Greater -> . GREATER ABRE_P Var COMA expresion_alge1 CIERRA_P
    (219) Greater -> . GREATER ABRE_P Var COMA expresion_alge2 CIERRA_P
    (220) Greater -> . GREATER ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P
    (221) Greater -> . GREATER ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P
    (222) Greater -> . GREATER ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (223) Greater -> . GREATER ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (224) Greater -> . GREATER ABRE_P expresion_alge2 COMA NUMERO CIERRA_P
    (225) Greater -> . GREATER ABRE_P expresion_alge2 COMA RESTA NUMERO CIERRA_P
    (226) Greater -> . GREATER ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (227) Greater -> . GREATER ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (228) Greater -> . GREATER ABRE_P NUMERO COMA expresion_alge2 CIERRA_P
    (229) Greater -> . GREATER ABRE_P RESTA NUMERO COMA expresion_alge2 CIERRA_P
    (230) Greater -> . GREATER ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P
    (231) Smaller -> . SMALLER ABRE_P NUMERO COMA NUMERO CIERRA_P
    (232) Smaller -> . SMALLER ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (233) Smaller -> . SMALLER ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (234) Smaller -> . SMALLER ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (235) Smaller -> . SMALLER ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P
    (236) Smaller -> . SMALLER ABRE_P Var COMA Var CIERRA_P
    (237) Smaller -> . SMALLER ABRE_P NUMERO COMA Var CIERRA_P
    (238) Smaller -> . SMALLER ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (239) Smaller -> . SMALLER ABRE_P expresion_alge2 COMA Var CIERRA_P
    (240) Smaller -> . SMALLER ABRE_P expresion_alge1 COMA Var CIERRA_P
    (241) Smaller -> . SMALLER ABRE_P Var COMA NUMERO CIERRA_P
    (242) Smaller -> . SMALLER ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (243) Smaller -> . SMALLER ABRE_P Var COMA expresion_alge1 CIERRA_P
    (244) Smaller -> . SMALLER ABRE_P Var COMA expresion_alge2 CIERRA_P
    (245) Smaller -> . SMALLER ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P
    (246) Smaller -> . SMALLER ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P
    (247) Smaller -> . SMALLER ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (248) Smaller -> . SMALLER ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (249) Smaller -> . SMALLER ABRE_P expresion_alge2 COMA NUMERO CIERRA_P
    (250) Smaller -> . SMALLER ABRE_P expresion_alge2 COMA RESTA NUMERO CIERRA_P
    (251) Smaller -> . SMALLER ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (252) Smaller -> . SMALLER ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (253) Smaller -> . SMALLER ABRE_P NUMERO COMA expresion_alge2 CIERRA_P
    (254) Smaller -> . SMALLER ABRE_P RESTA NUMERO COMA expresion_alge2 CIERRA_P
    (255) Smaller -> . SMALLER ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P

    EQUAL           shift and go to state 231
    GREATER         shift and go to state 232
    SMALLER         shift and go to state 233

    condicion                      shift and go to state 236
    Equal                          shift and go to state 228
    Greater                        shift and go to state 229
    Smaller                        shift and go to state 230

state 142

    (337) PrintLine -> PRINTLINE ABRE_P . exp CIERRA_P PUNTOCOMA
    (329) exp -> . NUMERO COMA exp
    (330) exp -> . STRING COMA exp
    (331) exp -> . Var COMA exp
    (332) exp -> . NUMERO empty empty
    (333) exp -> . RESTA NUMERO empty empty
    (334) exp -> . RESTA NUMERO COMA empty
    (335) exp -> . STRING empty empty
    (336) exp -> . Var empty empty
    (180) Var -> . VAR

    NUMERO          shift and go to state 238
    STRING          shift and go to state 239
    RESTA           shift and go to state 241
    VAR             shift and go to state 34

    exp                            shift and go to state 237
    Var                            shift and go to state 240

state 143

    (256) And -> AND ABRE_P . expresion_alge1 COMA expresion_alge1 CIERRA_P
    (257) And -> AND ABRE_P . expresion_alge1 COMA expresion_alge2 CIERRA_P
    (258) And -> AND ABRE_P . expresion_alge2 COMA expresion_alge1 CIERRA_P
    (259) And -> AND ABRE_P . expresion_alge2 COMA expresion_alge2 CIERRA_P
    (104) expresion_alge1 -> . NUMERO SUMA NUMERO
    (105) expresion_alge1 -> . NUMERO RESTA NUMERO
    (106) expresion_alge1 -> . NUMERO MULTI NUMERO
    (107) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (108) expresion_alge1 -> . RESTA NUMERO SUMA NUMERO
    (109) expresion_alge1 -> . RESTA NUMERO RESTA NUMERO
    (110) expresion_alge1 -> . RESTA NUMERO MULTI NUMERO
    (111) expresion_alge1 -> . RESTA NUMERO DIVISION NUMERO
    (112) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (113) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (114) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (115) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P

    NUMERO          shift and go to state 64
    RESTA           shift and go to state 65
    ABRE_P          shift and go to state 63

    expresion_alge1                shift and go to state 242
    expresion_alge2                shift and go to state 243

state 144

    (260) Or -> OR ABRE_P . expresion_alge1 COMA expresion_alge1 CIERRA_P
    (261) Or -> OR ABRE_P . expresion_alge1 COMA expresion_alge2 CIERRA_P
    (262) Or -> OR ABRE_P . expresion_alge2 COMA expresion_alge1 CIERRA_P
    (263) Or -> OR ABRE_P . expresion_alge2 COMA expresion_alge2 CIERRA_P
    (104) expresion_alge1 -> . NUMERO SUMA NUMERO
    (105) expresion_alge1 -> . NUMERO RESTA NUMERO
    (106) expresion_alge1 -> . NUMERO MULTI NUMERO
    (107) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (108) expresion_alge1 -> . RESTA NUMERO SUMA NUMERO
    (109) expresion_alge1 -> . RESTA NUMERO RESTA NUMERO
    (110) expresion_alge1 -> . RESTA NUMERO MULTI NUMERO
    (111) expresion_alge1 -> . RESTA NUMERO DIVISION NUMERO
    (112) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (113) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (114) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (115) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P

    NUMERO          shift and go to state 64
    RESTA           shift and go to state 65
    ABRE_P          shift and go to state 63

    expresion_alge1                shift and go to state 244
    expresion_alge2                shift and go to state 245

state 145

    (269) Add -> ADD ABRE_P . Var empty empty CIERRA_P PUNTOCOMA
    (270) Add -> ADD ABRE_P . Var COMA NUMERO CIERRA_P PUNTOCOMA
    (271) Add -> ADD ABRE_P . Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (272) Add -> ADD ABRE_P . Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (273) Add -> ADD ABRE_P . Var COMA Var CIERRA_P PUNTOCOMA
    (274) Add -> ADD ABRE_P . Var COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (180) Var -> . VAR

    VAR             shift and go to state 34

    Var                            shift and go to state 246

state 146

    (95) Put -> PUT ABRE_P VAR COMA VAR . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 247


state 147

    (96) Put2 -> PUT ABRE_P VAR COMA NUMERO . CIERRA_P PUNTOCOMA
    (104) expresion_alge1 -> NUMERO . SUMA NUMERO
    (105) expresion_alge1 -> NUMERO . RESTA NUMERO
    (106) expresion_alge1 -> NUMERO . MULTI NUMERO
    (107) expresion_alge1 -> NUMERO . DIVISION NUMERO

    CIERRA_P        shift and go to state 248
    SUMA            shift and go to state 126
    RESTA           shift and go to state 127
    MULTI           shift and go to state 128
    DIVISION        shift and go to state 129


state 148

    (97) Put2 -> PUT ABRE_P VAR COMA RESTA . NUMERO CIERRA_P PUNTOCOMA
    (108) expresion_alge1 -> RESTA . NUMERO SUMA NUMERO
    (109) expresion_alge1 -> RESTA . NUMERO RESTA NUMERO
    (110) expresion_alge1 -> RESTA . NUMERO MULTI NUMERO
    (111) expresion_alge1 -> RESTA . NUMERO DIVISION NUMERO

    NUMERO          shift and go to state 249


state 149

    (98) Put2 -> PUT ABRE_P VAR COMA expresion_alge1 . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 250


state 150

    (99) Put2 -> PUT ABRE_P VAR COMA expresion_alge2 . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 251


state 151

    (100) Put2 -> PUT ABRE_P VAR COMA funcion . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 252


state 152

    (39) variable2 -> DEF VAR IGUAL NUMERO PUNTOCOMA .

    COMMENT         reduce using rule 39 (variable2 -> DEF VAR IGUAL NUMERO PUNTOCOMA .)
    PARA            reduce using rule 39 (variable2 -> DEF VAR IGUAL NUMERO PUNTOCOMA .)
    MAIN            reduce using rule 39 (variable2 -> DEF VAR IGUAL NUMERO PUNTOCOMA .)
    PUT             reduce using rule 39 (variable2 -> DEF VAR IGUAL NUMERO PUNTOCOMA .)
    DEF             reduce using rule 39 (variable2 -> DEF VAR IGUAL NUMERO PUNTOCOMA .)
    $end            reduce using rule 39 (variable2 -> DEF VAR IGUAL NUMERO PUNTOCOMA .)
    PUNTOCOMA       reduce using rule 39 (variable2 -> DEF VAR IGUAL NUMERO PUNTOCOMA .)
    RUN             reduce using rule 39 (variable2 -> DEF VAR IGUAL NUMERO PUNTOCOMA .)
    REPEAT          reduce using rule 39 (variable2 -> DEF VAR IGUAL NUMERO PUNTOCOMA .)
    NUMERO          reduce using rule 39 (variable2 -> DEF VAR IGUAL NUMERO PUNTOCOMA .)
    RESTA           reduce using rule 39 (variable2 -> DEF VAR IGUAL NUMERO PUNTOCOMA .)
    ABRE_P          reduce using rule 39 (variable2 -> DEF VAR IGUAL NUMERO PUNTOCOMA .)
    SUM             reduce using rule 39 (variable2 -> DEF VAR IGUAL NUMERO PUNTOCOMA .)
    SUBSTR          reduce using rule 39 (variable2 -> DEF VAR IGUAL NUMERO PUNTOCOMA .)
    MULT            reduce using rule 39 (variable2 -> DEF VAR IGUAL NUMERO PUNTOCOMA .)
    DIV             reduce using rule 39 (variable2 -> DEF VAR IGUAL NUMERO PUNTOCOMA .)
    RANDOM          reduce using rule 39 (variable2 -> DEF VAR IGUAL NUMERO PUNTOCOMA .)
    IF              reduce using rule 39 (variable2 -> DEF VAR IGUAL NUMERO PUNTOCOMA .)
    IFELSE          reduce using rule 39 (variable2 -> DEF VAR IGUAL NUMERO PUNTOCOMA .)
    UNTIL           reduce using rule 39 (variable2 -> DEF VAR IGUAL NUMERO PUNTOCOMA .)
    WHILE           reduce using rule 39 (variable2 -> DEF VAR IGUAL NUMERO PUNTOCOMA .)
    PRINTLINE       reduce using rule 39 (variable2 -> DEF VAR IGUAL NUMERO PUNTOCOMA .)
    AND             reduce using rule 39 (variable2 -> DEF VAR IGUAL NUMERO PUNTOCOMA .)
    OR              reduce using rule 39 (variable2 -> DEF VAR IGUAL NUMERO PUNTOCOMA .)
    ADD             reduce using rule 39 (variable2 -> DEF VAR IGUAL NUMERO PUNTOCOMA .)
    FIN             reduce using rule 39 (variable2 -> DEF VAR IGUAL NUMERO PUNTOCOMA .)


state 153

    (40) variable2 -> DEF VAR IGUAL RESTA NUMERO . PUNTOCOMA

    PUNTOCOMA       shift and go to state 253


state 154

    (277) parametro -> empty empty empty .

    BRACKET2        reduce using rule 277 (parametro -> empty empty empty .)


state 155

    (27) llamadoproc -> PARA . id BRACKET1 parametro BRACKET2 PUNTOCOMA
    (24) id -> . ID

    ID              shift and go to state 22

    id                             shift and go to state 254

state 156

    (12) cuerpo2 -> empty .
    (34) variablexd -> empty . empty
    (55) expresion -> empty . empty
    (94) funcion -> empty . empty
    (338) empty -> .

  ! reduce/reduce conflict for FIN resolved using rule 12 (cuerpo2 -> empty .)
    FIN             reduce using rule 12 (cuerpo2 -> empty .)
    PUNTOCOMA       reduce using rule 338 (empty -> .)
    NUMERO          reduce using rule 338 (empty -> .)
    RESTA           reduce using rule 338 (empty -> .)
    ABRE_P          reduce using rule 338 (empty -> .)
    SUM             reduce using rule 338 (empty -> .)
    SUBSTR          reduce using rule 338 (empty -> .)
    MULT            reduce using rule 338 (empty -> .)
    DIV             reduce using rule 338 (empty -> .)
    RANDOM          reduce using rule 338 (empty -> .)
    IF              reduce using rule 338 (empty -> .)
    IFELSE          reduce using rule 338 (empty -> .)
    UNTIL           reduce using rule 338 (empty -> .)
    WHILE           reduce using rule 338 (empty -> .)
    PRINTLINE       reduce using rule 338 (empty -> .)
    AND             reduce using rule 338 (empty -> .)
    OR              reduce using rule 338 (empty -> .)
    ADD             reduce using rule 338 (empty -> .)
    PUT             reduce using rule 338 (empty -> .)

  ! FIN             [ reduce using rule 338 (empty -> .) ]

    empty                          shift and go to state 255

state 157

    (25) procedimiento -> PARA id BRACKET1 empty BRACKET2 cuerpo2 . FIN cuerpo

    FIN             shift and go to state 256


state 158

    (8) cuerpo2 -> variablexd .

    FIN             reduce using rule 8 (cuerpo2 -> variablexd .)


state 159

    (9) cuerpo2 -> COMMENT . cuerpo2
    (8) cuerpo2 -> . variablexd
    (9) cuerpo2 -> . COMMENT cuerpo2
    (10) cuerpo2 -> . expresion
    (11) cuerpo2 -> . llamadoproc
    (12) cuerpo2 -> . empty
    (13) cuerpo2 -> . Put2
    (14) cuerpo2 -> . Put
    (32) variablexd -> . variable1 cuerpo2
    (33) variablexd -> . variable2 cuerpo2
    (34) variablexd -> . empty empty
    (41) expresion -> . funcion expresion
    (42) expresion -> . expresion_alge1 expresion
    (43) expresion -> . expresion_alge2 expresion
    (44) expresion -> . Sum expresion
    (45) expresion -> . Substr expresion
    (46) expresion -> . Mult expresion
    (47) expresion -> . Div expresion
    (48) expresion -> . funcion empty
    (49) expresion -> . expresion_alge1 empty
    (50) expresion -> . expresion_alge2 empty
    (51) expresion -> . Sum empty
    (52) expresion -> . Substr empty
    (53) expresion -> . Mult empty
    (54) expresion -> . Div empty
    (55) expresion -> . empty empty
    (27) llamadoproc -> . PARA id BRACKET1 parametro BRACKET2 PUNTOCOMA
    (338) empty -> .
    (96) Put2 -> . PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (97) Put2 -> . PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (98) Put2 -> . PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (99) Put2 -> . PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (100) Put2 -> . PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA
    (95) Put -> . PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA
    (38) variable1 -> . DEF VAR PUNTOCOMA
    (39) variable2 -> . DEF VAR IGUAL NUMERO PUNTOCOMA
    (40) variable2 -> . DEF VAR IGUAL RESTA NUMERO PUNTOCOMA
    (82) funcion -> . Random empty
    (83) funcion -> . If empty
    (84) funcion -> . IfElse empty
    (85) funcion -> . Until empty
    (86) funcion -> . While empty
    (87) funcion -> . PrintLine empty
    (88) funcion -> . And empty
    (89) funcion -> . Or empty
    (90) funcion -> . Add empty
    (91) funcion -> . Put2 empty
    (92) funcion -> . Put empty
    (93) funcion -> . PUNTOCOMA funcion
    (94) funcion -> . empty empty
    (104) expresion_alge1 -> . NUMERO SUMA NUMERO
    (105) expresion_alge1 -> . NUMERO RESTA NUMERO
    (106) expresion_alge1 -> . NUMERO MULTI NUMERO
    (107) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (108) expresion_alge1 -> . RESTA NUMERO SUMA NUMERO
    (109) expresion_alge1 -> . RESTA NUMERO RESTA NUMERO
    (110) expresion_alge1 -> . RESTA NUMERO MULTI NUMERO
    (111) expresion_alge1 -> . RESTA NUMERO DIVISION NUMERO
    (112) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (113) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (114) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (115) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (116) Sum -> . SUM ABRE_P NUMERO COMA NUMERO CIERRA_P
    (117) Sum -> . SUM ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (118) Sum -> . SUM ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (119) Sum -> . SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (120) Sum -> . SUM ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (121) Sum -> . SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (122) Sum -> . SUM ABRE_P NUMERO COMA Var CIERRA_P
    (123) Sum -> . SUM ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (124) Sum -> . SUM ABRE_P Var COMA NUMERO CIERRA_P
    (125) Sum -> . SUM ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (126) Sum -> . SUM ABRE_P Var COMA Var CIERRA_P
    (127) Sum -> . SUM ABRE_P expresion_alge1 COMA Var CIERRA_P
    (128) Sum -> . SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (129) Sum -> . SUM ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (130) Sum -> . SUM ABRE_P Var COMA expresion_alge1 CIERRA_P
    (131) Sum -> . SUM ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P
    (132) Substr -> . SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P
    (133) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (134) Substr -> . SUBSTR ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (135) Substr -> . SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (136) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (137) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (138) Substr -> . SUBSTR ABRE_P NUMERO COMA Var CIERRA_P
    (139) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (140) Substr -> . SUBSTR ABRE_P Var COMA NUMERO CIERRA_P
    (141) Substr -> . SUBSTR ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (142) Substr -> . SUBSTR ABRE_P Var COMA Var CIERRA_P
    (143) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P
    (144) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (145) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (146) Substr -> . SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P
    (147) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P
    (148) Mult -> . MULT ABRE_P NUMERO COMA NUMERO CIERRA_P
    (149) Mult -> . MULT ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (150) Mult -> . MULT ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (151) Mult -> . MULT ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (152) Mult -> . MULT ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (153) Mult -> . MULT ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (154) Mult -> . MULT ABRE_P NUMERO COMA Var CIERRA_P
    (155) Mult -> . MULT ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (156) Mult -> . MULT ABRE_P Var COMA NUMERO CIERRA_P
    (157) Mult -> . MULT ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (158) Mult -> . MULT ABRE_P Var COMA Var CIERRA_P
    (159) Mult -> . MULT ABRE_P expresion_alge1 COMA Var CIERRA_P
    (160) Mult -> . MULT ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (161) Mult -> . MULT ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (162) Mult -> . MULT ABRE_P Var COMA expresion_alge1 CIERRA_P
    (163) Mult -> . MULT ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P
    (164) Div -> . DIV ABRE_P NUMERO COMA NUMERO CIERRA_P
    (165) Div -> . DIV ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (166) Div -> . DIV ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (167) Div -> . DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (168) Div -> . DIV ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (169) Div -> . DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (170) Div -> . DIV ABRE_P NUMERO COMA Var CIERRA_P
    (171) Div -> . DIV ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (172) Div -> . DIV ABRE_P Var COMA NUMERO CIERRA_P
    (173) Div -> . DIV ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (174) Div -> . DIV ABRE_P Var COMA Var CIERRA_P
    (175) Div -> . DIV ABRE_P expresion_alge1 COMA Var CIERRA_P
    (176) Div -> . DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (177) Div -> . DIV ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (178) Div -> . DIV ABRE_P Var COMA expresion_alge1 CIERRA_P
    (179) Div -> . DIV ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P
    (279) Random -> . RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA
    (264) If -> . IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2
    (265) IfElse -> . IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2
    (268) Until -> . UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2
    (266) While -> . WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2
    (337) PrintLine -> . PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA
    (256) And -> . AND ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (257) And -> . AND ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P
    (258) And -> . AND ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P
    (259) And -> . AND ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P
    (260) Or -> . OR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (261) Or -> . OR ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P
    (262) Or -> . OR ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P
    (263) Or -> . OR ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P
    (269) Add -> . ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA
    (270) Add -> . ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (271) Add -> . ADD ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (272) Add -> . ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (273) Add -> . ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (274) Add -> . ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA

  ! shift/reduce conflict for PUT resolved as shift
  ! shift/reduce conflict for PUNTOCOMA resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for ABRE_P resolved as shift
  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for SUBSTR resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for RANDOM resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for IFELSE resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for PRINTLINE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
    COMMENT         shift and go to state 159
    PARA            shift and go to state 155
    FIN             reduce using rule 338 (empty -> .)
    PUT             shift and go to state 96
    DEF             shift and go to state 16
    PUNTOCOMA       shift and go to state 62
    NUMERO          shift and go to state 64
    RESTA           shift and go to state 65
    ABRE_P          shift and go to state 63
    SUM             shift and go to state 70
    SUBSTR          shift and go to state 71
    MULT            shift and go to state 68
    DIV             shift and go to state 69
    RANDOM          shift and go to state 72
    IF              shift and go to state 73
    IFELSE          shift and go to state 74
    UNTIL           shift and go to state 75
    WHILE           shift and go to state 76
    PRINTLINE       shift and go to state 77
    AND             shift and go to state 78
    OR              shift and go to state 79
    ADD             shift and go to state 80

  ! PUNTOCOMA       [ reduce using rule 338 (empty -> .) ]
  ! NUMERO          [ reduce using rule 338 (empty -> .) ]
  ! RESTA           [ reduce using rule 338 (empty -> .) ]
  ! ABRE_P          [ reduce using rule 338 (empty -> .) ]
  ! SUM             [ reduce using rule 338 (empty -> .) ]
  ! SUBSTR          [ reduce using rule 338 (empty -> .) ]
  ! MULT            [ reduce using rule 338 (empty -> .) ]
  ! DIV             [ reduce using rule 338 (empty -> .) ]
  ! RANDOM          [ reduce using rule 338 (empty -> .) ]
  ! IF              [ reduce using rule 338 (empty -> .) ]
  ! IFELSE          [ reduce using rule 338 (empty -> .) ]
  ! UNTIL           [ reduce using rule 338 (empty -> .) ]
  ! WHILE           [ reduce using rule 338 (empty -> .) ]
  ! PRINTLINE       [ reduce using rule 338 (empty -> .) ]
  ! AND             [ reduce using rule 338 (empty -> .) ]
  ! OR              [ reduce using rule 338 (empty -> .) ]
  ! ADD             [ reduce using rule 338 (empty -> .) ]
  ! PUT             [ reduce using rule 338 (empty -> .) ]

    cuerpo2                        shift and go to state 257
    variablexd                     shift and go to state 158
    expresion                      shift and go to state 160
    llamadoproc                    shift and go to state 161
    empty                          shift and go to state 156
    Put2                           shift and go to state 162
    Put                            shift and go to state 163
    variable1                      shift and go to state 164
    variable2                      shift and go to state 165
    funcion                        shift and go to state 91
    expresion_alge1                shift and go to state 47
    expresion_alge2                shift and go to state 48
    Sum                            shift and go to state 49
    Substr                         shift and go to state 50
    Mult                           shift and go to state 51
    Div                            shift and go to state 52
    Random                         shift and go to state 53
    If                             shift and go to state 54
    IfElse                         shift and go to state 55
    Until                          shift and go to state 56
    While                          shift and go to state 57
    PrintLine                      shift and go to state 58
    And                            shift and go to state 59
    Or                             shift and go to state 60
    Add                            shift and go to state 61

state 160

    (10) cuerpo2 -> expresion .

    FIN             reduce using rule 10 (cuerpo2 -> expresion .)


state 161

    (11) cuerpo2 -> llamadoproc .

    FIN             reduce using rule 11 (cuerpo2 -> llamadoproc .)


state 162

    (13) cuerpo2 -> Put2 .
    (91) funcion -> Put2 . empty
    (338) empty -> .

  ! reduce/reduce conflict for FIN resolved using rule 13 (cuerpo2 -> Put2 .)
    FIN             reduce using rule 13 (cuerpo2 -> Put2 .)
    PUNTOCOMA       reduce using rule 338 (empty -> .)
    NUMERO          reduce using rule 338 (empty -> .)
    RESTA           reduce using rule 338 (empty -> .)
    ABRE_P          reduce using rule 338 (empty -> .)
    SUM             reduce using rule 338 (empty -> .)
    SUBSTR          reduce using rule 338 (empty -> .)
    MULT            reduce using rule 338 (empty -> .)
    DIV             reduce using rule 338 (empty -> .)
    RANDOM          reduce using rule 338 (empty -> .)
    IF              reduce using rule 338 (empty -> .)
    IFELSE          reduce using rule 338 (empty -> .)
    UNTIL           reduce using rule 338 (empty -> .)
    WHILE           reduce using rule 338 (empty -> .)
    PRINTLINE       reduce using rule 338 (empty -> .)
    AND             reduce using rule 338 (empty -> .)
    OR              reduce using rule 338 (empty -> .)
    ADD             reduce using rule 338 (empty -> .)
    PUT             reduce using rule 338 (empty -> .)

  ! FIN             [ reduce using rule 338 (empty -> .) ]

    empty                          shift and go to state 99

state 163

    (14) cuerpo2 -> Put .
    (92) funcion -> Put . empty
    (338) empty -> .

  ! reduce/reduce conflict for FIN resolved using rule 14 (cuerpo2 -> Put .)
    FIN             reduce using rule 14 (cuerpo2 -> Put .)
    PUNTOCOMA       reduce using rule 338 (empty -> .)
    NUMERO          reduce using rule 338 (empty -> .)
    RESTA           reduce using rule 338 (empty -> .)
    ABRE_P          reduce using rule 338 (empty -> .)
    SUM             reduce using rule 338 (empty -> .)
    SUBSTR          reduce using rule 338 (empty -> .)
    MULT            reduce using rule 338 (empty -> .)
    DIV             reduce using rule 338 (empty -> .)
    RANDOM          reduce using rule 338 (empty -> .)
    IF              reduce using rule 338 (empty -> .)
    IFELSE          reduce using rule 338 (empty -> .)
    UNTIL           reduce using rule 338 (empty -> .)
    WHILE           reduce using rule 338 (empty -> .)
    PRINTLINE       reduce using rule 338 (empty -> .)
    AND             reduce using rule 338 (empty -> .)
    OR              reduce using rule 338 (empty -> .)
    ADD             reduce using rule 338 (empty -> .)
    PUT             reduce using rule 338 (empty -> .)

  ! FIN             [ reduce using rule 338 (empty -> .) ]

    empty                          shift and go to state 98

state 164

    (32) variablexd -> variable1 . cuerpo2
    (8) cuerpo2 -> . variablexd
    (9) cuerpo2 -> . COMMENT cuerpo2
    (10) cuerpo2 -> . expresion
    (11) cuerpo2 -> . llamadoproc
    (12) cuerpo2 -> . empty
    (13) cuerpo2 -> . Put2
    (14) cuerpo2 -> . Put
    (32) variablexd -> . variable1 cuerpo2
    (33) variablexd -> . variable2 cuerpo2
    (34) variablexd -> . empty empty
    (41) expresion -> . funcion expresion
    (42) expresion -> . expresion_alge1 expresion
    (43) expresion -> . expresion_alge2 expresion
    (44) expresion -> . Sum expresion
    (45) expresion -> . Substr expresion
    (46) expresion -> . Mult expresion
    (47) expresion -> . Div expresion
    (48) expresion -> . funcion empty
    (49) expresion -> . expresion_alge1 empty
    (50) expresion -> . expresion_alge2 empty
    (51) expresion -> . Sum empty
    (52) expresion -> . Substr empty
    (53) expresion -> . Mult empty
    (54) expresion -> . Div empty
    (55) expresion -> . empty empty
    (27) llamadoproc -> . PARA id BRACKET1 parametro BRACKET2 PUNTOCOMA
    (338) empty -> .
    (96) Put2 -> . PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (97) Put2 -> . PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (98) Put2 -> . PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (99) Put2 -> . PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (100) Put2 -> . PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA
    (95) Put -> . PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA
    (38) variable1 -> . DEF VAR PUNTOCOMA
    (39) variable2 -> . DEF VAR IGUAL NUMERO PUNTOCOMA
    (40) variable2 -> . DEF VAR IGUAL RESTA NUMERO PUNTOCOMA
    (82) funcion -> . Random empty
    (83) funcion -> . If empty
    (84) funcion -> . IfElse empty
    (85) funcion -> . Until empty
    (86) funcion -> . While empty
    (87) funcion -> . PrintLine empty
    (88) funcion -> . And empty
    (89) funcion -> . Or empty
    (90) funcion -> . Add empty
    (91) funcion -> . Put2 empty
    (92) funcion -> . Put empty
    (93) funcion -> . PUNTOCOMA funcion
    (94) funcion -> . empty empty
    (104) expresion_alge1 -> . NUMERO SUMA NUMERO
    (105) expresion_alge1 -> . NUMERO RESTA NUMERO
    (106) expresion_alge1 -> . NUMERO MULTI NUMERO
    (107) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (108) expresion_alge1 -> . RESTA NUMERO SUMA NUMERO
    (109) expresion_alge1 -> . RESTA NUMERO RESTA NUMERO
    (110) expresion_alge1 -> . RESTA NUMERO MULTI NUMERO
    (111) expresion_alge1 -> . RESTA NUMERO DIVISION NUMERO
    (112) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (113) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (114) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (115) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (116) Sum -> . SUM ABRE_P NUMERO COMA NUMERO CIERRA_P
    (117) Sum -> . SUM ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (118) Sum -> . SUM ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (119) Sum -> . SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (120) Sum -> . SUM ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (121) Sum -> . SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (122) Sum -> . SUM ABRE_P NUMERO COMA Var CIERRA_P
    (123) Sum -> . SUM ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (124) Sum -> . SUM ABRE_P Var COMA NUMERO CIERRA_P
    (125) Sum -> . SUM ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (126) Sum -> . SUM ABRE_P Var COMA Var CIERRA_P
    (127) Sum -> . SUM ABRE_P expresion_alge1 COMA Var CIERRA_P
    (128) Sum -> . SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (129) Sum -> . SUM ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (130) Sum -> . SUM ABRE_P Var COMA expresion_alge1 CIERRA_P
    (131) Sum -> . SUM ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P
    (132) Substr -> . SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P
    (133) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (134) Substr -> . SUBSTR ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (135) Substr -> . SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (136) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (137) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (138) Substr -> . SUBSTR ABRE_P NUMERO COMA Var CIERRA_P
    (139) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (140) Substr -> . SUBSTR ABRE_P Var COMA NUMERO CIERRA_P
    (141) Substr -> . SUBSTR ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (142) Substr -> . SUBSTR ABRE_P Var COMA Var CIERRA_P
    (143) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P
    (144) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (145) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (146) Substr -> . SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P
    (147) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P
    (148) Mult -> . MULT ABRE_P NUMERO COMA NUMERO CIERRA_P
    (149) Mult -> . MULT ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (150) Mult -> . MULT ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (151) Mult -> . MULT ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (152) Mult -> . MULT ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (153) Mult -> . MULT ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (154) Mult -> . MULT ABRE_P NUMERO COMA Var CIERRA_P
    (155) Mult -> . MULT ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (156) Mult -> . MULT ABRE_P Var COMA NUMERO CIERRA_P
    (157) Mult -> . MULT ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (158) Mult -> . MULT ABRE_P Var COMA Var CIERRA_P
    (159) Mult -> . MULT ABRE_P expresion_alge1 COMA Var CIERRA_P
    (160) Mult -> . MULT ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (161) Mult -> . MULT ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (162) Mult -> . MULT ABRE_P Var COMA expresion_alge1 CIERRA_P
    (163) Mult -> . MULT ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P
    (164) Div -> . DIV ABRE_P NUMERO COMA NUMERO CIERRA_P
    (165) Div -> . DIV ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (166) Div -> . DIV ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (167) Div -> . DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (168) Div -> . DIV ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (169) Div -> . DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (170) Div -> . DIV ABRE_P NUMERO COMA Var CIERRA_P
    (171) Div -> . DIV ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (172) Div -> . DIV ABRE_P Var COMA NUMERO CIERRA_P
    (173) Div -> . DIV ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (174) Div -> . DIV ABRE_P Var COMA Var CIERRA_P
    (175) Div -> . DIV ABRE_P expresion_alge1 COMA Var CIERRA_P
    (176) Div -> . DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (177) Div -> . DIV ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (178) Div -> . DIV ABRE_P Var COMA expresion_alge1 CIERRA_P
    (179) Div -> . DIV ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P
    (279) Random -> . RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA
    (264) If -> . IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2
    (265) IfElse -> . IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2
    (268) Until -> . UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2
    (266) While -> . WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2
    (337) PrintLine -> . PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA
    (256) And -> . AND ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (257) And -> . AND ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P
    (258) And -> . AND ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P
    (259) And -> . AND ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P
    (260) Or -> . OR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (261) Or -> . OR ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P
    (262) Or -> . OR ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P
    (263) Or -> . OR ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P
    (269) Add -> . ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA
    (270) Add -> . ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (271) Add -> . ADD ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (272) Add -> . ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (273) Add -> . ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (274) Add -> . ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA

  ! shift/reduce conflict for PUT resolved as shift
  ! shift/reduce conflict for PUNTOCOMA resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for ABRE_P resolved as shift
  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for SUBSTR resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for RANDOM resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for IFELSE resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for PRINTLINE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
    COMMENT         shift and go to state 159
    PARA            shift and go to state 155
    FIN             reduce using rule 338 (empty -> .)
    PUT             shift and go to state 96
    DEF             shift and go to state 16
    PUNTOCOMA       shift and go to state 62
    NUMERO          shift and go to state 64
    RESTA           shift and go to state 65
    ABRE_P          shift and go to state 63
    SUM             shift and go to state 70
    SUBSTR          shift and go to state 71
    MULT            shift and go to state 68
    DIV             shift and go to state 69
    RANDOM          shift and go to state 72
    IF              shift and go to state 73
    IFELSE          shift and go to state 74
    UNTIL           shift and go to state 75
    WHILE           shift and go to state 76
    PRINTLINE       shift and go to state 77
    AND             shift and go to state 78
    OR              shift and go to state 79
    ADD             shift and go to state 80

  ! PUNTOCOMA       [ reduce using rule 338 (empty -> .) ]
  ! NUMERO          [ reduce using rule 338 (empty -> .) ]
  ! RESTA           [ reduce using rule 338 (empty -> .) ]
  ! ABRE_P          [ reduce using rule 338 (empty -> .) ]
  ! SUM             [ reduce using rule 338 (empty -> .) ]
  ! SUBSTR          [ reduce using rule 338 (empty -> .) ]
  ! MULT            [ reduce using rule 338 (empty -> .) ]
  ! DIV             [ reduce using rule 338 (empty -> .) ]
  ! RANDOM          [ reduce using rule 338 (empty -> .) ]
  ! IF              [ reduce using rule 338 (empty -> .) ]
  ! IFELSE          [ reduce using rule 338 (empty -> .) ]
  ! UNTIL           [ reduce using rule 338 (empty -> .) ]
  ! WHILE           [ reduce using rule 338 (empty -> .) ]
  ! PRINTLINE       [ reduce using rule 338 (empty -> .) ]
  ! AND             [ reduce using rule 338 (empty -> .) ]
  ! OR              [ reduce using rule 338 (empty -> .) ]
  ! ADD             [ reduce using rule 338 (empty -> .) ]
  ! PUT             [ reduce using rule 338 (empty -> .) ]

    variable1                      shift and go to state 164
    cuerpo2                        shift and go to state 258
    variablexd                     shift and go to state 158
    expresion                      shift and go to state 160
    llamadoproc                    shift and go to state 161
    empty                          shift and go to state 156
    Put2                           shift and go to state 162
    Put                            shift and go to state 163
    variable2                      shift and go to state 165
    funcion                        shift and go to state 91
    expresion_alge1                shift and go to state 47
    expresion_alge2                shift and go to state 48
    Sum                            shift and go to state 49
    Substr                         shift and go to state 50
    Mult                           shift and go to state 51
    Div                            shift and go to state 52
    Random                         shift and go to state 53
    If                             shift and go to state 54
    IfElse                         shift and go to state 55
    Until                          shift and go to state 56
    While                          shift and go to state 57
    PrintLine                      shift and go to state 58
    And                            shift and go to state 59
    Or                             shift and go to state 60
    Add                            shift and go to state 61

state 165

    (33) variablexd -> variable2 . cuerpo2
    (8) cuerpo2 -> . variablexd
    (9) cuerpo2 -> . COMMENT cuerpo2
    (10) cuerpo2 -> . expresion
    (11) cuerpo2 -> . llamadoproc
    (12) cuerpo2 -> . empty
    (13) cuerpo2 -> . Put2
    (14) cuerpo2 -> . Put
    (32) variablexd -> . variable1 cuerpo2
    (33) variablexd -> . variable2 cuerpo2
    (34) variablexd -> . empty empty
    (41) expresion -> . funcion expresion
    (42) expresion -> . expresion_alge1 expresion
    (43) expresion -> . expresion_alge2 expresion
    (44) expresion -> . Sum expresion
    (45) expresion -> . Substr expresion
    (46) expresion -> . Mult expresion
    (47) expresion -> . Div expresion
    (48) expresion -> . funcion empty
    (49) expresion -> . expresion_alge1 empty
    (50) expresion -> . expresion_alge2 empty
    (51) expresion -> . Sum empty
    (52) expresion -> . Substr empty
    (53) expresion -> . Mult empty
    (54) expresion -> . Div empty
    (55) expresion -> . empty empty
    (27) llamadoproc -> . PARA id BRACKET1 parametro BRACKET2 PUNTOCOMA
    (338) empty -> .
    (96) Put2 -> . PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (97) Put2 -> . PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (98) Put2 -> . PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (99) Put2 -> . PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (100) Put2 -> . PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA
    (95) Put -> . PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA
    (38) variable1 -> . DEF VAR PUNTOCOMA
    (39) variable2 -> . DEF VAR IGUAL NUMERO PUNTOCOMA
    (40) variable2 -> . DEF VAR IGUAL RESTA NUMERO PUNTOCOMA
    (82) funcion -> . Random empty
    (83) funcion -> . If empty
    (84) funcion -> . IfElse empty
    (85) funcion -> . Until empty
    (86) funcion -> . While empty
    (87) funcion -> . PrintLine empty
    (88) funcion -> . And empty
    (89) funcion -> . Or empty
    (90) funcion -> . Add empty
    (91) funcion -> . Put2 empty
    (92) funcion -> . Put empty
    (93) funcion -> . PUNTOCOMA funcion
    (94) funcion -> . empty empty
    (104) expresion_alge1 -> . NUMERO SUMA NUMERO
    (105) expresion_alge1 -> . NUMERO RESTA NUMERO
    (106) expresion_alge1 -> . NUMERO MULTI NUMERO
    (107) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (108) expresion_alge1 -> . RESTA NUMERO SUMA NUMERO
    (109) expresion_alge1 -> . RESTA NUMERO RESTA NUMERO
    (110) expresion_alge1 -> . RESTA NUMERO MULTI NUMERO
    (111) expresion_alge1 -> . RESTA NUMERO DIVISION NUMERO
    (112) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (113) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (114) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (115) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (116) Sum -> . SUM ABRE_P NUMERO COMA NUMERO CIERRA_P
    (117) Sum -> . SUM ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (118) Sum -> . SUM ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (119) Sum -> . SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (120) Sum -> . SUM ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (121) Sum -> . SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (122) Sum -> . SUM ABRE_P NUMERO COMA Var CIERRA_P
    (123) Sum -> . SUM ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (124) Sum -> . SUM ABRE_P Var COMA NUMERO CIERRA_P
    (125) Sum -> . SUM ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (126) Sum -> . SUM ABRE_P Var COMA Var CIERRA_P
    (127) Sum -> . SUM ABRE_P expresion_alge1 COMA Var CIERRA_P
    (128) Sum -> . SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (129) Sum -> . SUM ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (130) Sum -> . SUM ABRE_P Var COMA expresion_alge1 CIERRA_P
    (131) Sum -> . SUM ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P
    (132) Substr -> . SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P
    (133) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (134) Substr -> . SUBSTR ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (135) Substr -> . SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (136) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (137) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (138) Substr -> . SUBSTR ABRE_P NUMERO COMA Var CIERRA_P
    (139) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (140) Substr -> . SUBSTR ABRE_P Var COMA NUMERO CIERRA_P
    (141) Substr -> . SUBSTR ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (142) Substr -> . SUBSTR ABRE_P Var COMA Var CIERRA_P
    (143) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P
    (144) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (145) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (146) Substr -> . SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P
    (147) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P
    (148) Mult -> . MULT ABRE_P NUMERO COMA NUMERO CIERRA_P
    (149) Mult -> . MULT ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (150) Mult -> . MULT ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (151) Mult -> . MULT ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (152) Mult -> . MULT ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (153) Mult -> . MULT ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (154) Mult -> . MULT ABRE_P NUMERO COMA Var CIERRA_P
    (155) Mult -> . MULT ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (156) Mult -> . MULT ABRE_P Var COMA NUMERO CIERRA_P
    (157) Mult -> . MULT ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (158) Mult -> . MULT ABRE_P Var COMA Var CIERRA_P
    (159) Mult -> . MULT ABRE_P expresion_alge1 COMA Var CIERRA_P
    (160) Mult -> . MULT ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (161) Mult -> . MULT ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (162) Mult -> . MULT ABRE_P Var COMA expresion_alge1 CIERRA_P
    (163) Mult -> . MULT ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P
    (164) Div -> . DIV ABRE_P NUMERO COMA NUMERO CIERRA_P
    (165) Div -> . DIV ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (166) Div -> . DIV ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (167) Div -> . DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (168) Div -> . DIV ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (169) Div -> . DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (170) Div -> . DIV ABRE_P NUMERO COMA Var CIERRA_P
    (171) Div -> . DIV ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (172) Div -> . DIV ABRE_P Var COMA NUMERO CIERRA_P
    (173) Div -> . DIV ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (174) Div -> . DIV ABRE_P Var COMA Var CIERRA_P
    (175) Div -> . DIV ABRE_P expresion_alge1 COMA Var CIERRA_P
    (176) Div -> . DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (177) Div -> . DIV ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (178) Div -> . DIV ABRE_P Var COMA expresion_alge1 CIERRA_P
    (179) Div -> . DIV ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P
    (279) Random -> . RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA
    (264) If -> . IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2
    (265) IfElse -> . IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2
    (268) Until -> . UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2
    (266) While -> . WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2
    (337) PrintLine -> . PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA
    (256) And -> . AND ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (257) And -> . AND ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P
    (258) And -> . AND ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P
    (259) And -> . AND ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P
    (260) Or -> . OR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (261) Or -> . OR ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P
    (262) Or -> . OR ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P
    (263) Or -> . OR ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P
    (269) Add -> . ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA
    (270) Add -> . ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (271) Add -> . ADD ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (272) Add -> . ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (273) Add -> . ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (274) Add -> . ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA

  ! shift/reduce conflict for PUT resolved as shift
  ! shift/reduce conflict for PUNTOCOMA resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for ABRE_P resolved as shift
  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for SUBSTR resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for RANDOM resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for IFELSE resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for PRINTLINE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
    COMMENT         shift and go to state 159
    PARA            shift and go to state 155
    FIN             reduce using rule 338 (empty -> .)
    PUT             shift and go to state 96
    DEF             shift and go to state 16
    PUNTOCOMA       shift and go to state 62
    NUMERO          shift and go to state 64
    RESTA           shift and go to state 65
    ABRE_P          shift and go to state 63
    SUM             shift and go to state 70
    SUBSTR          shift and go to state 71
    MULT            shift and go to state 68
    DIV             shift and go to state 69
    RANDOM          shift and go to state 72
    IF              shift and go to state 73
    IFELSE          shift and go to state 74
    UNTIL           shift and go to state 75
    WHILE           shift and go to state 76
    PRINTLINE       shift and go to state 77
    AND             shift and go to state 78
    OR              shift and go to state 79
    ADD             shift and go to state 80

  ! PUNTOCOMA       [ reduce using rule 338 (empty -> .) ]
  ! NUMERO          [ reduce using rule 338 (empty -> .) ]
  ! RESTA           [ reduce using rule 338 (empty -> .) ]
  ! ABRE_P          [ reduce using rule 338 (empty -> .) ]
  ! SUM             [ reduce using rule 338 (empty -> .) ]
  ! SUBSTR          [ reduce using rule 338 (empty -> .) ]
  ! MULT            [ reduce using rule 338 (empty -> .) ]
  ! DIV             [ reduce using rule 338 (empty -> .) ]
  ! RANDOM          [ reduce using rule 338 (empty -> .) ]
  ! IF              [ reduce using rule 338 (empty -> .) ]
  ! IFELSE          [ reduce using rule 338 (empty -> .) ]
  ! UNTIL           [ reduce using rule 338 (empty -> .) ]
  ! WHILE           [ reduce using rule 338 (empty -> .) ]
  ! PRINTLINE       [ reduce using rule 338 (empty -> .) ]
  ! AND             [ reduce using rule 338 (empty -> .) ]
  ! OR              [ reduce using rule 338 (empty -> .) ]
  ! ADD             [ reduce using rule 338 (empty -> .) ]
  ! PUT             [ reduce using rule 338 (empty -> .) ]

    variable2                      shift and go to state 165
    cuerpo2                        shift and go to state 259
    variablexd                     shift and go to state 158
    expresion                      shift and go to state 160
    llamadoproc                    shift and go to state 161
    empty                          shift and go to state 156
    Put2                           shift and go to state 162
    Put                            shift and go to state 163
    variable1                      shift and go to state 164
    funcion                        shift and go to state 91
    expresion_alge1                shift and go to state 47
    expresion_alge2                shift and go to state 48
    Sum                            shift and go to state 49
    Substr                         shift and go to state 50
    Mult                           shift and go to state 51
    Div                            shift and go to state 52
    Random                         shift and go to state 53
    If                             shift and go to state 54
    IfElse                         shift and go to state 55
    Until                          shift and go to state 56
    While                          shift and go to state 57
    PrintLine                      shift and go to state 58
    And                            shift and go to state 59
    Or                             shift and go to state 60
    Add                            shift and go to state 61

state 166

    (26) procedimiento -> PARA id BRACKET1 parametro BRACKET2 cuerpo2 . FIN cuerpo

    FIN             shift and go to state 260


state 167

    (275) parametro -> Var COMA parametro .

    BRACKET2        reduce using rule 275 (parametro -> Var COMA parametro .)


state 168

    (277) parametro -> empty . empty empty
    (338) empty -> .

    BRACKET2        reduce using rule 338 (empty -> .)

    empty                          shift and go to state 84

state 169

    (276) parametro -> Var empty empty .

    BRACKET2        reduce using rule 276 (parametro -> Var empty empty .)


state 170

    (28) main -> MAIN BRACKET1 BRACKET2 cuerpo3 FIN cuerpo .

    $end            reduce using rule 28 (main -> MAIN BRACKET1 BRACKET2 cuerpo3 FIN cuerpo .)


state 171

    (55) expresion -> empty empty .
    (94) funcion -> empty empty .

  ! reduce/reduce conflict for FIN resolved using rule 55 (expresion -> empty empty .)
    FIN             reduce using rule 55 (expresion -> empty empty .)
    PUNTOCOMA       reduce using rule 94 (funcion -> empty empty .)
    NUMERO          reduce using rule 94 (funcion -> empty empty .)
    RESTA           reduce using rule 94 (funcion -> empty empty .)
    ABRE_P          reduce using rule 94 (funcion -> empty empty .)
    SUM             reduce using rule 94 (funcion -> empty empty .)
    SUBSTR          reduce using rule 94 (funcion -> empty empty .)
    MULT            reduce using rule 94 (funcion -> empty empty .)
    DIV             reduce using rule 94 (funcion -> empty empty .)
    RANDOM          reduce using rule 94 (funcion -> empty empty .)
    IF              reduce using rule 94 (funcion -> empty empty .)
    IFELSE          reduce using rule 94 (funcion -> empty empty .)
    UNTIL           reduce using rule 94 (funcion -> empty empty .)
    WHILE           reduce using rule 94 (funcion -> empty empty .)
    PRINTLINE       reduce using rule 94 (funcion -> empty empty .)
    AND             reduce using rule 94 (funcion -> empty empty .)
    OR              reduce using rule 94 (funcion -> empty empty .)
    ADD             reduce using rule 94 (funcion -> empty empty .)
    PUT             reduce using rule 94 (funcion -> empty empty .)

  ! FIN             [ reduce using rule 94 (funcion -> empty empty .) ]


state 172

    (96) Put2 -> PUT ABRE_P . VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (97) Put2 -> PUT ABRE_P . VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (98) Put2 -> PUT ABRE_P . VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (99) Put2 -> PUT ABRE_P . VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (100) Put2 -> PUT ABRE_P . VAR COMA funcion CIERRA_P PUNTOCOMA
    (95) Put -> PUT ABRE_P . VAR COMA VAR CIERRA_P PUNTOCOMA

    VAR             shift and go to state 261


state 173

    (94) funcion -> empty empty .

    PUNTOCOMA       reduce using rule 94 (funcion -> empty empty .)
    NUMERO          reduce using rule 94 (funcion -> empty empty .)
    RESTA           reduce using rule 94 (funcion -> empty empty .)
    ABRE_P          reduce using rule 94 (funcion -> empty empty .)
    SUM             reduce using rule 94 (funcion -> empty empty .)
    SUBSTR          reduce using rule 94 (funcion -> empty empty .)
    MULT            reduce using rule 94 (funcion -> empty empty .)
    DIV             reduce using rule 94 (funcion -> empty empty .)
    RANDOM          reduce using rule 94 (funcion -> empty empty .)
    IF              reduce using rule 94 (funcion -> empty empty .)
    IFELSE          reduce using rule 94 (funcion -> empty empty .)
    UNTIL           reduce using rule 94 (funcion -> empty empty .)
    WHILE           reduce using rule 94 (funcion -> empty empty .)
    PRINTLINE       reduce using rule 94 (funcion -> empty empty .)
    AND             reduce using rule 94 (funcion -> empty empty .)
    OR              reduce using rule 94 (funcion -> empty empty .)
    ADD             reduce using rule 94 (funcion -> empty empty .)
    PUT             reduce using rule 94 (funcion -> empty empty .)
    FIN             reduce using rule 94 (funcion -> empty empty .)
    CIERRA_P        reduce using rule 94 (funcion -> empty empty .)
    BRACKET2        reduce using rule 94 (funcion -> empty empty .)


state 174

    (112) expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P . SUMA ABRE_P expresion_alge1 CIERRA_P
    (113) expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P . RESTA ABRE_P expresion_alge1 CIERRA_P
    (114) expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P . MULT ABRE_P expresion_alge1 CIERRA_P
    (115) expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P . DIV ABRE_P expresion_alge1 CIERRA_P

    SUMA            shift and go to state 262
    RESTA           shift and go to state 263
    MULT            shift and go to state 264
    DIV             shift and go to state 265


state 175

    (104) expresion_alge1 -> NUMERO SUMA NUMERO .

    PUNTOCOMA       reduce using rule 104 (expresion_alge1 -> NUMERO SUMA NUMERO .)
    NUMERO          reduce using rule 104 (expresion_alge1 -> NUMERO SUMA NUMERO .)
    RESTA           reduce using rule 104 (expresion_alge1 -> NUMERO SUMA NUMERO .)
    ABRE_P          reduce using rule 104 (expresion_alge1 -> NUMERO SUMA NUMERO .)
    SUM             reduce using rule 104 (expresion_alge1 -> NUMERO SUMA NUMERO .)
    SUBSTR          reduce using rule 104 (expresion_alge1 -> NUMERO SUMA NUMERO .)
    MULT            reduce using rule 104 (expresion_alge1 -> NUMERO SUMA NUMERO .)
    DIV             reduce using rule 104 (expresion_alge1 -> NUMERO SUMA NUMERO .)
    RANDOM          reduce using rule 104 (expresion_alge1 -> NUMERO SUMA NUMERO .)
    IF              reduce using rule 104 (expresion_alge1 -> NUMERO SUMA NUMERO .)
    IFELSE          reduce using rule 104 (expresion_alge1 -> NUMERO SUMA NUMERO .)
    UNTIL           reduce using rule 104 (expresion_alge1 -> NUMERO SUMA NUMERO .)
    WHILE           reduce using rule 104 (expresion_alge1 -> NUMERO SUMA NUMERO .)
    PRINTLINE       reduce using rule 104 (expresion_alge1 -> NUMERO SUMA NUMERO .)
    AND             reduce using rule 104 (expresion_alge1 -> NUMERO SUMA NUMERO .)
    OR              reduce using rule 104 (expresion_alge1 -> NUMERO SUMA NUMERO .)
    ADD             reduce using rule 104 (expresion_alge1 -> NUMERO SUMA NUMERO .)
    PUT             reduce using rule 104 (expresion_alge1 -> NUMERO SUMA NUMERO .)
    FIN             reduce using rule 104 (expresion_alge1 -> NUMERO SUMA NUMERO .)
    CIERRA_P        reduce using rule 104 (expresion_alge1 -> NUMERO SUMA NUMERO .)
    COMA            reduce using rule 104 (expresion_alge1 -> NUMERO SUMA NUMERO .)


state 176

    (105) expresion_alge1 -> NUMERO RESTA NUMERO .

    PUNTOCOMA       reduce using rule 105 (expresion_alge1 -> NUMERO RESTA NUMERO .)
    NUMERO          reduce using rule 105 (expresion_alge1 -> NUMERO RESTA NUMERO .)
    RESTA           reduce using rule 105 (expresion_alge1 -> NUMERO RESTA NUMERO .)
    ABRE_P          reduce using rule 105 (expresion_alge1 -> NUMERO RESTA NUMERO .)
    SUM             reduce using rule 105 (expresion_alge1 -> NUMERO RESTA NUMERO .)
    SUBSTR          reduce using rule 105 (expresion_alge1 -> NUMERO RESTA NUMERO .)
    MULT            reduce using rule 105 (expresion_alge1 -> NUMERO RESTA NUMERO .)
    DIV             reduce using rule 105 (expresion_alge1 -> NUMERO RESTA NUMERO .)
    RANDOM          reduce using rule 105 (expresion_alge1 -> NUMERO RESTA NUMERO .)
    IF              reduce using rule 105 (expresion_alge1 -> NUMERO RESTA NUMERO .)
    IFELSE          reduce using rule 105 (expresion_alge1 -> NUMERO RESTA NUMERO .)
    UNTIL           reduce using rule 105 (expresion_alge1 -> NUMERO RESTA NUMERO .)
    WHILE           reduce using rule 105 (expresion_alge1 -> NUMERO RESTA NUMERO .)
    PRINTLINE       reduce using rule 105 (expresion_alge1 -> NUMERO RESTA NUMERO .)
    AND             reduce using rule 105 (expresion_alge1 -> NUMERO RESTA NUMERO .)
    OR              reduce using rule 105 (expresion_alge1 -> NUMERO RESTA NUMERO .)
    ADD             reduce using rule 105 (expresion_alge1 -> NUMERO RESTA NUMERO .)
    PUT             reduce using rule 105 (expresion_alge1 -> NUMERO RESTA NUMERO .)
    FIN             reduce using rule 105 (expresion_alge1 -> NUMERO RESTA NUMERO .)
    CIERRA_P        reduce using rule 105 (expresion_alge1 -> NUMERO RESTA NUMERO .)
    COMA            reduce using rule 105 (expresion_alge1 -> NUMERO RESTA NUMERO .)


state 177

    (106) expresion_alge1 -> NUMERO MULTI NUMERO .

    PUNTOCOMA       reduce using rule 106 (expresion_alge1 -> NUMERO MULTI NUMERO .)
    NUMERO          reduce using rule 106 (expresion_alge1 -> NUMERO MULTI NUMERO .)
    RESTA           reduce using rule 106 (expresion_alge1 -> NUMERO MULTI NUMERO .)
    ABRE_P          reduce using rule 106 (expresion_alge1 -> NUMERO MULTI NUMERO .)
    SUM             reduce using rule 106 (expresion_alge1 -> NUMERO MULTI NUMERO .)
    SUBSTR          reduce using rule 106 (expresion_alge1 -> NUMERO MULTI NUMERO .)
    MULT            reduce using rule 106 (expresion_alge1 -> NUMERO MULTI NUMERO .)
    DIV             reduce using rule 106 (expresion_alge1 -> NUMERO MULTI NUMERO .)
    RANDOM          reduce using rule 106 (expresion_alge1 -> NUMERO MULTI NUMERO .)
    IF              reduce using rule 106 (expresion_alge1 -> NUMERO MULTI NUMERO .)
    IFELSE          reduce using rule 106 (expresion_alge1 -> NUMERO MULTI NUMERO .)
    UNTIL           reduce using rule 106 (expresion_alge1 -> NUMERO MULTI NUMERO .)
    WHILE           reduce using rule 106 (expresion_alge1 -> NUMERO MULTI NUMERO .)
    PRINTLINE       reduce using rule 106 (expresion_alge1 -> NUMERO MULTI NUMERO .)
    AND             reduce using rule 106 (expresion_alge1 -> NUMERO MULTI NUMERO .)
    OR              reduce using rule 106 (expresion_alge1 -> NUMERO MULTI NUMERO .)
    ADD             reduce using rule 106 (expresion_alge1 -> NUMERO MULTI NUMERO .)
    PUT             reduce using rule 106 (expresion_alge1 -> NUMERO MULTI NUMERO .)
    FIN             reduce using rule 106 (expresion_alge1 -> NUMERO MULTI NUMERO .)
    CIERRA_P        reduce using rule 106 (expresion_alge1 -> NUMERO MULTI NUMERO .)
    COMA            reduce using rule 106 (expresion_alge1 -> NUMERO MULTI NUMERO .)


state 178

    (107) expresion_alge1 -> NUMERO DIVISION NUMERO .

    PUNTOCOMA       reduce using rule 107 (expresion_alge1 -> NUMERO DIVISION NUMERO .)
    NUMERO          reduce using rule 107 (expresion_alge1 -> NUMERO DIVISION NUMERO .)
    RESTA           reduce using rule 107 (expresion_alge1 -> NUMERO DIVISION NUMERO .)
    ABRE_P          reduce using rule 107 (expresion_alge1 -> NUMERO DIVISION NUMERO .)
    SUM             reduce using rule 107 (expresion_alge1 -> NUMERO DIVISION NUMERO .)
    SUBSTR          reduce using rule 107 (expresion_alge1 -> NUMERO DIVISION NUMERO .)
    MULT            reduce using rule 107 (expresion_alge1 -> NUMERO DIVISION NUMERO .)
    DIV             reduce using rule 107 (expresion_alge1 -> NUMERO DIVISION NUMERO .)
    RANDOM          reduce using rule 107 (expresion_alge1 -> NUMERO DIVISION NUMERO .)
    IF              reduce using rule 107 (expresion_alge1 -> NUMERO DIVISION NUMERO .)
    IFELSE          reduce using rule 107 (expresion_alge1 -> NUMERO DIVISION NUMERO .)
    UNTIL           reduce using rule 107 (expresion_alge1 -> NUMERO DIVISION NUMERO .)
    WHILE           reduce using rule 107 (expresion_alge1 -> NUMERO DIVISION NUMERO .)
    PRINTLINE       reduce using rule 107 (expresion_alge1 -> NUMERO DIVISION NUMERO .)
    AND             reduce using rule 107 (expresion_alge1 -> NUMERO DIVISION NUMERO .)
    OR              reduce using rule 107 (expresion_alge1 -> NUMERO DIVISION NUMERO .)
    ADD             reduce using rule 107 (expresion_alge1 -> NUMERO DIVISION NUMERO .)
    PUT             reduce using rule 107 (expresion_alge1 -> NUMERO DIVISION NUMERO .)
    FIN             reduce using rule 107 (expresion_alge1 -> NUMERO DIVISION NUMERO .)
    CIERRA_P        reduce using rule 107 (expresion_alge1 -> NUMERO DIVISION NUMERO .)
    COMA            reduce using rule 107 (expresion_alge1 -> NUMERO DIVISION NUMERO .)


state 179

    (109) expresion_alge1 -> RESTA NUMERO RESTA . NUMERO

    NUMERO          shift and go to state 266


state 180

    (108) expresion_alge1 -> RESTA NUMERO SUMA . NUMERO

    NUMERO          shift and go to state 267


state 181

    (110) expresion_alge1 -> RESTA NUMERO MULTI . NUMERO

    NUMERO          shift and go to state 268


state 182

    (111) expresion_alge1 -> RESTA NUMERO DIVISION . NUMERO

    NUMERO          shift and go to state 269


state 183

    (328) Run -> RUN BRACKET1 ordenes . BRACKET2 PUNTOCOMA cuerpo3

    BRACKET2        shift and go to state 270


state 184

    (56) ordenes -> Beginning . empty
    (69) ordenes -> Beginning . ordenes
    (338) empty -> .
    (56) ordenes -> . Beginning empty
    (57) ordenes -> . ContinueUp empty
    (58) ordenes -> . ContinueDown empty
    (59) ordenes -> . ContinueRight empty
    (60) ordenes -> . ContinueLeft empty
    (61) ordenes -> . Up empty
    (62) ordenes -> . Down empty
    (63) ordenes -> . Speed empty
    (64) ordenes -> . Diag empty
    (65) ordenes -> . Pos empty
    (66) ordenes -> . PosX empty
    (67) ordenes -> . PosY empty
    (68) ordenes -> . UseColor empty
    (69) ordenes -> . Beginning ordenes
    (70) ordenes -> . ContinueUp ordenes
    (71) ordenes -> . ContinueDown ordenes
    (72) ordenes -> . ContinueRight ordenes
    (73) ordenes -> . ContinueLeft ordenes
    (74) ordenes -> . Up ordenes
    (75) ordenes -> . Down ordenes
    (76) ordenes -> . Speed ordenes
    (77) ordenes -> . Diag ordenes
    (78) ordenes -> . Pos ordenes
    (79) ordenes -> . PosX ordenes
    (80) ordenes -> . PosY ordenes
    (81) ordenes -> . UseColor ordenes
    (278) Beginning -> . BEGINNING PUNTOCOMA
    (280) ContinueUp -> . CONTINUEUP NUMERO PUNTOCOMA
    (281) ContinueUp -> . CONTINUEUP expresion_alge1 PUNTOCOMA
    (282) ContinueUp -> . CONTINUEUP expresion_alge2 PUNTOCOMA
    (283) ContinueUp -> . CONTINUEUP Var PUNTOCOMA
    (284) ContinueDown -> . CONTINUEDOWN NUMERO PUNTOCOMA
    (285) ContinueDown -> . CONTINUEDOWN expresion_alge1 PUNTOCOMA
    (286) ContinueDown -> . CONTINUEDOWN expresion_alge2 PUNTOCOMA
    (287) ContinueDown -> . CONTINUEDOWN Var PUNTOCOMA
    (288) ContinueRight -> . CONTINUERIGHT NUMERO PUNTOCOMA
    (289) ContinueRight -> . CONTINUERIGHT expresion_alge1 PUNTOCOMA
    (290) ContinueRight -> . CONTINUERIGHT expresion_alge2 PUNTOCOMA
    (291) ContinueRight -> . CONTINUERIGHT Var PUNTOCOMA
    (292) ContinueLeft -> . CONTINUELEFT NUMERO PUNTOCOMA
    (293) ContinueLeft -> . CONTINUELEFT expresion_alge1 PUNTOCOMA
    (294) ContinueLeft -> . CONTINUELEFT expresion_alge2 PUNTOCOMA
    (295) ContinueLeft -> . CONTINUELEFT Var PUNTOCOMA
    (296) Up -> . UP PUNTOCOMA
    (297) Down -> . DOWN PUNTOCOMA
    (298) Speed -> . SPEED NUMERO PUNTOCOMA
    (299) Diag -> . POS ABRE_P STRING COMA NUMERO CIERRA_P PUNTOCOMA
    (300) Pos -> . POS ABRE_P NUMERO COMA NUMERO CIERRA_P
    (301) Pos -> . POS ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (302) Pos -> . POS ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (303) Pos -> . POS ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (304) Pos -> . POS ABRE_P Var COMA NUMERO CIERRA_P
    (305) Pos -> . POS ABRE_P NUMERO COMA Var CIERRA_P
    (306) Pos -> . POS ABRE_P Var COMA Var CIERRA_P
    (307) Pos -> . POS ABRE_P expresion_alge1 COMA Var CIERRA_P
    (308) Pos -> . POS ABRE_P Var COMA expresion_alge1 CIERRA_P
    (309) Pos -> . POS ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P
    (310) Pos -> . POS ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (311) Pos -> . POS ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (312) Pos -> . POS ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (313) Pos -> . POS ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (314) Pos -> . POS ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (315) Pos -> . POS ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (316) PosX -> . POSX NUMERO PUNTOCOMA
    (317) PosX -> . POSX RESTA NUMERO PUNTOCOMA
    (318) PosX -> . POSX expresion_alge1 PUNTOCOMA
    (319) PosX -> . POSX expresion_alge2 PUNTOCOMA
    (320) PosX -> . POSX Var PUNTOCOMA
    (321) PosY -> . POSY NUMERO PUNTOCOMA
    (322) PosY -> . POSY RESTA NUMERO PUNTOCOMA
    (323) PosY -> . POSY expresion_alge1 PUNTOCOMA
    (324) PosY -> . POSY expresion_alge2 PUNTOCOMA
    (325) PosY -> . POSY Var PUNTOCOMA
    (326) UseColor -> . USECOLOR NUMERO PUNTOCOMA
    (327) UseColor -> . USECOLOR empty PUNTOCOMA

    BRACKET2        reduce using rule 338 (empty -> .)
    BEGINNING       shift and go to state 197
    CONTINUEUP      shift and go to state 198
    CONTINUEDOWN    shift and go to state 199
    CONTINUERIGHT   shift and go to state 200
    CONTINUELEFT    shift and go to state 201
    UP              shift and go to state 202
    DOWN            shift and go to state 203
    SPEED           shift and go to state 204
    POS             shift and go to state 205
    POSX            shift and go to state 206
    POSY            shift and go to state 207
    USECOLOR        shift and go to state 208

    Beginning                      shift and go to state 184
    empty                          shift and go to state 271
    ordenes                        shift and go to state 272
    ContinueUp                     shift and go to state 185
    ContinueDown                   shift and go to state 186
    ContinueRight                  shift and go to state 187
    ContinueLeft                   shift and go to state 188
    Up                             shift and go to state 189
    Down                           shift and go to state 190
    Speed                          shift and go to state 191
    Diag                           shift and go to state 192
    Pos                            shift and go to state 193
    PosX                           shift and go to state 194
    PosY                           shift and go to state 195
    UseColor                       shift and go to state 196

state 185

    (57) ordenes -> ContinueUp . empty
    (70) ordenes -> ContinueUp . ordenes
    (338) empty -> .
    (56) ordenes -> . Beginning empty
    (57) ordenes -> . ContinueUp empty
    (58) ordenes -> . ContinueDown empty
    (59) ordenes -> . ContinueRight empty
    (60) ordenes -> . ContinueLeft empty
    (61) ordenes -> . Up empty
    (62) ordenes -> . Down empty
    (63) ordenes -> . Speed empty
    (64) ordenes -> . Diag empty
    (65) ordenes -> . Pos empty
    (66) ordenes -> . PosX empty
    (67) ordenes -> . PosY empty
    (68) ordenes -> . UseColor empty
    (69) ordenes -> . Beginning ordenes
    (70) ordenes -> . ContinueUp ordenes
    (71) ordenes -> . ContinueDown ordenes
    (72) ordenes -> . ContinueRight ordenes
    (73) ordenes -> . ContinueLeft ordenes
    (74) ordenes -> . Up ordenes
    (75) ordenes -> . Down ordenes
    (76) ordenes -> . Speed ordenes
    (77) ordenes -> . Diag ordenes
    (78) ordenes -> . Pos ordenes
    (79) ordenes -> . PosX ordenes
    (80) ordenes -> . PosY ordenes
    (81) ordenes -> . UseColor ordenes
    (278) Beginning -> . BEGINNING PUNTOCOMA
    (280) ContinueUp -> . CONTINUEUP NUMERO PUNTOCOMA
    (281) ContinueUp -> . CONTINUEUP expresion_alge1 PUNTOCOMA
    (282) ContinueUp -> . CONTINUEUP expresion_alge2 PUNTOCOMA
    (283) ContinueUp -> . CONTINUEUP Var PUNTOCOMA
    (284) ContinueDown -> . CONTINUEDOWN NUMERO PUNTOCOMA
    (285) ContinueDown -> . CONTINUEDOWN expresion_alge1 PUNTOCOMA
    (286) ContinueDown -> . CONTINUEDOWN expresion_alge2 PUNTOCOMA
    (287) ContinueDown -> . CONTINUEDOWN Var PUNTOCOMA
    (288) ContinueRight -> . CONTINUERIGHT NUMERO PUNTOCOMA
    (289) ContinueRight -> . CONTINUERIGHT expresion_alge1 PUNTOCOMA
    (290) ContinueRight -> . CONTINUERIGHT expresion_alge2 PUNTOCOMA
    (291) ContinueRight -> . CONTINUERIGHT Var PUNTOCOMA
    (292) ContinueLeft -> . CONTINUELEFT NUMERO PUNTOCOMA
    (293) ContinueLeft -> . CONTINUELEFT expresion_alge1 PUNTOCOMA
    (294) ContinueLeft -> . CONTINUELEFT expresion_alge2 PUNTOCOMA
    (295) ContinueLeft -> . CONTINUELEFT Var PUNTOCOMA
    (296) Up -> . UP PUNTOCOMA
    (297) Down -> . DOWN PUNTOCOMA
    (298) Speed -> . SPEED NUMERO PUNTOCOMA
    (299) Diag -> . POS ABRE_P STRING COMA NUMERO CIERRA_P PUNTOCOMA
    (300) Pos -> . POS ABRE_P NUMERO COMA NUMERO CIERRA_P
    (301) Pos -> . POS ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (302) Pos -> . POS ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (303) Pos -> . POS ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (304) Pos -> . POS ABRE_P Var COMA NUMERO CIERRA_P
    (305) Pos -> . POS ABRE_P NUMERO COMA Var CIERRA_P
    (306) Pos -> . POS ABRE_P Var COMA Var CIERRA_P
    (307) Pos -> . POS ABRE_P expresion_alge1 COMA Var CIERRA_P
    (308) Pos -> . POS ABRE_P Var COMA expresion_alge1 CIERRA_P
    (309) Pos -> . POS ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P
    (310) Pos -> . POS ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (311) Pos -> . POS ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (312) Pos -> . POS ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (313) Pos -> . POS ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (314) Pos -> . POS ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (315) Pos -> . POS ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (316) PosX -> . POSX NUMERO PUNTOCOMA
    (317) PosX -> . POSX RESTA NUMERO PUNTOCOMA
    (318) PosX -> . POSX expresion_alge1 PUNTOCOMA
    (319) PosX -> . POSX expresion_alge2 PUNTOCOMA
    (320) PosX -> . POSX Var PUNTOCOMA
    (321) PosY -> . POSY NUMERO PUNTOCOMA
    (322) PosY -> . POSY RESTA NUMERO PUNTOCOMA
    (323) PosY -> . POSY expresion_alge1 PUNTOCOMA
    (324) PosY -> . POSY expresion_alge2 PUNTOCOMA
    (325) PosY -> . POSY Var PUNTOCOMA
    (326) UseColor -> . USECOLOR NUMERO PUNTOCOMA
    (327) UseColor -> . USECOLOR empty PUNTOCOMA

    BRACKET2        reduce using rule 338 (empty -> .)
    BEGINNING       shift and go to state 197
    CONTINUEUP      shift and go to state 198
    CONTINUEDOWN    shift and go to state 199
    CONTINUERIGHT   shift and go to state 200
    CONTINUELEFT    shift and go to state 201
    UP              shift and go to state 202
    DOWN            shift and go to state 203
    SPEED           shift and go to state 204
    POS             shift and go to state 205
    POSX            shift and go to state 206
    POSY            shift and go to state 207
    USECOLOR        shift and go to state 208

    ContinueUp                     shift and go to state 185
    empty                          shift and go to state 273
    ordenes                        shift and go to state 274
    Beginning                      shift and go to state 184
    ContinueDown                   shift and go to state 186
    ContinueRight                  shift and go to state 187
    ContinueLeft                   shift and go to state 188
    Up                             shift and go to state 189
    Down                           shift and go to state 190
    Speed                          shift and go to state 191
    Diag                           shift and go to state 192
    Pos                            shift and go to state 193
    PosX                           shift and go to state 194
    PosY                           shift and go to state 195
    UseColor                       shift and go to state 196

state 186

    (58) ordenes -> ContinueDown . empty
    (71) ordenes -> ContinueDown . ordenes
    (338) empty -> .
    (56) ordenes -> . Beginning empty
    (57) ordenes -> . ContinueUp empty
    (58) ordenes -> . ContinueDown empty
    (59) ordenes -> . ContinueRight empty
    (60) ordenes -> . ContinueLeft empty
    (61) ordenes -> . Up empty
    (62) ordenes -> . Down empty
    (63) ordenes -> . Speed empty
    (64) ordenes -> . Diag empty
    (65) ordenes -> . Pos empty
    (66) ordenes -> . PosX empty
    (67) ordenes -> . PosY empty
    (68) ordenes -> . UseColor empty
    (69) ordenes -> . Beginning ordenes
    (70) ordenes -> . ContinueUp ordenes
    (71) ordenes -> . ContinueDown ordenes
    (72) ordenes -> . ContinueRight ordenes
    (73) ordenes -> . ContinueLeft ordenes
    (74) ordenes -> . Up ordenes
    (75) ordenes -> . Down ordenes
    (76) ordenes -> . Speed ordenes
    (77) ordenes -> . Diag ordenes
    (78) ordenes -> . Pos ordenes
    (79) ordenes -> . PosX ordenes
    (80) ordenes -> . PosY ordenes
    (81) ordenes -> . UseColor ordenes
    (278) Beginning -> . BEGINNING PUNTOCOMA
    (280) ContinueUp -> . CONTINUEUP NUMERO PUNTOCOMA
    (281) ContinueUp -> . CONTINUEUP expresion_alge1 PUNTOCOMA
    (282) ContinueUp -> . CONTINUEUP expresion_alge2 PUNTOCOMA
    (283) ContinueUp -> . CONTINUEUP Var PUNTOCOMA
    (284) ContinueDown -> . CONTINUEDOWN NUMERO PUNTOCOMA
    (285) ContinueDown -> . CONTINUEDOWN expresion_alge1 PUNTOCOMA
    (286) ContinueDown -> . CONTINUEDOWN expresion_alge2 PUNTOCOMA
    (287) ContinueDown -> . CONTINUEDOWN Var PUNTOCOMA
    (288) ContinueRight -> . CONTINUERIGHT NUMERO PUNTOCOMA
    (289) ContinueRight -> . CONTINUERIGHT expresion_alge1 PUNTOCOMA
    (290) ContinueRight -> . CONTINUERIGHT expresion_alge2 PUNTOCOMA
    (291) ContinueRight -> . CONTINUERIGHT Var PUNTOCOMA
    (292) ContinueLeft -> . CONTINUELEFT NUMERO PUNTOCOMA
    (293) ContinueLeft -> . CONTINUELEFT expresion_alge1 PUNTOCOMA
    (294) ContinueLeft -> . CONTINUELEFT expresion_alge2 PUNTOCOMA
    (295) ContinueLeft -> . CONTINUELEFT Var PUNTOCOMA
    (296) Up -> . UP PUNTOCOMA
    (297) Down -> . DOWN PUNTOCOMA
    (298) Speed -> . SPEED NUMERO PUNTOCOMA
    (299) Diag -> . POS ABRE_P STRING COMA NUMERO CIERRA_P PUNTOCOMA
    (300) Pos -> . POS ABRE_P NUMERO COMA NUMERO CIERRA_P
    (301) Pos -> . POS ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (302) Pos -> . POS ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (303) Pos -> . POS ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (304) Pos -> . POS ABRE_P Var COMA NUMERO CIERRA_P
    (305) Pos -> . POS ABRE_P NUMERO COMA Var CIERRA_P
    (306) Pos -> . POS ABRE_P Var COMA Var CIERRA_P
    (307) Pos -> . POS ABRE_P expresion_alge1 COMA Var CIERRA_P
    (308) Pos -> . POS ABRE_P Var COMA expresion_alge1 CIERRA_P
    (309) Pos -> . POS ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P
    (310) Pos -> . POS ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (311) Pos -> . POS ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (312) Pos -> . POS ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (313) Pos -> . POS ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (314) Pos -> . POS ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (315) Pos -> . POS ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (316) PosX -> . POSX NUMERO PUNTOCOMA
    (317) PosX -> . POSX RESTA NUMERO PUNTOCOMA
    (318) PosX -> . POSX expresion_alge1 PUNTOCOMA
    (319) PosX -> . POSX expresion_alge2 PUNTOCOMA
    (320) PosX -> . POSX Var PUNTOCOMA
    (321) PosY -> . POSY NUMERO PUNTOCOMA
    (322) PosY -> . POSY RESTA NUMERO PUNTOCOMA
    (323) PosY -> . POSY expresion_alge1 PUNTOCOMA
    (324) PosY -> . POSY expresion_alge2 PUNTOCOMA
    (325) PosY -> . POSY Var PUNTOCOMA
    (326) UseColor -> . USECOLOR NUMERO PUNTOCOMA
    (327) UseColor -> . USECOLOR empty PUNTOCOMA

    BRACKET2        reduce using rule 338 (empty -> .)
    BEGINNING       shift and go to state 197
    CONTINUEUP      shift and go to state 198
    CONTINUEDOWN    shift and go to state 199
    CONTINUERIGHT   shift and go to state 200
    CONTINUELEFT    shift and go to state 201
    UP              shift and go to state 202
    DOWN            shift and go to state 203
    SPEED           shift and go to state 204
    POS             shift and go to state 205
    POSX            shift and go to state 206
    POSY            shift and go to state 207
    USECOLOR        shift and go to state 208

    ContinueDown                   shift and go to state 186
    empty                          shift and go to state 275
    ordenes                        shift and go to state 276
    Beginning                      shift and go to state 184
    ContinueUp                     shift and go to state 185
    ContinueRight                  shift and go to state 187
    ContinueLeft                   shift and go to state 188
    Up                             shift and go to state 189
    Down                           shift and go to state 190
    Speed                          shift and go to state 191
    Diag                           shift and go to state 192
    Pos                            shift and go to state 193
    PosX                           shift and go to state 194
    PosY                           shift and go to state 195
    UseColor                       shift and go to state 196

state 187

    (59) ordenes -> ContinueRight . empty
    (72) ordenes -> ContinueRight . ordenes
    (338) empty -> .
    (56) ordenes -> . Beginning empty
    (57) ordenes -> . ContinueUp empty
    (58) ordenes -> . ContinueDown empty
    (59) ordenes -> . ContinueRight empty
    (60) ordenes -> . ContinueLeft empty
    (61) ordenes -> . Up empty
    (62) ordenes -> . Down empty
    (63) ordenes -> . Speed empty
    (64) ordenes -> . Diag empty
    (65) ordenes -> . Pos empty
    (66) ordenes -> . PosX empty
    (67) ordenes -> . PosY empty
    (68) ordenes -> . UseColor empty
    (69) ordenes -> . Beginning ordenes
    (70) ordenes -> . ContinueUp ordenes
    (71) ordenes -> . ContinueDown ordenes
    (72) ordenes -> . ContinueRight ordenes
    (73) ordenes -> . ContinueLeft ordenes
    (74) ordenes -> . Up ordenes
    (75) ordenes -> . Down ordenes
    (76) ordenes -> . Speed ordenes
    (77) ordenes -> . Diag ordenes
    (78) ordenes -> . Pos ordenes
    (79) ordenes -> . PosX ordenes
    (80) ordenes -> . PosY ordenes
    (81) ordenes -> . UseColor ordenes
    (278) Beginning -> . BEGINNING PUNTOCOMA
    (280) ContinueUp -> . CONTINUEUP NUMERO PUNTOCOMA
    (281) ContinueUp -> . CONTINUEUP expresion_alge1 PUNTOCOMA
    (282) ContinueUp -> . CONTINUEUP expresion_alge2 PUNTOCOMA
    (283) ContinueUp -> . CONTINUEUP Var PUNTOCOMA
    (284) ContinueDown -> . CONTINUEDOWN NUMERO PUNTOCOMA
    (285) ContinueDown -> . CONTINUEDOWN expresion_alge1 PUNTOCOMA
    (286) ContinueDown -> . CONTINUEDOWN expresion_alge2 PUNTOCOMA
    (287) ContinueDown -> . CONTINUEDOWN Var PUNTOCOMA
    (288) ContinueRight -> . CONTINUERIGHT NUMERO PUNTOCOMA
    (289) ContinueRight -> . CONTINUERIGHT expresion_alge1 PUNTOCOMA
    (290) ContinueRight -> . CONTINUERIGHT expresion_alge2 PUNTOCOMA
    (291) ContinueRight -> . CONTINUERIGHT Var PUNTOCOMA
    (292) ContinueLeft -> . CONTINUELEFT NUMERO PUNTOCOMA
    (293) ContinueLeft -> . CONTINUELEFT expresion_alge1 PUNTOCOMA
    (294) ContinueLeft -> . CONTINUELEFT expresion_alge2 PUNTOCOMA
    (295) ContinueLeft -> . CONTINUELEFT Var PUNTOCOMA
    (296) Up -> . UP PUNTOCOMA
    (297) Down -> . DOWN PUNTOCOMA
    (298) Speed -> . SPEED NUMERO PUNTOCOMA
    (299) Diag -> . POS ABRE_P STRING COMA NUMERO CIERRA_P PUNTOCOMA
    (300) Pos -> . POS ABRE_P NUMERO COMA NUMERO CIERRA_P
    (301) Pos -> . POS ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (302) Pos -> . POS ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (303) Pos -> . POS ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (304) Pos -> . POS ABRE_P Var COMA NUMERO CIERRA_P
    (305) Pos -> . POS ABRE_P NUMERO COMA Var CIERRA_P
    (306) Pos -> . POS ABRE_P Var COMA Var CIERRA_P
    (307) Pos -> . POS ABRE_P expresion_alge1 COMA Var CIERRA_P
    (308) Pos -> . POS ABRE_P Var COMA expresion_alge1 CIERRA_P
    (309) Pos -> . POS ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P
    (310) Pos -> . POS ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (311) Pos -> . POS ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (312) Pos -> . POS ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (313) Pos -> . POS ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (314) Pos -> . POS ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (315) Pos -> . POS ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (316) PosX -> . POSX NUMERO PUNTOCOMA
    (317) PosX -> . POSX RESTA NUMERO PUNTOCOMA
    (318) PosX -> . POSX expresion_alge1 PUNTOCOMA
    (319) PosX -> . POSX expresion_alge2 PUNTOCOMA
    (320) PosX -> . POSX Var PUNTOCOMA
    (321) PosY -> . POSY NUMERO PUNTOCOMA
    (322) PosY -> . POSY RESTA NUMERO PUNTOCOMA
    (323) PosY -> . POSY expresion_alge1 PUNTOCOMA
    (324) PosY -> . POSY expresion_alge2 PUNTOCOMA
    (325) PosY -> . POSY Var PUNTOCOMA
    (326) UseColor -> . USECOLOR NUMERO PUNTOCOMA
    (327) UseColor -> . USECOLOR empty PUNTOCOMA

    BRACKET2        reduce using rule 338 (empty -> .)
    BEGINNING       shift and go to state 197
    CONTINUEUP      shift and go to state 198
    CONTINUEDOWN    shift and go to state 199
    CONTINUERIGHT   shift and go to state 200
    CONTINUELEFT    shift and go to state 201
    UP              shift and go to state 202
    DOWN            shift and go to state 203
    SPEED           shift and go to state 204
    POS             shift and go to state 205
    POSX            shift and go to state 206
    POSY            shift and go to state 207
    USECOLOR        shift and go to state 208

    ContinueRight                  shift and go to state 187
    empty                          shift and go to state 277
    ordenes                        shift and go to state 278
    Beginning                      shift and go to state 184
    ContinueUp                     shift and go to state 185
    ContinueDown                   shift and go to state 186
    ContinueLeft                   shift and go to state 188
    Up                             shift and go to state 189
    Down                           shift and go to state 190
    Speed                          shift and go to state 191
    Diag                           shift and go to state 192
    Pos                            shift and go to state 193
    PosX                           shift and go to state 194
    PosY                           shift and go to state 195
    UseColor                       shift and go to state 196

state 188

    (60) ordenes -> ContinueLeft . empty
    (73) ordenes -> ContinueLeft . ordenes
    (338) empty -> .
    (56) ordenes -> . Beginning empty
    (57) ordenes -> . ContinueUp empty
    (58) ordenes -> . ContinueDown empty
    (59) ordenes -> . ContinueRight empty
    (60) ordenes -> . ContinueLeft empty
    (61) ordenes -> . Up empty
    (62) ordenes -> . Down empty
    (63) ordenes -> . Speed empty
    (64) ordenes -> . Diag empty
    (65) ordenes -> . Pos empty
    (66) ordenes -> . PosX empty
    (67) ordenes -> . PosY empty
    (68) ordenes -> . UseColor empty
    (69) ordenes -> . Beginning ordenes
    (70) ordenes -> . ContinueUp ordenes
    (71) ordenes -> . ContinueDown ordenes
    (72) ordenes -> . ContinueRight ordenes
    (73) ordenes -> . ContinueLeft ordenes
    (74) ordenes -> . Up ordenes
    (75) ordenes -> . Down ordenes
    (76) ordenes -> . Speed ordenes
    (77) ordenes -> . Diag ordenes
    (78) ordenes -> . Pos ordenes
    (79) ordenes -> . PosX ordenes
    (80) ordenes -> . PosY ordenes
    (81) ordenes -> . UseColor ordenes
    (278) Beginning -> . BEGINNING PUNTOCOMA
    (280) ContinueUp -> . CONTINUEUP NUMERO PUNTOCOMA
    (281) ContinueUp -> . CONTINUEUP expresion_alge1 PUNTOCOMA
    (282) ContinueUp -> . CONTINUEUP expresion_alge2 PUNTOCOMA
    (283) ContinueUp -> . CONTINUEUP Var PUNTOCOMA
    (284) ContinueDown -> . CONTINUEDOWN NUMERO PUNTOCOMA
    (285) ContinueDown -> . CONTINUEDOWN expresion_alge1 PUNTOCOMA
    (286) ContinueDown -> . CONTINUEDOWN expresion_alge2 PUNTOCOMA
    (287) ContinueDown -> . CONTINUEDOWN Var PUNTOCOMA
    (288) ContinueRight -> . CONTINUERIGHT NUMERO PUNTOCOMA
    (289) ContinueRight -> . CONTINUERIGHT expresion_alge1 PUNTOCOMA
    (290) ContinueRight -> . CONTINUERIGHT expresion_alge2 PUNTOCOMA
    (291) ContinueRight -> . CONTINUERIGHT Var PUNTOCOMA
    (292) ContinueLeft -> . CONTINUELEFT NUMERO PUNTOCOMA
    (293) ContinueLeft -> . CONTINUELEFT expresion_alge1 PUNTOCOMA
    (294) ContinueLeft -> . CONTINUELEFT expresion_alge2 PUNTOCOMA
    (295) ContinueLeft -> . CONTINUELEFT Var PUNTOCOMA
    (296) Up -> . UP PUNTOCOMA
    (297) Down -> . DOWN PUNTOCOMA
    (298) Speed -> . SPEED NUMERO PUNTOCOMA
    (299) Diag -> . POS ABRE_P STRING COMA NUMERO CIERRA_P PUNTOCOMA
    (300) Pos -> . POS ABRE_P NUMERO COMA NUMERO CIERRA_P
    (301) Pos -> . POS ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (302) Pos -> . POS ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (303) Pos -> . POS ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (304) Pos -> . POS ABRE_P Var COMA NUMERO CIERRA_P
    (305) Pos -> . POS ABRE_P NUMERO COMA Var CIERRA_P
    (306) Pos -> . POS ABRE_P Var COMA Var CIERRA_P
    (307) Pos -> . POS ABRE_P expresion_alge1 COMA Var CIERRA_P
    (308) Pos -> . POS ABRE_P Var COMA expresion_alge1 CIERRA_P
    (309) Pos -> . POS ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P
    (310) Pos -> . POS ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (311) Pos -> . POS ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (312) Pos -> . POS ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (313) Pos -> . POS ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (314) Pos -> . POS ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (315) Pos -> . POS ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (316) PosX -> . POSX NUMERO PUNTOCOMA
    (317) PosX -> . POSX RESTA NUMERO PUNTOCOMA
    (318) PosX -> . POSX expresion_alge1 PUNTOCOMA
    (319) PosX -> . POSX expresion_alge2 PUNTOCOMA
    (320) PosX -> . POSX Var PUNTOCOMA
    (321) PosY -> . POSY NUMERO PUNTOCOMA
    (322) PosY -> . POSY RESTA NUMERO PUNTOCOMA
    (323) PosY -> . POSY expresion_alge1 PUNTOCOMA
    (324) PosY -> . POSY expresion_alge2 PUNTOCOMA
    (325) PosY -> . POSY Var PUNTOCOMA
    (326) UseColor -> . USECOLOR NUMERO PUNTOCOMA
    (327) UseColor -> . USECOLOR empty PUNTOCOMA

    BRACKET2        reduce using rule 338 (empty -> .)
    BEGINNING       shift and go to state 197
    CONTINUEUP      shift and go to state 198
    CONTINUEDOWN    shift and go to state 199
    CONTINUERIGHT   shift and go to state 200
    CONTINUELEFT    shift and go to state 201
    UP              shift and go to state 202
    DOWN            shift and go to state 203
    SPEED           shift and go to state 204
    POS             shift and go to state 205
    POSX            shift and go to state 206
    POSY            shift and go to state 207
    USECOLOR        shift and go to state 208

    ContinueLeft                   shift and go to state 188
    empty                          shift and go to state 279
    ordenes                        shift and go to state 280
    Beginning                      shift and go to state 184
    ContinueUp                     shift and go to state 185
    ContinueDown                   shift and go to state 186
    ContinueRight                  shift and go to state 187
    Up                             shift and go to state 189
    Down                           shift and go to state 190
    Speed                          shift and go to state 191
    Diag                           shift and go to state 192
    Pos                            shift and go to state 193
    PosX                           shift and go to state 194
    PosY                           shift and go to state 195
    UseColor                       shift and go to state 196

state 189

    (61) ordenes -> Up . empty
    (74) ordenes -> Up . ordenes
    (338) empty -> .
    (56) ordenes -> . Beginning empty
    (57) ordenes -> . ContinueUp empty
    (58) ordenes -> . ContinueDown empty
    (59) ordenes -> . ContinueRight empty
    (60) ordenes -> . ContinueLeft empty
    (61) ordenes -> . Up empty
    (62) ordenes -> . Down empty
    (63) ordenes -> . Speed empty
    (64) ordenes -> . Diag empty
    (65) ordenes -> . Pos empty
    (66) ordenes -> . PosX empty
    (67) ordenes -> . PosY empty
    (68) ordenes -> . UseColor empty
    (69) ordenes -> . Beginning ordenes
    (70) ordenes -> . ContinueUp ordenes
    (71) ordenes -> . ContinueDown ordenes
    (72) ordenes -> . ContinueRight ordenes
    (73) ordenes -> . ContinueLeft ordenes
    (74) ordenes -> . Up ordenes
    (75) ordenes -> . Down ordenes
    (76) ordenes -> . Speed ordenes
    (77) ordenes -> . Diag ordenes
    (78) ordenes -> . Pos ordenes
    (79) ordenes -> . PosX ordenes
    (80) ordenes -> . PosY ordenes
    (81) ordenes -> . UseColor ordenes
    (278) Beginning -> . BEGINNING PUNTOCOMA
    (280) ContinueUp -> . CONTINUEUP NUMERO PUNTOCOMA
    (281) ContinueUp -> . CONTINUEUP expresion_alge1 PUNTOCOMA
    (282) ContinueUp -> . CONTINUEUP expresion_alge2 PUNTOCOMA
    (283) ContinueUp -> . CONTINUEUP Var PUNTOCOMA
    (284) ContinueDown -> . CONTINUEDOWN NUMERO PUNTOCOMA
    (285) ContinueDown -> . CONTINUEDOWN expresion_alge1 PUNTOCOMA
    (286) ContinueDown -> . CONTINUEDOWN expresion_alge2 PUNTOCOMA
    (287) ContinueDown -> . CONTINUEDOWN Var PUNTOCOMA
    (288) ContinueRight -> . CONTINUERIGHT NUMERO PUNTOCOMA
    (289) ContinueRight -> . CONTINUERIGHT expresion_alge1 PUNTOCOMA
    (290) ContinueRight -> . CONTINUERIGHT expresion_alge2 PUNTOCOMA
    (291) ContinueRight -> . CONTINUERIGHT Var PUNTOCOMA
    (292) ContinueLeft -> . CONTINUELEFT NUMERO PUNTOCOMA
    (293) ContinueLeft -> . CONTINUELEFT expresion_alge1 PUNTOCOMA
    (294) ContinueLeft -> . CONTINUELEFT expresion_alge2 PUNTOCOMA
    (295) ContinueLeft -> . CONTINUELEFT Var PUNTOCOMA
    (296) Up -> . UP PUNTOCOMA
    (297) Down -> . DOWN PUNTOCOMA
    (298) Speed -> . SPEED NUMERO PUNTOCOMA
    (299) Diag -> . POS ABRE_P STRING COMA NUMERO CIERRA_P PUNTOCOMA
    (300) Pos -> . POS ABRE_P NUMERO COMA NUMERO CIERRA_P
    (301) Pos -> . POS ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (302) Pos -> . POS ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (303) Pos -> . POS ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (304) Pos -> . POS ABRE_P Var COMA NUMERO CIERRA_P
    (305) Pos -> . POS ABRE_P NUMERO COMA Var CIERRA_P
    (306) Pos -> . POS ABRE_P Var COMA Var CIERRA_P
    (307) Pos -> . POS ABRE_P expresion_alge1 COMA Var CIERRA_P
    (308) Pos -> . POS ABRE_P Var COMA expresion_alge1 CIERRA_P
    (309) Pos -> . POS ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P
    (310) Pos -> . POS ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (311) Pos -> . POS ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (312) Pos -> . POS ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (313) Pos -> . POS ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (314) Pos -> . POS ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (315) Pos -> . POS ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (316) PosX -> . POSX NUMERO PUNTOCOMA
    (317) PosX -> . POSX RESTA NUMERO PUNTOCOMA
    (318) PosX -> . POSX expresion_alge1 PUNTOCOMA
    (319) PosX -> . POSX expresion_alge2 PUNTOCOMA
    (320) PosX -> . POSX Var PUNTOCOMA
    (321) PosY -> . POSY NUMERO PUNTOCOMA
    (322) PosY -> . POSY RESTA NUMERO PUNTOCOMA
    (323) PosY -> . POSY expresion_alge1 PUNTOCOMA
    (324) PosY -> . POSY expresion_alge2 PUNTOCOMA
    (325) PosY -> . POSY Var PUNTOCOMA
    (326) UseColor -> . USECOLOR NUMERO PUNTOCOMA
    (327) UseColor -> . USECOLOR empty PUNTOCOMA

    BRACKET2        reduce using rule 338 (empty -> .)
    BEGINNING       shift and go to state 197
    CONTINUEUP      shift and go to state 198
    CONTINUEDOWN    shift and go to state 199
    CONTINUERIGHT   shift and go to state 200
    CONTINUELEFT    shift and go to state 201
    UP              shift and go to state 202
    DOWN            shift and go to state 203
    SPEED           shift and go to state 204
    POS             shift and go to state 205
    POSX            shift and go to state 206
    POSY            shift and go to state 207
    USECOLOR        shift and go to state 208

    Up                             shift and go to state 189
    empty                          shift and go to state 281
    ordenes                        shift and go to state 282
    Beginning                      shift and go to state 184
    ContinueUp                     shift and go to state 185
    ContinueDown                   shift and go to state 186
    ContinueRight                  shift and go to state 187
    ContinueLeft                   shift and go to state 188
    Down                           shift and go to state 190
    Speed                          shift and go to state 191
    Diag                           shift and go to state 192
    Pos                            shift and go to state 193
    PosX                           shift and go to state 194
    PosY                           shift and go to state 195
    UseColor                       shift and go to state 196

state 190

    (62) ordenes -> Down . empty
    (75) ordenes -> Down . ordenes
    (338) empty -> .
    (56) ordenes -> . Beginning empty
    (57) ordenes -> . ContinueUp empty
    (58) ordenes -> . ContinueDown empty
    (59) ordenes -> . ContinueRight empty
    (60) ordenes -> . ContinueLeft empty
    (61) ordenes -> . Up empty
    (62) ordenes -> . Down empty
    (63) ordenes -> . Speed empty
    (64) ordenes -> . Diag empty
    (65) ordenes -> . Pos empty
    (66) ordenes -> . PosX empty
    (67) ordenes -> . PosY empty
    (68) ordenes -> . UseColor empty
    (69) ordenes -> . Beginning ordenes
    (70) ordenes -> . ContinueUp ordenes
    (71) ordenes -> . ContinueDown ordenes
    (72) ordenes -> . ContinueRight ordenes
    (73) ordenes -> . ContinueLeft ordenes
    (74) ordenes -> . Up ordenes
    (75) ordenes -> . Down ordenes
    (76) ordenes -> . Speed ordenes
    (77) ordenes -> . Diag ordenes
    (78) ordenes -> . Pos ordenes
    (79) ordenes -> . PosX ordenes
    (80) ordenes -> . PosY ordenes
    (81) ordenes -> . UseColor ordenes
    (278) Beginning -> . BEGINNING PUNTOCOMA
    (280) ContinueUp -> . CONTINUEUP NUMERO PUNTOCOMA
    (281) ContinueUp -> . CONTINUEUP expresion_alge1 PUNTOCOMA
    (282) ContinueUp -> . CONTINUEUP expresion_alge2 PUNTOCOMA
    (283) ContinueUp -> . CONTINUEUP Var PUNTOCOMA
    (284) ContinueDown -> . CONTINUEDOWN NUMERO PUNTOCOMA
    (285) ContinueDown -> . CONTINUEDOWN expresion_alge1 PUNTOCOMA
    (286) ContinueDown -> . CONTINUEDOWN expresion_alge2 PUNTOCOMA
    (287) ContinueDown -> . CONTINUEDOWN Var PUNTOCOMA
    (288) ContinueRight -> . CONTINUERIGHT NUMERO PUNTOCOMA
    (289) ContinueRight -> . CONTINUERIGHT expresion_alge1 PUNTOCOMA
    (290) ContinueRight -> . CONTINUERIGHT expresion_alge2 PUNTOCOMA
    (291) ContinueRight -> . CONTINUERIGHT Var PUNTOCOMA
    (292) ContinueLeft -> . CONTINUELEFT NUMERO PUNTOCOMA
    (293) ContinueLeft -> . CONTINUELEFT expresion_alge1 PUNTOCOMA
    (294) ContinueLeft -> . CONTINUELEFT expresion_alge2 PUNTOCOMA
    (295) ContinueLeft -> . CONTINUELEFT Var PUNTOCOMA
    (296) Up -> . UP PUNTOCOMA
    (297) Down -> . DOWN PUNTOCOMA
    (298) Speed -> . SPEED NUMERO PUNTOCOMA
    (299) Diag -> . POS ABRE_P STRING COMA NUMERO CIERRA_P PUNTOCOMA
    (300) Pos -> . POS ABRE_P NUMERO COMA NUMERO CIERRA_P
    (301) Pos -> . POS ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (302) Pos -> . POS ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (303) Pos -> . POS ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (304) Pos -> . POS ABRE_P Var COMA NUMERO CIERRA_P
    (305) Pos -> . POS ABRE_P NUMERO COMA Var CIERRA_P
    (306) Pos -> . POS ABRE_P Var COMA Var CIERRA_P
    (307) Pos -> . POS ABRE_P expresion_alge1 COMA Var CIERRA_P
    (308) Pos -> . POS ABRE_P Var COMA expresion_alge1 CIERRA_P
    (309) Pos -> . POS ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P
    (310) Pos -> . POS ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (311) Pos -> . POS ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (312) Pos -> . POS ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (313) Pos -> . POS ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (314) Pos -> . POS ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (315) Pos -> . POS ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (316) PosX -> . POSX NUMERO PUNTOCOMA
    (317) PosX -> . POSX RESTA NUMERO PUNTOCOMA
    (318) PosX -> . POSX expresion_alge1 PUNTOCOMA
    (319) PosX -> . POSX expresion_alge2 PUNTOCOMA
    (320) PosX -> . POSX Var PUNTOCOMA
    (321) PosY -> . POSY NUMERO PUNTOCOMA
    (322) PosY -> . POSY RESTA NUMERO PUNTOCOMA
    (323) PosY -> . POSY expresion_alge1 PUNTOCOMA
    (324) PosY -> . POSY expresion_alge2 PUNTOCOMA
    (325) PosY -> . POSY Var PUNTOCOMA
    (326) UseColor -> . USECOLOR NUMERO PUNTOCOMA
    (327) UseColor -> . USECOLOR empty PUNTOCOMA

    BRACKET2        reduce using rule 338 (empty -> .)
    BEGINNING       shift and go to state 197
    CONTINUEUP      shift and go to state 198
    CONTINUEDOWN    shift and go to state 199
    CONTINUERIGHT   shift and go to state 200
    CONTINUELEFT    shift and go to state 201
    UP              shift and go to state 202
    DOWN            shift and go to state 203
    SPEED           shift and go to state 204
    POS             shift and go to state 205
    POSX            shift and go to state 206
    POSY            shift and go to state 207
    USECOLOR        shift and go to state 208

    Down                           shift and go to state 190
    empty                          shift and go to state 283
    ordenes                        shift and go to state 284
    Beginning                      shift and go to state 184
    ContinueUp                     shift and go to state 185
    ContinueDown                   shift and go to state 186
    ContinueRight                  shift and go to state 187
    ContinueLeft                   shift and go to state 188
    Up                             shift and go to state 189
    Speed                          shift and go to state 191
    Diag                           shift and go to state 192
    Pos                            shift and go to state 193
    PosX                           shift and go to state 194
    PosY                           shift and go to state 195
    UseColor                       shift and go to state 196

state 191

    (63) ordenes -> Speed . empty
    (76) ordenes -> Speed . ordenes
    (338) empty -> .
    (56) ordenes -> . Beginning empty
    (57) ordenes -> . ContinueUp empty
    (58) ordenes -> . ContinueDown empty
    (59) ordenes -> . ContinueRight empty
    (60) ordenes -> . ContinueLeft empty
    (61) ordenes -> . Up empty
    (62) ordenes -> . Down empty
    (63) ordenes -> . Speed empty
    (64) ordenes -> . Diag empty
    (65) ordenes -> . Pos empty
    (66) ordenes -> . PosX empty
    (67) ordenes -> . PosY empty
    (68) ordenes -> . UseColor empty
    (69) ordenes -> . Beginning ordenes
    (70) ordenes -> . ContinueUp ordenes
    (71) ordenes -> . ContinueDown ordenes
    (72) ordenes -> . ContinueRight ordenes
    (73) ordenes -> . ContinueLeft ordenes
    (74) ordenes -> . Up ordenes
    (75) ordenes -> . Down ordenes
    (76) ordenes -> . Speed ordenes
    (77) ordenes -> . Diag ordenes
    (78) ordenes -> . Pos ordenes
    (79) ordenes -> . PosX ordenes
    (80) ordenes -> . PosY ordenes
    (81) ordenes -> . UseColor ordenes
    (278) Beginning -> . BEGINNING PUNTOCOMA
    (280) ContinueUp -> . CONTINUEUP NUMERO PUNTOCOMA
    (281) ContinueUp -> . CONTINUEUP expresion_alge1 PUNTOCOMA
    (282) ContinueUp -> . CONTINUEUP expresion_alge2 PUNTOCOMA
    (283) ContinueUp -> . CONTINUEUP Var PUNTOCOMA
    (284) ContinueDown -> . CONTINUEDOWN NUMERO PUNTOCOMA
    (285) ContinueDown -> . CONTINUEDOWN expresion_alge1 PUNTOCOMA
    (286) ContinueDown -> . CONTINUEDOWN expresion_alge2 PUNTOCOMA
    (287) ContinueDown -> . CONTINUEDOWN Var PUNTOCOMA
    (288) ContinueRight -> . CONTINUERIGHT NUMERO PUNTOCOMA
    (289) ContinueRight -> . CONTINUERIGHT expresion_alge1 PUNTOCOMA
    (290) ContinueRight -> . CONTINUERIGHT expresion_alge2 PUNTOCOMA
    (291) ContinueRight -> . CONTINUERIGHT Var PUNTOCOMA
    (292) ContinueLeft -> . CONTINUELEFT NUMERO PUNTOCOMA
    (293) ContinueLeft -> . CONTINUELEFT expresion_alge1 PUNTOCOMA
    (294) ContinueLeft -> . CONTINUELEFT expresion_alge2 PUNTOCOMA
    (295) ContinueLeft -> . CONTINUELEFT Var PUNTOCOMA
    (296) Up -> . UP PUNTOCOMA
    (297) Down -> . DOWN PUNTOCOMA
    (298) Speed -> . SPEED NUMERO PUNTOCOMA
    (299) Diag -> . POS ABRE_P STRING COMA NUMERO CIERRA_P PUNTOCOMA
    (300) Pos -> . POS ABRE_P NUMERO COMA NUMERO CIERRA_P
    (301) Pos -> . POS ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (302) Pos -> . POS ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (303) Pos -> . POS ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (304) Pos -> . POS ABRE_P Var COMA NUMERO CIERRA_P
    (305) Pos -> . POS ABRE_P NUMERO COMA Var CIERRA_P
    (306) Pos -> . POS ABRE_P Var COMA Var CIERRA_P
    (307) Pos -> . POS ABRE_P expresion_alge1 COMA Var CIERRA_P
    (308) Pos -> . POS ABRE_P Var COMA expresion_alge1 CIERRA_P
    (309) Pos -> . POS ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P
    (310) Pos -> . POS ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (311) Pos -> . POS ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (312) Pos -> . POS ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (313) Pos -> . POS ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (314) Pos -> . POS ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (315) Pos -> . POS ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (316) PosX -> . POSX NUMERO PUNTOCOMA
    (317) PosX -> . POSX RESTA NUMERO PUNTOCOMA
    (318) PosX -> . POSX expresion_alge1 PUNTOCOMA
    (319) PosX -> . POSX expresion_alge2 PUNTOCOMA
    (320) PosX -> . POSX Var PUNTOCOMA
    (321) PosY -> . POSY NUMERO PUNTOCOMA
    (322) PosY -> . POSY RESTA NUMERO PUNTOCOMA
    (323) PosY -> . POSY expresion_alge1 PUNTOCOMA
    (324) PosY -> . POSY expresion_alge2 PUNTOCOMA
    (325) PosY -> . POSY Var PUNTOCOMA
    (326) UseColor -> . USECOLOR NUMERO PUNTOCOMA
    (327) UseColor -> . USECOLOR empty PUNTOCOMA

    BRACKET2        reduce using rule 338 (empty -> .)
    BEGINNING       shift and go to state 197
    CONTINUEUP      shift and go to state 198
    CONTINUEDOWN    shift and go to state 199
    CONTINUERIGHT   shift and go to state 200
    CONTINUELEFT    shift and go to state 201
    UP              shift and go to state 202
    DOWN            shift and go to state 203
    SPEED           shift and go to state 204
    POS             shift and go to state 205
    POSX            shift and go to state 206
    POSY            shift and go to state 207
    USECOLOR        shift and go to state 208

    Speed                          shift and go to state 191
    empty                          shift and go to state 285
    ordenes                        shift and go to state 286
    Beginning                      shift and go to state 184
    ContinueUp                     shift and go to state 185
    ContinueDown                   shift and go to state 186
    ContinueRight                  shift and go to state 187
    ContinueLeft                   shift and go to state 188
    Up                             shift and go to state 189
    Down                           shift and go to state 190
    Diag                           shift and go to state 192
    Pos                            shift and go to state 193
    PosX                           shift and go to state 194
    PosY                           shift and go to state 195
    UseColor                       shift and go to state 196

state 192

    (64) ordenes -> Diag . empty
    (77) ordenes -> Diag . ordenes
    (338) empty -> .
    (56) ordenes -> . Beginning empty
    (57) ordenes -> . ContinueUp empty
    (58) ordenes -> . ContinueDown empty
    (59) ordenes -> . ContinueRight empty
    (60) ordenes -> . ContinueLeft empty
    (61) ordenes -> . Up empty
    (62) ordenes -> . Down empty
    (63) ordenes -> . Speed empty
    (64) ordenes -> . Diag empty
    (65) ordenes -> . Pos empty
    (66) ordenes -> . PosX empty
    (67) ordenes -> . PosY empty
    (68) ordenes -> . UseColor empty
    (69) ordenes -> . Beginning ordenes
    (70) ordenes -> . ContinueUp ordenes
    (71) ordenes -> . ContinueDown ordenes
    (72) ordenes -> . ContinueRight ordenes
    (73) ordenes -> . ContinueLeft ordenes
    (74) ordenes -> . Up ordenes
    (75) ordenes -> . Down ordenes
    (76) ordenes -> . Speed ordenes
    (77) ordenes -> . Diag ordenes
    (78) ordenes -> . Pos ordenes
    (79) ordenes -> . PosX ordenes
    (80) ordenes -> . PosY ordenes
    (81) ordenes -> . UseColor ordenes
    (278) Beginning -> . BEGINNING PUNTOCOMA
    (280) ContinueUp -> . CONTINUEUP NUMERO PUNTOCOMA
    (281) ContinueUp -> . CONTINUEUP expresion_alge1 PUNTOCOMA
    (282) ContinueUp -> . CONTINUEUP expresion_alge2 PUNTOCOMA
    (283) ContinueUp -> . CONTINUEUP Var PUNTOCOMA
    (284) ContinueDown -> . CONTINUEDOWN NUMERO PUNTOCOMA
    (285) ContinueDown -> . CONTINUEDOWN expresion_alge1 PUNTOCOMA
    (286) ContinueDown -> . CONTINUEDOWN expresion_alge2 PUNTOCOMA
    (287) ContinueDown -> . CONTINUEDOWN Var PUNTOCOMA
    (288) ContinueRight -> . CONTINUERIGHT NUMERO PUNTOCOMA
    (289) ContinueRight -> . CONTINUERIGHT expresion_alge1 PUNTOCOMA
    (290) ContinueRight -> . CONTINUERIGHT expresion_alge2 PUNTOCOMA
    (291) ContinueRight -> . CONTINUERIGHT Var PUNTOCOMA
    (292) ContinueLeft -> . CONTINUELEFT NUMERO PUNTOCOMA
    (293) ContinueLeft -> . CONTINUELEFT expresion_alge1 PUNTOCOMA
    (294) ContinueLeft -> . CONTINUELEFT expresion_alge2 PUNTOCOMA
    (295) ContinueLeft -> . CONTINUELEFT Var PUNTOCOMA
    (296) Up -> . UP PUNTOCOMA
    (297) Down -> . DOWN PUNTOCOMA
    (298) Speed -> . SPEED NUMERO PUNTOCOMA
    (299) Diag -> . POS ABRE_P STRING COMA NUMERO CIERRA_P PUNTOCOMA
    (300) Pos -> . POS ABRE_P NUMERO COMA NUMERO CIERRA_P
    (301) Pos -> . POS ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (302) Pos -> . POS ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (303) Pos -> . POS ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (304) Pos -> . POS ABRE_P Var COMA NUMERO CIERRA_P
    (305) Pos -> . POS ABRE_P NUMERO COMA Var CIERRA_P
    (306) Pos -> . POS ABRE_P Var COMA Var CIERRA_P
    (307) Pos -> . POS ABRE_P expresion_alge1 COMA Var CIERRA_P
    (308) Pos -> . POS ABRE_P Var COMA expresion_alge1 CIERRA_P
    (309) Pos -> . POS ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P
    (310) Pos -> . POS ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (311) Pos -> . POS ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (312) Pos -> . POS ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (313) Pos -> . POS ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (314) Pos -> . POS ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (315) Pos -> . POS ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (316) PosX -> . POSX NUMERO PUNTOCOMA
    (317) PosX -> . POSX RESTA NUMERO PUNTOCOMA
    (318) PosX -> . POSX expresion_alge1 PUNTOCOMA
    (319) PosX -> . POSX expresion_alge2 PUNTOCOMA
    (320) PosX -> . POSX Var PUNTOCOMA
    (321) PosY -> . POSY NUMERO PUNTOCOMA
    (322) PosY -> . POSY RESTA NUMERO PUNTOCOMA
    (323) PosY -> . POSY expresion_alge1 PUNTOCOMA
    (324) PosY -> . POSY expresion_alge2 PUNTOCOMA
    (325) PosY -> . POSY Var PUNTOCOMA
    (326) UseColor -> . USECOLOR NUMERO PUNTOCOMA
    (327) UseColor -> . USECOLOR empty PUNTOCOMA

    BRACKET2        reduce using rule 338 (empty -> .)
    BEGINNING       shift and go to state 197
    CONTINUEUP      shift and go to state 198
    CONTINUEDOWN    shift and go to state 199
    CONTINUERIGHT   shift and go to state 200
    CONTINUELEFT    shift and go to state 201
    UP              shift and go to state 202
    DOWN            shift and go to state 203
    SPEED           shift and go to state 204
    POS             shift and go to state 205
    POSX            shift and go to state 206
    POSY            shift and go to state 207
    USECOLOR        shift and go to state 208

    Diag                           shift and go to state 192
    empty                          shift and go to state 287
    ordenes                        shift and go to state 288
    Beginning                      shift and go to state 184
    ContinueUp                     shift and go to state 185
    ContinueDown                   shift and go to state 186
    ContinueRight                  shift and go to state 187
    ContinueLeft                   shift and go to state 188
    Up                             shift and go to state 189
    Down                           shift and go to state 190
    Speed                          shift and go to state 191
    Pos                            shift and go to state 193
    PosX                           shift and go to state 194
    PosY                           shift and go to state 195
    UseColor                       shift and go to state 196

state 193

    (65) ordenes -> Pos . empty
    (78) ordenes -> Pos . ordenes
    (338) empty -> .
    (56) ordenes -> . Beginning empty
    (57) ordenes -> . ContinueUp empty
    (58) ordenes -> . ContinueDown empty
    (59) ordenes -> . ContinueRight empty
    (60) ordenes -> . ContinueLeft empty
    (61) ordenes -> . Up empty
    (62) ordenes -> . Down empty
    (63) ordenes -> . Speed empty
    (64) ordenes -> . Diag empty
    (65) ordenes -> . Pos empty
    (66) ordenes -> . PosX empty
    (67) ordenes -> . PosY empty
    (68) ordenes -> . UseColor empty
    (69) ordenes -> . Beginning ordenes
    (70) ordenes -> . ContinueUp ordenes
    (71) ordenes -> . ContinueDown ordenes
    (72) ordenes -> . ContinueRight ordenes
    (73) ordenes -> . ContinueLeft ordenes
    (74) ordenes -> . Up ordenes
    (75) ordenes -> . Down ordenes
    (76) ordenes -> . Speed ordenes
    (77) ordenes -> . Diag ordenes
    (78) ordenes -> . Pos ordenes
    (79) ordenes -> . PosX ordenes
    (80) ordenes -> . PosY ordenes
    (81) ordenes -> . UseColor ordenes
    (278) Beginning -> . BEGINNING PUNTOCOMA
    (280) ContinueUp -> . CONTINUEUP NUMERO PUNTOCOMA
    (281) ContinueUp -> . CONTINUEUP expresion_alge1 PUNTOCOMA
    (282) ContinueUp -> . CONTINUEUP expresion_alge2 PUNTOCOMA
    (283) ContinueUp -> . CONTINUEUP Var PUNTOCOMA
    (284) ContinueDown -> . CONTINUEDOWN NUMERO PUNTOCOMA
    (285) ContinueDown -> . CONTINUEDOWN expresion_alge1 PUNTOCOMA
    (286) ContinueDown -> . CONTINUEDOWN expresion_alge2 PUNTOCOMA
    (287) ContinueDown -> . CONTINUEDOWN Var PUNTOCOMA
    (288) ContinueRight -> . CONTINUERIGHT NUMERO PUNTOCOMA
    (289) ContinueRight -> . CONTINUERIGHT expresion_alge1 PUNTOCOMA
    (290) ContinueRight -> . CONTINUERIGHT expresion_alge2 PUNTOCOMA
    (291) ContinueRight -> . CONTINUERIGHT Var PUNTOCOMA
    (292) ContinueLeft -> . CONTINUELEFT NUMERO PUNTOCOMA
    (293) ContinueLeft -> . CONTINUELEFT expresion_alge1 PUNTOCOMA
    (294) ContinueLeft -> . CONTINUELEFT expresion_alge2 PUNTOCOMA
    (295) ContinueLeft -> . CONTINUELEFT Var PUNTOCOMA
    (296) Up -> . UP PUNTOCOMA
    (297) Down -> . DOWN PUNTOCOMA
    (298) Speed -> . SPEED NUMERO PUNTOCOMA
    (299) Diag -> . POS ABRE_P STRING COMA NUMERO CIERRA_P PUNTOCOMA
    (300) Pos -> . POS ABRE_P NUMERO COMA NUMERO CIERRA_P
    (301) Pos -> . POS ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (302) Pos -> . POS ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (303) Pos -> . POS ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (304) Pos -> . POS ABRE_P Var COMA NUMERO CIERRA_P
    (305) Pos -> . POS ABRE_P NUMERO COMA Var CIERRA_P
    (306) Pos -> . POS ABRE_P Var COMA Var CIERRA_P
    (307) Pos -> . POS ABRE_P expresion_alge1 COMA Var CIERRA_P
    (308) Pos -> . POS ABRE_P Var COMA expresion_alge1 CIERRA_P
    (309) Pos -> . POS ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P
    (310) Pos -> . POS ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (311) Pos -> . POS ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (312) Pos -> . POS ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (313) Pos -> . POS ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (314) Pos -> . POS ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (315) Pos -> . POS ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (316) PosX -> . POSX NUMERO PUNTOCOMA
    (317) PosX -> . POSX RESTA NUMERO PUNTOCOMA
    (318) PosX -> . POSX expresion_alge1 PUNTOCOMA
    (319) PosX -> . POSX expresion_alge2 PUNTOCOMA
    (320) PosX -> . POSX Var PUNTOCOMA
    (321) PosY -> . POSY NUMERO PUNTOCOMA
    (322) PosY -> . POSY RESTA NUMERO PUNTOCOMA
    (323) PosY -> . POSY expresion_alge1 PUNTOCOMA
    (324) PosY -> . POSY expresion_alge2 PUNTOCOMA
    (325) PosY -> . POSY Var PUNTOCOMA
    (326) UseColor -> . USECOLOR NUMERO PUNTOCOMA
    (327) UseColor -> . USECOLOR empty PUNTOCOMA

    BRACKET2        reduce using rule 338 (empty -> .)
    BEGINNING       shift and go to state 197
    CONTINUEUP      shift and go to state 198
    CONTINUEDOWN    shift and go to state 199
    CONTINUERIGHT   shift and go to state 200
    CONTINUELEFT    shift and go to state 201
    UP              shift and go to state 202
    DOWN            shift and go to state 203
    SPEED           shift and go to state 204
    POS             shift and go to state 205
    POSX            shift and go to state 206
    POSY            shift and go to state 207
    USECOLOR        shift and go to state 208

    Pos                            shift and go to state 193
    empty                          shift and go to state 289
    ordenes                        shift and go to state 290
    Beginning                      shift and go to state 184
    ContinueUp                     shift and go to state 185
    ContinueDown                   shift and go to state 186
    ContinueRight                  shift and go to state 187
    ContinueLeft                   shift and go to state 188
    Up                             shift and go to state 189
    Down                           shift and go to state 190
    Speed                          shift and go to state 191
    Diag                           shift and go to state 192
    PosX                           shift and go to state 194
    PosY                           shift and go to state 195
    UseColor                       shift and go to state 196

state 194

    (66) ordenes -> PosX . empty
    (79) ordenes -> PosX . ordenes
    (338) empty -> .
    (56) ordenes -> . Beginning empty
    (57) ordenes -> . ContinueUp empty
    (58) ordenes -> . ContinueDown empty
    (59) ordenes -> . ContinueRight empty
    (60) ordenes -> . ContinueLeft empty
    (61) ordenes -> . Up empty
    (62) ordenes -> . Down empty
    (63) ordenes -> . Speed empty
    (64) ordenes -> . Diag empty
    (65) ordenes -> . Pos empty
    (66) ordenes -> . PosX empty
    (67) ordenes -> . PosY empty
    (68) ordenes -> . UseColor empty
    (69) ordenes -> . Beginning ordenes
    (70) ordenes -> . ContinueUp ordenes
    (71) ordenes -> . ContinueDown ordenes
    (72) ordenes -> . ContinueRight ordenes
    (73) ordenes -> . ContinueLeft ordenes
    (74) ordenes -> . Up ordenes
    (75) ordenes -> . Down ordenes
    (76) ordenes -> . Speed ordenes
    (77) ordenes -> . Diag ordenes
    (78) ordenes -> . Pos ordenes
    (79) ordenes -> . PosX ordenes
    (80) ordenes -> . PosY ordenes
    (81) ordenes -> . UseColor ordenes
    (278) Beginning -> . BEGINNING PUNTOCOMA
    (280) ContinueUp -> . CONTINUEUP NUMERO PUNTOCOMA
    (281) ContinueUp -> . CONTINUEUP expresion_alge1 PUNTOCOMA
    (282) ContinueUp -> . CONTINUEUP expresion_alge2 PUNTOCOMA
    (283) ContinueUp -> . CONTINUEUP Var PUNTOCOMA
    (284) ContinueDown -> . CONTINUEDOWN NUMERO PUNTOCOMA
    (285) ContinueDown -> . CONTINUEDOWN expresion_alge1 PUNTOCOMA
    (286) ContinueDown -> . CONTINUEDOWN expresion_alge2 PUNTOCOMA
    (287) ContinueDown -> . CONTINUEDOWN Var PUNTOCOMA
    (288) ContinueRight -> . CONTINUERIGHT NUMERO PUNTOCOMA
    (289) ContinueRight -> . CONTINUERIGHT expresion_alge1 PUNTOCOMA
    (290) ContinueRight -> . CONTINUERIGHT expresion_alge2 PUNTOCOMA
    (291) ContinueRight -> . CONTINUERIGHT Var PUNTOCOMA
    (292) ContinueLeft -> . CONTINUELEFT NUMERO PUNTOCOMA
    (293) ContinueLeft -> . CONTINUELEFT expresion_alge1 PUNTOCOMA
    (294) ContinueLeft -> . CONTINUELEFT expresion_alge2 PUNTOCOMA
    (295) ContinueLeft -> . CONTINUELEFT Var PUNTOCOMA
    (296) Up -> . UP PUNTOCOMA
    (297) Down -> . DOWN PUNTOCOMA
    (298) Speed -> . SPEED NUMERO PUNTOCOMA
    (299) Diag -> . POS ABRE_P STRING COMA NUMERO CIERRA_P PUNTOCOMA
    (300) Pos -> . POS ABRE_P NUMERO COMA NUMERO CIERRA_P
    (301) Pos -> . POS ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (302) Pos -> . POS ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (303) Pos -> . POS ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (304) Pos -> . POS ABRE_P Var COMA NUMERO CIERRA_P
    (305) Pos -> . POS ABRE_P NUMERO COMA Var CIERRA_P
    (306) Pos -> . POS ABRE_P Var COMA Var CIERRA_P
    (307) Pos -> . POS ABRE_P expresion_alge1 COMA Var CIERRA_P
    (308) Pos -> . POS ABRE_P Var COMA expresion_alge1 CIERRA_P
    (309) Pos -> . POS ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P
    (310) Pos -> . POS ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (311) Pos -> . POS ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (312) Pos -> . POS ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (313) Pos -> . POS ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (314) Pos -> . POS ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (315) Pos -> . POS ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (316) PosX -> . POSX NUMERO PUNTOCOMA
    (317) PosX -> . POSX RESTA NUMERO PUNTOCOMA
    (318) PosX -> . POSX expresion_alge1 PUNTOCOMA
    (319) PosX -> . POSX expresion_alge2 PUNTOCOMA
    (320) PosX -> . POSX Var PUNTOCOMA
    (321) PosY -> . POSY NUMERO PUNTOCOMA
    (322) PosY -> . POSY RESTA NUMERO PUNTOCOMA
    (323) PosY -> . POSY expresion_alge1 PUNTOCOMA
    (324) PosY -> . POSY expresion_alge2 PUNTOCOMA
    (325) PosY -> . POSY Var PUNTOCOMA
    (326) UseColor -> . USECOLOR NUMERO PUNTOCOMA
    (327) UseColor -> . USECOLOR empty PUNTOCOMA

    BRACKET2        reduce using rule 338 (empty -> .)
    BEGINNING       shift and go to state 197
    CONTINUEUP      shift and go to state 198
    CONTINUEDOWN    shift and go to state 199
    CONTINUERIGHT   shift and go to state 200
    CONTINUELEFT    shift and go to state 201
    UP              shift and go to state 202
    DOWN            shift and go to state 203
    SPEED           shift and go to state 204
    POS             shift and go to state 205
    POSX            shift and go to state 206
    POSY            shift and go to state 207
    USECOLOR        shift and go to state 208

    PosX                           shift and go to state 194
    empty                          shift and go to state 291
    ordenes                        shift and go to state 292
    Beginning                      shift and go to state 184
    ContinueUp                     shift and go to state 185
    ContinueDown                   shift and go to state 186
    ContinueRight                  shift and go to state 187
    ContinueLeft                   shift and go to state 188
    Up                             shift and go to state 189
    Down                           shift and go to state 190
    Speed                          shift and go to state 191
    Diag                           shift and go to state 192
    Pos                            shift and go to state 193
    PosY                           shift and go to state 195
    UseColor                       shift and go to state 196

state 195

    (67) ordenes -> PosY . empty
    (80) ordenes -> PosY . ordenes
    (338) empty -> .
    (56) ordenes -> . Beginning empty
    (57) ordenes -> . ContinueUp empty
    (58) ordenes -> . ContinueDown empty
    (59) ordenes -> . ContinueRight empty
    (60) ordenes -> . ContinueLeft empty
    (61) ordenes -> . Up empty
    (62) ordenes -> . Down empty
    (63) ordenes -> . Speed empty
    (64) ordenes -> . Diag empty
    (65) ordenes -> . Pos empty
    (66) ordenes -> . PosX empty
    (67) ordenes -> . PosY empty
    (68) ordenes -> . UseColor empty
    (69) ordenes -> . Beginning ordenes
    (70) ordenes -> . ContinueUp ordenes
    (71) ordenes -> . ContinueDown ordenes
    (72) ordenes -> . ContinueRight ordenes
    (73) ordenes -> . ContinueLeft ordenes
    (74) ordenes -> . Up ordenes
    (75) ordenes -> . Down ordenes
    (76) ordenes -> . Speed ordenes
    (77) ordenes -> . Diag ordenes
    (78) ordenes -> . Pos ordenes
    (79) ordenes -> . PosX ordenes
    (80) ordenes -> . PosY ordenes
    (81) ordenes -> . UseColor ordenes
    (278) Beginning -> . BEGINNING PUNTOCOMA
    (280) ContinueUp -> . CONTINUEUP NUMERO PUNTOCOMA
    (281) ContinueUp -> . CONTINUEUP expresion_alge1 PUNTOCOMA
    (282) ContinueUp -> . CONTINUEUP expresion_alge2 PUNTOCOMA
    (283) ContinueUp -> . CONTINUEUP Var PUNTOCOMA
    (284) ContinueDown -> . CONTINUEDOWN NUMERO PUNTOCOMA
    (285) ContinueDown -> . CONTINUEDOWN expresion_alge1 PUNTOCOMA
    (286) ContinueDown -> . CONTINUEDOWN expresion_alge2 PUNTOCOMA
    (287) ContinueDown -> . CONTINUEDOWN Var PUNTOCOMA
    (288) ContinueRight -> . CONTINUERIGHT NUMERO PUNTOCOMA
    (289) ContinueRight -> . CONTINUERIGHT expresion_alge1 PUNTOCOMA
    (290) ContinueRight -> . CONTINUERIGHT expresion_alge2 PUNTOCOMA
    (291) ContinueRight -> . CONTINUERIGHT Var PUNTOCOMA
    (292) ContinueLeft -> . CONTINUELEFT NUMERO PUNTOCOMA
    (293) ContinueLeft -> . CONTINUELEFT expresion_alge1 PUNTOCOMA
    (294) ContinueLeft -> . CONTINUELEFT expresion_alge2 PUNTOCOMA
    (295) ContinueLeft -> . CONTINUELEFT Var PUNTOCOMA
    (296) Up -> . UP PUNTOCOMA
    (297) Down -> . DOWN PUNTOCOMA
    (298) Speed -> . SPEED NUMERO PUNTOCOMA
    (299) Diag -> . POS ABRE_P STRING COMA NUMERO CIERRA_P PUNTOCOMA
    (300) Pos -> . POS ABRE_P NUMERO COMA NUMERO CIERRA_P
    (301) Pos -> . POS ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (302) Pos -> . POS ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (303) Pos -> . POS ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (304) Pos -> . POS ABRE_P Var COMA NUMERO CIERRA_P
    (305) Pos -> . POS ABRE_P NUMERO COMA Var CIERRA_P
    (306) Pos -> . POS ABRE_P Var COMA Var CIERRA_P
    (307) Pos -> . POS ABRE_P expresion_alge1 COMA Var CIERRA_P
    (308) Pos -> . POS ABRE_P Var COMA expresion_alge1 CIERRA_P
    (309) Pos -> . POS ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P
    (310) Pos -> . POS ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (311) Pos -> . POS ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (312) Pos -> . POS ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (313) Pos -> . POS ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (314) Pos -> . POS ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (315) Pos -> . POS ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (316) PosX -> . POSX NUMERO PUNTOCOMA
    (317) PosX -> . POSX RESTA NUMERO PUNTOCOMA
    (318) PosX -> . POSX expresion_alge1 PUNTOCOMA
    (319) PosX -> . POSX expresion_alge2 PUNTOCOMA
    (320) PosX -> . POSX Var PUNTOCOMA
    (321) PosY -> . POSY NUMERO PUNTOCOMA
    (322) PosY -> . POSY RESTA NUMERO PUNTOCOMA
    (323) PosY -> . POSY expresion_alge1 PUNTOCOMA
    (324) PosY -> . POSY expresion_alge2 PUNTOCOMA
    (325) PosY -> . POSY Var PUNTOCOMA
    (326) UseColor -> . USECOLOR NUMERO PUNTOCOMA
    (327) UseColor -> . USECOLOR empty PUNTOCOMA

    BRACKET2        reduce using rule 338 (empty -> .)
    BEGINNING       shift and go to state 197
    CONTINUEUP      shift and go to state 198
    CONTINUEDOWN    shift and go to state 199
    CONTINUERIGHT   shift and go to state 200
    CONTINUELEFT    shift and go to state 201
    UP              shift and go to state 202
    DOWN            shift and go to state 203
    SPEED           shift and go to state 204
    POS             shift and go to state 205
    POSX            shift and go to state 206
    POSY            shift and go to state 207
    USECOLOR        shift and go to state 208

    PosY                           shift and go to state 195
    empty                          shift and go to state 293
    ordenes                        shift and go to state 294
    Beginning                      shift and go to state 184
    ContinueUp                     shift and go to state 185
    ContinueDown                   shift and go to state 186
    ContinueRight                  shift and go to state 187
    ContinueLeft                   shift and go to state 188
    Up                             shift and go to state 189
    Down                           shift and go to state 190
    Speed                          shift and go to state 191
    Diag                           shift and go to state 192
    Pos                            shift and go to state 193
    PosX                           shift and go to state 194
    UseColor                       shift and go to state 196

state 196

    (68) ordenes -> UseColor . empty
    (81) ordenes -> UseColor . ordenes
    (338) empty -> .
    (56) ordenes -> . Beginning empty
    (57) ordenes -> . ContinueUp empty
    (58) ordenes -> . ContinueDown empty
    (59) ordenes -> . ContinueRight empty
    (60) ordenes -> . ContinueLeft empty
    (61) ordenes -> . Up empty
    (62) ordenes -> . Down empty
    (63) ordenes -> . Speed empty
    (64) ordenes -> . Diag empty
    (65) ordenes -> . Pos empty
    (66) ordenes -> . PosX empty
    (67) ordenes -> . PosY empty
    (68) ordenes -> . UseColor empty
    (69) ordenes -> . Beginning ordenes
    (70) ordenes -> . ContinueUp ordenes
    (71) ordenes -> . ContinueDown ordenes
    (72) ordenes -> . ContinueRight ordenes
    (73) ordenes -> . ContinueLeft ordenes
    (74) ordenes -> . Up ordenes
    (75) ordenes -> . Down ordenes
    (76) ordenes -> . Speed ordenes
    (77) ordenes -> . Diag ordenes
    (78) ordenes -> . Pos ordenes
    (79) ordenes -> . PosX ordenes
    (80) ordenes -> . PosY ordenes
    (81) ordenes -> . UseColor ordenes
    (278) Beginning -> . BEGINNING PUNTOCOMA
    (280) ContinueUp -> . CONTINUEUP NUMERO PUNTOCOMA
    (281) ContinueUp -> . CONTINUEUP expresion_alge1 PUNTOCOMA
    (282) ContinueUp -> . CONTINUEUP expresion_alge2 PUNTOCOMA
    (283) ContinueUp -> . CONTINUEUP Var PUNTOCOMA
    (284) ContinueDown -> . CONTINUEDOWN NUMERO PUNTOCOMA
    (285) ContinueDown -> . CONTINUEDOWN expresion_alge1 PUNTOCOMA
    (286) ContinueDown -> . CONTINUEDOWN expresion_alge2 PUNTOCOMA
    (287) ContinueDown -> . CONTINUEDOWN Var PUNTOCOMA
    (288) ContinueRight -> . CONTINUERIGHT NUMERO PUNTOCOMA
    (289) ContinueRight -> . CONTINUERIGHT expresion_alge1 PUNTOCOMA
    (290) ContinueRight -> . CONTINUERIGHT expresion_alge2 PUNTOCOMA
    (291) ContinueRight -> . CONTINUERIGHT Var PUNTOCOMA
    (292) ContinueLeft -> . CONTINUELEFT NUMERO PUNTOCOMA
    (293) ContinueLeft -> . CONTINUELEFT expresion_alge1 PUNTOCOMA
    (294) ContinueLeft -> . CONTINUELEFT expresion_alge2 PUNTOCOMA
    (295) ContinueLeft -> . CONTINUELEFT Var PUNTOCOMA
    (296) Up -> . UP PUNTOCOMA
    (297) Down -> . DOWN PUNTOCOMA
    (298) Speed -> . SPEED NUMERO PUNTOCOMA
    (299) Diag -> . POS ABRE_P STRING COMA NUMERO CIERRA_P PUNTOCOMA
    (300) Pos -> . POS ABRE_P NUMERO COMA NUMERO CIERRA_P
    (301) Pos -> . POS ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (302) Pos -> . POS ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (303) Pos -> . POS ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (304) Pos -> . POS ABRE_P Var COMA NUMERO CIERRA_P
    (305) Pos -> . POS ABRE_P NUMERO COMA Var CIERRA_P
    (306) Pos -> . POS ABRE_P Var COMA Var CIERRA_P
    (307) Pos -> . POS ABRE_P expresion_alge1 COMA Var CIERRA_P
    (308) Pos -> . POS ABRE_P Var COMA expresion_alge1 CIERRA_P
    (309) Pos -> . POS ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P
    (310) Pos -> . POS ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (311) Pos -> . POS ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (312) Pos -> . POS ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (313) Pos -> . POS ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (314) Pos -> . POS ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (315) Pos -> . POS ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (316) PosX -> . POSX NUMERO PUNTOCOMA
    (317) PosX -> . POSX RESTA NUMERO PUNTOCOMA
    (318) PosX -> . POSX expresion_alge1 PUNTOCOMA
    (319) PosX -> . POSX expresion_alge2 PUNTOCOMA
    (320) PosX -> . POSX Var PUNTOCOMA
    (321) PosY -> . POSY NUMERO PUNTOCOMA
    (322) PosY -> . POSY RESTA NUMERO PUNTOCOMA
    (323) PosY -> . POSY expresion_alge1 PUNTOCOMA
    (324) PosY -> . POSY expresion_alge2 PUNTOCOMA
    (325) PosY -> . POSY Var PUNTOCOMA
    (326) UseColor -> . USECOLOR NUMERO PUNTOCOMA
    (327) UseColor -> . USECOLOR empty PUNTOCOMA

    BRACKET2        reduce using rule 338 (empty -> .)
    BEGINNING       shift and go to state 197
    CONTINUEUP      shift and go to state 198
    CONTINUEDOWN    shift and go to state 199
    CONTINUERIGHT   shift and go to state 200
    CONTINUELEFT    shift and go to state 201
    UP              shift and go to state 202
    DOWN            shift and go to state 203
    SPEED           shift and go to state 204
    POS             shift and go to state 205
    POSX            shift and go to state 206
    POSY            shift and go to state 207
    USECOLOR        shift and go to state 208

    UseColor                       shift and go to state 196
    empty                          shift and go to state 295
    ordenes                        shift and go to state 296
    Beginning                      shift and go to state 184
    ContinueUp                     shift and go to state 185
    ContinueDown                   shift and go to state 186
    ContinueRight                  shift and go to state 187
    ContinueLeft                   shift and go to state 188
    Up                             shift and go to state 189
    Down                           shift and go to state 190
    Speed                          shift and go to state 191
    Diag                           shift and go to state 192
    Pos                            shift and go to state 193
    PosX                           shift and go to state 194
    PosY                           shift and go to state 195

state 197

    (278) Beginning -> BEGINNING . PUNTOCOMA

    PUNTOCOMA       shift and go to state 297


state 198

    (280) ContinueUp -> CONTINUEUP . NUMERO PUNTOCOMA
    (281) ContinueUp -> CONTINUEUP . expresion_alge1 PUNTOCOMA
    (282) ContinueUp -> CONTINUEUP . expresion_alge2 PUNTOCOMA
    (283) ContinueUp -> CONTINUEUP . Var PUNTOCOMA
    (104) expresion_alge1 -> . NUMERO SUMA NUMERO
    (105) expresion_alge1 -> . NUMERO RESTA NUMERO
    (106) expresion_alge1 -> . NUMERO MULTI NUMERO
    (107) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (108) expresion_alge1 -> . RESTA NUMERO SUMA NUMERO
    (109) expresion_alge1 -> . RESTA NUMERO RESTA NUMERO
    (110) expresion_alge1 -> . RESTA NUMERO MULTI NUMERO
    (111) expresion_alge1 -> . RESTA NUMERO DIVISION NUMERO
    (112) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (113) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (114) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (115) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (180) Var -> . VAR

    NUMERO          shift and go to state 298
    RESTA           shift and go to state 65
    ABRE_P          shift and go to state 63
    VAR             shift and go to state 34

    expresion_alge1                shift and go to state 299
    expresion_alge2                shift and go to state 300
    Var                            shift and go to state 301

state 199

    (284) ContinueDown -> CONTINUEDOWN . NUMERO PUNTOCOMA
    (285) ContinueDown -> CONTINUEDOWN . expresion_alge1 PUNTOCOMA
    (286) ContinueDown -> CONTINUEDOWN . expresion_alge2 PUNTOCOMA
    (287) ContinueDown -> CONTINUEDOWN . Var PUNTOCOMA
    (104) expresion_alge1 -> . NUMERO SUMA NUMERO
    (105) expresion_alge1 -> . NUMERO RESTA NUMERO
    (106) expresion_alge1 -> . NUMERO MULTI NUMERO
    (107) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (108) expresion_alge1 -> . RESTA NUMERO SUMA NUMERO
    (109) expresion_alge1 -> . RESTA NUMERO RESTA NUMERO
    (110) expresion_alge1 -> . RESTA NUMERO MULTI NUMERO
    (111) expresion_alge1 -> . RESTA NUMERO DIVISION NUMERO
    (112) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (113) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (114) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (115) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (180) Var -> . VAR

    NUMERO          shift and go to state 302
    RESTA           shift and go to state 65
    ABRE_P          shift and go to state 63
    VAR             shift and go to state 34

    expresion_alge1                shift and go to state 303
    expresion_alge2                shift and go to state 304
    Var                            shift and go to state 305

state 200

    (288) ContinueRight -> CONTINUERIGHT . NUMERO PUNTOCOMA
    (289) ContinueRight -> CONTINUERIGHT . expresion_alge1 PUNTOCOMA
    (290) ContinueRight -> CONTINUERIGHT . expresion_alge2 PUNTOCOMA
    (291) ContinueRight -> CONTINUERIGHT . Var PUNTOCOMA
    (104) expresion_alge1 -> . NUMERO SUMA NUMERO
    (105) expresion_alge1 -> . NUMERO RESTA NUMERO
    (106) expresion_alge1 -> . NUMERO MULTI NUMERO
    (107) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (108) expresion_alge1 -> . RESTA NUMERO SUMA NUMERO
    (109) expresion_alge1 -> . RESTA NUMERO RESTA NUMERO
    (110) expresion_alge1 -> . RESTA NUMERO MULTI NUMERO
    (111) expresion_alge1 -> . RESTA NUMERO DIVISION NUMERO
    (112) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (113) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (114) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (115) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (180) Var -> . VAR

    NUMERO          shift and go to state 306
    RESTA           shift and go to state 65
    ABRE_P          shift and go to state 63
    VAR             shift and go to state 34

    expresion_alge1                shift and go to state 307
    expresion_alge2                shift and go to state 308
    Var                            shift and go to state 309

state 201

    (292) ContinueLeft -> CONTINUELEFT . NUMERO PUNTOCOMA
    (293) ContinueLeft -> CONTINUELEFT . expresion_alge1 PUNTOCOMA
    (294) ContinueLeft -> CONTINUELEFT . expresion_alge2 PUNTOCOMA
    (295) ContinueLeft -> CONTINUELEFT . Var PUNTOCOMA
    (104) expresion_alge1 -> . NUMERO SUMA NUMERO
    (105) expresion_alge1 -> . NUMERO RESTA NUMERO
    (106) expresion_alge1 -> . NUMERO MULTI NUMERO
    (107) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (108) expresion_alge1 -> . RESTA NUMERO SUMA NUMERO
    (109) expresion_alge1 -> . RESTA NUMERO RESTA NUMERO
    (110) expresion_alge1 -> . RESTA NUMERO MULTI NUMERO
    (111) expresion_alge1 -> . RESTA NUMERO DIVISION NUMERO
    (112) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (113) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (114) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (115) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (180) Var -> . VAR

    NUMERO          shift and go to state 310
    RESTA           shift and go to state 65
    ABRE_P          shift and go to state 63
    VAR             shift and go to state 34

    expresion_alge1                shift and go to state 311
    expresion_alge2                shift and go to state 312
    Var                            shift and go to state 313

state 202

    (296) Up -> UP . PUNTOCOMA

    PUNTOCOMA       shift and go to state 314


state 203

    (297) Down -> DOWN . PUNTOCOMA

    PUNTOCOMA       shift and go to state 315


state 204

    (298) Speed -> SPEED . NUMERO PUNTOCOMA

    NUMERO          shift and go to state 316


state 205

    (299) Diag -> POS . ABRE_P STRING COMA NUMERO CIERRA_P PUNTOCOMA
    (300) Pos -> POS . ABRE_P NUMERO COMA NUMERO CIERRA_P
    (301) Pos -> POS . ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (302) Pos -> POS . ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (303) Pos -> POS . ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (304) Pos -> POS . ABRE_P Var COMA NUMERO CIERRA_P
    (305) Pos -> POS . ABRE_P NUMERO COMA Var CIERRA_P
    (306) Pos -> POS . ABRE_P Var COMA Var CIERRA_P
    (307) Pos -> POS . ABRE_P expresion_alge1 COMA Var CIERRA_P
    (308) Pos -> POS . ABRE_P Var COMA expresion_alge1 CIERRA_P
    (309) Pos -> POS . ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P
    (310) Pos -> POS . ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (311) Pos -> POS . ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (312) Pos -> POS . ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (313) Pos -> POS . ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (314) Pos -> POS . ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (315) Pos -> POS . ABRE_P RESTA NUMERO COMA Var CIERRA_P

    ABRE_P          shift and go to state 317


state 206

    (316) PosX -> POSX . NUMERO PUNTOCOMA
    (317) PosX -> POSX . RESTA NUMERO PUNTOCOMA
    (318) PosX -> POSX . expresion_alge1 PUNTOCOMA
    (319) PosX -> POSX . expresion_alge2 PUNTOCOMA
    (320) PosX -> POSX . Var PUNTOCOMA
    (104) expresion_alge1 -> . NUMERO SUMA NUMERO
    (105) expresion_alge1 -> . NUMERO RESTA NUMERO
    (106) expresion_alge1 -> . NUMERO MULTI NUMERO
    (107) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (108) expresion_alge1 -> . RESTA NUMERO SUMA NUMERO
    (109) expresion_alge1 -> . RESTA NUMERO RESTA NUMERO
    (110) expresion_alge1 -> . RESTA NUMERO MULTI NUMERO
    (111) expresion_alge1 -> . RESTA NUMERO DIVISION NUMERO
    (112) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (113) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (114) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (115) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (180) Var -> . VAR

    NUMERO          shift and go to state 318
    RESTA           shift and go to state 319
    ABRE_P          shift and go to state 63
    VAR             shift and go to state 34

    expresion_alge1                shift and go to state 320
    expresion_alge2                shift and go to state 321
    Var                            shift and go to state 322

state 207

    (321) PosY -> POSY . NUMERO PUNTOCOMA
    (322) PosY -> POSY . RESTA NUMERO PUNTOCOMA
    (323) PosY -> POSY . expresion_alge1 PUNTOCOMA
    (324) PosY -> POSY . expresion_alge2 PUNTOCOMA
    (325) PosY -> POSY . Var PUNTOCOMA
    (104) expresion_alge1 -> . NUMERO SUMA NUMERO
    (105) expresion_alge1 -> . NUMERO RESTA NUMERO
    (106) expresion_alge1 -> . NUMERO MULTI NUMERO
    (107) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (108) expresion_alge1 -> . RESTA NUMERO SUMA NUMERO
    (109) expresion_alge1 -> . RESTA NUMERO RESTA NUMERO
    (110) expresion_alge1 -> . RESTA NUMERO MULTI NUMERO
    (111) expresion_alge1 -> . RESTA NUMERO DIVISION NUMERO
    (112) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (113) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (114) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (115) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (180) Var -> . VAR

    NUMERO          shift and go to state 323
    RESTA           shift and go to state 324
    ABRE_P          shift and go to state 63
    VAR             shift and go to state 34

    expresion_alge1                shift and go to state 325
    expresion_alge2                shift and go to state 326
    Var                            shift and go to state 327

state 208

    (326) UseColor -> USECOLOR . NUMERO PUNTOCOMA
    (327) UseColor -> USECOLOR . empty PUNTOCOMA
    (338) empty -> .

    NUMERO          shift and go to state 328
    PUNTOCOMA       reduce using rule 338 (empty -> .)

    empty                          shift and go to state 329

state 209

    (267) Repeat -> REPEAT NUMERO BRACKET1 . ordenes BRACKET2 cuerpo3
    (56) ordenes -> . Beginning empty
    (57) ordenes -> . ContinueUp empty
    (58) ordenes -> . ContinueDown empty
    (59) ordenes -> . ContinueRight empty
    (60) ordenes -> . ContinueLeft empty
    (61) ordenes -> . Up empty
    (62) ordenes -> . Down empty
    (63) ordenes -> . Speed empty
    (64) ordenes -> . Diag empty
    (65) ordenes -> . Pos empty
    (66) ordenes -> . PosX empty
    (67) ordenes -> . PosY empty
    (68) ordenes -> . UseColor empty
    (69) ordenes -> . Beginning ordenes
    (70) ordenes -> . ContinueUp ordenes
    (71) ordenes -> . ContinueDown ordenes
    (72) ordenes -> . ContinueRight ordenes
    (73) ordenes -> . ContinueLeft ordenes
    (74) ordenes -> . Up ordenes
    (75) ordenes -> . Down ordenes
    (76) ordenes -> . Speed ordenes
    (77) ordenes -> . Diag ordenes
    (78) ordenes -> . Pos ordenes
    (79) ordenes -> . PosX ordenes
    (80) ordenes -> . PosY ordenes
    (81) ordenes -> . UseColor ordenes
    (278) Beginning -> . BEGINNING PUNTOCOMA
    (280) ContinueUp -> . CONTINUEUP NUMERO PUNTOCOMA
    (281) ContinueUp -> . CONTINUEUP expresion_alge1 PUNTOCOMA
    (282) ContinueUp -> . CONTINUEUP expresion_alge2 PUNTOCOMA
    (283) ContinueUp -> . CONTINUEUP Var PUNTOCOMA
    (284) ContinueDown -> . CONTINUEDOWN NUMERO PUNTOCOMA
    (285) ContinueDown -> . CONTINUEDOWN expresion_alge1 PUNTOCOMA
    (286) ContinueDown -> . CONTINUEDOWN expresion_alge2 PUNTOCOMA
    (287) ContinueDown -> . CONTINUEDOWN Var PUNTOCOMA
    (288) ContinueRight -> . CONTINUERIGHT NUMERO PUNTOCOMA
    (289) ContinueRight -> . CONTINUERIGHT expresion_alge1 PUNTOCOMA
    (290) ContinueRight -> . CONTINUERIGHT expresion_alge2 PUNTOCOMA
    (291) ContinueRight -> . CONTINUERIGHT Var PUNTOCOMA
    (292) ContinueLeft -> . CONTINUELEFT NUMERO PUNTOCOMA
    (293) ContinueLeft -> . CONTINUELEFT expresion_alge1 PUNTOCOMA
    (294) ContinueLeft -> . CONTINUELEFT expresion_alge2 PUNTOCOMA
    (295) ContinueLeft -> . CONTINUELEFT Var PUNTOCOMA
    (296) Up -> . UP PUNTOCOMA
    (297) Down -> . DOWN PUNTOCOMA
    (298) Speed -> . SPEED NUMERO PUNTOCOMA
    (299) Diag -> . POS ABRE_P STRING COMA NUMERO CIERRA_P PUNTOCOMA
    (300) Pos -> . POS ABRE_P NUMERO COMA NUMERO CIERRA_P
    (301) Pos -> . POS ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (302) Pos -> . POS ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (303) Pos -> . POS ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (304) Pos -> . POS ABRE_P Var COMA NUMERO CIERRA_P
    (305) Pos -> . POS ABRE_P NUMERO COMA Var CIERRA_P
    (306) Pos -> . POS ABRE_P Var COMA Var CIERRA_P
    (307) Pos -> . POS ABRE_P expresion_alge1 COMA Var CIERRA_P
    (308) Pos -> . POS ABRE_P Var COMA expresion_alge1 CIERRA_P
    (309) Pos -> . POS ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P
    (310) Pos -> . POS ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (311) Pos -> . POS ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (312) Pos -> . POS ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (313) Pos -> . POS ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (314) Pos -> . POS ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (315) Pos -> . POS ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (316) PosX -> . POSX NUMERO PUNTOCOMA
    (317) PosX -> . POSX RESTA NUMERO PUNTOCOMA
    (318) PosX -> . POSX expresion_alge1 PUNTOCOMA
    (319) PosX -> . POSX expresion_alge2 PUNTOCOMA
    (320) PosX -> . POSX Var PUNTOCOMA
    (321) PosY -> . POSY NUMERO PUNTOCOMA
    (322) PosY -> . POSY RESTA NUMERO PUNTOCOMA
    (323) PosY -> . POSY expresion_alge1 PUNTOCOMA
    (324) PosY -> . POSY expresion_alge2 PUNTOCOMA
    (325) PosY -> . POSY Var PUNTOCOMA
    (326) UseColor -> . USECOLOR NUMERO PUNTOCOMA
    (327) UseColor -> . USECOLOR empty PUNTOCOMA

    BEGINNING       shift and go to state 197
    CONTINUEUP      shift and go to state 198
    CONTINUEDOWN    shift and go to state 199
    CONTINUERIGHT   shift and go to state 200
    CONTINUELEFT    shift and go to state 201
    UP              shift and go to state 202
    DOWN            shift and go to state 203
    SPEED           shift and go to state 204
    POS             shift and go to state 205
    POSX            shift and go to state 206
    POSY            shift and go to state 207
    USECOLOR        shift and go to state 208

    ordenes                        shift and go to state 330
    Beginning                      shift and go to state 184
    ContinueUp                     shift and go to state 185
    ContinueDown                   shift and go to state 186
    ContinueRight                  shift and go to state 187
    ContinueLeft                   shift and go to state 188
    Up                             shift and go to state 189
    Down                           shift and go to state 190
    Speed                          shift and go to state 191
    Diag                           shift and go to state 192
    Pos                            shift and go to state 193
    PosX                           shift and go to state 194
    PosY                           shift and go to state 195
    UseColor                       shift and go to state 196

state 210

    (148) Mult -> MULT ABRE_P NUMERO . COMA NUMERO CIERRA_P
    (150) Mult -> MULT ABRE_P NUMERO . COMA RESTA NUMERO CIERRA_P
    (151) Mult -> MULT ABRE_P NUMERO . COMA expresion_alge1 CIERRA_P
    (154) Mult -> MULT ABRE_P NUMERO . COMA Var CIERRA_P
    (104) expresion_alge1 -> NUMERO . SUMA NUMERO
    (105) expresion_alge1 -> NUMERO . RESTA NUMERO
    (106) expresion_alge1 -> NUMERO . MULTI NUMERO
    (107) expresion_alge1 -> NUMERO . DIVISION NUMERO

    COMA            shift and go to state 331
    SUMA            shift and go to state 126
    RESTA           shift and go to state 127
    MULTI           shift and go to state 128
    DIVISION        shift and go to state 129


state 211

    (149) Mult -> MULT ABRE_P RESTA . NUMERO COMA NUMERO CIERRA_P
    (152) Mult -> MULT ABRE_P RESTA . NUMERO COMA expresion_alge1 CIERRA_P
    (155) Mult -> MULT ABRE_P RESTA . NUMERO COMA Var CIERRA_P
    (163) Mult -> MULT ABRE_P RESTA . NUMERO COMA RESTA NUMERO CIERRA_P
    (108) expresion_alge1 -> RESTA . NUMERO SUMA NUMERO
    (109) expresion_alge1 -> RESTA . NUMERO RESTA NUMERO
    (110) expresion_alge1 -> RESTA . NUMERO MULTI NUMERO
    (111) expresion_alge1 -> RESTA . NUMERO DIVISION NUMERO

    NUMERO          shift and go to state 332


state 212

    (153) Mult -> MULT ABRE_P expresion_alge1 . COMA expresion_alge1 CIERRA_P
    (159) Mult -> MULT ABRE_P expresion_alge1 . COMA Var CIERRA_P
    (160) Mult -> MULT ABRE_P expresion_alge1 . COMA NUMERO CIERRA_P
    (161) Mult -> MULT ABRE_P expresion_alge1 . COMA RESTA NUMERO CIERRA_P

    COMA            shift and go to state 333


state 213

    (156) Mult -> MULT ABRE_P Var . COMA NUMERO CIERRA_P
    (157) Mult -> MULT ABRE_P Var . COMA RESTA NUMERO CIERRA_P
    (158) Mult -> MULT ABRE_P Var . COMA Var CIERRA_P
    (162) Mult -> MULT ABRE_P Var . COMA expresion_alge1 CIERRA_P

    COMA            shift and go to state 334


state 214

    (164) Div -> DIV ABRE_P NUMERO . COMA NUMERO CIERRA_P
    (166) Div -> DIV ABRE_P NUMERO . COMA RESTA NUMERO CIERRA_P
    (167) Div -> DIV ABRE_P NUMERO . COMA expresion_alge1 CIERRA_P
    (170) Div -> DIV ABRE_P NUMERO . COMA Var CIERRA_P
    (104) expresion_alge1 -> NUMERO . SUMA NUMERO
    (105) expresion_alge1 -> NUMERO . RESTA NUMERO
    (106) expresion_alge1 -> NUMERO . MULTI NUMERO
    (107) expresion_alge1 -> NUMERO . DIVISION NUMERO

    COMA            shift and go to state 335
    SUMA            shift and go to state 126
    RESTA           shift and go to state 127
    MULTI           shift and go to state 128
    DIVISION        shift and go to state 129


state 215

    (165) Div -> DIV ABRE_P RESTA . NUMERO COMA NUMERO CIERRA_P
    (168) Div -> DIV ABRE_P RESTA . NUMERO COMA expresion_alge1 CIERRA_P
    (171) Div -> DIV ABRE_P RESTA . NUMERO COMA Var CIERRA_P
    (179) Div -> DIV ABRE_P RESTA . NUMERO COMA RESTA NUMERO CIERRA_P
    (108) expresion_alge1 -> RESTA . NUMERO SUMA NUMERO
    (109) expresion_alge1 -> RESTA . NUMERO RESTA NUMERO
    (110) expresion_alge1 -> RESTA . NUMERO MULTI NUMERO
    (111) expresion_alge1 -> RESTA . NUMERO DIVISION NUMERO

    NUMERO          shift and go to state 336


state 216

    (169) Div -> DIV ABRE_P expresion_alge1 . COMA expresion_alge1 CIERRA_P
    (175) Div -> DIV ABRE_P expresion_alge1 . COMA Var CIERRA_P
    (176) Div -> DIV ABRE_P expresion_alge1 . COMA NUMERO CIERRA_P
    (177) Div -> DIV ABRE_P expresion_alge1 . COMA RESTA NUMERO CIERRA_P

    COMA            shift and go to state 337


state 217

    (172) Div -> DIV ABRE_P Var . COMA NUMERO CIERRA_P
    (173) Div -> DIV ABRE_P Var . COMA RESTA NUMERO CIERRA_P
    (174) Div -> DIV ABRE_P Var . COMA Var CIERRA_P
    (178) Div -> DIV ABRE_P Var . COMA expresion_alge1 CIERRA_P

    COMA            shift and go to state 338


state 218

    (116) Sum -> SUM ABRE_P NUMERO . COMA NUMERO CIERRA_P
    (118) Sum -> SUM ABRE_P NUMERO . COMA RESTA NUMERO CIERRA_P
    (119) Sum -> SUM ABRE_P NUMERO . COMA expresion_alge1 CIERRA_P
    (122) Sum -> SUM ABRE_P NUMERO . COMA Var CIERRA_P
    (104) expresion_alge1 -> NUMERO . SUMA NUMERO
    (105) expresion_alge1 -> NUMERO . RESTA NUMERO
    (106) expresion_alge1 -> NUMERO . MULTI NUMERO
    (107) expresion_alge1 -> NUMERO . DIVISION NUMERO

    COMA            shift and go to state 339
    SUMA            shift and go to state 126
    RESTA           shift and go to state 127
    MULTI           shift and go to state 128
    DIVISION        shift and go to state 129


state 219

    (117) Sum -> SUM ABRE_P RESTA . NUMERO COMA NUMERO CIERRA_P
    (120) Sum -> SUM ABRE_P RESTA . NUMERO COMA expresion_alge1 CIERRA_P
    (123) Sum -> SUM ABRE_P RESTA . NUMERO COMA Var CIERRA_P
    (131) Sum -> SUM ABRE_P RESTA . NUMERO COMA RESTA NUMERO CIERRA_P
    (108) expresion_alge1 -> RESTA . NUMERO SUMA NUMERO
    (109) expresion_alge1 -> RESTA . NUMERO RESTA NUMERO
    (110) expresion_alge1 -> RESTA . NUMERO MULTI NUMERO
    (111) expresion_alge1 -> RESTA . NUMERO DIVISION NUMERO

    NUMERO          shift and go to state 340


state 220

    (121) Sum -> SUM ABRE_P expresion_alge1 . COMA expresion_alge1 CIERRA_P
    (127) Sum -> SUM ABRE_P expresion_alge1 . COMA Var CIERRA_P
    (128) Sum -> SUM ABRE_P expresion_alge1 . COMA NUMERO CIERRA_P
    (129) Sum -> SUM ABRE_P expresion_alge1 . COMA RESTA NUMERO CIERRA_P

    COMA            shift and go to state 341


state 221

    (124) Sum -> SUM ABRE_P Var . COMA NUMERO CIERRA_P
    (125) Sum -> SUM ABRE_P Var . COMA RESTA NUMERO CIERRA_P
    (126) Sum -> SUM ABRE_P Var . COMA Var CIERRA_P
    (130) Sum -> SUM ABRE_P Var . COMA expresion_alge1 CIERRA_P

    COMA            shift and go to state 342


state 222

    (132) Substr -> SUBSTR ABRE_P NUMERO . COMA NUMERO CIERRA_P
    (134) Substr -> SUBSTR ABRE_P NUMERO . COMA RESTA NUMERO CIERRA_P
    (135) Substr -> SUBSTR ABRE_P NUMERO . COMA expresion_alge1 CIERRA_P
    (138) Substr -> SUBSTR ABRE_P NUMERO . COMA Var CIERRA_P
    (104) expresion_alge1 -> NUMERO . SUMA NUMERO
    (105) expresion_alge1 -> NUMERO . RESTA NUMERO
    (106) expresion_alge1 -> NUMERO . MULTI NUMERO
    (107) expresion_alge1 -> NUMERO . DIVISION NUMERO

    COMA            shift and go to state 343
    SUMA            shift and go to state 126
    RESTA           shift and go to state 127
    MULTI           shift and go to state 128
    DIVISION        shift and go to state 129


state 223

    (133) Substr -> SUBSTR ABRE_P RESTA . NUMERO COMA NUMERO CIERRA_P
    (136) Substr -> SUBSTR ABRE_P RESTA . NUMERO COMA expresion_alge1 CIERRA_P
    (139) Substr -> SUBSTR ABRE_P RESTA . NUMERO COMA Var CIERRA_P
    (147) Substr -> SUBSTR ABRE_P RESTA . NUMERO COMA RESTA NUMERO CIERRA_P
    (108) expresion_alge1 -> RESTA . NUMERO SUMA NUMERO
    (109) expresion_alge1 -> RESTA . NUMERO RESTA NUMERO
    (110) expresion_alge1 -> RESTA . NUMERO MULTI NUMERO
    (111) expresion_alge1 -> RESTA . NUMERO DIVISION NUMERO

    NUMERO          shift and go to state 344


state 224

    (137) Substr -> SUBSTR ABRE_P expresion_alge1 . COMA expresion_alge1 CIERRA_P
    (143) Substr -> SUBSTR ABRE_P expresion_alge1 . COMA Var CIERRA_P
    (144) Substr -> SUBSTR ABRE_P expresion_alge1 . COMA NUMERO CIERRA_P
    (145) Substr -> SUBSTR ABRE_P expresion_alge1 . COMA RESTA NUMERO CIERRA_P

    COMA            shift and go to state 345


state 225

    (140) Substr -> SUBSTR ABRE_P Var . COMA NUMERO CIERRA_P
    (141) Substr -> SUBSTR ABRE_P Var . COMA RESTA NUMERO CIERRA_P
    (142) Substr -> SUBSTR ABRE_P Var . COMA Var CIERRA_P
    (146) Substr -> SUBSTR ABRE_P Var . COMA expresion_alge1 CIERRA_P

    COMA            shift and go to state 346


state 226

    (279) Random -> RANDOM ABRE_P NUMERO . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 347


state 227

    (264) If -> IF ABRE_P condicion . CIERRA_P BRACKET1 funcion BRACKET2

    CIERRA_P        shift and go to state 348


state 228

    (101) condicion -> Equal .

    CIERRA_P        reduce using rule 101 (condicion -> Equal .)
    BRACKET2        reduce using rule 101 (condicion -> Equal .)


state 229

    (102) condicion -> Greater .

    CIERRA_P        reduce using rule 102 (condicion -> Greater .)
    BRACKET2        reduce using rule 102 (condicion -> Greater .)


state 230

    (103) condicion -> Smaller .

    CIERRA_P        reduce using rule 103 (condicion -> Smaller .)
    BRACKET2        reduce using rule 103 (condicion -> Smaller .)


state 231

    (181) Equal -> EQUAL . ABRE_P NUMERO COMA NUMERO CIERRA_P
    (182) Equal -> EQUAL . ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (183) Equal -> EQUAL . ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (184) Equal -> EQUAL . ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (185) Equal -> EQUAL . ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P
    (186) Equal -> EQUAL . ABRE_P Var COMA Var CIERRA_P
    (187) Equal -> EQUAL . ABRE_P NUMERO COMA Var CIERRA_P
    (188) Equal -> EQUAL . ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (189) Equal -> EQUAL . ABRE_P expresion_alge2 COMA Var CIERRA_P
    (190) Equal -> EQUAL . ABRE_P expresion_alge1 COMA Var CIERRA_P
    (191) Equal -> EQUAL . ABRE_P Var COMA NUMERO CIERRA_P
    (192) Equal -> EQUAL . ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (193) Equal -> EQUAL . ABRE_P Var COMA expresion_alge1 CIERRA_P
    (194) Equal -> EQUAL . ABRE_P Var COMA expresion_alge2 CIERRA_P
    (195) Equal -> EQUAL . ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P
    (196) Equal -> EQUAL . ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P
    (197) Equal -> EQUAL . ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (198) Equal -> EQUAL . ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (199) Equal -> EQUAL . ABRE_P expresion_alge2 COMA NUMERO CIERRA_P
    (200) Equal -> EQUAL . ABRE_P expresion_alge2 COMA RESTA NUMERO CIERRA_P
    (201) Equal -> EQUAL . ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (202) Equal -> EQUAL . ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (203) Equal -> EQUAL . ABRE_P NUMERO COMA expresion_alge2 CIERRA_P
    (204) Equal -> EQUAL . ABRE_P RESTA NUMERO COMA expresion_alge2 CIERRA_P
    (205) Equal -> EQUAL . ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P

    ABRE_P          shift and go to state 349


state 232

    (206) Greater -> GREATER . ABRE_P NUMERO COMA NUMERO CIERRA_P
    (207) Greater -> GREATER . ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (208) Greater -> GREATER . ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (209) Greater -> GREATER . ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (210) Greater -> GREATER . ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P
    (211) Greater -> GREATER . ABRE_P Var COMA Var CIERRA_P
    (212) Greater -> GREATER . ABRE_P NUMERO COMA Var CIERRA_P
    (213) Greater -> GREATER . ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (214) Greater -> GREATER . ABRE_P expresion_alge2 COMA Var CIERRA_P
    (215) Greater -> GREATER . ABRE_P expresion_alge1 COMA Var CIERRA_P
    (216) Greater -> GREATER . ABRE_P Var COMA NUMERO CIERRA_P
    (217) Greater -> GREATER . ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (218) Greater -> GREATER . ABRE_P Var COMA expresion_alge1 CIERRA_P
    (219) Greater -> GREATER . ABRE_P Var COMA expresion_alge2 CIERRA_P
    (220) Greater -> GREATER . ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P
    (221) Greater -> GREATER . ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P
    (222) Greater -> GREATER . ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (223) Greater -> GREATER . ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (224) Greater -> GREATER . ABRE_P expresion_alge2 COMA NUMERO CIERRA_P
    (225) Greater -> GREATER . ABRE_P expresion_alge2 COMA RESTA NUMERO CIERRA_P
    (226) Greater -> GREATER . ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (227) Greater -> GREATER . ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (228) Greater -> GREATER . ABRE_P NUMERO COMA expresion_alge2 CIERRA_P
    (229) Greater -> GREATER . ABRE_P RESTA NUMERO COMA expresion_alge2 CIERRA_P
    (230) Greater -> GREATER . ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P

    ABRE_P          shift and go to state 350


state 233

    (231) Smaller -> SMALLER . ABRE_P NUMERO COMA NUMERO CIERRA_P
    (232) Smaller -> SMALLER . ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (233) Smaller -> SMALLER . ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (234) Smaller -> SMALLER . ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (235) Smaller -> SMALLER . ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P
    (236) Smaller -> SMALLER . ABRE_P Var COMA Var CIERRA_P
    (237) Smaller -> SMALLER . ABRE_P NUMERO COMA Var CIERRA_P
    (238) Smaller -> SMALLER . ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (239) Smaller -> SMALLER . ABRE_P expresion_alge2 COMA Var CIERRA_P
    (240) Smaller -> SMALLER . ABRE_P expresion_alge1 COMA Var CIERRA_P
    (241) Smaller -> SMALLER . ABRE_P Var COMA NUMERO CIERRA_P
    (242) Smaller -> SMALLER . ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (243) Smaller -> SMALLER . ABRE_P Var COMA expresion_alge1 CIERRA_P
    (244) Smaller -> SMALLER . ABRE_P Var COMA expresion_alge2 CIERRA_P
    (245) Smaller -> SMALLER . ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P
    (246) Smaller -> SMALLER . ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P
    (247) Smaller -> SMALLER . ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (248) Smaller -> SMALLER . ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (249) Smaller -> SMALLER . ABRE_P expresion_alge2 COMA NUMERO CIERRA_P
    (250) Smaller -> SMALLER . ABRE_P expresion_alge2 COMA RESTA NUMERO CIERRA_P
    (251) Smaller -> SMALLER . ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (252) Smaller -> SMALLER . ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (253) Smaller -> SMALLER . ABRE_P NUMERO COMA expresion_alge2 CIERRA_P
    (254) Smaller -> SMALLER . ABRE_P RESTA NUMERO COMA expresion_alge2 CIERRA_P
    (255) Smaller -> SMALLER . ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P

    ABRE_P          shift and go to state 351


state 234

    (265) IfElse -> IFELSE ABRE_P condicion . CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2

    CIERRA_P        shift and go to state 352


state 235

    (268) Until -> UNTIL BRACKET1 funcion . BRACKET2 BRACKET1 condicion BRACKET2

    BRACKET2        shift and go to state 353


state 236

    (266) While -> WHILE BRACKET1 condicion . BRACKET2 BRACKET1 funcion BRACKET2

    BRACKET2        shift and go to state 354


state 237

    (337) PrintLine -> PRINTLINE ABRE_P exp . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 355


state 238

    (329) exp -> NUMERO . COMA exp
    (332) exp -> NUMERO . empty empty
    (338) empty -> .

    COMA            shift and go to state 356
    CIERRA_P        reduce using rule 338 (empty -> .)

    empty                          shift and go to state 357

state 239

    (330) exp -> STRING . COMA exp
    (335) exp -> STRING . empty empty
    (338) empty -> .

    COMA            shift and go to state 358
    CIERRA_P        reduce using rule 338 (empty -> .)

    empty                          shift and go to state 359

state 240

    (331) exp -> Var . COMA exp
    (336) exp -> Var . empty empty
    (338) empty -> .

    COMA            shift and go to state 360
    CIERRA_P        reduce using rule 338 (empty -> .)

    empty                          shift and go to state 361

state 241

    (333) exp -> RESTA . NUMERO empty empty
    (334) exp -> RESTA . NUMERO COMA empty

    NUMERO          shift and go to state 362


state 242

    (256) And -> AND ABRE_P expresion_alge1 . COMA expresion_alge1 CIERRA_P
    (257) And -> AND ABRE_P expresion_alge1 . COMA expresion_alge2 CIERRA_P

    COMA            shift and go to state 363


state 243

    (258) And -> AND ABRE_P expresion_alge2 . COMA expresion_alge1 CIERRA_P
    (259) And -> AND ABRE_P expresion_alge2 . COMA expresion_alge2 CIERRA_P

    COMA            shift and go to state 364


state 244

    (260) Or -> OR ABRE_P expresion_alge1 . COMA expresion_alge1 CIERRA_P
    (261) Or -> OR ABRE_P expresion_alge1 . COMA expresion_alge2 CIERRA_P

    COMA            shift and go to state 365


state 245

    (262) Or -> OR ABRE_P expresion_alge2 . COMA expresion_alge1 CIERRA_P
    (263) Or -> OR ABRE_P expresion_alge2 . COMA expresion_alge2 CIERRA_P

    COMA            shift and go to state 366


state 246

    (269) Add -> ADD ABRE_P Var . empty empty CIERRA_P PUNTOCOMA
    (270) Add -> ADD ABRE_P Var . COMA NUMERO CIERRA_P PUNTOCOMA
    (271) Add -> ADD ABRE_P Var . COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (272) Add -> ADD ABRE_P Var . COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (273) Add -> ADD ABRE_P Var . COMA Var CIERRA_P PUNTOCOMA
    (274) Add -> ADD ABRE_P Var . COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (338) empty -> .

    COMA            shift and go to state 368
    CIERRA_P        reduce using rule 338 (empty -> .)

    empty                          shift and go to state 367

state 247

    (95) Put -> PUT ABRE_P VAR COMA VAR CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 369


state 248

    (96) Put2 -> PUT ABRE_P VAR COMA NUMERO CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 370


state 249

    (97) Put2 -> PUT ABRE_P VAR COMA RESTA NUMERO . CIERRA_P PUNTOCOMA
    (108) expresion_alge1 -> RESTA NUMERO . SUMA NUMERO
    (109) expresion_alge1 -> RESTA NUMERO . RESTA NUMERO
    (110) expresion_alge1 -> RESTA NUMERO . MULTI NUMERO
    (111) expresion_alge1 -> RESTA NUMERO . DIVISION NUMERO

    CIERRA_P        shift and go to state 371
    SUMA            shift and go to state 180
    RESTA           shift and go to state 179
    MULTI           shift and go to state 181
    DIVISION        shift and go to state 182


state 250

    (98) Put2 -> PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 372


state 251

    (99) Put2 -> PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 373


state 252

    (100) Put2 -> PUT ABRE_P VAR COMA funcion CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 374


state 253

    (40) variable2 -> DEF VAR IGUAL RESTA NUMERO PUNTOCOMA .

    COMMENT         reduce using rule 40 (variable2 -> DEF VAR IGUAL RESTA NUMERO PUNTOCOMA .)
    PARA            reduce using rule 40 (variable2 -> DEF VAR IGUAL RESTA NUMERO PUNTOCOMA .)
    MAIN            reduce using rule 40 (variable2 -> DEF VAR IGUAL RESTA NUMERO PUNTOCOMA .)
    PUT             reduce using rule 40 (variable2 -> DEF VAR IGUAL RESTA NUMERO PUNTOCOMA .)
    DEF             reduce using rule 40 (variable2 -> DEF VAR IGUAL RESTA NUMERO PUNTOCOMA .)
    $end            reduce using rule 40 (variable2 -> DEF VAR IGUAL RESTA NUMERO PUNTOCOMA .)
    PUNTOCOMA       reduce using rule 40 (variable2 -> DEF VAR IGUAL RESTA NUMERO PUNTOCOMA .)
    RUN             reduce using rule 40 (variable2 -> DEF VAR IGUAL RESTA NUMERO PUNTOCOMA .)
    REPEAT          reduce using rule 40 (variable2 -> DEF VAR IGUAL RESTA NUMERO PUNTOCOMA .)
    NUMERO          reduce using rule 40 (variable2 -> DEF VAR IGUAL RESTA NUMERO PUNTOCOMA .)
    RESTA           reduce using rule 40 (variable2 -> DEF VAR IGUAL RESTA NUMERO PUNTOCOMA .)
    ABRE_P          reduce using rule 40 (variable2 -> DEF VAR IGUAL RESTA NUMERO PUNTOCOMA .)
    SUM             reduce using rule 40 (variable2 -> DEF VAR IGUAL RESTA NUMERO PUNTOCOMA .)
    SUBSTR          reduce using rule 40 (variable2 -> DEF VAR IGUAL RESTA NUMERO PUNTOCOMA .)
    MULT            reduce using rule 40 (variable2 -> DEF VAR IGUAL RESTA NUMERO PUNTOCOMA .)
    DIV             reduce using rule 40 (variable2 -> DEF VAR IGUAL RESTA NUMERO PUNTOCOMA .)
    RANDOM          reduce using rule 40 (variable2 -> DEF VAR IGUAL RESTA NUMERO PUNTOCOMA .)
    IF              reduce using rule 40 (variable2 -> DEF VAR IGUAL RESTA NUMERO PUNTOCOMA .)
    IFELSE          reduce using rule 40 (variable2 -> DEF VAR IGUAL RESTA NUMERO PUNTOCOMA .)
    UNTIL           reduce using rule 40 (variable2 -> DEF VAR IGUAL RESTA NUMERO PUNTOCOMA .)
    WHILE           reduce using rule 40 (variable2 -> DEF VAR IGUAL RESTA NUMERO PUNTOCOMA .)
    PRINTLINE       reduce using rule 40 (variable2 -> DEF VAR IGUAL RESTA NUMERO PUNTOCOMA .)
    AND             reduce using rule 40 (variable2 -> DEF VAR IGUAL RESTA NUMERO PUNTOCOMA .)
    OR              reduce using rule 40 (variable2 -> DEF VAR IGUAL RESTA NUMERO PUNTOCOMA .)
    ADD             reduce using rule 40 (variable2 -> DEF VAR IGUAL RESTA NUMERO PUNTOCOMA .)
    FIN             reduce using rule 40 (variable2 -> DEF VAR IGUAL RESTA NUMERO PUNTOCOMA .)


state 254

    (27) llamadoproc -> PARA id . BRACKET1 parametro BRACKET2 PUNTOCOMA

    BRACKET1        shift and go to state 375


state 255

    (34) variablexd -> empty empty .
    (55) expresion -> empty empty .
    (94) funcion -> empty empty .

  ! reduce/reduce conflict for FIN resolved using rule 34 (variablexd -> empty empty .)
  ! reduce/reduce conflict for FIN resolved using rule 34 (variablexd -> empty empty .)
    FIN             reduce using rule 34 (variablexd -> empty empty .)
    PUNTOCOMA       reduce using rule 94 (funcion -> empty empty .)
    NUMERO          reduce using rule 94 (funcion -> empty empty .)
    RESTA           reduce using rule 94 (funcion -> empty empty .)
    ABRE_P          reduce using rule 94 (funcion -> empty empty .)
    SUM             reduce using rule 94 (funcion -> empty empty .)
    SUBSTR          reduce using rule 94 (funcion -> empty empty .)
    MULT            reduce using rule 94 (funcion -> empty empty .)
    DIV             reduce using rule 94 (funcion -> empty empty .)
    RANDOM          reduce using rule 94 (funcion -> empty empty .)
    IF              reduce using rule 94 (funcion -> empty empty .)
    IFELSE          reduce using rule 94 (funcion -> empty empty .)
    UNTIL           reduce using rule 94 (funcion -> empty empty .)
    WHILE           reduce using rule 94 (funcion -> empty empty .)
    PRINTLINE       reduce using rule 94 (funcion -> empty empty .)
    AND             reduce using rule 94 (funcion -> empty empty .)
    OR              reduce using rule 94 (funcion -> empty empty .)
    ADD             reduce using rule 94 (funcion -> empty empty .)
    PUT             reduce using rule 94 (funcion -> empty empty .)

  ! FIN             [ reduce using rule 55 (expresion -> empty empty .) ]
  ! FIN             [ reduce using rule 94 (funcion -> empty empty .) ]


state 256

    (25) procedimiento -> PARA id BRACKET1 empty BRACKET2 cuerpo2 FIN . cuerpo
    (2) cuerpo -> . variable
    (3) cuerpo -> . procedimiento
    (4) cuerpo -> . main
    (5) cuerpo -> . COMMENT cuerpo
    (6) cuerpo -> . Put
    (7) cuerpo -> . Put2
    (29) variable -> . variable1 cuerpo
    (30) variable -> . variable2 cuerpo
    (31) variable -> . empty empty
    (25) procedimiento -> . PARA id BRACKET1 empty BRACKET2 cuerpo2 FIN cuerpo
    (26) procedimiento -> . PARA id BRACKET1 parametro BRACKET2 cuerpo2 FIN cuerpo
    (28) main -> . MAIN BRACKET1 BRACKET2 cuerpo3 FIN cuerpo
    (95) Put -> . PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA
    (96) Put2 -> . PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (97) Put2 -> . PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (98) Put2 -> . PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (99) Put2 -> . PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (100) Put2 -> . PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA
    (38) variable1 -> . DEF VAR PUNTOCOMA
    (39) variable2 -> . DEF VAR IGUAL NUMERO PUNTOCOMA
    (40) variable2 -> . DEF VAR IGUAL RESTA NUMERO PUNTOCOMA
    (338) empty -> .

    COMMENT         shift and go to state 3
    PARA            shift and go to state 13
    MAIN            shift and go to state 14
    PUT             shift and go to state 15
    DEF             shift and go to state 16
    $end            reduce using rule 338 (empty -> .)

    empty                          shift and go to state 12
    cuerpo                         shift and go to state 376
    variable                       shift and go to state 5
    procedimiento                  shift and go to state 6
    main                           shift and go to state 7
    Put                            shift and go to state 8
    Put2                           shift and go to state 9
    variable1                      shift and go to state 10
    variable2                      shift and go to state 11

state 257

    (9) cuerpo2 -> COMMENT cuerpo2 .

    FIN             reduce using rule 9 (cuerpo2 -> COMMENT cuerpo2 .)


state 258

    (32) variablexd -> variable1 cuerpo2 .

    FIN             reduce using rule 32 (variablexd -> variable1 cuerpo2 .)


state 259

    (33) variablexd -> variable2 cuerpo2 .

    FIN             reduce using rule 33 (variablexd -> variable2 cuerpo2 .)


state 260

    (26) procedimiento -> PARA id BRACKET1 parametro BRACKET2 cuerpo2 FIN . cuerpo
    (2) cuerpo -> . variable
    (3) cuerpo -> . procedimiento
    (4) cuerpo -> . main
    (5) cuerpo -> . COMMENT cuerpo
    (6) cuerpo -> . Put
    (7) cuerpo -> . Put2
    (29) variable -> . variable1 cuerpo
    (30) variable -> . variable2 cuerpo
    (31) variable -> . empty empty
    (25) procedimiento -> . PARA id BRACKET1 empty BRACKET2 cuerpo2 FIN cuerpo
    (26) procedimiento -> . PARA id BRACKET1 parametro BRACKET2 cuerpo2 FIN cuerpo
    (28) main -> . MAIN BRACKET1 BRACKET2 cuerpo3 FIN cuerpo
    (95) Put -> . PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA
    (96) Put2 -> . PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (97) Put2 -> . PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (98) Put2 -> . PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (99) Put2 -> . PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (100) Put2 -> . PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA
    (38) variable1 -> . DEF VAR PUNTOCOMA
    (39) variable2 -> . DEF VAR IGUAL NUMERO PUNTOCOMA
    (40) variable2 -> . DEF VAR IGUAL RESTA NUMERO PUNTOCOMA
    (338) empty -> .

    COMMENT         shift and go to state 3
    PARA            shift and go to state 13
    MAIN            shift and go to state 14
    PUT             shift and go to state 15
    DEF             shift and go to state 16
    $end            reduce using rule 338 (empty -> .)

    cuerpo                         shift and go to state 377
    variable                       shift and go to state 5
    procedimiento                  shift and go to state 6
    main                           shift and go to state 7
    Put                            shift and go to state 8
    Put2                           shift and go to state 9
    variable1                      shift and go to state 10
    variable2                      shift and go to state 11
    empty                          shift and go to state 12

state 261

    (96) Put2 -> PUT ABRE_P VAR . COMA NUMERO CIERRA_P PUNTOCOMA
    (97) Put2 -> PUT ABRE_P VAR . COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (98) Put2 -> PUT ABRE_P VAR . COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (99) Put2 -> PUT ABRE_P VAR . COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (100) Put2 -> PUT ABRE_P VAR . COMA funcion CIERRA_P PUNTOCOMA
    (95) Put -> PUT ABRE_P VAR . COMA VAR CIERRA_P PUNTOCOMA

    COMA            shift and go to state 378


state 262

    (112) expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P SUMA . ABRE_P expresion_alge1 CIERRA_P

    ABRE_P          shift and go to state 379


state 263

    (113) expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P RESTA . ABRE_P expresion_alge1 CIERRA_P

    ABRE_P          shift and go to state 380


state 264

    (114) expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P MULT . ABRE_P expresion_alge1 CIERRA_P

    ABRE_P          shift and go to state 381


state 265

    (115) expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P DIV . ABRE_P expresion_alge1 CIERRA_P

    ABRE_P          shift and go to state 382


state 266

    (109) expresion_alge1 -> RESTA NUMERO RESTA NUMERO .

    PUNTOCOMA       reduce using rule 109 (expresion_alge1 -> RESTA NUMERO RESTA NUMERO .)
    NUMERO          reduce using rule 109 (expresion_alge1 -> RESTA NUMERO RESTA NUMERO .)
    RESTA           reduce using rule 109 (expresion_alge1 -> RESTA NUMERO RESTA NUMERO .)
    ABRE_P          reduce using rule 109 (expresion_alge1 -> RESTA NUMERO RESTA NUMERO .)
    SUM             reduce using rule 109 (expresion_alge1 -> RESTA NUMERO RESTA NUMERO .)
    SUBSTR          reduce using rule 109 (expresion_alge1 -> RESTA NUMERO RESTA NUMERO .)
    MULT            reduce using rule 109 (expresion_alge1 -> RESTA NUMERO RESTA NUMERO .)
    DIV             reduce using rule 109 (expresion_alge1 -> RESTA NUMERO RESTA NUMERO .)
    RANDOM          reduce using rule 109 (expresion_alge1 -> RESTA NUMERO RESTA NUMERO .)
    IF              reduce using rule 109 (expresion_alge1 -> RESTA NUMERO RESTA NUMERO .)
    IFELSE          reduce using rule 109 (expresion_alge1 -> RESTA NUMERO RESTA NUMERO .)
    UNTIL           reduce using rule 109 (expresion_alge1 -> RESTA NUMERO RESTA NUMERO .)
    WHILE           reduce using rule 109 (expresion_alge1 -> RESTA NUMERO RESTA NUMERO .)
    PRINTLINE       reduce using rule 109 (expresion_alge1 -> RESTA NUMERO RESTA NUMERO .)
    AND             reduce using rule 109 (expresion_alge1 -> RESTA NUMERO RESTA NUMERO .)
    OR              reduce using rule 109 (expresion_alge1 -> RESTA NUMERO RESTA NUMERO .)
    ADD             reduce using rule 109 (expresion_alge1 -> RESTA NUMERO RESTA NUMERO .)
    PUT             reduce using rule 109 (expresion_alge1 -> RESTA NUMERO RESTA NUMERO .)
    FIN             reduce using rule 109 (expresion_alge1 -> RESTA NUMERO RESTA NUMERO .)
    CIERRA_P        reduce using rule 109 (expresion_alge1 -> RESTA NUMERO RESTA NUMERO .)
    COMA            reduce using rule 109 (expresion_alge1 -> RESTA NUMERO RESTA NUMERO .)


state 267

    (108) expresion_alge1 -> RESTA NUMERO SUMA NUMERO .

    PUNTOCOMA       reduce using rule 108 (expresion_alge1 -> RESTA NUMERO SUMA NUMERO .)
    NUMERO          reduce using rule 108 (expresion_alge1 -> RESTA NUMERO SUMA NUMERO .)
    RESTA           reduce using rule 108 (expresion_alge1 -> RESTA NUMERO SUMA NUMERO .)
    ABRE_P          reduce using rule 108 (expresion_alge1 -> RESTA NUMERO SUMA NUMERO .)
    SUM             reduce using rule 108 (expresion_alge1 -> RESTA NUMERO SUMA NUMERO .)
    SUBSTR          reduce using rule 108 (expresion_alge1 -> RESTA NUMERO SUMA NUMERO .)
    MULT            reduce using rule 108 (expresion_alge1 -> RESTA NUMERO SUMA NUMERO .)
    DIV             reduce using rule 108 (expresion_alge1 -> RESTA NUMERO SUMA NUMERO .)
    RANDOM          reduce using rule 108 (expresion_alge1 -> RESTA NUMERO SUMA NUMERO .)
    IF              reduce using rule 108 (expresion_alge1 -> RESTA NUMERO SUMA NUMERO .)
    IFELSE          reduce using rule 108 (expresion_alge1 -> RESTA NUMERO SUMA NUMERO .)
    UNTIL           reduce using rule 108 (expresion_alge1 -> RESTA NUMERO SUMA NUMERO .)
    WHILE           reduce using rule 108 (expresion_alge1 -> RESTA NUMERO SUMA NUMERO .)
    PRINTLINE       reduce using rule 108 (expresion_alge1 -> RESTA NUMERO SUMA NUMERO .)
    AND             reduce using rule 108 (expresion_alge1 -> RESTA NUMERO SUMA NUMERO .)
    OR              reduce using rule 108 (expresion_alge1 -> RESTA NUMERO SUMA NUMERO .)
    ADD             reduce using rule 108 (expresion_alge1 -> RESTA NUMERO SUMA NUMERO .)
    PUT             reduce using rule 108 (expresion_alge1 -> RESTA NUMERO SUMA NUMERO .)
    FIN             reduce using rule 108 (expresion_alge1 -> RESTA NUMERO SUMA NUMERO .)
    CIERRA_P        reduce using rule 108 (expresion_alge1 -> RESTA NUMERO SUMA NUMERO .)
    COMA            reduce using rule 108 (expresion_alge1 -> RESTA NUMERO SUMA NUMERO .)


state 268

    (110) expresion_alge1 -> RESTA NUMERO MULTI NUMERO .

    PUNTOCOMA       reduce using rule 110 (expresion_alge1 -> RESTA NUMERO MULTI NUMERO .)
    NUMERO          reduce using rule 110 (expresion_alge1 -> RESTA NUMERO MULTI NUMERO .)
    RESTA           reduce using rule 110 (expresion_alge1 -> RESTA NUMERO MULTI NUMERO .)
    ABRE_P          reduce using rule 110 (expresion_alge1 -> RESTA NUMERO MULTI NUMERO .)
    SUM             reduce using rule 110 (expresion_alge1 -> RESTA NUMERO MULTI NUMERO .)
    SUBSTR          reduce using rule 110 (expresion_alge1 -> RESTA NUMERO MULTI NUMERO .)
    MULT            reduce using rule 110 (expresion_alge1 -> RESTA NUMERO MULTI NUMERO .)
    DIV             reduce using rule 110 (expresion_alge1 -> RESTA NUMERO MULTI NUMERO .)
    RANDOM          reduce using rule 110 (expresion_alge1 -> RESTA NUMERO MULTI NUMERO .)
    IF              reduce using rule 110 (expresion_alge1 -> RESTA NUMERO MULTI NUMERO .)
    IFELSE          reduce using rule 110 (expresion_alge1 -> RESTA NUMERO MULTI NUMERO .)
    UNTIL           reduce using rule 110 (expresion_alge1 -> RESTA NUMERO MULTI NUMERO .)
    WHILE           reduce using rule 110 (expresion_alge1 -> RESTA NUMERO MULTI NUMERO .)
    PRINTLINE       reduce using rule 110 (expresion_alge1 -> RESTA NUMERO MULTI NUMERO .)
    AND             reduce using rule 110 (expresion_alge1 -> RESTA NUMERO MULTI NUMERO .)
    OR              reduce using rule 110 (expresion_alge1 -> RESTA NUMERO MULTI NUMERO .)
    ADD             reduce using rule 110 (expresion_alge1 -> RESTA NUMERO MULTI NUMERO .)
    PUT             reduce using rule 110 (expresion_alge1 -> RESTA NUMERO MULTI NUMERO .)
    FIN             reduce using rule 110 (expresion_alge1 -> RESTA NUMERO MULTI NUMERO .)
    CIERRA_P        reduce using rule 110 (expresion_alge1 -> RESTA NUMERO MULTI NUMERO .)
    COMA            reduce using rule 110 (expresion_alge1 -> RESTA NUMERO MULTI NUMERO .)


state 269

    (111) expresion_alge1 -> RESTA NUMERO DIVISION NUMERO .

    PUNTOCOMA       reduce using rule 111 (expresion_alge1 -> RESTA NUMERO DIVISION NUMERO .)
    NUMERO          reduce using rule 111 (expresion_alge1 -> RESTA NUMERO DIVISION NUMERO .)
    RESTA           reduce using rule 111 (expresion_alge1 -> RESTA NUMERO DIVISION NUMERO .)
    ABRE_P          reduce using rule 111 (expresion_alge1 -> RESTA NUMERO DIVISION NUMERO .)
    SUM             reduce using rule 111 (expresion_alge1 -> RESTA NUMERO DIVISION NUMERO .)
    SUBSTR          reduce using rule 111 (expresion_alge1 -> RESTA NUMERO DIVISION NUMERO .)
    MULT            reduce using rule 111 (expresion_alge1 -> RESTA NUMERO DIVISION NUMERO .)
    DIV             reduce using rule 111 (expresion_alge1 -> RESTA NUMERO DIVISION NUMERO .)
    RANDOM          reduce using rule 111 (expresion_alge1 -> RESTA NUMERO DIVISION NUMERO .)
    IF              reduce using rule 111 (expresion_alge1 -> RESTA NUMERO DIVISION NUMERO .)
    IFELSE          reduce using rule 111 (expresion_alge1 -> RESTA NUMERO DIVISION NUMERO .)
    UNTIL           reduce using rule 111 (expresion_alge1 -> RESTA NUMERO DIVISION NUMERO .)
    WHILE           reduce using rule 111 (expresion_alge1 -> RESTA NUMERO DIVISION NUMERO .)
    PRINTLINE       reduce using rule 111 (expresion_alge1 -> RESTA NUMERO DIVISION NUMERO .)
    AND             reduce using rule 111 (expresion_alge1 -> RESTA NUMERO DIVISION NUMERO .)
    OR              reduce using rule 111 (expresion_alge1 -> RESTA NUMERO DIVISION NUMERO .)
    ADD             reduce using rule 111 (expresion_alge1 -> RESTA NUMERO DIVISION NUMERO .)
    PUT             reduce using rule 111 (expresion_alge1 -> RESTA NUMERO DIVISION NUMERO .)
    FIN             reduce using rule 111 (expresion_alge1 -> RESTA NUMERO DIVISION NUMERO .)
    CIERRA_P        reduce using rule 111 (expresion_alge1 -> RESTA NUMERO DIVISION NUMERO .)
    COMA            reduce using rule 111 (expresion_alge1 -> RESTA NUMERO DIVISION NUMERO .)


state 270

    (328) Run -> RUN BRACKET1 ordenes BRACKET2 . PUNTOCOMA cuerpo3

    PUNTOCOMA       shift and go to state 383


state 271

    (56) ordenes -> Beginning empty .

    BRACKET2        reduce using rule 56 (ordenes -> Beginning empty .)


state 272

    (69) ordenes -> Beginning ordenes .

    BRACKET2        reduce using rule 69 (ordenes -> Beginning ordenes .)


state 273

    (57) ordenes -> ContinueUp empty .

    BRACKET2        reduce using rule 57 (ordenes -> ContinueUp empty .)


state 274

    (70) ordenes -> ContinueUp ordenes .

    BRACKET2        reduce using rule 70 (ordenes -> ContinueUp ordenes .)


state 275

    (58) ordenes -> ContinueDown empty .

    BRACKET2        reduce using rule 58 (ordenes -> ContinueDown empty .)


state 276

    (71) ordenes -> ContinueDown ordenes .

    BRACKET2        reduce using rule 71 (ordenes -> ContinueDown ordenes .)


state 277

    (59) ordenes -> ContinueRight empty .

    BRACKET2        reduce using rule 59 (ordenes -> ContinueRight empty .)


state 278

    (72) ordenes -> ContinueRight ordenes .

    BRACKET2        reduce using rule 72 (ordenes -> ContinueRight ordenes .)


state 279

    (60) ordenes -> ContinueLeft empty .

    BRACKET2        reduce using rule 60 (ordenes -> ContinueLeft empty .)


state 280

    (73) ordenes -> ContinueLeft ordenes .

    BRACKET2        reduce using rule 73 (ordenes -> ContinueLeft ordenes .)


state 281

    (61) ordenes -> Up empty .

    BRACKET2        reduce using rule 61 (ordenes -> Up empty .)


state 282

    (74) ordenes -> Up ordenes .

    BRACKET2        reduce using rule 74 (ordenes -> Up ordenes .)


state 283

    (62) ordenes -> Down empty .

    BRACKET2        reduce using rule 62 (ordenes -> Down empty .)


state 284

    (75) ordenes -> Down ordenes .

    BRACKET2        reduce using rule 75 (ordenes -> Down ordenes .)


state 285

    (63) ordenes -> Speed empty .

    BRACKET2        reduce using rule 63 (ordenes -> Speed empty .)


state 286

    (76) ordenes -> Speed ordenes .

    BRACKET2        reduce using rule 76 (ordenes -> Speed ordenes .)


state 287

    (64) ordenes -> Diag empty .

    BRACKET2        reduce using rule 64 (ordenes -> Diag empty .)


state 288

    (77) ordenes -> Diag ordenes .

    BRACKET2        reduce using rule 77 (ordenes -> Diag ordenes .)


state 289

    (65) ordenes -> Pos empty .

    BRACKET2        reduce using rule 65 (ordenes -> Pos empty .)


state 290

    (78) ordenes -> Pos ordenes .

    BRACKET2        reduce using rule 78 (ordenes -> Pos ordenes .)


state 291

    (66) ordenes -> PosX empty .

    BRACKET2        reduce using rule 66 (ordenes -> PosX empty .)


state 292

    (79) ordenes -> PosX ordenes .

    BRACKET2        reduce using rule 79 (ordenes -> PosX ordenes .)


state 293

    (67) ordenes -> PosY empty .

    BRACKET2        reduce using rule 67 (ordenes -> PosY empty .)


state 294

    (80) ordenes -> PosY ordenes .

    BRACKET2        reduce using rule 80 (ordenes -> PosY ordenes .)


state 295

    (68) ordenes -> UseColor empty .

    BRACKET2        reduce using rule 68 (ordenes -> UseColor empty .)


state 296

    (81) ordenes -> UseColor ordenes .

    BRACKET2        reduce using rule 81 (ordenes -> UseColor ordenes .)


state 297

    (278) Beginning -> BEGINNING PUNTOCOMA .

    BEGINNING       reduce using rule 278 (Beginning -> BEGINNING PUNTOCOMA .)
    CONTINUEUP      reduce using rule 278 (Beginning -> BEGINNING PUNTOCOMA .)
    CONTINUEDOWN    reduce using rule 278 (Beginning -> BEGINNING PUNTOCOMA .)
    CONTINUERIGHT   reduce using rule 278 (Beginning -> BEGINNING PUNTOCOMA .)
    CONTINUELEFT    reduce using rule 278 (Beginning -> BEGINNING PUNTOCOMA .)
    UP              reduce using rule 278 (Beginning -> BEGINNING PUNTOCOMA .)
    DOWN            reduce using rule 278 (Beginning -> BEGINNING PUNTOCOMA .)
    SPEED           reduce using rule 278 (Beginning -> BEGINNING PUNTOCOMA .)
    POS             reduce using rule 278 (Beginning -> BEGINNING PUNTOCOMA .)
    POSX            reduce using rule 278 (Beginning -> BEGINNING PUNTOCOMA .)
    POSY            reduce using rule 278 (Beginning -> BEGINNING PUNTOCOMA .)
    USECOLOR        reduce using rule 278 (Beginning -> BEGINNING PUNTOCOMA .)
    BRACKET2        reduce using rule 278 (Beginning -> BEGINNING PUNTOCOMA .)


state 298

    (280) ContinueUp -> CONTINUEUP NUMERO . PUNTOCOMA
    (104) expresion_alge1 -> NUMERO . SUMA NUMERO
    (105) expresion_alge1 -> NUMERO . RESTA NUMERO
    (106) expresion_alge1 -> NUMERO . MULTI NUMERO
    (107) expresion_alge1 -> NUMERO . DIVISION NUMERO

    PUNTOCOMA       shift and go to state 384
    SUMA            shift and go to state 126
    RESTA           shift and go to state 127
    MULTI           shift and go to state 128
    DIVISION        shift and go to state 129


state 299

    (281) ContinueUp -> CONTINUEUP expresion_alge1 . PUNTOCOMA

    PUNTOCOMA       shift and go to state 385


state 300

    (282) ContinueUp -> CONTINUEUP expresion_alge2 . PUNTOCOMA

    PUNTOCOMA       shift and go to state 386


state 301

    (283) ContinueUp -> CONTINUEUP Var . PUNTOCOMA

    PUNTOCOMA       shift and go to state 387


state 302

    (284) ContinueDown -> CONTINUEDOWN NUMERO . PUNTOCOMA
    (104) expresion_alge1 -> NUMERO . SUMA NUMERO
    (105) expresion_alge1 -> NUMERO . RESTA NUMERO
    (106) expresion_alge1 -> NUMERO . MULTI NUMERO
    (107) expresion_alge1 -> NUMERO . DIVISION NUMERO

    PUNTOCOMA       shift and go to state 388
    SUMA            shift and go to state 126
    RESTA           shift and go to state 127
    MULTI           shift and go to state 128
    DIVISION        shift and go to state 129


state 303

    (285) ContinueDown -> CONTINUEDOWN expresion_alge1 . PUNTOCOMA

    PUNTOCOMA       shift and go to state 389


state 304

    (286) ContinueDown -> CONTINUEDOWN expresion_alge2 . PUNTOCOMA

    PUNTOCOMA       shift and go to state 390


state 305

    (287) ContinueDown -> CONTINUEDOWN Var . PUNTOCOMA

    PUNTOCOMA       shift and go to state 391


state 306

    (288) ContinueRight -> CONTINUERIGHT NUMERO . PUNTOCOMA
    (104) expresion_alge1 -> NUMERO . SUMA NUMERO
    (105) expresion_alge1 -> NUMERO . RESTA NUMERO
    (106) expresion_alge1 -> NUMERO . MULTI NUMERO
    (107) expresion_alge1 -> NUMERO . DIVISION NUMERO

    PUNTOCOMA       shift and go to state 392
    SUMA            shift and go to state 126
    RESTA           shift and go to state 127
    MULTI           shift and go to state 128
    DIVISION        shift and go to state 129


state 307

    (289) ContinueRight -> CONTINUERIGHT expresion_alge1 . PUNTOCOMA

    PUNTOCOMA       shift and go to state 393


state 308

    (290) ContinueRight -> CONTINUERIGHT expresion_alge2 . PUNTOCOMA

    PUNTOCOMA       shift and go to state 394


state 309

    (291) ContinueRight -> CONTINUERIGHT Var . PUNTOCOMA

    PUNTOCOMA       shift and go to state 395


state 310

    (292) ContinueLeft -> CONTINUELEFT NUMERO . PUNTOCOMA
    (104) expresion_alge1 -> NUMERO . SUMA NUMERO
    (105) expresion_alge1 -> NUMERO . RESTA NUMERO
    (106) expresion_alge1 -> NUMERO . MULTI NUMERO
    (107) expresion_alge1 -> NUMERO . DIVISION NUMERO

    PUNTOCOMA       shift and go to state 396
    SUMA            shift and go to state 126
    RESTA           shift and go to state 127
    MULTI           shift and go to state 128
    DIVISION        shift and go to state 129


state 311

    (293) ContinueLeft -> CONTINUELEFT expresion_alge1 . PUNTOCOMA

    PUNTOCOMA       shift and go to state 397


state 312

    (294) ContinueLeft -> CONTINUELEFT expresion_alge2 . PUNTOCOMA

    PUNTOCOMA       shift and go to state 398


state 313

    (295) ContinueLeft -> CONTINUELEFT Var . PUNTOCOMA

    PUNTOCOMA       shift and go to state 399


state 314

    (296) Up -> UP PUNTOCOMA .

    BEGINNING       reduce using rule 296 (Up -> UP PUNTOCOMA .)
    CONTINUEUP      reduce using rule 296 (Up -> UP PUNTOCOMA .)
    CONTINUEDOWN    reduce using rule 296 (Up -> UP PUNTOCOMA .)
    CONTINUERIGHT   reduce using rule 296 (Up -> UP PUNTOCOMA .)
    CONTINUELEFT    reduce using rule 296 (Up -> UP PUNTOCOMA .)
    UP              reduce using rule 296 (Up -> UP PUNTOCOMA .)
    DOWN            reduce using rule 296 (Up -> UP PUNTOCOMA .)
    SPEED           reduce using rule 296 (Up -> UP PUNTOCOMA .)
    POS             reduce using rule 296 (Up -> UP PUNTOCOMA .)
    POSX            reduce using rule 296 (Up -> UP PUNTOCOMA .)
    POSY            reduce using rule 296 (Up -> UP PUNTOCOMA .)
    USECOLOR        reduce using rule 296 (Up -> UP PUNTOCOMA .)
    BRACKET2        reduce using rule 296 (Up -> UP PUNTOCOMA .)


state 315

    (297) Down -> DOWN PUNTOCOMA .

    BEGINNING       reduce using rule 297 (Down -> DOWN PUNTOCOMA .)
    CONTINUEUP      reduce using rule 297 (Down -> DOWN PUNTOCOMA .)
    CONTINUEDOWN    reduce using rule 297 (Down -> DOWN PUNTOCOMA .)
    CONTINUERIGHT   reduce using rule 297 (Down -> DOWN PUNTOCOMA .)
    CONTINUELEFT    reduce using rule 297 (Down -> DOWN PUNTOCOMA .)
    UP              reduce using rule 297 (Down -> DOWN PUNTOCOMA .)
    DOWN            reduce using rule 297 (Down -> DOWN PUNTOCOMA .)
    SPEED           reduce using rule 297 (Down -> DOWN PUNTOCOMA .)
    POS             reduce using rule 297 (Down -> DOWN PUNTOCOMA .)
    POSX            reduce using rule 297 (Down -> DOWN PUNTOCOMA .)
    POSY            reduce using rule 297 (Down -> DOWN PUNTOCOMA .)
    USECOLOR        reduce using rule 297 (Down -> DOWN PUNTOCOMA .)
    BRACKET2        reduce using rule 297 (Down -> DOWN PUNTOCOMA .)


state 316

    (298) Speed -> SPEED NUMERO . PUNTOCOMA

    PUNTOCOMA       shift and go to state 400


state 317

    (299) Diag -> POS ABRE_P . STRING COMA NUMERO CIERRA_P PUNTOCOMA
    (300) Pos -> POS ABRE_P . NUMERO COMA NUMERO CIERRA_P
    (301) Pos -> POS ABRE_P . expresion_alge1 COMA NUMERO CIERRA_P
    (302) Pos -> POS ABRE_P . NUMERO COMA expresion_alge1 CIERRA_P
    (303) Pos -> POS ABRE_P . expresion_alge1 COMA expresion_alge1 CIERRA_P
    (304) Pos -> POS ABRE_P . Var COMA NUMERO CIERRA_P
    (305) Pos -> POS ABRE_P . NUMERO COMA Var CIERRA_P
    (306) Pos -> POS ABRE_P . Var COMA Var CIERRA_P
    (307) Pos -> POS ABRE_P . expresion_alge1 COMA Var CIERRA_P
    (308) Pos -> POS ABRE_P . Var COMA expresion_alge1 CIERRA_P
    (309) Pos -> POS ABRE_P . RESTA NUMERO COMA RESTA NUMERO CIERRA_P
    (310) Pos -> POS ABRE_P . RESTA NUMERO COMA NUMERO CIERRA_P
    (311) Pos -> POS ABRE_P . NUMERO COMA RESTA NUMERO CIERRA_P
    (312) Pos -> POS ABRE_P . RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (313) Pos -> POS ABRE_P . expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (314) Pos -> POS ABRE_P . Var COMA RESTA NUMERO CIERRA_P
    (315) Pos -> POS ABRE_P . RESTA NUMERO COMA Var CIERRA_P
    (104) expresion_alge1 -> . NUMERO SUMA NUMERO
    (105) expresion_alge1 -> . NUMERO RESTA NUMERO
    (106) expresion_alge1 -> . NUMERO MULTI NUMERO
    (107) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (108) expresion_alge1 -> . RESTA NUMERO SUMA NUMERO
    (109) expresion_alge1 -> . RESTA NUMERO RESTA NUMERO
    (110) expresion_alge1 -> . RESTA NUMERO MULTI NUMERO
    (111) expresion_alge1 -> . RESTA NUMERO DIVISION NUMERO
    (180) Var -> . VAR

    STRING          shift and go to state 401
    NUMERO          shift and go to state 402
    RESTA           shift and go to state 405
    VAR             shift and go to state 34

    expresion_alge1                shift and go to state 403
    Var                            shift and go to state 404

state 318

    (316) PosX -> POSX NUMERO . PUNTOCOMA
    (104) expresion_alge1 -> NUMERO . SUMA NUMERO
    (105) expresion_alge1 -> NUMERO . RESTA NUMERO
    (106) expresion_alge1 -> NUMERO . MULTI NUMERO
    (107) expresion_alge1 -> NUMERO . DIVISION NUMERO

    PUNTOCOMA       shift and go to state 406
    SUMA            shift and go to state 126
    RESTA           shift and go to state 127
    MULTI           shift and go to state 128
    DIVISION        shift and go to state 129


state 319

    (317) PosX -> POSX RESTA . NUMERO PUNTOCOMA
    (108) expresion_alge1 -> RESTA . NUMERO SUMA NUMERO
    (109) expresion_alge1 -> RESTA . NUMERO RESTA NUMERO
    (110) expresion_alge1 -> RESTA . NUMERO MULTI NUMERO
    (111) expresion_alge1 -> RESTA . NUMERO DIVISION NUMERO

    NUMERO          shift and go to state 407


state 320

    (318) PosX -> POSX expresion_alge1 . PUNTOCOMA

    PUNTOCOMA       shift and go to state 408


state 321

    (319) PosX -> POSX expresion_alge2 . PUNTOCOMA

    PUNTOCOMA       shift and go to state 409


state 322

    (320) PosX -> POSX Var . PUNTOCOMA

    PUNTOCOMA       shift and go to state 410


state 323

    (321) PosY -> POSY NUMERO . PUNTOCOMA
    (104) expresion_alge1 -> NUMERO . SUMA NUMERO
    (105) expresion_alge1 -> NUMERO . RESTA NUMERO
    (106) expresion_alge1 -> NUMERO . MULTI NUMERO
    (107) expresion_alge1 -> NUMERO . DIVISION NUMERO

    PUNTOCOMA       shift and go to state 411
    SUMA            shift and go to state 126
    RESTA           shift and go to state 127
    MULTI           shift and go to state 128
    DIVISION        shift and go to state 129


state 324

    (322) PosY -> POSY RESTA . NUMERO PUNTOCOMA
    (108) expresion_alge1 -> RESTA . NUMERO SUMA NUMERO
    (109) expresion_alge1 -> RESTA . NUMERO RESTA NUMERO
    (110) expresion_alge1 -> RESTA . NUMERO MULTI NUMERO
    (111) expresion_alge1 -> RESTA . NUMERO DIVISION NUMERO

    NUMERO          shift and go to state 412


state 325

    (323) PosY -> POSY expresion_alge1 . PUNTOCOMA

    PUNTOCOMA       shift and go to state 413


state 326

    (324) PosY -> POSY expresion_alge2 . PUNTOCOMA

    PUNTOCOMA       shift and go to state 414


state 327

    (325) PosY -> POSY Var . PUNTOCOMA

    PUNTOCOMA       shift and go to state 415


state 328

    (326) UseColor -> USECOLOR NUMERO . PUNTOCOMA

    PUNTOCOMA       shift and go to state 416


state 329

    (327) UseColor -> USECOLOR empty . PUNTOCOMA

    PUNTOCOMA       shift and go to state 417


state 330

    (267) Repeat -> REPEAT NUMERO BRACKET1 ordenes . BRACKET2 cuerpo3

    BRACKET2        shift and go to state 418


state 331

    (148) Mult -> MULT ABRE_P NUMERO COMA . NUMERO CIERRA_P
    (150) Mult -> MULT ABRE_P NUMERO COMA . RESTA NUMERO CIERRA_P
    (151) Mult -> MULT ABRE_P NUMERO COMA . expresion_alge1 CIERRA_P
    (154) Mult -> MULT ABRE_P NUMERO COMA . Var CIERRA_P
    (104) expresion_alge1 -> . NUMERO SUMA NUMERO
    (105) expresion_alge1 -> . NUMERO RESTA NUMERO
    (106) expresion_alge1 -> . NUMERO MULTI NUMERO
    (107) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (108) expresion_alge1 -> . RESTA NUMERO SUMA NUMERO
    (109) expresion_alge1 -> . RESTA NUMERO RESTA NUMERO
    (110) expresion_alge1 -> . RESTA NUMERO MULTI NUMERO
    (111) expresion_alge1 -> . RESTA NUMERO DIVISION NUMERO
    (180) Var -> . VAR

    NUMERO          shift and go to state 419
    RESTA           shift and go to state 420
    VAR             shift and go to state 34

    expresion_alge1                shift and go to state 421
    Var                            shift and go to state 422

state 332

    (149) Mult -> MULT ABRE_P RESTA NUMERO . COMA NUMERO CIERRA_P
    (152) Mult -> MULT ABRE_P RESTA NUMERO . COMA expresion_alge1 CIERRA_P
    (155) Mult -> MULT ABRE_P RESTA NUMERO . COMA Var CIERRA_P
    (163) Mult -> MULT ABRE_P RESTA NUMERO . COMA RESTA NUMERO CIERRA_P
    (108) expresion_alge1 -> RESTA NUMERO . SUMA NUMERO
    (109) expresion_alge1 -> RESTA NUMERO . RESTA NUMERO
    (110) expresion_alge1 -> RESTA NUMERO . MULTI NUMERO
    (111) expresion_alge1 -> RESTA NUMERO . DIVISION NUMERO

    COMA            shift and go to state 423
    SUMA            shift and go to state 180
    RESTA           shift and go to state 179
    MULTI           shift and go to state 181
    DIVISION        shift and go to state 182


state 333

    (153) Mult -> MULT ABRE_P expresion_alge1 COMA . expresion_alge1 CIERRA_P
    (159) Mult -> MULT ABRE_P expresion_alge1 COMA . Var CIERRA_P
    (160) Mult -> MULT ABRE_P expresion_alge1 COMA . NUMERO CIERRA_P
    (161) Mult -> MULT ABRE_P expresion_alge1 COMA . RESTA NUMERO CIERRA_P
    (104) expresion_alge1 -> . NUMERO SUMA NUMERO
    (105) expresion_alge1 -> . NUMERO RESTA NUMERO
    (106) expresion_alge1 -> . NUMERO MULTI NUMERO
    (107) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (108) expresion_alge1 -> . RESTA NUMERO SUMA NUMERO
    (109) expresion_alge1 -> . RESTA NUMERO RESTA NUMERO
    (110) expresion_alge1 -> . RESTA NUMERO MULTI NUMERO
    (111) expresion_alge1 -> . RESTA NUMERO DIVISION NUMERO
    (180) Var -> . VAR

    NUMERO          shift and go to state 426
    RESTA           shift and go to state 427
    VAR             shift and go to state 34

    expresion_alge1                shift and go to state 424
    Var                            shift and go to state 425

state 334

    (156) Mult -> MULT ABRE_P Var COMA . NUMERO CIERRA_P
    (157) Mult -> MULT ABRE_P Var COMA . RESTA NUMERO CIERRA_P
    (158) Mult -> MULT ABRE_P Var COMA . Var CIERRA_P
    (162) Mult -> MULT ABRE_P Var COMA . expresion_alge1 CIERRA_P
    (180) Var -> . VAR
    (104) expresion_alge1 -> . NUMERO SUMA NUMERO
    (105) expresion_alge1 -> . NUMERO RESTA NUMERO
    (106) expresion_alge1 -> . NUMERO MULTI NUMERO
    (107) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (108) expresion_alge1 -> . RESTA NUMERO SUMA NUMERO
    (109) expresion_alge1 -> . RESTA NUMERO RESTA NUMERO
    (110) expresion_alge1 -> . RESTA NUMERO MULTI NUMERO
    (111) expresion_alge1 -> . RESTA NUMERO DIVISION NUMERO

    NUMERO          shift and go to state 429
    RESTA           shift and go to state 430
    VAR             shift and go to state 34

    Var                            shift and go to state 428
    expresion_alge1                shift and go to state 431

state 335

    (164) Div -> DIV ABRE_P NUMERO COMA . NUMERO CIERRA_P
    (166) Div -> DIV ABRE_P NUMERO COMA . RESTA NUMERO CIERRA_P
    (167) Div -> DIV ABRE_P NUMERO COMA . expresion_alge1 CIERRA_P
    (170) Div -> DIV ABRE_P NUMERO COMA . Var CIERRA_P
    (104) expresion_alge1 -> . NUMERO SUMA NUMERO
    (105) expresion_alge1 -> . NUMERO RESTA NUMERO
    (106) expresion_alge1 -> . NUMERO MULTI NUMERO
    (107) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (108) expresion_alge1 -> . RESTA NUMERO SUMA NUMERO
    (109) expresion_alge1 -> . RESTA NUMERO RESTA NUMERO
    (110) expresion_alge1 -> . RESTA NUMERO MULTI NUMERO
    (111) expresion_alge1 -> . RESTA NUMERO DIVISION NUMERO
    (180) Var -> . VAR

    NUMERO          shift and go to state 432
    RESTA           shift and go to state 433
    VAR             shift and go to state 34

    expresion_alge1                shift and go to state 434
    Var                            shift and go to state 435

state 336

    (165) Div -> DIV ABRE_P RESTA NUMERO . COMA NUMERO CIERRA_P
    (168) Div -> DIV ABRE_P RESTA NUMERO . COMA expresion_alge1 CIERRA_P
    (171) Div -> DIV ABRE_P RESTA NUMERO . COMA Var CIERRA_P
    (179) Div -> DIV ABRE_P RESTA NUMERO . COMA RESTA NUMERO CIERRA_P
    (108) expresion_alge1 -> RESTA NUMERO . SUMA NUMERO
    (109) expresion_alge1 -> RESTA NUMERO . RESTA NUMERO
    (110) expresion_alge1 -> RESTA NUMERO . MULTI NUMERO
    (111) expresion_alge1 -> RESTA NUMERO . DIVISION NUMERO

    COMA            shift and go to state 436
    SUMA            shift and go to state 180
    RESTA           shift and go to state 179
    MULTI           shift and go to state 181
    DIVISION        shift and go to state 182


state 337

    (169) Div -> DIV ABRE_P expresion_alge1 COMA . expresion_alge1 CIERRA_P
    (175) Div -> DIV ABRE_P expresion_alge1 COMA . Var CIERRA_P
    (176) Div -> DIV ABRE_P expresion_alge1 COMA . NUMERO CIERRA_P
    (177) Div -> DIV ABRE_P expresion_alge1 COMA . RESTA NUMERO CIERRA_P
    (104) expresion_alge1 -> . NUMERO SUMA NUMERO
    (105) expresion_alge1 -> . NUMERO RESTA NUMERO
    (106) expresion_alge1 -> . NUMERO MULTI NUMERO
    (107) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (108) expresion_alge1 -> . RESTA NUMERO SUMA NUMERO
    (109) expresion_alge1 -> . RESTA NUMERO RESTA NUMERO
    (110) expresion_alge1 -> . RESTA NUMERO MULTI NUMERO
    (111) expresion_alge1 -> . RESTA NUMERO DIVISION NUMERO
    (180) Var -> . VAR

    NUMERO          shift and go to state 439
    RESTA           shift and go to state 440
    VAR             shift and go to state 34

    expresion_alge1                shift and go to state 437
    Var                            shift and go to state 438

state 338

    (172) Div -> DIV ABRE_P Var COMA . NUMERO CIERRA_P
    (173) Div -> DIV ABRE_P Var COMA . RESTA NUMERO CIERRA_P
    (174) Div -> DIV ABRE_P Var COMA . Var CIERRA_P
    (178) Div -> DIV ABRE_P Var COMA . expresion_alge1 CIERRA_P
    (180) Var -> . VAR
    (104) expresion_alge1 -> . NUMERO SUMA NUMERO
    (105) expresion_alge1 -> . NUMERO RESTA NUMERO
    (106) expresion_alge1 -> . NUMERO MULTI NUMERO
    (107) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (108) expresion_alge1 -> . RESTA NUMERO SUMA NUMERO
    (109) expresion_alge1 -> . RESTA NUMERO RESTA NUMERO
    (110) expresion_alge1 -> . RESTA NUMERO MULTI NUMERO
    (111) expresion_alge1 -> . RESTA NUMERO DIVISION NUMERO

    NUMERO          shift and go to state 442
    RESTA           shift and go to state 443
    VAR             shift and go to state 34

    Var                            shift and go to state 441
    expresion_alge1                shift and go to state 444

state 339

    (116) Sum -> SUM ABRE_P NUMERO COMA . NUMERO CIERRA_P
    (118) Sum -> SUM ABRE_P NUMERO COMA . RESTA NUMERO CIERRA_P
    (119) Sum -> SUM ABRE_P NUMERO COMA . expresion_alge1 CIERRA_P
    (122) Sum -> SUM ABRE_P NUMERO COMA . Var CIERRA_P
    (104) expresion_alge1 -> . NUMERO SUMA NUMERO
    (105) expresion_alge1 -> . NUMERO RESTA NUMERO
    (106) expresion_alge1 -> . NUMERO MULTI NUMERO
    (107) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (108) expresion_alge1 -> . RESTA NUMERO SUMA NUMERO
    (109) expresion_alge1 -> . RESTA NUMERO RESTA NUMERO
    (110) expresion_alge1 -> . RESTA NUMERO MULTI NUMERO
    (111) expresion_alge1 -> . RESTA NUMERO DIVISION NUMERO
    (180) Var -> . VAR

    NUMERO          shift and go to state 445
    RESTA           shift and go to state 446
    VAR             shift and go to state 34

    expresion_alge1                shift and go to state 447
    Var                            shift and go to state 448

state 340

    (117) Sum -> SUM ABRE_P RESTA NUMERO . COMA NUMERO CIERRA_P
    (120) Sum -> SUM ABRE_P RESTA NUMERO . COMA expresion_alge1 CIERRA_P
    (123) Sum -> SUM ABRE_P RESTA NUMERO . COMA Var CIERRA_P
    (131) Sum -> SUM ABRE_P RESTA NUMERO . COMA RESTA NUMERO CIERRA_P
    (108) expresion_alge1 -> RESTA NUMERO . SUMA NUMERO
    (109) expresion_alge1 -> RESTA NUMERO . RESTA NUMERO
    (110) expresion_alge1 -> RESTA NUMERO . MULTI NUMERO
    (111) expresion_alge1 -> RESTA NUMERO . DIVISION NUMERO

    COMA            shift and go to state 449
    SUMA            shift and go to state 180
    RESTA           shift and go to state 179
    MULTI           shift and go to state 181
    DIVISION        shift and go to state 182


state 341

    (121) Sum -> SUM ABRE_P expresion_alge1 COMA . expresion_alge1 CIERRA_P
    (127) Sum -> SUM ABRE_P expresion_alge1 COMA . Var CIERRA_P
    (128) Sum -> SUM ABRE_P expresion_alge1 COMA . NUMERO CIERRA_P
    (129) Sum -> SUM ABRE_P expresion_alge1 COMA . RESTA NUMERO CIERRA_P
    (104) expresion_alge1 -> . NUMERO SUMA NUMERO
    (105) expresion_alge1 -> . NUMERO RESTA NUMERO
    (106) expresion_alge1 -> . NUMERO MULTI NUMERO
    (107) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (108) expresion_alge1 -> . RESTA NUMERO SUMA NUMERO
    (109) expresion_alge1 -> . RESTA NUMERO RESTA NUMERO
    (110) expresion_alge1 -> . RESTA NUMERO MULTI NUMERO
    (111) expresion_alge1 -> . RESTA NUMERO DIVISION NUMERO
    (180) Var -> . VAR

    NUMERO          shift and go to state 452
    RESTA           shift and go to state 453
    VAR             shift and go to state 34

    expresion_alge1                shift and go to state 450
    Var                            shift and go to state 451

state 342

    (124) Sum -> SUM ABRE_P Var COMA . NUMERO CIERRA_P
    (125) Sum -> SUM ABRE_P Var COMA . RESTA NUMERO CIERRA_P
    (126) Sum -> SUM ABRE_P Var COMA . Var CIERRA_P
    (130) Sum -> SUM ABRE_P Var COMA . expresion_alge1 CIERRA_P
    (180) Var -> . VAR
    (104) expresion_alge1 -> . NUMERO SUMA NUMERO
    (105) expresion_alge1 -> . NUMERO RESTA NUMERO
    (106) expresion_alge1 -> . NUMERO MULTI NUMERO
    (107) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (108) expresion_alge1 -> . RESTA NUMERO SUMA NUMERO
    (109) expresion_alge1 -> . RESTA NUMERO RESTA NUMERO
    (110) expresion_alge1 -> . RESTA NUMERO MULTI NUMERO
    (111) expresion_alge1 -> . RESTA NUMERO DIVISION NUMERO

    NUMERO          shift and go to state 455
    RESTA           shift and go to state 456
    VAR             shift and go to state 34

    Var                            shift and go to state 454
    expresion_alge1                shift and go to state 457

state 343

    (132) Substr -> SUBSTR ABRE_P NUMERO COMA . NUMERO CIERRA_P
    (134) Substr -> SUBSTR ABRE_P NUMERO COMA . RESTA NUMERO CIERRA_P
    (135) Substr -> SUBSTR ABRE_P NUMERO COMA . expresion_alge1 CIERRA_P
    (138) Substr -> SUBSTR ABRE_P NUMERO COMA . Var CIERRA_P
    (104) expresion_alge1 -> . NUMERO SUMA NUMERO
    (105) expresion_alge1 -> . NUMERO RESTA NUMERO
    (106) expresion_alge1 -> . NUMERO MULTI NUMERO
    (107) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (108) expresion_alge1 -> . RESTA NUMERO SUMA NUMERO
    (109) expresion_alge1 -> . RESTA NUMERO RESTA NUMERO
    (110) expresion_alge1 -> . RESTA NUMERO MULTI NUMERO
    (111) expresion_alge1 -> . RESTA NUMERO DIVISION NUMERO
    (180) Var -> . VAR

    NUMERO          shift and go to state 458
    RESTA           shift and go to state 459
    VAR             shift and go to state 34

    expresion_alge1                shift and go to state 460
    Var                            shift and go to state 461

state 344

    (133) Substr -> SUBSTR ABRE_P RESTA NUMERO . COMA NUMERO CIERRA_P
    (136) Substr -> SUBSTR ABRE_P RESTA NUMERO . COMA expresion_alge1 CIERRA_P
    (139) Substr -> SUBSTR ABRE_P RESTA NUMERO . COMA Var CIERRA_P
    (147) Substr -> SUBSTR ABRE_P RESTA NUMERO . COMA RESTA NUMERO CIERRA_P
    (108) expresion_alge1 -> RESTA NUMERO . SUMA NUMERO
    (109) expresion_alge1 -> RESTA NUMERO . RESTA NUMERO
    (110) expresion_alge1 -> RESTA NUMERO . MULTI NUMERO
    (111) expresion_alge1 -> RESTA NUMERO . DIVISION NUMERO

    COMA            shift and go to state 462
    SUMA            shift and go to state 180
    RESTA           shift and go to state 179
    MULTI           shift and go to state 181
    DIVISION        shift and go to state 182


state 345

    (137) Substr -> SUBSTR ABRE_P expresion_alge1 COMA . expresion_alge1 CIERRA_P
    (143) Substr -> SUBSTR ABRE_P expresion_alge1 COMA . Var CIERRA_P
    (144) Substr -> SUBSTR ABRE_P expresion_alge1 COMA . NUMERO CIERRA_P
    (145) Substr -> SUBSTR ABRE_P expresion_alge1 COMA . RESTA NUMERO CIERRA_P
    (104) expresion_alge1 -> . NUMERO SUMA NUMERO
    (105) expresion_alge1 -> . NUMERO RESTA NUMERO
    (106) expresion_alge1 -> . NUMERO MULTI NUMERO
    (107) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (108) expresion_alge1 -> . RESTA NUMERO SUMA NUMERO
    (109) expresion_alge1 -> . RESTA NUMERO RESTA NUMERO
    (110) expresion_alge1 -> . RESTA NUMERO MULTI NUMERO
    (111) expresion_alge1 -> . RESTA NUMERO DIVISION NUMERO
    (180) Var -> . VAR

    NUMERO          shift and go to state 465
    RESTA           shift and go to state 466
    VAR             shift and go to state 34

    expresion_alge1                shift and go to state 463
    Var                            shift and go to state 464

state 346

    (140) Substr -> SUBSTR ABRE_P Var COMA . NUMERO CIERRA_P
    (141) Substr -> SUBSTR ABRE_P Var COMA . RESTA NUMERO CIERRA_P
    (142) Substr -> SUBSTR ABRE_P Var COMA . Var CIERRA_P
    (146) Substr -> SUBSTR ABRE_P Var COMA . expresion_alge1 CIERRA_P
    (180) Var -> . VAR
    (104) expresion_alge1 -> . NUMERO SUMA NUMERO
    (105) expresion_alge1 -> . NUMERO RESTA NUMERO
    (106) expresion_alge1 -> . NUMERO MULTI NUMERO
    (107) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (108) expresion_alge1 -> . RESTA NUMERO SUMA NUMERO
    (109) expresion_alge1 -> . RESTA NUMERO RESTA NUMERO
    (110) expresion_alge1 -> . RESTA NUMERO MULTI NUMERO
    (111) expresion_alge1 -> . RESTA NUMERO DIVISION NUMERO

    NUMERO          shift and go to state 468
    RESTA           shift and go to state 469
    VAR             shift and go to state 34

    Var                            shift and go to state 467
    expresion_alge1                shift and go to state 470

state 347

    (279) Random -> RANDOM ABRE_P NUMERO CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 471


state 348

    (264) If -> IF ABRE_P condicion CIERRA_P . BRACKET1 funcion BRACKET2

    BRACKET1        shift and go to state 472


state 349

    (181) Equal -> EQUAL ABRE_P . NUMERO COMA NUMERO CIERRA_P
    (182) Equal -> EQUAL ABRE_P . RESTA NUMERO COMA NUMERO CIERRA_P
    (183) Equal -> EQUAL ABRE_P . NUMERO COMA RESTA NUMERO CIERRA_P
    (184) Equal -> EQUAL ABRE_P . expresion_alge1 COMA expresion_alge1 CIERRA_P
    (185) Equal -> EQUAL ABRE_P . expresion_alge2 COMA expresion_alge2 CIERRA_P
    (186) Equal -> EQUAL ABRE_P . Var COMA Var CIERRA_P
    (187) Equal -> EQUAL ABRE_P . NUMERO COMA Var CIERRA_P
    (188) Equal -> EQUAL ABRE_P . RESTA NUMERO COMA Var CIERRA_P
    (189) Equal -> EQUAL ABRE_P . expresion_alge2 COMA Var CIERRA_P
    (190) Equal -> EQUAL ABRE_P . expresion_alge1 COMA Var CIERRA_P
    (191) Equal -> EQUAL ABRE_P . Var COMA NUMERO CIERRA_P
    (192) Equal -> EQUAL ABRE_P . Var COMA RESTA NUMERO CIERRA_P
    (193) Equal -> EQUAL ABRE_P . Var COMA expresion_alge1 CIERRA_P
    (194) Equal -> EQUAL ABRE_P . Var COMA expresion_alge2 CIERRA_P
    (195) Equal -> EQUAL ABRE_P . expresion_alge1 COMA expresion_alge2 CIERRA_P
    (196) Equal -> EQUAL ABRE_P . expresion_alge2 COMA expresion_alge1 CIERRA_P
    (197) Equal -> EQUAL ABRE_P . expresion_alge1 COMA NUMERO CIERRA_P
    (198) Equal -> EQUAL ABRE_P . expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (199) Equal -> EQUAL ABRE_P . expresion_alge2 COMA NUMERO CIERRA_P
    (200) Equal -> EQUAL ABRE_P . expresion_alge2 COMA RESTA NUMERO CIERRA_P
    (201) Equal -> EQUAL ABRE_P . NUMERO COMA expresion_alge1 CIERRA_P
    (202) Equal -> EQUAL ABRE_P . RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (203) Equal -> EQUAL ABRE_P . NUMERO COMA expresion_alge2 CIERRA_P
    (204) Equal -> EQUAL ABRE_P . RESTA NUMERO COMA expresion_alge2 CIERRA_P
    (205) Equal -> EQUAL ABRE_P . RESTA NUMERO COMA RESTA NUMERO CIERRA_P
    (104) expresion_alge1 -> . NUMERO SUMA NUMERO
    (105) expresion_alge1 -> . NUMERO RESTA NUMERO
    (106) expresion_alge1 -> . NUMERO MULTI NUMERO
    (107) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (108) expresion_alge1 -> . RESTA NUMERO SUMA NUMERO
    (109) expresion_alge1 -> . RESTA NUMERO RESTA NUMERO
    (110) expresion_alge1 -> . RESTA NUMERO MULTI NUMERO
    (111) expresion_alge1 -> . RESTA NUMERO DIVISION NUMERO
    (112) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (113) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (114) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (115) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (180) Var -> . VAR

    NUMERO          shift and go to state 473
    RESTA           shift and go to state 474
    ABRE_P          shift and go to state 63
    VAR             shift and go to state 34

    expresion_alge1                shift and go to state 475
    expresion_alge2                shift and go to state 476
    Var                            shift and go to state 477

state 350

    (206) Greater -> GREATER ABRE_P . NUMERO COMA NUMERO CIERRA_P
    (207) Greater -> GREATER ABRE_P . RESTA NUMERO COMA NUMERO CIERRA_P
    (208) Greater -> GREATER ABRE_P . NUMERO COMA RESTA NUMERO CIERRA_P
    (209) Greater -> GREATER ABRE_P . expresion_alge1 COMA expresion_alge1 CIERRA_P
    (210) Greater -> GREATER ABRE_P . expresion_alge2 COMA expresion_alge2 CIERRA_P
    (211) Greater -> GREATER ABRE_P . Var COMA Var CIERRA_P
    (212) Greater -> GREATER ABRE_P . NUMERO COMA Var CIERRA_P
    (213) Greater -> GREATER ABRE_P . RESTA NUMERO COMA Var CIERRA_P
    (214) Greater -> GREATER ABRE_P . expresion_alge2 COMA Var CIERRA_P
    (215) Greater -> GREATER ABRE_P . expresion_alge1 COMA Var CIERRA_P
    (216) Greater -> GREATER ABRE_P . Var COMA NUMERO CIERRA_P
    (217) Greater -> GREATER ABRE_P . Var COMA RESTA NUMERO CIERRA_P
    (218) Greater -> GREATER ABRE_P . Var COMA expresion_alge1 CIERRA_P
    (219) Greater -> GREATER ABRE_P . Var COMA expresion_alge2 CIERRA_P
    (220) Greater -> GREATER ABRE_P . expresion_alge1 COMA expresion_alge2 CIERRA_P
    (221) Greater -> GREATER ABRE_P . expresion_alge2 COMA expresion_alge1 CIERRA_P
    (222) Greater -> GREATER ABRE_P . expresion_alge1 COMA NUMERO CIERRA_P
    (223) Greater -> GREATER ABRE_P . expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (224) Greater -> GREATER ABRE_P . expresion_alge2 COMA NUMERO CIERRA_P
    (225) Greater -> GREATER ABRE_P . expresion_alge2 COMA RESTA NUMERO CIERRA_P
    (226) Greater -> GREATER ABRE_P . NUMERO COMA expresion_alge1 CIERRA_P
    (227) Greater -> GREATER ABRE_P . RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (228) Greater -> GREATER ABRE_P . NUMERO COMA expresion_alge2 CIERRA_P
    (229) Greater -> GREATER ABRE_P . RESTA NUMERO COMA expresion_alge2 CIERRA_P
    (230) Greater -> GREATER ABRE_P . RESTA NUMERO COMA RESTA NUMERO CIERRA_P
    (104) expresion_alge1 -> . NUMERO SUMA NUMERO
    (105) expresion_alge1 -> . NUMERO RESTA NUMERO
    (106) expresion_alge1 -> . NUMERO MULTI NUMERO
    (107) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (108) expresion_alge1 -> . RESTA NUMERO SUMA NUMERO
    (109) expresion_alge1 -> . RESTA NUMERO RESTA NUMERO
    (110) expresion_alge1 -> . RESTA NUMERO MULTI NUMERO
    (111) expresion_alge1 -> . RESTA NUMERO DIVISION NUMERO
    (112) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (113) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (114) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (115) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (180) Var -> . VAR

    NUMERO          shift and go to state 478
    RESTA           shift and go to state 479
    ABRE_P          shift and go to state 63
    VAR             shift and go to state 34

    expresion_alge1                shift and go to state 480
    expresion_alge2                shift and go to state 481
    Var                            shift and go to state 482

state 351

    (231) Smaller -> SMALLER ABRE_P . NUMERO COMA NUMERO CIERRA_P
    (232) Smaller -> SMALLER ABRE_P . RESTA NUMERO COMA NUMERO CIERRA_P
    (233) Smaller -> SMALLER ABRE_P . NUMERO COMA RESTA NUMERO CIERRA_P
    (234) Smaller -> SMALLER ABRE_P . expresion_alge1 COMA expresion_alge1 CIERRA_P
    (235) Smaller -> SMALLER ABRE_P . expresion_alge2 COMA expresion_alge2 CIERRA_P
    (236) Smaller -> SMALLER ABRE_P . Var COMA Var CIERRA_P
    (237) Smaller -> SMALLER ABRE_P . NUMERO COMA Var CIERRA_P
    (238) Smaller -> SMALLER ABRE_P . RESTA NUMERO COMA Var CIERRA_P
    (239) Smaller -> SMALLER ABRE_P . expresion_alge2 COMA Var CIERRA_P
    (240) Smaller -> SMALLER ABRE_P . expresion_alge1 COMA Var CIERRA_P
    (241) Smaller -> SMALLER ABRE_P . Var COMA NUMERO CIERRA_P
    (242) Smaller -> SMALLER ABRE_P . Var COMA RESTA NUMERO CIERRA_P
    (243) Smaller -> SMALLER ABRE_P . Var COMA expresion_alge1 CIERRA_P
    (244) Smaller -> SMALLER ABRE_P . Var COMA expresion_alge2 CIERRA_P
    (245) Smaller -> SMALLER ABRE_P . expresion_alge1 COMA expresion_alge2 CIERRA_P
    (246) Smaller -> SMALLER ABRE_P . expresion_alge2 COMA expresion_alge1 CIERRA_P
    (247) Smaller -> SMALLER ABRE_P . expresion_alge1 COMA NUMERO CIERRA_P
    (248) Smaller -> SMALLER ABRE_P . expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (249) Smaller -> SMALLER ABRE_P . expresion_alge2 COMA NUMERO CIERRA_P
    (250) Smaller -> SMALLER ABRE_P . expresion_alge2 COMA RESTA NUMERO CIERRA_P
    (251) Smaller -> SMALLER ABRE_P . NUMERO COMA expresion_alge1 CIERRA_P
    (252) Smaller -> SMALLER ABRE_P . RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (253) Smaller -> SMALLER ABRE_P . NUMERO COMA expresion_alge2 CIERRA_P
    (254) Smaller -> SMALLER ABRE_P . RESTA NUMERO COMA expresion_alge2 CIERRA_P
    (255) Smaller -> SMALLER ABRE_P . RESTA NUMERO COMA RESTA NUMERO CIERRA_P
    (104) expresion_alge1 -> . NUMERO SUMA NUMERO
    (105) expresion_alge1 -> . NUMERO RESTA NUMERO
    (106) expresion_alge1 -> . NUMERO MULTI NUMERO
    (107) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (108) expresion_alge1 -> . RESTA NUMERO SUMA NUMERO
    (109) expresion_alge1 -> . RESTA NUMERO RESTA NUMERO
    (110) expresion_alge1 -> . RESTA NUMERO MULTI NUMERO
    (111) expresion_alge1 -> . RESTA NUMERO DIVISION NUMERO
    (112) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (113) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (114) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (115) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (180) Var -> . VAR

    NUMERO          shift and go to state 483
    RESTA           shift and go to state 484
    ABRE_P          shift and go to state 63
    VAR             shift and go to state 34

    expresion_alge1                shift and go to state 485
    expresion_alge2                shift and go to state 486
    Var                            shift and go to state 487

state 352

    (265) IfElse -> IFELSE ABRE_P condicion CIERRA_P . BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2

    BRACKET1        shift and go to state 488


state 353

    (268) Until -> UNTIL BRACKET1 funcion BRACKET2 . BRACKET1 condicion BRACKET2

    BRACKET1        shift and go to state 489


state 354

    (266) While -> WHILE BRACKET1 condicion BRACKET2 . BRACKET1 funcion BRACKET2

    BRACKET1        shift and go to state 490


state 355

    (337) PrintLine -> PRINTLINE ABRE_P exp CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 491


state 356

    (329) exp -> NUMERO COMA . exp
    (329) exp -> . NUMERO COMA exp
    (330) exp -> . STRING COMA exp
    (331) exp -> . Var COMA exp
    (332) exp -> . NUMERO empty empty
    (333) exp -> . RESTA NUMERO empty empty
    (334) exp -> . RESTA NUMERO COMA empty
    (335) exp -> . STRING empty empty
    (336) exp -> . Var empty empty
    (180) Var -> . VAR

    NUMERO          shift and go to state 238
    STRING          shift and go to state 239
    RESTA           shift and go to state 241
    VAR             shift and go to state 34

    exp                            shift and go to state 492
    Var                            shift and go to state 240

state 357

    (332) exp -> NUMERO empty . empty
    (338) empty -> .

    CIERRA_P        reduce using rule 338 (empty -> .)

    empty                          shift and go to state 493

state 358

    (330) exp -> STRING COMA . exp
    (329) exp -> . NUMERO COMA exp
    (330) exp -> . STRING COMA exp
    (331) exp -> . Var COMA exp
    (332) exp -> . NUMERO empty empty
    (333) exp -> . RESTA NUMERO empty empty
    (334) exp -> . RESTA NUMERO COMA empty
    (335) exp -> . STRING empty empty
    (336) exp -> . Var empty empty
    (180) Var -> . VAR

    NUMERO          shift and go to state 238
    STRING          shift and go to state 239
    RESTA           shift and go to state 241
    VAR             shift and go to state 34

    exp                            shift and go to state 494
    Var                            shift and go to state 240

state 359

    (335) exp -> STRING empty . empty
    (338) empty -> .

    CIERRA_P        reduce using rule 338 (empty -> .)

    empty                          shift and go to state 495

state 360

    (331) exp -> Var COMA . exp
    (329) exp -> . NUMERO COMA exp
    (330) exp -> . STRING COMA exp
    (331) exp -> . Var COMA exp
    (332) exp -> . NUMERO empty empty
    (333) exp -> . RESTA NUMERO empty empty
    (334) exp -> . RESTA NUMERO COMA empty
    (335) exp -> . STRING empty empty
    (336) exp -> . Var empty empty
    (180) Var -> . VAR

    NUMERO          shift and go to state 238
    STRING          shift and go to state 239
    RESTA           shift and go to state 241
    VAR             shift and go to state 34

    Var                            shift and go to state 240
    exp                            shift and go to state 496

state 361

    (336) exp -> Var empty . empty
    (338) empty -> .

    CIERRA_P        reduce using rule 338 (empty -> .)

    empty                          shift and go to state 497

state 362

    (333) exp -> RESTA NUMERO . empty empty
    (334) exp -> RESTA NUMERO . COMA empty
    (338) empty -> .

    COMA            shift and go to state 499
    CIERRA_P        reduce using rule 338 (empty -> .)

    empty                          shift and go to state 498

state 363

    (256) And -> AND ABRE_P expresion_alge1 COMA . expresion_alge1 CIERRA_P
    (257) And -> AND ABRE_P expresion_alge1 COMA . expresion_alge2 CIERRA_P
    (104) expresion_alge1 -> . NUMERO SUMA NUMERO
    (105) expresion_alge1 -> . NUMERO RESTA NUMERO
    (106) expresion_alge1 -> . NUMERO MULTI NUMERO
    (107) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (108) expresion_alge1 -> . RESTA NUMERO SUMA NUMERO
    (109) expresion_alge1 -> . RESTA NUMERO RESTA NUMERO
    (110) expresion_alge1 -> . RESTA NUMERO MULTI NUMERO
    (111) expresion_alge1 -> . RESTA NUMERO DIVISION NUMERO
    (112) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (113) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (114) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (115) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P

    NUMERO          shift and go to state 64
    RESTA           shift and go to state 65
    ABRE_P          shift and go to state 63

    expresion_alge1                shift and go to state 500
    expresion_alge2                shift and go to state 501

state 364

    (258) And -> AND ABRE_P expresion_alge2 COMA . expresion_alge1 CIERRA_P
    (259) And -> AND ABRE_P expresion_alge2 COMA . expresion_alge2 CIERRA_P
    (104) expresion_alge1 -> . NUMERO SUMA NUMERO
    (105) expresion_alge1 -> . NUMERO RESTA NUMERO
    (106) expresion_alge1 -> . NUMERO MULTI NUMERO
    (107) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (108) expresion_alge1 -> . RESTA NUMERO SUMA NUMERO
    (109) expresion_alge1 -> . RESTA NUMERO RESTA NUMERO
    (110) expresion_alge1 -> . RESTA NUMERO MULTI NUMERO
    (111) expresion_alge1 -> . RESTA NUMERO DIVISION NUMERO
    (112) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (113) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (114) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (115) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P

    NUMERO          shift and go to state 64
    RESTA           shift and go to state 65
    ABRE_P          shift and go to state 63

    expresion_alge2                shift and go to state 502
    expresion_alge1                shift and go to state 503

state 365

    (260) Or -> OR ABRE_P expresion_alge1 COMA . expresion_alge1 CIERRA_P
    (261) Or -> OR ABRE_P expresion_alge1 COMA . expresion_alge2 CIERRA_P
    (104) expresion_alge1 -> . NUMERO SUMA NUMERO
    (105) expresion_alge1 -> . NUMERO RESTA NUMERO
    (106) expresion_alge1 -> . NUMERO MULTI NUMERO
    (107) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (108) expresion_alge1 -> . RESTA NUMERO SUMA NUMERO
    (109) expresion_alge1 -> . RESTA NUMERO RESTA NUMERO
    (110) expresion_alge1 -> . RESTA NUMERO MULTI NUMERO
    (111) expresion_alge1 -> . RESTA NUMERO DIVISION NUMERO
    (112) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (113) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (114) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (115) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P

    NUMERO          shift and go to state 64
    RESTA           shift and go to state 65
    ABRE_P          shift and go to state 63

    expresion_alge1                shift and go to state 504
    expresion_alge2                shift and go to state 505

state 366

    (262) Or -> OR ABRE_P expresion_alge2 COMA . expresion_alge1 CIERRA_P
    (263) Or -> OR ABRE_P expresion_alge2 COMA . expresion_alge2 CIERRA_P
    (104) expresion_alge1 -> . NUMERO SUMA NUMERO
    (105) expresion_alge1 -> . NUMERO RESTA NUMERO
    (106) expresion_alge1 -> . NUMERO MULTI NUMERO
    (107) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (108) expresion_alge1 -> . RESTA NUMERO SUMA NUMERO
    (109) expresion_alge1 -> . RESTA NUMERO RESTA NUMERO
    (110) expresion_alge1 -> . RESTA NUMERO MULTI NUMERO
    (111) expresion_alge1 -> . RESTA NUMERO DIVISION NUMERO
    (112) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (113) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (114) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (115) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P

    NUMERO          shift and go to state 64
    RESTA           shift and go to state 65
    ABRE_P          shift and go to state 63

    expresion_alge2                shift and go to state 506
    expresion_alge1                shift and go to state 507

state 367

    (269) Add -> ADD ABRE_P Var empty . empty CIERRA_P PUNTOCOMA
    (338) empty -> .

    CIERRA_P        reduce using rule 338 (empty -> .)

    empty                          shift and go to state 508

state 368

    (270) Add -> ADD ABRE_P Var COMA . NUMERO CIERRA_P PUNTOCOMA
    (271) Add -> ADD ABRE_P Var COMA . RESTA NUMERO CIERRA_P PUNTOCOMA
    (272) Add -> ADD ABRE_P Var COMA . expresion_alge1 CIERRA_P PUNTOCOMA
    (273) Add -> ADD ABRE_P Var COMA . Var CIERRA_P PUNTOCOMA
    (274) Add -> ADD ABRE_P Var COMA . expresion_alge2 CIERRA_P PUNTOCOMA
    (104) expresion_alge1 -> . NUMERO SUMA NUMERO
    (105) expresion_alge1 -> . NUMERO RESTA NUMERO
    (106) expresion_alge1 -> . NUMERO MULTI NUMERO
    (107) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (108) expresion_alge1 -> . RESTA NUMERO SUMA NUMERO
    (109) expresion_alge1 -> . RESTA NUMERO RESTA NUMERO
    (110) expresion_alge1 -> . RESTA NUMERO MULTI NUMERO
    (111) expresion_alge1 -> . RESTA NUMERO DIVISION NUMERO
    (180) Var -> . VAR
    (112) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (113) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (114) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (115) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P

    NUMERO          shift and go to state 510
    RESTA           shift and go to state 511
    VAR             shift and go to state 34
    ABRE_P          shift and go to state 63

    Var                            shift and go to state 509
    expresion_alge1                shift and go to state 512
    expresion_alge2                shift and go to state 513

state 369

    (95) Put -> PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA .

    $end            reduce using rule 95 (Put -> PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA .)
    FIN             reduce using rule 95 (Put -> PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA .)
    PUNTOCOMA       reduce using rule 95 (Put -> PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA .)
    NUMERO          reduce using rule 95 (Put -> PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA .)
    RESTA           reduce using rule 95 (Put -> PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA .)
    ABRE_P          reduce using rule 95 (Put -> PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA .)
    SUM             reduce using rule 95 (Put -> PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA .)
    SUBSTR          reduce using rule 95 (Put -> PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA .)
    MULT            reduce using rule 95 (Put -> PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA .)
    DIV             reduce using rule 95 (Put -> PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA .)
    RANDOM          reduce using rule 95 (Put -> PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA .)
    IF              reduce using rule 95 (Put -> PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA .)
    IFELSE          reduce using rule 95 (Put -> PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA .)
    UNTIL           reduce using rule 95 (Put -> PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA .)
    WHILE           reduce using rule 95 (Put -> PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA .)
    PRINTLINE       reduce using rule 95 (Put -> PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA .)
    AND             reduce using rule 95 (Put -> PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA .)
    OR              reduce using rule 95 (Put -> PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA .)
    ADD             reduce using rule 95 (Put -> PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA .)
    PUT             reduce using rule 95 (Put -> PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA .)
    CIERRA_P        reduce using rule 95 (Put -> PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 95 (Put -> PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA .)


state 370

    (96) Put2 -> PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA .

    $end            reduce using rule 96 (Put2 -> PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA .)
    FIN             reduce using rule 96 (Put2 -> PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA .)
    PUNTOCOMA       reduce using rule 96 (Put2 -> PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA .)
    NUMERO          reduce using rule 96 (Put2 -> PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA .)
    RESTA           reduce using rule 96 (Put2 -> PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA .)
    ABRE_P          reduce using rule 96 (Put2 -> PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA .)
    SUM             reduce using rule 96 (Put2 -> PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA .)
    SUBSTR          reduce using rule 96 (Put2 -> PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA .)
    MULT            reduce using rule 96 (Put2 -> PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA .)
    DIV             reduce using rule 96 (Put2 -> PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA .)
    RANDOM          reduce using rule 96 (Put2 -> PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA .)
    IF              reduce using rule 96 (Put2 -> PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA .)
    IFELSE          reduce using rule 96 (Put2 -> PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA .)
    UNTIL           reduce using rule 96 (Put2 -> PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA .)
    WHILE           reduce using rule 96 (Put2 -> PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA .)
    PRINTLINE       reduce using rule 96 (Put2 -> PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA .)
    AND             reduce using rule 96 (Put2 -> PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA .)
    OR              reduce using rule 96 (Put2 -> PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA .)
    ADD             reduce using rule 96 (Put2 -> PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA .)
    PUT             reduce using rule 96 (Put2 -> PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA .)
    CIERRA_P        reduce using rule 96 (Put2 -> PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 96 (Put2 -> PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA .)


state 371

    (97) Put2 -> PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 514


state 372

    (98) Put2 -> PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA .

    $end            reduce using rule 98 (Put2 -> PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    FIN             reduce using rule 98 (Put2 -> PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    PUNTOCOMA       reduce using rule 98 (Put2 -> PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    NUMERO          reduce using rule 98 (Put2 -> PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    RESTA           reduce using rule 98 (Put2 -> PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    ABRE_P          reduce using rule 98 (Put2 -> PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    SUM             reduce using rule 98 (Put2 -> PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    SUBSTR          reduce using rule 98 (Put2 -> PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    MULT            reduce using rule 98 (Put2 -> PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    DIV             reduce using rule 98 (Put2 -> PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    RANDOM          reduce using rule 98 (Put2 -> PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    IF              reduce using rule 98 (Put2 -> PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    IFELSE          reduce using rule 98 (Put2 -> PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    UNTIL           reduce using rule 98 (Put2 -> PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    WHILE           reduce using rule 98 (Put2 -> PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    PRINTLINE       reduce using rule 98 (Put2 -> PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    AND             reduce using rule 98 (Put2 -> PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    OR              reduce using rule 98 (Put2 -> PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    ADD             reduce using rule 98 (Put2 -> PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    PUT             reduce using rule 98 (Put2 -> PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    CIERRA_P        reduce using rule 98 (Put2 -> PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 98 (Put2 -> PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA .)


state 373

    (99) Put2 -> PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA .

    $end            reduce using rule 99 (Put2 -> PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    FIN             reduce using rule 99 (Put2 -> PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    PUNTOCOMA       reduce using rule 99 (Put2 -> PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    NUMERO          reduce using rule 99 (Put2 -> PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    RESTA           reduce using rule 99 (Put2 -> PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    ABRE_P          reduce using rule 99 (Put2 -> PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    SUM             reduce using rule 99 (Put2 -> PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    SUBSTR          reduce using rule 99 (Put2 -> PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    MULT            reduce using rule 99 (Put2 -> PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    DIV             reduce using rule 99 (Put2 -> PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    RANDOM          reduce using rule 99 (Put2 -> PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    IF              reduce using rule 99 (Put2 -> PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    IFELSE          reduce using rule 99 (Put2 -> PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    UNTIL           reduce using rule 99 (Put2 -> PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    WHILE           reduce using rule 99 (Put2 -> PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    PRINTLINE       reduce using rule 99 (Put2 -> PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    AND             reduce using rule 99 (Put2 -> PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    OR              reduce using rule 99 (Put2 -> PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    ADD             reduce using rule 99 (Put2 -> PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    PUT             reduce using rule 99 (Put2 -> PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    CIERRA_P        reduce using rule 99 (Put2 -> PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 99 (Put2 -> PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA .)


state 374

    (100) Put2 -> PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA .

    $end            reduce using rule 100 (Put2 -> PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA .)
    FIN             reduce using rule 100 (Put2 -> PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA .)
    PUNTOCOMA       reduce using rule 100 (Put2 -> PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA .)
    NUMERO          reduce using rule 100 (Put2 -> PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA .)
    RESTA           reduce using rule 100 (Put2 -> PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA .)
    ABRE_P          reduce using rule 100 (Put2 -> PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA .)
    SUM             reduce using rule 100 (Put2 -> PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA .)
    SUBSTR          reduce using rule 100 (Put2 -> PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA .)
    MULT            reduce using rule 100 (Put2 -> PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA .)
    DIV             reduce using rule 100 (Put2 -> PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA .)
    RANDOM          reduce using rule 100 (Put2 -> PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA .)
    IF              reduce using rule 100 (Put2 -> PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA .)
    IFELSE          reduce using rule 100 (Put2 -> PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA .)
    UNTIL           reduce using rule 100 (Put2 -> PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA .)
    WHILE           reduce using rule 100 (Put2 -> PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA .)
    PRINTLINE       reduce using rule 100 (Put2 -> PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA .)
    AND             reduce using rule 100 (Put2 -> PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA .)
    OR              reduce using rule 100 (Put2 -> PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA .)
    ADD             reduce using rule 100 (Put2 -> PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA .)
    PUT             reduce using rule 100 (Put2 -> PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA .)
    CIERRA_P        reduce using rule 100 (Put2 -> PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 100 (Put2 -> PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA .)


state 375

    (27) llamadoproc -> PARA id BRACKET1 . parametro BRACKET2 PUNTOCOMA
    (275) parametro -> . Var COMA parametro
    (276) parametro -> . Var empty empty
    (277) parametro -> . empty empty empty
    (180) Var -> . VAR
    (338) empty -> .

    VAR             shift and go to state 34
    BRACKET2        reduce using rule 338 (empty -> .)

    parametro                      shift and go to state 515
    Var                            shift and go to state 33
    empty                          shift and go to state 168

state 376

    (25) procedimiento -> PARA id BRACKET1 empty BRACKET2 cuerpo2 FIN cuerpo .

    $end            reduce using rule 25 (procedimiento -> PARA id BRACKET1 empty BRACKET2 cuerpo2 FIN cuerpo .)


state 377

    (26) procedimiento -> PARA id BRACKET1 parametro BRACKET2 cuerpo2 FIN cuerpo .

    $end            reduce using rule 26 (procedimiento -> PARA id BRACKET1 parametro BRACKET2 cuerpo2 FIN cuerpo .)


state 378

    (96) Put2 -> PUT ABRE_P VAR COMA . NUMERO CIERRA_P PUNTOCOMA
    (97) Put2 -> PUT ABRE_P VAR COMA . RESTA NUMERO CIERRA_P PUNTOCOMA
    (98) Put2 -> PUT ABRE_P VAR COMA . expresion_alge1 CIERRA_P PUNTOCOMA
    (99) Put2 -> PUT ABRE_P VAR COMA . expresion_alge2 CIERRA_P PUNTOCOMA
    (100) Put2 -> PUT ABRE_P VAR COMA . funcion CIERRA_P PUNTOCOMA
    (95) Put -> PUT ABRE_P VAR COMA . VAR CIERRA_P PUNTOCOMA
    (104) expresion_alge1 -> . NUMERO SUMA NUMERO
    (105) expresion_alge1 -> . NUMERO RESTA NUMERO
    (106) expresion_alge1 -> . NUMERO MULTI NUMERO
    (107) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (108) expresion_alge1 -> . RESTA NUMERO SUMA NUMERO
    (109) expresion_alge1 -> . RESTA NUMERO RESTA NUMERO
    (110) expresion_alge1 -> . RESTA NUMERO MULTI NUMERO
    (111) expresion_alge1 -> . RESTA NUMERO DIVISION NUMERO
    (112) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (113) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (114) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (115) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (82) funcion -> . Random empty
    (83) funcion -> . If empty
    (84) funcion -> . IfElse empty
    (85) funcion -> . Until empty
    (86) funcion -> . While empty
    (87) funcion -> . PrintLine empty
    (88) funcion -> . And empty
    (89) funcion -> . Or empty
    (90) funcion -> . Add empty
    (91) funcion -> . Put2 empty
    (92) funcion -> . Put empty
    (93) funcion -> . PUNTOCOMA funcion
    (94) funcion -> . empty empty
    (279) Random -> . RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA
    (264) If -> . IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2
    (265) IfElse -> . IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2
    (268) Until -> . UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2
    (266) While -> . WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2
    (337) PrintLine -> . PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA
    (256) And -> . AND ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (257) And -> . AND ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P
    (258) And -> . AND ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P
    (259) And -> . AND ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P
    (260) Or -> . OR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (261) Or -> . OR ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P
    (262) Or -> . OR ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P
    (263) Or -> . OR ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P
    (269) Add -> . ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA
    (270) Add -> . ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (271) Add -> . ADD ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (272) Add -> . ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (273) Add -> . ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (274) Add -> . ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (96) Put2 -> . PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (97) Put2 -> . PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (98) Put2 -> . PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (99) Put2 -> . PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (100) Put2 -> . PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA
    (95) Put -> . PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA
    (338) empty -> .

    NUMERO          shift and go to state 147
    RESTA           shift and go to state 148
    VAR             shift and go to state 146
    ABRE_P          shift and go to state 63
    PUNTOCOMA       shift and go to state 62
    RANDOM          shift and go to state 72
    IF              shift and go to state 73
    IFELSE          shift and go to state 74
    UNTIL           shift and go to state 75
    WHILE           shift and go to state 76
    PRINTLINE       shift and go to state 77
    AND             shift and go to state 78
    OR              shift and go to state 79
    ADD             shift and go to state 80
    PUT             shift and go to state 96
    CIERRA_P        reduce using rule 338 (empty -> .)

    expresion_alge1                shift and go to state 149
    expresion_alge2                shift and go to state 150
    funcion                        shift and go to state 151
    Random                         shift and go to state 53
    empty                          shift and go to state 124
    If                             shift and go to state 54
    IfElse                         shift and go to state 55
    Until                          shift and go to state 56
    While                          shift and go to state 57
    PrintLine                      shift and go to state 58
    And                            shift and go to state 59
    Or                             shift and go to state 60
    Add                            shift and go to state 61
    Put2                           shift and go to state 94
    Put                            shift and go to state 95

state 379

    (112) expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P . expresion_alge1 CIERRA_P
    (104) expresion_alge1 -> . NUMERO SUMA NUMERO
    (105) expresion_alge1 -> . NUMERO RESTA NUMERO
    (106) expresion_alge1 -> . NUMERO MULTI NUMERO
    (107) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (108) expresion_alge1 -> . RESTA NUMERO SUMA NUMERO
    (109) expresion_alge1 -> . RESTA NUMERO RESTA NUMERO
    (110) expresion_alge1 -> . RESTA NUMERO MULTI NUMERO
    (111) expresion_alge1 -> . RESTA NUMERO DIVISION NUMERO

    NUMERO          shift and go to state 64
    RESTA           shift and go to state 65

    expresion_alge1                shift and go to state 516

state 380

    (113) expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P . expresion_alge1 CIERRA_P
    (104) expresion_alge1 -> . NUMERO SUMA NUMERO
    (105) expresion_alge1 -> . NUMERO RESTA NUMERO
    (106) expresion_alge1 -> . NUMERO MULTI NUMERO
    (107) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (108) expresion_alge1 -> . RESTA NUMERO SUMA NUMERO
    (109) expresion_alge1 -> . RESTA NUMERO RESTA NUMERO
    (110) expresion_alge1 -> . RESTA NUMERO MULTI NUMERO
    (111) expresion_alge1 -> . RESTA NUMERO DIVISION NUMERO

    NUMERO          shift and go to state 64
    RESTA           shift and go to state 65

    expresion_alge1                shift and go to state 517

state 381

    (114) expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P . expresion_alge1 CIERRA_P
    (104) expresion_alge1 -> . NUMERO SUMA NUMERO
    (105) expresion_alge1 -> . NUMERO RESTA NUMERO
    (106) expresion_alge1 -> . NUMERO MULTI NUMERO
    (107) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (108) expresion_alge1 -> . RESTA NUMERO SUMA NUMERO
    (109) expresion_alge1 -> . RESTA NUMERO RESTA NUMERO
    (110) expresion_alge1 -> . RESTA NUMERO MULTI NUMERO
    (111) expresion_alge1 -> . RESTA NUMERO DIVISION NUMERO

    NUMERO          shift and go to state 64
    RESTA           shift and go to state 65

    expresion_alge1                shift and go to state 518

state 382

    (115) expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P . expresion_alge1 CIERRA_P
    (104) expresion_alge1 -> . NUMERO SUMA NUMERO
    (105) expresion_alge1 -> . NUMERO RESTA NUMERO
    (106) expresion_alge1 -> . NUMERO MULTI NUMERO
    (107) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (108) expresion_alge1 -> . RESTA NUMERO SUMA NUMERO
    (109) expresion_alge1 -> . RESTA NUMERO RESTA NUMERO
    (110) expresion_alge1 -> . RESTA NUMERO MULTI NUMERO
    (111) expresion_alge1 -> . RESTA NUMERO DIVISION NUMERO

    NUMERO          shift and go to state 64
    RESTA           shift and go to state 65

    expresion_alge1                shift and go to state 519

state 383

    (328) Run -> RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA . cuerpo3
    (15) cuerpo3 -> . variablexdd
    (16) cuerpo3 -> . COMMENT cuerpo3
    (17) cuerpo3 -> . expresion
    (18) cuerpo3 -> . funcion
    (19) cuerpo3 -> . empty
    (20) cuerpo3 -> . Put
    (21) cuerpo3 -> . Put2
    (22) cuerpo3 -> . Run
    (23) cuerpo3 -> . Repeat
    (35) variablexdd -> . variable1 cuerpo3
    (36) variablexdd -> . variable2 cuerpo3
    (37) variablexdd -> . empty empty
    (41) expresion -> . funcion expresion
    (42) expresion -> . expresion_alge1 expresion
    (43) expresion -> . expresion_alge2 expresion
    (44) expresion -> . Sum expresion
    (45) expresion -> . Substr expresion
    (46) expresion -> . Mult expresion
    (47) expresion -> . Div expresion
    (48) expresion -> . funcion empty
    (49) expresion -> . expresion_alge1 empty
    (50) expresion -> . expresion_alge2 empty
    (51) expresion -> . Sum empty
    (52) expresion -> . Substr empty
    (53) expresion -> . Mult empty
    (54) expresion -> . Div empty
    (55) expresion -> . empty empty
    (82) funcion -> . Random empty
    (83) funcion -> . If empty
    (84) funcion -> . IfElse empty
    (85) funcion -> . Until empty
    (86) funcion -> . While empty
    (87) funcion -> . PrintLine empty
    (88) funcion -> . And empty
    (89) funcion -> . Or empty
    (90) funcion -> . Add empty
    (91) funcion -> . Put2 empty
    (92) funcion -> . Put empty
    (93) funcion -> . PUNTOCOMA funcion
    (94) funcion -> . empty empty
    (338) empty -> .
    (95) Put -> . PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA
    (96) Put2 -> . PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (97) Put2 -> . PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (98) Put2 -> . PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (99) Put2 -> . PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (100) Put2 -> . PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA
    (328) Run -> . RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA cuerpo3
    (267) Repeat -> . REPEAT NUMERO BRACKET1 ordenes BRACKET2 cuerpo3
    (38) variable1 -> . DEF VAR PUNTOCOMA
    (39) variable2 -> . DEF VAR IGUAL NUMERO PUNTOCOMA
    (40) variable2 -> . DEF VAR IGUAL RESTA NUMERO PUNTOCOMA
    (104) expresion_alge1 -> . NUMERO SUMA NUMERO
    (105) expresion_alge1 -> . NUMERO RESTA NUMERO
    (106) expresion_alge1 -> . NUMERO MULTI NUMERO
    (107) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (108) expresion_alge1 -> . RESTA NUMERO SUMA NUMERO
    (109) expresion_alge1 -> . RESTA NUMERO RESTA NUMERO
    (110) expresion_alge1 -> . RESTA NUMERO MULTI NUMERO
    (111) expresion_alge1 -> . RESTA NUMERO DIVISION NUMERO
    (112) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (113) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (114) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (115) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (116) Sum -> . SUM ABRE_P NUMERO COMA NUMERO CIERRA_P
    (117) Sum -> . SUM ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (118) Sum -> . SUM ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (119) Sum -> . SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (120) Sum -> . SUM ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (121) Sum -> . SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (122) Sum -> . SUM ABRE_P NUMERO COMA Var CIERRA_P
    (123) Sum -> . SUM ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (124) Sum -> . SUM ABRE_P Var COMA NUMERO CIERRA_P
    (125) Sum -> . SUM ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (126) Sum -> . SUM ABRE_P Var COMA Var CIERRA_P
    (127) Sum -> . SUM ABRE_P expresion_alge1 COMA Var CIERRA_P
    (128) Sum -> . SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (129) Sum -> . SUM ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (130) Sum -> . SUM ABRE_P Var COMA expresion_alge1 CIERRA_P
    (131) Sum -> . SUM ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P
    (132) Substr -> . SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P
    (133) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (134) Substr -> . SUBSTR ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (135) Substr -> . SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (136) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (137) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (138) Substr -> . SUBSTR ABRE_P NUMERO COMA Var CIERRA_P
    (139) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (140) Substr -> . SUBSTR ABRE_P Var COMA NUMERO CIERRA_P
    (141) Substr -> . SUBSTR ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (142) Substr -> . SUBSTR ABRE_P Var COMA Var CIERRA_P
    (143) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P
    (144) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (145) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (146) Substr -> . SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P
    (147) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P
    (148) Mult -> . MULT ABRE_P NUMERO COMA NUMERO CIERRA_P
    (149) Mult -> . MULT ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (150) Mult -> . MULT ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (151) Mult -> . MULT ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (152) Mult -> . MULT ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (153) Mult -> . MULT ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (154) Mult -> . MULT ABRE_P NUMERO COMA Var CIERRA_P
    (155) Mult -> . MULT ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (156) Mult -> . MULT ABRE_P Var COMA NUMERO CIERRA_P
    (157) Mult -> . MULT ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (158) Mult -> . MULT ABRE_P Var COMA Var CIERRA_P
    (159) Mult -> . MULT ABRE_P expresion_alge1 COMA Var CIERRA_P
    (160) Mult -> . MULT ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (161) Mult -> . MULT ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (162) Mult -> . MULT ABRE_P Var COMA expresion_alge1 CIERRA_P
    (163) Mult -> . MULT ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P
    (164) Div -> . DIV ABRE_P NUMERO COMA NUMERO CIERRA_P
    (165) Div -> . DIV ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (166) Div -> . DIV ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (167) Div -> . DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (168) Div -> . DIV ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (169) Div -> . DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (170) Div -> . DIV ABRE_P NUMERO COMA Var CIERRA_P
    (171) Div -> . DIV ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (172) Div -> . DIV ABRE_P Var COMA NUMERO CIERRA_P
    (173) Div -> . DIV ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (174) Div -> . DIV ABRE_P Var COMA Var CIERRA_P
    (175) Div -> . DIV ABRE_P expresion_alge1 COMA Var CIERRA_P
    (176) Div -> . DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (177) Div -> . DIV ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (178) Div -> . DIV ABRE_P Var COMA expresion_alge1 CIERRA_P
    (179) Div -> . DIV ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P
    (279) Random -> . RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA
    (264) If -> . IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2
    (265) IfElse -> . IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2
    (268) Until -> . UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2
    (266) While -> . WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2
    (337) PrintLine -> . PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA
    (256) And -> . AND ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (257) And -> . AND ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P
    (258) And -> . AND ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P
    (259) And -> . AND ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P
    (260) Or -> . OR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (261) Or -> . OR ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P
    (262) Or -> . OR ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P
    (263) Or -> . OR ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P
    (269) Add -> . ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA
    (270) Add -> . ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (271) Add -> . ADD ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (272) Add -> . ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (273) Add -> . ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (274) Add -> . ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA

  ! shift/reduce conflict for PUNTOCOMA resolved as shift
  ! shift/reduce conflict for PUT resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for ABRE_P resolved as shift
  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for SUBSTR resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for RANDOM resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for IFELSE resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for PRINTLINE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
    COMMENT         shift and go to state 37
    PUNTOCOMA       shift and go to state 62
    FIN             reduce using rule 338 (empty -> .)
    PUT             shift and go to state 15
    RUN             shift and go to state 66
    REPEAT          shift and go to state 67
    DEF             shift and go to state 16
    NUMERO          shift and go to state 64
    RESTA           shift and go to state 65
    ABRE_P          shift and go to state 63
    SUM             shift and go to state 70
    SUBSTR          shift and go to state 71
    MULT            shift and go to state 68
    DIV             shift and go to state 69
    RANDOM          shift and go to state 72
    IF              shift and go to state 73
    IFELSE          shift and go to state 74
    UNTIL           shift and go to state 75
    WHILE           shift and go to state 76
    PRINTLINE       shift and go to state 77
    AND             shift and go to state 78
    OR              shift and go to state 79
    ADD             shift and go to state 80

  ! PUNTOCOMA       [ reduce using rule 338 (empty -> .) ]
  ! NUMERO          [ reduce using rule 338 (empty -> .) ]
  ! RESTA           [ reduce using rule 338 (empty -> .) ]
  ! ABRE_P          [ reduce using rule 338 (empty -> .) ]
  ! SUM             [ reduce using rule 338 (empty -> .) ]
  ! SUBSTR          [ reduce using rule 338 (empty -> .) ]
  ! MULT            [ reduce using rule 338 (empty -> .) ]
  ! DIV             [ reduce using rule 338 (empty -> .) ]
  ! RANDOM          [ reduce using rule 338 (empty -> .) ]
  ! IF              [ reduce using rule 338 (empty -> .) ]
  ! IFELSE          [ reduce using rule 338 (empty -> .) ]
  ! UNTIL           [ reduce using rule 338 (empty -> .) ]
  ! WHILE           [ reduce using rule 338 (empty -> .) ]
  ! PRINTLINE       [ reduce using rule 338 (empty -> .) ]
  ! AND             [ reduce using rule 338 (empty -> .) ]
  ! OR              [ reduce using rule 338 (empty -> .) ]
  ! ADD             [ reduce using rule 338 (empty -> .) ]
  ! PUT             [ reduce using rule 338 (empty -> .) ]

    cuerpo3                        shift and go to state 520
    variablexdd                    shift and go to state 36
    expresion                      shift and go to state 38
    funcion                        shift and go to state 39
    empty                          shift and go to state 40
    Put                            shift and go to state 41
    Put2                           shift and go to state 42
    Run                            shift and go to state 43
    Repeat                         shift and go to state 44
    variable1                      shift and go to state 45
    variable2                      shift and go to state 46
    expresion_alge1                shift and go to state 47
    expresion_alge2                shift and go to state 48
    Sum                            shift and go to state 49
    Substr                         shift and go to state 50
    Mult                           shift and go to state 51
    Div                            shift and go to state 52
    Random                         shift and go to state 53
    If                             shift and go to state 54
    IfElse                         shift and go to state 55
    Until                          shift and go to state 56
    While                          shift and go to state 57
    PrintLine                      shift and go to state 58
    And                            shift and go to state 59
    Or                             shift and go to state 60
    Add                            shift and go to state 61

state 384

    (280) ContinueUp -> CONTINUEUP NUMERO PUNTOCOMA .

    BEGINNING       reduce using rule 280 (ContinueUp -> CONTINUEUP NUMERO PUNTOCOMA .)
    CONTINUEUP      reduce using rule 280 (ContinueUp -> CONTINUEUP NUMERO PUNTOCOMA .)
    CONTINUEDOWN    reduce using rule 280 (ContinueUp -> CONTINUEUP NUMERO PUNTOCOMA .)
    CONTINUERIGHT   reduce using rule 280 (ContinueUp -> CONTINUEUP NUMERO PUNTOCOMA .)
    CONTINUELEFT    reduce using rule 280 (ContinueUp -> CONTINUEUP NUMERO PUNTOCOMA .)
    UP              reduce using rule 280 (ContinueUp -> CONTINUEUP NUMERO PUNTOCOMA .)
    DOWN            reduce using rule 280 (ContinueUp -> CONTINUEUP NUMERO PUNTOCOMA .)
    SPEED           reduce using rule 280 (ContinueUp -> CONTINUEUP NUMERO PUNTOCOMA .)
    POS             reduce using rule 280 (ContinueUp -> CONTINUEUP NUMERO PUNTOCOMA .)
    POSX            reduce using rule 280 (ContinueUp -> CONTINUEUP NUMERO PUNTOCOMA .)
    POSY            reduce using rule 280 (ContinueUp -> CONTINUEUP NUMERO PUNTOCOMA .)
    USECOLOR        reduce using rule 280 (ContinueUp -> CONTINUEUP NUMERO PUNTOCOMA .)
    BRACKET2        reduce using rule 280 (ContinueUp -> CONTINUEUP NUMERO PUNTOCOMA .)


state 385

    (281) ContinueUp -> CONTINUEUP expresion_alge1 PUNTOCOMA .

    BEGINNING       reduce using rule 281 (ContinueUp -> CONTINUEUP expresion_alge1 PUNTOCOMA .)
    CONTINUEUP      reduce using rule 281 (ContinueUp -> CONTINUEUP expresion_alge1 PUNTOCOMA .)
    CONTINUEDOWN    reduce using rule 281 (ContinueUp -> CONTINUEUP expresion_alge1 PUNTOCOMA .)
    CONTINUERIGHT   reduce using rule 281 (ContinueUp -> CONTINUEUP expresion_alge1 PUNTOCOMA .)
    CONTINUELEFT    reduce using rule 281 (ContinueUp -> CONTINUEUP expresion_alge1 PUNTOCOMA .)
    UP              reduce using rule 281 (ContinueUp -> CONTINUEUP expresion_alge1 PUNTOCOMA .)
    DOWN            reduce using rule 281 (ContinueUp -> CONTINUEUP expresion_alge1 PUNTOCOMA .)
    SPEED           reduce using rule 281 (ContinueUp -> CONTINUEUP expresion_alge1 PUNTOCOMA .)
    POS             reduce using rule 281 (ContinueUp -> CONTINUEUP expresion_alge1 PUNTOCOMA .)
    POSX            reduce using rule 281 (ContinueUp -> CONTINUEUP expresion_alge1 PUNTOCOMA .)
    POSY            reduce using rule 281 (ContinueUp -> CONTINUEUP expresion_alge1 PUNTOCOMA .)
    USECOLOR        reduce using rule 281 (ContinueUp -> CONTINUEUP expresion_alge1 PUNTOCOMA .)
    BRACKET2        reduce using rule 281 (ContinueUp -> CONTINUEUP expresion_alge1 PUNTOCOMA .)


state 386

    (282) ContinueUp -> CONTINUEUP expresion_alge2 PUNTOCOMA .

    BEGINNING       reduce using rule 282 (ContinueUp -> CONTINUEUP expresion_alge2 PUNTOCOMA .)
    CONTINUEUP      reduce using rule 282 (ContinueUp -> CONTINUEUP expresion_alge2 PUNTOCOMA .)
    CONTINUEDOWN    reduce using rule 282 (ContinueUp -> CONTINUEUP expresion_alge2 PUNTOCOMA .)
    CONTINUERIGHT   reduce using rule 282 (ContinueUp -> CONTINUEUP expresion_alge2 PUNTOCOMA .)
    CONTINUELEFT    reduce using rule 282 (ContinueUp -> CONTINUEUP expresion_alge2 PUNTOCOMA .)
    UP              reduce using rule 282 (ContinueUp -> CONTINUEUP expresion_alge2 PUNTOCOMA .)
    DOWN            reduce using rule 282 (ContinueUp -> CONTINUEUP expresion_alge2 PUNTOCOMA .)
    SPEED           reduce using rule 282 (ContinueUp -> CONTINUEUP expresion_alge2 PUNTOCOMA .)
    POS             reduce using rule 282 (ContinueUp -> CONTINUEUP expresion_alge2 PUNTOCOMA .)
    POSX            reduce using rule 282 (ContinueUp -> CONTINUEUP expresion_alge2 PUNTOCOMA .)
    POSY            reduce using rule 282 (ContinueUp -> CONTINUEUP expresion_alge2 PUNTOCOMA .)
    USECOLOR        reduce using rule 282 (ContinueUp -> CONTINUEUP expresion_alge2 PUNTOCOMA .)
    BRACKET2        reduce using rule 282 (ContinueUp -> CONTINUEUP expresion_alge2 PUNTOCOMA .)


state 387

    (283) ContinueUp -> CONTINUEUP Var PUNTOCOMA .

    BEGINNING       reduce using rule 283 (ContinueUp -> CONTINUEUP Var PUNTOCOMA .)
    CONTINUEUP      reduce using rule 283 (ContinueUp -> CONTINUEUP Var PUNTOCOMA .)
    CONTINUEDOWN    reduce using rule 283 (ContinueUp -> CONTINUEUP Var PUNTOCOMA .)
    CONTINUERIGHT   reduce using rule 283 (ContinueUp -> CONTINUEUP Var PUNTOCOMA .)
    CONTINUELEFT    reduce using rule 283 (ContinueUp -> CONTINUEUP Var PUNTOCOMA .)
    UP              reduce using rule 283 (ContinueUp -> CONTINUEUP Var PUNTOCOMA .)
    DOWN            reduce using rule 283 (ContinueUp -> CONTINUEUP Var PUNTOCOMA .)
    SPEED           reduce using rule 283 (ContinueUp -> CONTINUEUP Var PUNTOCOMA .)
    POS             reduce using rule 283 (ContinueUp -> CONTINUEUP Var PUNTOCOMA .)
    POSX            reduce using rule 283 (ContinueUp -> CONTINUEUP Var PUNTOCOMA .)
    POSY            reduce using rule 283 (ContinueUp -> CONTINUEUP Var PUNTOCOMA .)
    USECOLOR        reduce using rule 283 (ContinueUp -> CONTINUEUP Var PUNTOCOMA .)
    BRACKET2        reduce using rule 283 (ContinueUp -> CONTINUEUP Var PUNTOCOMA .)


state 388

    (284) ContinueDown -> CONTINUEDOWN NUMERO PUNTOCOMA .

    BEGINNING       reduce using rule 284 (ContinueDown -> CONTINUEDOWN NUMERO PUNTOCOMA .)
    CONTINUEUP      reduce using rule 284 (ContinueDown -> CONTINUEDOWN NUMERO PUNTOCOMA .)
    CONTINUEDOWN    reduce using rule 284 (ContinueDown -> CONTINUEDOWN NUMERO PUNTOCOMA .)
    CONTINUERIGHT   reduce using rule 284 (ContinueDown -> CONTINUEDOWN NUMERO PUNTOCOMA .)
    CONTINUELEFT    reduce using rule 284 (ContinueDown -> CONTINUEDOWN NUMERO PUNTOCOMA .)
    UP              reduce using rule 284 (ContinueDown -> CONTINUEDOWN NUMERO PUNTOCOMA .)
    DOWN            reduce using rule 284 (ContinueDown -> CONTINUEDOWN NUMERO PUNTOCOMA .)
    SPEED           reduce using rule 284 (ContinueDown -> CONTINUEDOWN NUMERO PUNTOCOMA .)
    POS             reduce using rule 284 (ContinueDown -> CONTINUEDOWN NUMERO PUNTOCOMA .)
    POSX            reduce using rule 284 (ContinueDown -> CONTINUEDOWN NUMERO PUNTOCOMA .)
    POSY            reduce using rule 284 (ContinueDown -> CONTINUEDOWN NUMERO PUNTOCOMA .)
    USECOLOR        reduce using rule 284 (ContinueDown -> CONTINUEDOWN NUMERO PUNTOCOMA .)
    BRACKET2        reduce using rule 284 (ContinueDown -> CONTINUEDOWN NUMERO PUNTOCOMA .)


state 389

    (285) ContinueDown -> CONTINUEDOWN expresion_alge1 PUNTOCOMA .

    BEGINNING       reduce using rule 285 (ContinueDown -> CONTINUEDOWN expresion_alge1 PUNTOCOMA .)
    CONTINUEUP      reduce using rule 285 (ContinueDown -> CONTINUEDOWN expresion_alge1 PUNTOCOMA .)
    CONTINUEDOWN    reduce using rule 285 (ContinueDown -> CONTINUEDOWN expresion_alge1 PUNTOCOMA .)
    CONTINUERIGHT   reduce using rule 285 (ContinueDown -> CONTINUEDOWN expresion_alge1 PUNTOCOMA .)
    CONTINUELEFT    reduce using rule 285 (ContinueDown -> CONTINUEDOWN expresion_alge1 PUNTOCOMA .)
    UP              reduce using rule 285 (ContinueDown -> CONTINUEDOWN expresion_alge1 PUNTOCOMA .)
    DOWN            reduce using rule 285 (ContinueDown -> CONTINUEDOWN expresion_alge1 PUNTOCOMA .)
    SPEED           reduce using rule 285 (ContinueDown -> CONTINUEDOWN expresion_alge1 PUNTOCOMA .)
    POS             reduce using rule 285 (ContinueDown -> CONTINUEDOWN expresion_alge1 PUNTOCOMA .)
    POSX            reduce using rule 285 (ContinueDown -> CONTINUEDOWN expresion_alge1 PUNTOCOMA .)
    POSY            reduce using rule 285 (ContinueDown -> CONTINUEDOWN expresion_alge1 PUNTOCOMA .)
    USECOLOR        reduce using rule 285 (ContinueDown -> CONTINUEDOWN expresion_alge1 PUNTOCOMA .)
    BRACKET2        reduce using rule 285 (ContinueDown -> CONTINUEDOWN expresion_alge1 PUNTOCOMA .)


state 390

    (286) ContinueDown -> CONTINUEDOWN expresion_alge2 PUNTOCOMA .

    BEGINNING       reduce using rule 286 (ContinueDown -> CONTINUEDOWN expresion_alge2 PUNTOCOMA .)
    CONTINUEUP      reduce using rule 286 (ContinueDown -> CONTINUEDOWN expresion_alge2 PUNTOCOMA .)
    CONTINUEDOWN    reduce using rule 286 (ContinueDown -> CONTINUEDOWN expresion_alge2 PUNTOCOMA .)
    CONTINUERIGHT   reduce using rule 286 (ContinueDown -> CONTINUEDOWN expresion_alge2 PUNTOCOMA .)
    CONTINUELEFT    reduce using rule 286 (ContinueDown -> CONTINUEDOWN expresion_alge2 PUNTOCOMA .)
    UP              reduce using rule 286 (ContinueDown -> CONTINUEDOWN expresion_alge2 PUNTOCOMA .)
    DOWN            reduce using rule 286 (ContinueDown -> CONTINUEDOWN expresion_alge2 PUNTOCOMA .)
    SPEED           reduce using rule 286 (ContinueDown -> CONTINUEDOWN expresion_alge2 PUNTOCOMA .)
    POS             reduce using rule 286 (ContinueDown -> CONTINUEDOWN expresion_alge2 PUNTOCOMA .)
    POSX            reduce using rule 286 (ContinueDown -> CONTINUEDOWN expresion_alge2 PUNTOCOMA .)
    POSY            reduce using rule 286 (ContinueDown -> CONTINUEDOWN expresion_alge2 PUNTOCOMA .)
    USECOLOR        reduce using rule 286 (ContinueDown -> CONTINUEDOWN expresion_alge2 PUNTOCOMA .)
    BRACKET2        reduce using rule 286 (ContinueDown -> CONTINUEDOWN expresion_alge2 PUNTOCOMA .)


state 391

    (287) ContinueDown -> CONTINUEDOWN Var PUNTOCOMA .

    BEGINNING       reduce using rule 287 (ContinueDown -> CONTINUEDOWN Var PUNTOCOMA .)
    CONTINUEUP      reduce using rule 287 (ContinueDown -> CONTINUEDOWN Var PUNTOCOMA .)
    CONTINUEDOWN    reduce using rule 287 (ContinueDown -> CONTINUEDOWN Var PUNTOCOMA .)
    CONTINUERIGHT   reduce using rule 287 (ContinueDown -> CONTINUEDOWN Var PUNTOCOMA .)
    CONTINUELEFT    reduce using rule 287 (ContinueDown -> CONTINUEDOWN Var PUNTOCOMA .)
    UP              reduce using rule 287 (ContinueDown -> CONTINUEDOWN Var PUNTOCOMA .)
    DOWN            reduce using rule 287 (ContinueDown -> CONTINUEDOWN Var PUNTOCOMA .)
    SPEED           reduce using rule 287 (ContinueDown -> CONTINUEDOWN Var PUNTOCOMA .)
    POS             reduce using rule 287 (ContinueDown -> CONTINUEDOWN Var PUNTOCOMA .)
    POSX            reduce using rule 287 (ContinueDown -> CONTINUEDOWN Var PUNTOCOMA .)
    POSY            reduce using rule 287 (ContinueDown -> CONTINUEDOWN Var PUNTOCOMA .)
    USECOLOR        reduce using rule 287 (ContinueDown -> CONTINUEDOWN Var PUNTOCOMA .)
    BRACKET2        reduce using rule 287 (ContinueDown -> CONTINUEDOWN Var PUNTOCOMA .)


state 392

    (288) ContinueRight -> CONTINUERIGHT NUMERO PUNTOCOMA .

    BEGINNING       reduce using rule 288 (ContinueRight -> CONTINUERIGHT NUMERO PUNTOCOMA .)
    CONTINUEUP      reduce using rule 288 (ContinueRight -> CONTINUERIGHT NUMERO PUNTOCOMA .)
    CONTINUEDOWN    reduce using rule 288 (ContinueRight -> CONTINUERIGHT NUMERO PUNTOCOMA .)
    CONTINUERIGHT   reduce using rule 288 (ContinueRight -> CONTINUERIGHT NUMERO PUNTOCOMA .)
    CONTINUELEFT    reduce using rule 288 (ContinueRight -> CONTINUERIGHT NUMERO PUNTOCOMA .)
    UP              reduce using rule 288 (ContinueRight -> CONTINUERIGHT NUMERO PUNTOCOMA .)
    DOWN            reduce using rule 288 (ContinueRight -> CONTINUERIGHT NUMERO PUNTOCOMA .)
    SPEED           reduce using rule 288 (ContinueRight -> CONTINUERIGHT NUMERO PUNTOCOMA .)
    POS             reduce using rule 288 (ContinueRight -> CONTINUERIGHT NUMERO PUNTOCOMA .)
    POSX            reduce using rule 288 (ContinueRight -> CONTINUERIGHT NUMERO PUNTOCOMA .)
    POSY            reduce using rule 288 (ContinueRight -> CONTINUERIGHT NUMERO PUNTOCOMA .)
    USECOLOR        reduce using rule 288 (ContinueRight -> CONTINUERIGHT NUMERO PUNTOCOMA .)
    BRACKET2        reduce using rule 288 (ContinueRight -> CONTINUERIGHT NUMERO PUNTOCOMA .)


state 393

    (289) ContinueRight -> CONTINUERIGHT expresion_alge1 PUNTOCOMA .

    BEGINNING       reduce using rule 289 (ContinueRight -> CONTINUERIGHT expresion_alge1 PUNTOCOMA .)
    CONTINUEUP      reduce using rule 289 (ContinueRight -> CONTINUERIGHT expresion_alge1 PUNTOCOMA .)
    CONTINUEDOWN    reduce using rule 289 (ContinueRight -> CONTINUERIGHT expresion_alge1 PUNTOCOMA .)
    CONTINUERIGHT   reduce using rule 289 (ContinueRight -> CONTINUERIGHT expresion_alge1 PUNTOCOMA .)
    CONTINUELEFT    reduce using rule 289 (ContinueRight -> CONTINUERIGHT expresion_alge1 PUNTOCOMA .)
    UP              reduce using rule 289 (ContinueRight -> CONTINUERIGHT expresion_alge1 PUNTOCOMA .)
    DOWN            reduce using rule 289 (ContinueRight -> CONTINUERIGHT expresion_alge1 PUNTOCOMA .)
    SPEED           reduce using rule 289 (ContinueRight -> CONTINUERIGHT expresion_alge1 PUNTOCOMA .)
    POS             reduce using rule 289 (ContinueRight -> CONTINUERIGHT expresion_alge1 PUNTOCOMA .)
    POSX            reduce using rule 289 (ContinueRight -> CONTINUERIGHT expresion_alge1 PUNTOCOMA .)
    POSY            reduce using rule 289 (ContinueRight -> CONTINUERIGHT expresion_alge1 PUNTOCOMA .)
    USECOLOR        reduce using rule 289 (ContinueRight -> CONTINUERIGHT expresion_alge1 PUNTOCOMA .)
    BRACKET2        reduce using rule 289 (ContinueRight -> CONTINUERIGHT expresion_alge1 PUNTOCOMA .)


state 394

    (290) ContinueRight -> CONTINUERIGHT expresion_alge2 PUNTOCOMA .

    BEGINNING       reduce using rule 290 (ContinueRight -> CONTINUERIGHT expresion_alge2 PUNTOCOMA .)
    CONTINUEUP      reduce using rule 290 (ContinueRight -> CONTINUERIGHT expresion_alge2 PUNTOCOMA .)
    CONTINUEDOWN    reduce using rule 290 (ContinueRight -> CONTINUERIGHT expresion_alge2 PUNTOCOMA .)
    CONTINUERIGHT   reduce using rule 290 (ContinueRight -> CONTINUERIGHT expresion_alge2 PUNTOCOMA .)
    CONTINUELEFT    reduce using rule 290 (ContinueRight -> CONTINUERIGHT expresion_alge2 PUNTOCOMA .)
    UP              reduce using rule 290 (ContinueRight -> CONTINUERIGHT expresion_alge2 PUNTOCOMA .)
    DOWN            reduce using rule 290 (ContinueRight -> CONTINUERIGHT expresion_alge2 PUNTOCOMA .)
    SPEED           reduce using rule 290 (ContinueRight -> CONTINUERIGHT expresion_alge2 PUNTOCOMA .)
    POS             reduce using rule 290 (ContinueRight -> CONTINUERIGHT expresion_alge2 PUNTOCOMA .)
    POSX            reduce using rule 290 (ContinueRight -> CONTINUERIGHT expresion_alge2 PUNTOCOMA .)
    POSY            reduce using rule 290 (ContinueRight -> CONTINUERIGHT expresion_alge2 PUNTOCOMA .)
    USECOLOR        reduce using rule 290 (ContinueRight -> CONTINUERIGHT expresion_alge2 PUNTOCOMA .)
    BRACKET2        reduce using rule 290 (ContinueRight -> CONTINUERIGHT expresion_alge2 PUNTOCOMA .)


state 395

    (291) ContinueRight -> CONTINUERIGHT Var PUNTOCOMA .

    BEGINNING       reduce using rule 291 (ContinueRight -> CONTINUERIGHT Var PUNTOCOMA .)
    CONTINUEUP      reduce using rule 291 (ContinueRight -> CONTINUERIGHT Var PUNTOCOMA .)
    CONTINUEDOWN    reduce using rule 291 (ContinueRight -> CONTINUERIGHT Var PUNTOCOMA .)
    CONTINUERIGHT   reduce using rule 291 (ContinueRight -> CONTINUERIGHT Var PUNTOCOMA .)
    CONTINUELEFT    reduce using rule 291 (ContinueRight -> CONTINUERIGHT Var PUNTOCOMA .)
    UP              reduce using rule 291 (ContinueRight -> CONTINUERIGHT Var PUNTOCOMA .)
    DOWN            reduce using rule 291 (ContinueRight -> CONTINUERIGHT Var PUNTOCOMA .)
    SPEED           reduce using rule 291 (ContinueRight -> CONTINUERIGHT Var PUNTOCOMA .)
    POS             reduce using rule 291 (ContinueRight -> CONTINUERIGHT Var PUNTOCOMA .)
    POSX            reduce using rule 291 (ContinueRight -> CONTINUERIGHT Var PUNTOCOMA .)
    POSY            reduce using rule 291 (ContinueRight -> CONTINUERIGHT Var PUNTOCOMA .)
    USECOLOR        reduce using rule 291 (ContinueRight -> CONTINUERIGHT Var PUNTOCOMA .)
    BRACKET2        reduce using rule 291 (ContinueRight -> CONTINUERIGHT Var PUNTOCOMA .)


state 396

    (292) ContinueLeft -> CONTINUELEFT NUMERO PUNTOCOMA .

    BEGINNING       reduce using rule 292 (ContinueLeft -> CONTINUELEFT NUMERO PUNTOCOMA .)
    CONTINUEUP      reduce using rule 292 (ContinueLeft -> CONTINUELEFT NUMERO PUNTOCOMA .)
    CONTINUEDOWN    reduce using rule 292 (ContinueLeft -> CONTINUELEFT NUMERO PUNTOCOMA .)
    CONTINUERIGHT   reduce using rule 292 (ContinueLeft -> CONTINUELEFT NUMERO PUNTOCOMA .)
    CONTINUELEFT    reduce using rule 292 (ContinueLeft -> CONTINUELEFT NUMERO PUNTOCOMA .)
    UP              reduce using rule 292 (ContinueLeft -> CONTINUELEFT NUMERO PUNTOCOMA .)
    DOWN            reduce using rule 292 (ContinueLeft -> CONTINUELEFT NUMERO PUNTOCOMA .)
    SPEED           reduce using rule 292 (ContinueLeft -> CONTINUELEFT NUMERO PUNTOCOMA .)
    POS             reduce using rule 292 (ContinueLeft -> CONTINUELEFT NUMERO PUNTOCOMA .)
    POSX            reduce using rule 292 (ContinueLeft -> CONTINUELEFT NUMERO PUNTOCOMA .)
    POSY            reduce using rule 292 (ContinueLeft -> CONTINUELEFT NUMERO PUNTOCOMA .)
    USECOLOR        reduce using rule 292 (ContinueLeft -> CONTINUELEFT NUMERO PUNTOCOMA .)
    BRACKET2        reduce using rule 292 (ContinueLeft -> CONTINUELEFT NUMERO PUNTOCOMA .)


state 397

    (293) ContinueLeft -> CONTINUELEFT expresion_alge1 PUNTOCOMA .

    BEGINNING       reduce using rule 293 (ContinueLeft -> CONTINUELEFT expresion_alge1 PUNTOCOMA .)
    CONTINUEUP      reduce using rule 293 (ContinueLeft -> CONTINUELEFT expresion_alge1 PUNTOCOMA .)
    CONTINUEDOWN    reduce using rule 293 (ContinueLeft -> CONTINUELEFT expresion_alge1 PUNTOCOMA .)
    CONTINUERIGHT   reduce using rule 293 (ContinueLeft -> CONTINUELEFT expresion_alge1 PUNTOCOMA .)
    CONTINUELEFT    reduce using rule 293 (ContinueLeft -> CONTINUELEFT expresion_alge1 PUNTOCOMA .)
    UP              reduce using rule 293 (ContinueLeft -> CONTINUELEFT expresion_alge1 PUNTOCOMA .)
    DOWN            reduce using rule 293 (ContinueLeft -> CONTINUELEFT expresion_alge1 PUNTOCOMA .)
    SPEED           reduce using rule 293 (ContinueLeft -> CONTINUELEFT expresion_alge1 PUNTOCOMA .)
    POS             reduce using rule 293 (ContinueLeft -> CONTINUELEFT expresion_alge1 PUNTOCOMA .)
    POSX            reduce using rule 293 (ContinueLeft -> CONTINUELEFT expresion_alge1 PUNTOCOMA .)
    POSY            reduce using rule 293 (ContinueLeft -> CONTINUELEFT expresion_alge1 PUNTOCOMA .)
    USECOLOR        reduce using rule 293 (ContinueLeft -> CONTINUELEFT expresion_alge1 PUNTOCOMA .)
    BRACKET2        reduce using rule 293 (ContinueLeft -> CONTINUELEFT expresion_alge1 PUNTOCOMA .)


state 398

    (294) ContinueLeft -> CONTINUELEFT expresion_alge2 PUNTOCOMA .

    BEGINNING       reduce using rule 294 (ContinueLeft -> CONTINUELEFT expresion_alge2 PUNTOCOMA .)
    CONTINUEUP      reduce using rule 294 (ContinueLeft -> CONTINUELEFT expresion_alge2 PUNTOCOMA .)
    CONTINUEDOWN    reduce using rule 294 (ContinueLeft -> CONTINUELEFT expresion_alge2 PUNTOCOMA .)
    CONTINUERIGHT   reduce using rule 294 (ContinueLeft -> CONTINUELEFT expresion_alge2 PUNTOCOMA .)
    CONTINUELEFT    reduce using rule 294 (ContinueLeft -> CONTINUELEFT expresion_alge2 PUNTOCOMA .)
    UP              reduce using rule 294 (ContinueLeft -> CONTINUELEFT expresion_alge2 PUNTOCOMA .)
    DOWN            reduce using rule 294 (ContinueLeft -> CONTINUELEFT expresion_alge2 PUNTOCOMA .)
    SPEED           reduce using rule 294 (ContinueLeft -> CONTINUELEFT expresion_alge2 PUNTOCOMA .)
    POS             reduce using rule 294 (ContinueLeft -> CONTINUELEFT expresion_alge2 PUNTOCOMA .)
    POSX            reduce using rule 294 (ContinueLeft -> CONTINUELEFT expresion_alge2 PUNTOCOMA .)
    POSY            reduce using rule 294 (ContinueLeft -> CONTINUELEFT expresion_alge2 PUNTOCOMA .)
    USECOLOR        reduce using rule 294 (ContinueLeft -> CONTINUELEFT expresion_alge2 PUNTOCOMA .)
    BRACKET2        reduce using rule 294 (ContinueLeft -> CONTINUELEFT expresion_alge2 PUNTOCOMA .)


state 399

    (295) ContinueLeft -> CONTINUELEFT Var PUNTOCOMA .

    BEGINNING       reduce using rule 295 (ContinueLeft -> CONTINUELEFT Var PUNTOCOMA .)
    CONTINUEUP      reduce using rule 295 (ContinueLeft -> CONTINUELEFT Var PUNTOCOMA .)
    CONTINUEDOWN    reduce using rule 295 (ContinueLeft -> CONTINUELEFT Var PUNTOCOMA .)
    CONTINUERIGHT   reduce using rule 295 (ContinueLeft -> CONTINUELEFT Var PUNTOCOMA .)
    CONTINUELEFT    reduce using rule 295 (ContinueLeft -> CONTINUELEFT Var PUNTOCOMA .)
    UP              reduce using rule 295 (ContinueLeft -> CONTINUELEFT Var PUNTOCOMA .)
    DOWN            reduce using rule 295 (ContinueLeft -> CONTINUELEFT Var PUNTOCOMA .)
    SPEED           reduce using rule 295 (ContinueLeft -> CONTINUELEFT Var PUNTOCOMA .)
    POS             reduce using rule 295 (ContinueLeft -> CONTINUELEFT Var PUNTOCOMA .)
    POSX            reduce using rule 295 (ContinueLeft -> CONTINUELEFT Var PUNTOCOMA .)
    POSY            reduce using rule 295 (ContinueLeft -> CONTINUELEFT Var PUNTOCOMA .)
    USECOLOR        reduce using rule 295 (ContinueLeft -> CONTINUELEFT Var PUNTOCOMA .)
    BRACKET2        reduce using rule 295 (ContinueLeft -> CONTINUELEFT Var PUNTOCOMA .)


state 400

    (298) Speed -> SPEED NUMERO PUNTOCOMA .

    BEGINNING       reduce using rule 298 (Speed -> SPEED NUMERO PUNTOCOMA .)
    CONTINUEUP      reduce using rule 298 (Speed -> SPEED NUMERO PUNTOCOMA .)
    CONTINUEDOWN    reduce using rule 298 (Speed -> SPEED NUMERO PUNTOCOMA .)
    CONTINUERIGHT   reduce using rule 298 (Speed -> SPEED NUMERO PUNTOCOMA .)
    CONTINUELEFT    reduce using rule 298 (Speed -> SPEED NUMERO PUNTOCOMA .)
    UP              reduce using rule 298 (Speed -> SPEED NUMERO PUNTOCOMA .)
    DOWN            reduce using rule 298 (Speed -> SPEED NUMERO PUNTOCOMA .)
    SPEED           reduce using rule 298 (Speed -> SPEED NUMERO PUNTOCOMA .)
    POS             reduce using rule 298 (Speed -> SPEED NUMERO PUNTOCOMA .)
    POSX            reduce using rule 298 (Speed -> SPEED NUMERO PUNTOCOMA .)
    POSY            reduce using rule 298 (Speed -> SPEED NUMERO PUNTOCOMA .)
    USECOLOR        reduce using rule 298 (Speed -> SPEED NUMERO PUNTOCOMA .)
    BRACKET2        reduce using rule 298 (Speed -> SPEED NUMERO PUNTOCOMA .)


state 401

    (299) Diag -> POS ABRE_P STRING . COMA NUMERO CIERRA_P PUNTOCOMA

    COMA            shift and go to state 521


state 402

    (300) Pos -> POS ABRE_P NUMERO . COMA NUMERO CIERRA_P
    (302) Pos -> POS ABRE_P NUMERO . COMA expresion_alge1 CIERRA_P
    (305) Pos -> POS ABRE_P NUMERO . COMA Var CIERRA_P
    (311) Pos -> POS ABRE_P NUMERO . COMA RESTA NUMERO CIERRA_P
    (104) expresion_alge1 -> NUMERO . SUMA NUMERO
    (105) expresion_alge1 -> NUMERO . RESTA NUMERO
    (106) expresion_alge1 -> NUMERO . MULTI NUMERO
    (107) expresion_alge1 -> NUMERO . DIVISION NUMERO

    COMA            shift and go to state 522
    SUMA            shift and go to state 126
    RESTA           shift and go to state 127
    MULTI           shift and go to state 128
    DIVISION        shift and go to state 129


state 403

    (301) Pos -> POS ABRE_P expresion_alge1 . COMA NUMERO CIERRA_P
    (303) Pos -> POS ABRE_P expresion_alge1 . COMA expresion_alge1 CIERRA_P
    (307) Pos -> POS ABRE_P expresion_alge1 . COMA Var CIERRA_P
    (313) Pos -> POS ABRE_P expresion_alge1 . COMA RESTA NUMERO CIERRA_P

    COMA            shift and go to state 523


state 404

    (304) Pos -> POS ABRE_P Var . COMA NUMERO CIERRA_P
    (306) Pos -> POS ABRE_P Var . COMA Var CIERRA_P
    (308) Pos -> POS ABRE_P Var . COMA expresion_alge1 CIERRA_P
    (314) Pos -> POS ABRE_P Var . COMA RESTA NUMERO CIERRA_P

    COMA            shift and go to state 524


state 405

    (309) Pos -> POS ABRE_P RESTA . NUMERO COMA RESTA NUMERO CIERRA_P
    (310) Pos -> POS ABRE_P RESTA . NUMERO COMA NUMERO CIERRA_P
    (312) Pos -> POS ABRE_P RESTA . NUMERO COMA expresion_alge1 CIERRA_P
    (315) Pos -> POS ABRE_P RESTA . NUMERO COMA Var CIERRA_P
    (108) expresion_alge1 -> RESTA . NUMERO SUMA NUMERO
    (109) expresion_alge1 -> RESTA . NUMERO RESTA NUMERO
    (110) expresion_alge1 -> RESTA . NUMERO MULTI NUMERO
    (111) expresion_alge1 -> RESTA . NUMERO DIVISION NUMERO

    NUMERO          shift and go to state 525


state 406

    (316) PosX -> POSX NUMERO PUNTOCOMA .

    BEGINNING       reduce using rule 316 (PosX -> POSX NUMERO PUNTOCOMA .)
    CONTINUEUP      reduce using rule 316 (PosX -> POSX NUMERO PUNTOCOMA .)
    CONTINUEDOWN    reduce using rule 316 (PosX -> POSX NUMERO PUNTOCOMA .)
    CONTINUERIGHT   reduce using rule 316 (PosX -> POSX NUMERO PUNTOCOMA .)
    CONTINUELEFT    reduce using rule 316 (PosX -> POSX NUMERO PUNTOCOMA .)
    UP              reduce using rule 316 (PosX -> POSX NUMERO PUNTOCOMA .)
    DOWN            reduce using rule 316 (PosX -> POSX NUMERO PUNTOCOMA .)
    SPEED           reduce using rule 316 (PosX -> POSX NUMERO PUNTOCOMA .)
    POS             reduce using rule 316 (PosX -> POSX NUMERO PUNTOCOMA .)
    POSX            reduce using rule 316 (PosX -> POSX NUMERO PUNTOCOMA .)
    POSY            reduce using rule 316 (PosX -> POSX NUMERO PUNTOCOMA .)
    USECOLOR        reduce using rule 316 (PosX -> POSX NUMERO PUNTOCOMA .)
    BRACKET2        reduce using rule 316 (PosX -> POSX NUMERO PUNTOCOMA .)


state 407

    (317) PosX -> POSX RESTA NUMERO . PUNTOCOMA
    (108) expresion_alge1 -> RESTA NUMERO . SUMA NUMERO
    (109) expresion_alge1 -> RESTA NUMERO . RESTA NUMERO
    (110) expresion_alge1 -> RESTA NUMERO . MULTI NUMERO
    (111) expresion_alge1 -> RESTA NUMERO . DIVISION NUMERO

    PUNTOCOMA       shift and go to state 526
    SUMA            shift and go to state 180
    RESTA           shift and go to state 179
    MULTI           shift and go to state 181
    DIVISION        shift and go to state 182


state 408

    (318) PosX -> POSX expresion_alge1 PUNTOCOMA .

    BEGINNING       reduce using rule 318 (PosX -> POSX expresion_alge1 PUNTOCOMA .)
    CONTINUEUP      reduce using rule 318 (PosX -> POSX expresion_alge1 PUNTOCOMA .)
    CONTINUEDOWN    reduce using rule 318 (PosX -> POSX expresion_alge1 PUNTOCOMA .)
    CONTINUERIGHT   reduce using rule 318 (PosX -> POSX expresion_alge1 PUNTOCOMA .)
    CONTINUELEFT    reduce using rule 318 (PosX -> POSX expresion_alge1 PUNTOCOMA .)
    UP              reduce using rule 318 (PosX -> POSX expresion_alge1 PUNTOCOMA .)
    DOWN            reduce using rule 318 (PosX -> POSX expresion_alge1 PUNTOCOMA .)
    SPEED           reduce using rule 318 (PosX -> POSX expresion_alge1 PUNTOCOMA .)
    POS             reduce using rule 318 (PosX -> POSX expresion_alge1 PUNTOCOMA .)
    POSX            reduce using rule 318 (PosX -> POSX expresion_alge1 PUNTOCOMA .)
    POSY            reduce using rule 318 (PosX -> POSX expresion_alge1 PUNTOCOMA .)
    USECOLOR        reduce using rule 318 (PosX -> POSX expresion_alge1 PUNTOCOMA .)
    BRACKET2        reduce using rule 318 (PosX -> POSX expresion_alge1 PUNTOCOMA .)


state 409

    (319) PosX -> POSX expresion_alge2 PUNTOCOMA .

    BEGINNING       reduce using rule 319 (PosX -> POSX expresion_alge2 PUNTOCOMA .)
    CONTINUEUP      reduce using rule 319 (PosX -> POSX expresion_alge2 PUNTOCOMA .)
    CONTINUEDOWN    reduce using rule 319 (PosX -> POSX expresion_alge2 PUNTOCOMA .)
    CONTINUERIGHT   reduce using rule 319 (PosX -> POSX expresion_alge2 PUNTOCOMA .)
    CONTINUELEFT    reduce using rule 319 (PosX -> POSX expresion_alge2 PUNTOCOMA .)
    UP              reduce using rule 319 (PosX -> POSX expresion_alge2 PUNTOCOMA .)
    DOWN            reduce using rule 319 (PosX -> POSX expresion_alge2 PUNTOCOMA .)
    SPEED           reduce using rule 319 (PosX -> POSX expresion_alge2 PUNTOCOMA .)
    POS             reduce using rule 319 (PosX -> POSX expresion_alge2 PUNTOCOMA .)
    POSX            reduce using rule 319 (PosX -> POSX expresion_alge2 PUNTOCOMA .)
    POSY            reduce using rule 319 (PosX -> POSX expresion_alge2 PUNTOCOMA .)
    USECOLOR        reduce using rule 319 (PosX -> POSX expresion_alge2 PUNTOCOMA .)
    BRACKET2        reduce using rule 319 (PosX -> POSX expresion_alge2 PUNTOCOMA .)


state 410

    (320) PosX -> POSX Var PUNTOCOMA .

    BEGINNING       reduce using rule 320 (PosX -> POSX Var PUNTOCOMA .)
    CONTINUEUP      reduce using rule 320 (PosX -> POSX Var PUNTOCOMA .)
    CONTINUEDOWN    reduce using rule 320 (PosX -> POSX Var PUNTOCOMA .)
    CONTINUERIGHT   reduce using rule 320 (PosX -> POSX Var PUNTOCOMA .)
    CONTINUELEFT    reduce using rule 320 (PosX -> POSX Var PUNTOCOMA .)
    UP              reduce using rule 320 (PosX -> POSX Var PUNTOCOMA .)
    DOWN            reduce using rule 320 (PosX -> POSX Var PUNTOCOMA .)
    SPEED           reduce using rule 320 (PosX -> POSX Var PUNTOCOMA .)
    POS             reduce using rule 320 (PosX -> POSX Var PUNTOCOMA .)
    POSX            reduce using rule 320 (PosX -> POSX Var PUNTOCOMA .)
    POSY            reduce using rule 320 (PosX -> POSX Var PUNTOCOMA .)
    USECOLOR        reduce using rule 320 (PosX -> POSX Var PUNTOCOMA .)
    BRACKET2        reduce using rule 320 (PosX -> POSX Var PUNTOCOMA .)


state 411

    (321) PosY -> POSY NUMERO PUNTOCOMA .

    BEGINNING       reduce using rule 321 (PosY -> POSY NUMERO PUNTOCOMA .)
    CONTINUEUP      reduce using rule 321 (PosY -> POSY NUMERO PUNTOCOMA .)
    CONTINUEDOWN    reduce using rule 321 (PosY -> POSY NUMERO PUNTOCOMA .)
    CONTINUERIGHT   reduce using rule 321 (PosY -> POSY NUMERO PUNTOCOMA .)
    CONTINUELEFT    reduce using rule 321 (PosY -> POSY NUMERO PUNTOCOMA .)
    UP              reduce using rule 321 (PosY -> POSY NUMERO PUNTOCOMA .)
    DOWN            reduce using rule 321 (PosY -> POSY NUMERO PUNTOCOMA .)
    SPEED           reduce using rule 321 (PosY -> POSY NUMERO PUNTOCOMA .)
    POS             reduce using rule 321 (PosY -> POSY NUMERO PUNTOCOMA .)
    POSX            reduce using rule 321 (PosY -> POSY NUMERO PUNTOCOMA .)
    POSY            reduce using rule 321 (PosY -> POSY NUMERO PUNTOCOMA .)
    USECOLOR        reduce using rule 321 (PosY -> POSY NUMERO PUNTOCOMA .)
    BRACKET2        reduce using rule 321 (PosY -> POSY NUMERO PUNTOCOMA .)


state 412

    (322) PosY -> POSY RESTA NUMERO . PUNTOCOMA
    (108) expresion_alge1 -> RESTA NUMERO . SUMA NUMERO
    (109) expresion_alge1 -> RESTA NUMERO . RESTA NUMERO
    (110) expresion_alge1 -> RESTA NUMERO . MULTI NUMERO
    (111) expresion_alge1 -> RESTA NUMERO . DIVISION NUMERO

    PUNTOCOMA       shift and go to state 527
    SUMA            shift and go to state 180
    RESTA           shift and go to state 179
    MULTI           shift and go to state 181
    DIVISION        shift and go to state 182


state 413

    (323) PosY -> POSY expresion_alge1 PUNTOCOMA .

    BEGINNING       reduce using rule 323 (PosY -> POSY expresion_alge1 PUNTOCOMA .)
    CONTINUEUP      reduce using rule 323 (PosY -> POSY expresion_alge1 PUNTOCOMA .)
    CONTINUEDOWN    reduce using rule 323 (PosY -> POSY expresion_alge1 PUNTOCOMA .)
    CONTINUERIGHT   reduce using rule 323 (PosY -> POSY expresion_alge1 PUNTOCOMA .)
    CONTINUELEFT    reduce using rule 323 (PosY -> POSY expresion_alge1 PUNTOCOMA .)
    UP              reduce using rule 323 (PosY -> POSY expresion_alge1 PUNTOCOMA .)
    DOWN            reduce using rule 323 (PosY -> POSY expresion_alge1 PUNTOCOMA .)
    SPEED           reduce using rule 323 (PosY -> POSY expresion_alge1 PUNTOCOMA .)
    POS             reduce using rule 323 (PosY -> POSY expresion_alge1 PUNTOCOMA .)
    POSX            reduce using rule 323 (PosY -> POSY expresion_alge1 PUNTOCOMA .)
    POSY            reduce using rule 323 (PosY -> POSY expresion_alge1 PUNTOCOMA .)
    USECOLOR        reduce using rule 323 (PosY -> POSY expresion_alge1 PUNTOCOMA .)
    BRACKET2        reduce using rule 323 (PosY -> POSY expresion_alge1 PUNTOCOMA .)


state 414

    (324) PosY -> POSY expresion_alge2 PUNTOCOMA .

    BEGINNING       reduce using rule 324 (PosY -> POSY expresion_alge2 PUNTOCOMA .)
    CONTINUEUP      reduce using rule 324 (PosY -> POSY expresion_alge2 PUNTOCOMA .)
    CONTINUEDOWN    reduce using rule 324 (PosY -> POSY expresion_alge2 PUNTOCOMA .)
    CONTINUERIGHT   reduce using rule 324 (PosY -> POSY expresion_alge2 PUNTOCOMA .)
    CONTINUELEFT    reduce using rule 324 (PosY -> POSY expresion_alge2 PUNTOCOMA .)
    UP              reduce using rule 324 (PosY -> POSY expresion_alge2 PUNTOCOMA .)
    DOWN            reduce using rule 324 (PosY -> POSY expresion_alge2 PUNTOCOMA .)
    SPEED           reduce using rule 324 (PosY -> POSY expresion_alge2 PUNTOCOMA .)
    POS             reduce using rule 324 (PosY -> POSY expresion_alge2 PUNTOCOMA .)
    POSX            reduce using rule 324 (PosY -> POSY expresion_alge2 PUNTOCOMA .)
    POSY            reduce using rule 324 (PosY -> POSY expresion_alge2 PUNTOCOMA .)
    USECOLOR        reduce using rule 324 (PosY -> POSY expresion_alge2 PUNTOCOMA .)
    BRACKET2        reduce using rule 324 (PosY -> POSY expresion_alge2 PUNTOCOMA .)


state 415

    (325) PosY -> POSY Var PUNTOCOMA .

    BEGINNING       reduce using rule 325 (PosY -> POSY Var PUNTOCOMA .)
    CONTINUEUP      reduce using rule 325 (PosY -> POSY Var PUNTOCOMA .)
    CONTINUEDOWN    reduce using rule 325 (PosY -> POSY Var PUNTOCOMA .)
    CONTINUERIGHT   reduce using rule 325 (PosY -> POSY Var PUNTOCOMA .)
    CONTINUELEFT    reduce using rule 325 (PosY -> POSY Var PUNTOCOMA .)
    UP              reduce using rule 325 (PosY -> POSY Var PUNTOCOMA .)
    DOWN            reduce using rule 325 (PosY -> POSY Var PUNTOCOMA .)
    SPEED           reduce using rule 325 (PosY -> POSY Var PUNTOCOMA .)
    POS             reduce using rule 325 (PosY -> POSY Var PUNTOCOMA .)
    POSX            reduce using rule 325 (PosY -> POSY Var PUNTOCOMA .)
    POSY            reduce using rule 325 (PosY -> POSY Var PUNTOCOMA .)
    USECOLOR        reduce using rule 325 (PosY -> POSY Var PUNTOCOMA .)
    BRACKET2        reduce using rule 325 (PosY -> POSY Var PUNTOCOMA .)


state 416

    (326) UseColor -> USECOLOR NUMERO PUNTOCOMA .

    BEGINNING       reduce using rule 326 (UseColor -> USECOLOR NUMERO PUNTOCOMA .)
    CONTINUEUP      reduce using rule 326 (UseColor -> USECOLOR NUMERO PUNTOCOMA .)
    CONTINUEDOWN    reduce using rule 326 (UseColor -> USECOLOR NUMERO PUNTOCOMA .)
    CONTINUERIGHT   reduce using rule 326 (UseColor -> USECOLOR NUMERO PUNTOCOMA .)
    CONTINUELEFT    reduce using rule 326 (UseColor -> USECOLOR NUMERO PUNTOCOMA .)
    UP              reduce using rule 326 (UseColor -> USECOLOR NUMERO PUNTOCOMA .)
    DOWN            reduce using rule 326 (UseColor -> USECOLOR NUMERO PUNTOCOMA .)
    SPEED           reduce using rule 326 (UseColor -> USECOLOR NUMERO PUNTOCOMA .)
    POS             reduce using rule 326 (UseColor -> USECOLOR NUMERO PUNTOCOMA .)
    POSX            reduce using rule 326 (UseColor -> USECOLOR NUMERO PUNTOCOMA .)
    POSY            reduce using rule 326 (UseColor -> USECOLOR NUMERO PUNTOCOMA .)
    USECOLOR        reduce using rule 326 (UseColor -> USECOLOR NUMERO PUNTOCOMA .)
    BRACKET2        reduce using rule 326 (UseColor -> USECOLOR NUMERO PUNTOCOMA .)


state 417

    (327) UseColor -> USECOLOR empty PUNTOCOMA .

    BEGINNING       reduce using rule 327 (UseColor -> USECOLOR empty PUNTOCOMA .)
    CONTINUEUP      reduce using rule 327 (UseColor -> USECOLOR empty PUNTOCOMA .)
    CONTINUEDOWN    reduce using rule 327 (UseColor -> USECOLOR empty PUNTOCOMA .)
    CONTINUERIGHT   reduce using rule 327 (UseColor -> USECOLOR empty PUNTOCOMA .)
    CONTINUELEFT    reduce using rule 327 (UseColor -> USECOLOR empty PUNTOCOMA .)
    UP              reduce using rule 327 (UseColor -> USECOLOR empty PUNTOCOMA .)
    DOWN            reduce using rule 327 (UseColor -> USECOLOR empty PUNTOCOMA .)
    SPEED           reduce using rule 327 (UseColor -> USECOLOR empty PUNTOCOMA .)
    POS             reduce using rule 327 (UseColor -> USECOLOR empty PUNTOCOMA .)
    POSX            reduce using rule 327 (UseColor -> USECOLOR empty PUNTOCOMA .)
    POSY            reduce using rule 327 (UseColor -> USECOLOR empty PUNTOCOMA .)
    USECOLOR        reduce using rule 327 (UseColor -> USECOLOR empty PUNTOCOMA .)
    BRACKET2        reduce using rule 327 (UseColor -> USECOLOR empty PUNTOCOMA .)


state 418

    (267) Repeat -> REPEAT NUMERO BRACKET1 ordenes BRACKET2 . cuerpo3
    (15) cuerpo3 -> . variablexdd
    (16) cuerpo3 -> . COMMENT cuerpo3
    (17) cuerpo3 -> . expresion
    (18) cuerpo3 -> . funcion
    (19) cuerpo3 -> . empty
    (20) cuerpo3 -> . Put
    (21) cuerpo3 -> . Put2
    (22) cuerpo3 -> . Run
    (23) cuerpo3 -> . Repeat
    (35) variablexdd -> . variable1 cuerpo3
    (36) variablexdd -> . variable2 cuerpo3
    (37) variablexdd -> . empty empty
    (41) expresion -> . funcion expresion
    (42) expresion -> . expresion_alge1 expresion
    (43) expresion -> . expresion_alge2 expresion
    (44) expresion -> . Sum expresion
    (45) expresion -> . Substr expresion
    (46) expresion -> . Mult expresion
    (47) expresion -> . Div expresion
    (48) expresion -> . funcion empty
    (49) expresion -> . expresion_alge1 empty
    (50) expresion -> . expresion_alge2 empty
    (51) expresion -> . Sum empty
    (52) expresion -> . Substr empty
    (53) expresion -> . Mult empty
    (54) expresion -> . Div empty
    (55) expresion -> . empty empty
    (82) funcion -> . Random empty
    (83) funcion -> . If empty
    (84) funcion -> . IfElse empty
    (85) funcion -> . Until empty
    (86) funcion -> . While empty
    (87) funcion -> . PrintLine empty
    (88) funcion -> . And empty
    (89) funcion -> . Or empty
    (90) funcion -> . Add empty
    (91) funcion -> . Put2 empty
    (92) funcion -> . Put empty
    (93) funcion -> . PUNTOCOMA funcion
    (94) funcion -> . empty empty
    (338) empty -> .
    (95) Put -> . PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA
    (96) Put2 -> . PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (97) Put2 -> . PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (98) Put2 -> . PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (99) Put2 -> . PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (100) Put2 -> . PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA
    (328) Run -> . RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA cuerpo3
    (267) Repeat -> . REPEAT NUMERO BRACKET1 ordenes BRACKET2 cuerpo3
    (38) variable1 -> . DEF VAR PUNTOCOMA
    (39) variable2 -> . DEF VAR IGUAL NUMERO PUNTOCOMA
    (40) variable2 -> . DEF VAR IGUAL RESTA NUMERO PUNTOCOMA
    (104) expresion_alge1 -> . NUMERO SUMA NUMERO
    (105) expresion_alge1 -> . NUMERO RESTA NUMERO
    (106) expresion_alge1 -> . NUMERO MULTI NUMERO
    (107) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (108) expresion_alge1 -> . RESTA NUMERO SUMA NUMERO
    (109) expresion_alge1 -> . RESTA NUMERO RESTA NUMERO
    (110) expresion_alge1 -> . RESTA NUMERO MULTI NUMERO
    (111) expresion_alge1 -> . RESTA NUMERO DIVISION NUMERO
    (112) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (113) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (114) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (115) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (116) Sum -> . SUM ABRE_P NUMERO COMA NUMERO CIERRA_P
    (117) Sum -> . SUM ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (118) Sum -> . SUM ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (119) Sum -> . SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (120) Sum -> . SUM ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (121) Sum -> . SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (122) Sum -> . SUM ABRE_P NUMERO COMA Var CIERRA_P
    (123) Sum -> . SUM ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (124) Sum -> . SUM ABRE_P Var COMA NUMERO CIERRA_P
    (125) Sum -> . SUM ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (126) Sum -> . SUM ABRE_P Var COMA Var CIERRA_P
    (127) Sum -> . SUM ABRE_P expresion_alge1 COMA Var CIERRA_P
    (128) Sum -> . SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (129) Sum -> . SUM ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (130) Sum -> . SUM ABRE_P Var COMA expresion_alge1 CIERRA_P
    (131) Sum -> . SUM ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P
    (132) Substr -> . SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P
    (133) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (134) Substr -> . SUBSTR ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (135) Substr -> . SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (136) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (137) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (138) Substr -> . SUBSTR ABRE_P NUMERO COMA Var CIERRA_P
    (139) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (140) Substr -> . SUBSTR ABRE_P Var COMA NUMERO CIERRA_P
    (141) Substr -> . SUBSTR ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (142) Substr -> . SUBSTR ABRE_P Var COMA Var CIERRA_P
    (143) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P
    (144) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (145) Substr -> . SUBSTR ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (146) Substr -> . SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P
    (147) Substr -> . SUBSTR ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P
    (148) Mult -> . MULT ABRE_P NUMERO COMA NUMERO CIERRA_P
    (149) Mult -> . MULT ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (150) Mult -> . MULT ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (151) Mult -> . MULT ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (152) Mult -> . MULT ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (153) Mult -> . MULT ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (154) Mult -> . MULT ABRE_P NUMERO COMA Var CIERRA_P
    (155) Mult -> . MULT ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (156) Mult -> . MULT ABRE_P Var COMA NUMERO CIERRA_P
    (157) Mult -> . MULT ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (158) Mult -> . MULT ABRE_P Var COMA Var CIERRA_P
    (159) Mult -> . MULT ABRE_P expresion_alge1 COMA Var CIERRA_P
    (160) Mult -> . MULT ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (161) Mult -> . MULT ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (162) Mult -> . MULT ABRE_P Var COMA expresion_alge1 CIERRA_P
    (163) Mult -> . MULT ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P
    (164) Div -> . DIV ABRE_P NUMERO COMA NUMERO CIERRA_P
    (165) Div -> . DIV ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (166) Div -> . DIV ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (167) Div -> . DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (168) Div -> . DIV ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (169) Div -> . DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (170) Div -> . DIV ABRE_P NUMERO COMA Var CIERRA_P
    (171) Div -> . DIV ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (172) Div -> . DIV ABRE_P Var COMA NUMERO CIERRA_P
    (173) Div -> . DIV ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (174) Div -> . DIV ABRE_P Var COMA Var CIERRA_P
    (175) Div -> . DIV ABRE_P expresion_alge1 COMA Var CIERRA_P
    (176) Div -> . DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (177) Div -> . DIV ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (178) Div -> . DIV ABRE_P Var COMA expresion_alge1 CIERRA_P
    (179) Div -> . DIV ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P
    (279) Random -> . RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA
    (264) If -> . IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2
    (265) IfElse -> . IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2
    (268) Until -> . UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2
    (266) While -> . WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2
    (337) PrintLine -> . PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA
    (256) And -> . AND ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (257) And -> . AND ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P
    (258) And -> . AND ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P
    (259) And -> . AND ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P
    (260) Or -> . OR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (261) Or -> . OR ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P
    (262) Or -> . OR ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P
    (263) Or -> . OR ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P
    (269) Add -> . ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA
    (270) Add -> . ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (271) Add -> . ADD ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (272) Add -> . ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (273) Add -> . ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (274) Add -> . ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA

  ! shift/reduce conflict for PUNTOCOMA resolved as shift
  ! shift/reduce conflict for PUT resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for ABRE_P resolved as shift
  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for SUBSTR resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for RANDOM resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for IFELSE resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for PRINTLINE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
    COMMENT         shift and go to state 37
    PUNTOCOMA       shift and go to state 62
    FIN             reduce using rule 338 (empty -> .)
    PUT             shift and go to state 15
    RUN             shift and go to state 66
    REPEAT          shift and go to state 67
    DEF             shift and go to state 16
    NUMERO          shift and go to state 64
    RESTA           shift and go to state 65
    ABRE_P          shift and go to state 63
    SUM             shift and go to state 70
    SUBSTR          shift and go to state 71
    MULT            shift and go to state 68
    DIV             shift and go to state 69
    RANDOM          shift and go to state 72
    IF              shift and go to state 73
    IFELSE          shift and go to state 74
    UNTIL           shift and go to state 75
    WHILE           shift and go to state 76
    PRINTLINE       shift and go to state 77
    AND             shift and go to state 78
    OR              shift and go to state 79
    ADD             shift and go to state 80

  ! PUNTOCOMA       [ reduce using rule 338 (empty -> .) ]
  ! NUMERO          [ reduce using rule 338 (empty -> .) ]
  ! RESTA           [ reduce using rule 338 (empty -> .) ]
  ! ABRE_P          [ reduce using rule 338 (empty -> .) ]
  ! SUM             [ reduce using rule 338 (empty -> .) ]
  ! SUBSTR          [ reduce using rule 338 (empty -> .) ]
  ! MULT            [ reduce using rule 338 (empty -> .) ]
  ! DIV             [ reduce using rule 338 (empty -> .) ]
  ! RANDOM          [ reduce using rule 338 (empty -> .) ]
  ! IF              [ reduce using rule 338 (empty -> .) ]
  ! IFELSE          [ reduce using rule 338 (empty -> .) ]
  ! UNTIL           [ reduce using rule 338 (empty -> .) ]
  ! WHILE           [ reduce using rule 338 (empty -> .) ]
  ! PRINTLINE       [ reduce using rule 338 (empty -> .) ]
  ! AND             [ reduce using rule 338 (empty -> .) ]
  ! OR              [ reduce using rule 338 (empty -> .) ]
  ! ADD             [ reduce using rule 338 (empty -> .) ]
  ! PUT             [ reduce using rule 338 (empty -> .) ]

    cuerpo3                        shift and go to state 528
    variablexdd                    shift and go to state 36
    expresion                      shift and go to state 38
    funcion                        shift and go to state 39
    empty                          shift and go to state 40
    Put                            shift and go to state 41
    Put2                           shift and go to state 42
    Run                            shift and go to state 43
    Repeat                         shift and go to state 44
    variable1                      shift and go to state 45
    variable2                      shift and go to state 46
    expresion_alge1                shift and go to state 47
    expresion_alge2                shift and go to state 48
    Sum                            shift and go to state 49
    Substr                         shift and go to state 50
    Mult                           shift and go to state 51
    Div                            shift and go to state 52
    Random                         shift and go to state 53
    If                             shift and go to state 54
    IfElse                         shift and go to state 55
    Until                          shift and go to state 56
    While                          shift and go to state 57
    PrintLine                      shift and go to state 58
    And                            shift and go to state 59
    Or                             shift and go to state 60
    Add                            shift and go to state 61

state 419

    (148) Mult -> MULT ABRE_P NUMERO COMA NUMERO . CIERRA_P
    (104) expresion_alge1 -> NUMERO . SUMA NUMERO
    (105) expresion_alge1 -> NUMERO . RESTA NUMERO
    (106) expresion_alge1 -> NUMERO . MULTI NUMERO
    (107) expresion_alge1 -> NUMERO . DIVISION NUMERO

    CIERRA_P        shift and go to state 529
    SUMA            shift and go to state 126
    RESTA           shift and go to state 127
    MULTI           shift and go to state 128
    DIVISION        shift and go to state 129


state 420

    (150) Mult -> MULT ABRE_P NUMERO COMA RESTA . NUMERO CIERRA_P
    (108) expresion_alge1 -> RESTA . NUMERO SUMA NUMERO
    (109) expresion_alge1 -> RESTA . NUMERO RESTA NUMERO
    (110) expresion_alge1 -> RESTA . NUMERO MULTI NUMERO
    (111) expresion_alge1 -> RESTA . NUMERO DIVISION NUMERO

    NUMERO          shift and go to state 530


state 421

    (151) Mult -> MULT ABRE_P NUMERO COMA expresion_alge1 . CIERRA_P

    CIERRA_P        shift and go to state 531


state 422

    (154) Mult -> MULT ABRE_P NUMERO COMA Var . CIERRA_P

    CIERRA_P        shift and go to state 532


state 423

    (149) Mult -> MULT ABRE_P RESTA NUMERO COMA . NUMERO CIERRA_P
    (152) Mult -> MULT ABRE_P RESTA NUMERO COMA . expresion_alge1 CIERRA_P
    (155) Mult -> MULT ABRE_P RESTA NUMERO COMA . Var CIERRA_P
    (163) Mult -> MULT ABRE_P RESTA NUMERO COMA . RESTA NUMERO CIERRA_P
    (104) expresion_alge1 -> . NUMERO SUMA NUMERO
    (105) expresion_alge1 -> . NUMERO RESTA NUMERO
    (106) expresion_alge1 -> . NUMERO MULTI NUMERO
    (107) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (108) expresion_alge1 -> . RESTA NUMERO SUMA NUMERO
    (109) expresion_alge1 -> . RESTA NUMERO RESTA NUMERO
    (110) expresion_alge1 -> . RESTA NUMERO MULTI NUMERO
    (111) expresion_alge1 -> . RESTA NUMERO DIVISION NUMERO
    (180) Var -> . VAR

    NUMERO          shift and go to state 534
    RESTA           shift and go to state 533
    VAR             shift and go to state 34

    expresion_alge1                shift and go to state 535
    Var                            shift and go to state 536

state 424

    (153) Mult -> MULT ABRE_P expresion_alge1 COMA expresion_alge1 . CIERRA_P

    CIERRA_P        shift and go to state 537


state 425

    (159) Mult -> MULT ABRE_P expresion_alge1 COMA Var . CIERRA_P

    CIERRA_P        shift and go to state 538


state 426

    (160) Mult -> MULT ABRE_P expresion_alge1 COMA NUMERO . CIERRA_P
    (104) expresion_alge1 -> NUMERO . SUMA NUMERO
    (105) expresion_alge1 -> NUMERO . RESTA NUMERO
    (106) expresion_alge1 -> NUMERO . MULTI NUMERO
    (107) expresion_alge1 -> NUMERO . DIVISION NUMERO

    CIERRA_P        shift and go to state 539
    SUMA            shift and go to state 126
    RESTA           shift and go to state 127
    MULTI           shift and go to state 128
    DIVISION        shift and go to state 129


state 427

    (161) Mult -> MULT ABRE_P expresion_alge1 COMA RESTA . NUMERO CIERRA_P
    (108) expresion_alge1 -> RESTA . NUMERO SUMA NUMERO
    (109) expresion_alge1 -> RESTA . NUMERO RESTA NUMERO
    (110) expresion_alge1 -> RESTA . NUMERO MULTI NUMERO
    (111) expresion_alge1 -> RESTA . NUMERO DIVISION NUMERO

    NUMERO          shift and go to state 540


state 428

    (158) Mult -> MULT ABRE_P Var COMA Var . CIERRA_P

    CIERRA_P        shift and go to state 541


state 429

    (156) Mult -> MULT ABRE_P Var COMA NUMERO . CIERRA_P
    (104) expresion_alge1 -> NUMERO . SUMA NUMERO
    (105) expresion_alge1 -> NUMERO . RESTA NUMERO
    (106) expresion_alge1 -> NUMERO . MULTI NUMERO
    (107) expresion_alge1 -> NUMERO . DIVISION NUMERO

    CIERRA_P        shift and go to state 542
    SUMA            shift and go to state 126
    RESTA           shift and go to state 127
    MULTI           shift and go to state 128
    DIVISION        shift and go to state 129


state 430

    (157) Mult -> MULT ABRE_P Var COMA RESTA . NUMERO CIERRA_P
    (108) expresion_alge1 -> RESTA . NUMERO SUMA NUMERO
    (109) expresion_alge1 -> RESTA . NUMERO RESTA NUMERO
    (110) expresion_alge1 -> RESTA . NUMERO MULTI NUMERO
    (111) expresion_alge1 -> RESTA . NUMERO DIVISION NUMERO

    NUMERO          shift and go to state 543


state 431

    (162) Mult -> MULT ABRE_P Var COMA expresion_alge1 . CIERRA_P

    CIERRA_P        shift and go to state 544


state 432

    (164) Div -> DIV ABRE_P NUMERO COMA NUMERO . CIERRA_P
    (104) expresion_alge1 -> NUMERO . SUMA NUMERO
    (105) expresion_alge1 -> NUMERO . RESTA NUMERO
    (106) expresion_alge1 -> NUMERO . MULTI NUMERO
    (107) expresion_alge1 -> NUMERO . DIVISION NUMERO

    CIERRA_P        shift and go to state 545
    SUMA            shift and go to state 126
    RESTA           shift and go to state 127
    MULTI           shift and go to state 128
    DIVISION        shift and go to state 129


state 433

    (166) Div -> DIV ABRE_P NUMERO COMA RESTA . NUMERO CIERRA_P
    (108) expresion_alge1 -> RESTA . NUMERO SUMA NUMERO
    (109) expresion_alge1 -> RESTA . NUMERO RESTA NUMERO
    (110) expresion_alge1 -> RESTA . NUMERO MULTI NUMERO
    (111) expresion_alge1 -> RESTA . NUMERO DIVISION NUMERO

    NUMERO          shift and go to state 546


state 434

    (167) Div -> DIV ABRE_P NUMERO COMA expresion_alge1 . CIERRA_P

    CIERRA_P        shift and go to state 547


state 435

    (170) Div -> DIV ABRE_P NUMERO COMA Var . CIERRA_P

    CIERRA_P        shift and go to state 548


state 436

    (165) Div -> DIV ABRE_P RESTA NUMERO COMA . NUMERO CIERRA_P
    (168) Div -> DIV ABRE_P RESTA NUMERO COMA . expresion_alge1 CIERRA_P
    (171) Div -> DIV ABRE_P RESTA NUMERO COMA . Var CIERRA_P
    (179) Div -> DIV ABRE_P RESTA NUMERO COMA . RESTA NUMERO CIERRA_P
    (104) expresion_alge1 -> . NUMERO SUMA NUMERO
    (105) expresion_alge1 -> . NUMERO RESTA NUMERO
    (106) expresion_alge1 -> . NUMERO MULTI NUMERO
    (107) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (108) expresion_alge1 -> . RESTA NUMERO SUMA NUMERO
    (109) expresion_alge1 -> . RESTA NUMERO RESTA NUMERO
    (110) expresion_alge1 -> . RESTA NUMERO MULTI NUMERO
    (111) expresion_alge1 -> . RESTA NUMERO DIVISION NUMERO
    (180) Var -> . VAR

    NUMERO          shift and go to state 550
    RESTA           shift and go to state 549
    VAR             shift and go to state 34

    expresion_alge1                shift and go to state 551
    Var                            shift and go to state 552

state 437

    (169) Div -> DIV ABRE_P expresion_alge1 COMA expresion_alge1 . CIERRA_P

    CIERRA_P        shift and go to state 553


state 438

    (175) Div -> DIV ABRE_P expresion_alge1 COMA Var . CIERRA_P

    CIERRA_P        shift and go to state 554


state 439

    (176) Div -> DIV ABRE_P expresion_alge1 COMA NUMERO . CIERRA_P
    (104) expresion_alge1 -> NUMERO . SUMA NUMERO
    (105) expresion_alge1 -> NUMERO . RESTA NUMERO
    (106) expresion_alge1 -> NUMERO . MULTI NUMERO
    (107) expresion_alge1 -> NUMERO . DIVISION NUMERO

    CIERRA_P        shift and go to state 555
    SUMA            shift and go to state 126
    RESTA           shift and go to state 127
    MULTI           shift and go to state 128
    DIVISION        shift and go to state 129


state 440

    (177) Div -> DIV ABRE_P expresion_alge1 COMA RESTA . NUMERO CIERRA_P
    (108) expresion_alge1 -> RESTA . NUMERO SUMA NUMERO
    (109) expresion_alge1 -> RESTA . NUMERO RESTA NUMERO
    (110) expresion_alge1 -> RESTA . NUMERO MULTI NUMERO
    (111) expresion_alge1 -> RESTA . NUMERO DIVISION NUMERO

    NUMERO          shift and go to state 556


state 441

    (174) Div -> DIV ABRE_P Var COMA Var . CIERRA_P

    CIERRA_P        shift and go to state 557


state 442

    (172) Div -> DIV ABRE_P Var COMA NUMERO . CIERRA_P
    (104) expresion_alge1 -> NUMERO . SUMA NUMERO
    (105) expresion_alge1 -> NUMERO . RESTA NUMERO
    (106) expresion_alge1 -> NUMERO . MULTI NUMERO
    (107) expresion_alge1 -> NUMERO . DIVISION NUMERO

    CIERRA_P        shift and go to state 558
    SUMA            shift and go to state 126
    RESTA           shift and go to state 127
    MULTI           shift and go to state 128
    DIVISION        shift and go to state 129


state 443

    (173) Div -> DIV ABRE_P Var COMA RESTA . NUMERO CIERRA_P
    (108) expresion_alge1 -> RESTA . NUMERO SUMA NUMERO
    (109) expresion_alge1 -> RESTA . NUMERO RESTA NUMERO
    (110) expresion_alge1 -> RESTA . NUMERO MULTI NUMERO
    (111) expresion_alge1 -> RESTA . NUMERO DIVISION NUMERO

    NUMERO          shift and go to state 559


state 444

    (178) Div -> DIV ABRE_P Var COMA expresion_alge1 . CIERRA_P

    CIERRA_P        shift and go to state 560


state 445

    (116) Sum -> SUM ABRE_P NUMERO COMA NUMERO . CIERRA_P
    (104) expresion_alge1 -> NUMERO . SUMA NUMERO
    (105) expresion_alge1 -> NUMERO . RESTA NUMERO
    (106) expresion_alge1 -> NUMERO . MULTI NUMERO
    (107) expresion_alge1 -> NUMERO . DIVISION NUMERO

    CIERRA_P        shift and go to state 561
    SUMA            shift and go to state 126
    RESTA           shift and go to state 127
    MULTI           shift and go to state 128
    DIVISION        shift and go to state 129


state 446

    (118) Sum -> SUM ABRE_P NUMERO COMA RESTA . NUMERO CIERRA_P
    (108) expresion_alge1 -> RESTA . NUMERO SUMA NUMERO
    (109) expresion_alge1 -> RESTA . NUMERO RESTA NUMERO
    (110) expresion_alge1 -> RESTA . NUMERO MULTI NUMERO
    (111) expresion_alge1 -> RESTA . NUMERO DIVISION NUMERO

    NUMERO          shift and go to state 562


state 447

    (119) Sum -> SUM ABRE_P NUMERO COMA expresion_alge1 . CIERRA_P

    CIERRA_P        shift and go to state 563


state 448

    (122) Sum -> SUM ABRE_P NUMERO COMA Var . CIERRA_P

    CIERRA_P        shift and go to state 564


state 449

    (117) Sum -> SUM ABRE_P RESTA NUMERO COMA . NUMERO CIERRA_P
    (120) Sum -> SUM ABRE_P RESTA NUMERO COMA . expresion_alge1 CIERRA_P
    (123) Sum -> SUM ABRE_P RESTA NUMERO COMA . Var CIERRA_P
    (131) Sum -> SUM ABRE_P RESTA NUMERO COMA . RESTA NUMERO CIERRA_P
    (104) expresion_alge1 -> . NUMERO SUMA NUMERO
    (105) expresion_alge1 -> . NUMERO RESTA NUMERO
    (106) expresion_alge1 -> . NUMERO MULTI NUMERO
    (107) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (108) expresion_alge1 -> . RESTA NUMERO SUMA NUMERO
    (109) expresion_alge1 -> . RESTA NUMERO RESTA NUMERO
    (110) expresion_alge1 -> . RESTA NUMERO MULTI NUMERO
    (111) expresion_alge1 -> . RESTA NUMERO DIVISION NUMERO
    (180) Var -> . VAR

    NUMERO          shift and go to state 566
    RESTA           shift and go to state 565
    VAR             shift and go to state 34

    expresion_alge1                shift and go to state 567
    Var                            shift and go to state 568

state 450

    (121) Sum -> SUM ABRE_P expresion_alge1 COMA expresion_alge1 . CIERRA_P

    CIERRA_P        shift and go to state 569


state 451

    (127) Sum -> SUM ABRE_P expresion_alge1 COMA Var . CIERRA_P

    CIERRA_P        shift and go to state 570


state 452

    (128) Sum -> SUM ABRE_P expresion_alge1 COMA NUMERO . CIERRA_P
    (104) expresion_alge1 -> NUMERO . SUMA NUMERO
    (105) expresion_alge1 -> NUMERO . RESTA NUMERO
    (106) expresion_alge1 -> NUMERO . MULTI NUMERO
    (107) expresion_alge1 -> NUMERO . DIVISION NUMERO

    CIERRA_P        shift and go to state 571
    SUMA            shift and go to state 126
    RESTA           shift and go to state 127
    MULTI           shift and go to state 128
    DIVISION        shift and go to state 129


state 453

    (129) Sum -> SUM ABRE_P expresion_alge1 COMA RESTA . NUMERO CIERRA_P
    (108) expresion_alge1 -> RESTA . NUMERO SUMA NUMERO
    (109) expresion_alge1 -> RESTA . NUMERO RESTA NUMERO
    (110) expresion_alge1 -> RESTA . NUMERO MULTI NUMERO
    (111) expresion_alge1 -> RESTA . NUMERO DIVISION NUMERO

    NUMERO          shift and go to state 572


state 454

    (126) Sum -> SUM ABRE_P Var COMA Var . CIERRA_P

    CIERRA_P        shift and go to state 573


state 455

    (124) Sum -> SUM ABRE_P Var COMA NUMERO . CIERRA_P
    (104) expresion_alge1 -> NUMERO . SUMA NUMERO
    (105) expresion_alge1 -> NUMERO . RESTA NUMERO
    (106) expresion_alge1 -> NUMERO . MULTI NUMERO
    (107) expresion_alge1 -> NUMERO . DIVISION NUMERO

    CIERRA_P        shift and go to state 574
    SUMA            shift and go to state 126
    RESTA           shift and go to state 127
    MULTI           shift and go to state 128
    DIVISION        shift and go to state 129


state 456

    (125) Sum -> SUM ABRE_P Var COMA RESTA . NUMERO CIERRA_P
    (108) expresion_alge1 -> RESTA . NUMERO SUMA NUMERO
    (109) expresion_alge1 -> RESTA . NUMERO RESTA NUMERO
    (110) expresion_alge1 -> RESTA . NUMERO MULTI NUMERO
    (111) expresion_alge1 -> RESTA . NUMERO DIVISION NUMERO

    NUMERO          shift and go to state 575


state 457

    (130) Sum -> SUM ABRE_P Var COMA expresion_alge1 . CIERRA_P

    CIERRA_P        shift and go to state 576


state 458

    (132) Substr -> SUBSTR ABRE_P NUMERO COMA NUMERO . CIERRA_P
    (104) expresion_alge1 -> NUMERO . SUMA NUMERO
    (105) expresion_alge1 -> NUMERO . RESTA NUMERO
    (106) expresion_alge1 -> NUMERO . MULTI NUMERO
    (107) expresion_alge1 -> NUMERO . DIVISION NUMERO

    CIERRA_P        shift and go to state 577
    SUMA            shift and go to state 126
    RESTA           shift and go to state 127
    MULTI           shift and go to state 128
    DIVISION        shift and go to state 129


state 459

    (134) Substr -> SUBSTR ABRE_P NUMERO COMA RESTA . NUMERO CIERRA_P
    (108) expresion_alge1 -> RESTA . NUMERO SUMA NUMERO
    (109) expresion_alge1 -> RESTA . NUMERO RESTA NUMERO
    (110) expresion_alge1 -> RESTA . NUMERO MULTI NUMERO
    (111) expresion_alge1 -> RESTA . NUMERO DIVISION NUMERO

    NUMERO          shift and go to state 578


state 460

    (135) Substr -> SUBSTR ABRE_P NUMERO COMA expresion_alge1 . CIERRA_P

    CIERRA_P        shift and go to state 579


state 461

    (138) Substr -> SUBSTR ABRE_P NUMERO COMA Var . CIERRA_P

    CIERRA_P        shift and go to state 580


state 462

    (133) Substr -> SUBSTR ABRE_P RESTA NUMERO COMA . NUMERO CIERRA_P
    (136) Substr -> SUBSTR ABRE_P RESTA NUMERO COMA . expresion_alge1 CIERRA_P
    (139) Substr -> SUBSTR ABRE_P RESTA NUMERO COMA . Var CIERRA_P
    (147) Substr -> SUBSTR ABRE_P RESTA NUMERO COMA . RESTA NUMERO CIERRA_P
    (104) expresion_alge1 -> . NUMERO SUMA NUMERO
    (105) expresion_alge1 -> . NUMERO RESTA NUMERO
    (106) expresion_alge1 -> . NUMERO MULTI NUMERO
    (107) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (108) expresion_alge1 -> . RESTA NUMERO SUMA NUMERO
    (109) expresion_alge1 -> . RESTA NUMERO RESTA NUMERO
    (110) expresion_alge1 -> . RESTA NUMERO MULTI NUMERO
    (111) expresion_alge1 -> . RESTA NUMERO DIVISION NUMERO
    (180) Var -> . VAR

    NUMERO          shift and go to state 582
    RESTA           shift and go to state 581
    VAR             shift and go to state 34

    expresion_alge1                shift and go to state 583
    Var                            shift and go to state 584

state 463

    (137) Substr -> SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 . CIERRA_P

    CIERRA_P        shift and go to state 585


state 464

    (143) Substr -> SUBSTR ABRE_P expresion_alge1 COMA Var . CIERRA_P

    CIERRA_P        shift and go to state 586


state 465

    (144) Substr -> SUBSTR ABRE_P expresion_alge1 COMA NUMERO . CIERRA_P
    (104) expresion_alge1 -> NUMERO . SUMA NUMERO
    (105) expresion_alge1 -> NUMERO . RESTA NUMERO
    (106) expresion_alge1 -> NUMERO . MULTI NUMERO
    (107) expresion_alge1 -> NUMERO . DIVISION NUMERO

    CIERRA_P        shift and go to state 587
    SUMA            shift and go to state 126
    RESTA           shift and go to state 127
    MULTI           shift and go to state 128
    DIVISION        shift and go to state 129


state 466

    (145) Substr -> SUBSTR ABRE_P expresion_alge1 COMA RESTA . NUMERO CIERRA_P
    (108) expresion_alge1 -> RESTA . NUMERO SUMA NUMERO
    (109) expresion_alge1 -> RESTA . NUMERO RESTA NUMERO
    (110) expresion_alge1 -> RESTA . NUMERO MULTI NUMERO
    (111) expresion_alge1 -> RESTA . NUMERO DIVISION NUMERO

    NUMERO          shift and go to state 588


state 467

    (142) Substr -> SUBSTR ABRE_P Var COMA Var . CIERRA_P

    CIERRA_P        shift and go to state 589


state 468

    (140) Substr -> SUBSTR ABRE_P Var COMA NUMERO . CIERRA_P
    (104) expresion_alge1 -> NUMERO . SUMA NUMERO
    (105) expresion_alge1 -> NUMERO . RESTA NUMERO
    (106) expresion_alge1 -> NUMERO . MULTI NUMERO
    (107) expresion_alge1 -> NUMERO . DIVISION NUMERO

    CIERRA_P        shift and go to state 590
    SUMA            shift and go to state 126
    RESTA           shift and go to state 127
    MULTI           shift and go to state 128
    DIVISION        shift and go to state 129


state 469

    (141) Substr -> SUBSTR ABRE_P Var COMA RESTA . NUMERO CIERRA_P
    (108) expresion_alge1 -> RESTA . NUMERO SUMA NUMERO
    (109) expresion_alge1 -> RESTA . NUMERO RESTA NUMERO
    (110) expresion_alge1 -> RESTA . NUMERO MULTI NUMERO
    (111) expresion_alge1 -> RESTA . NUMERO DIVISION NUMERO

    NUMERO          shift and go to state 591


state 470

    (146) Substr -> SUBSTR ABRE_P Var COMA expresion_alge1 . CIERRA_P

    CIERRA_P        shift and go to state 592


state 471

    (279) Random -> RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA .

    PUNTOCOMA       reduce using rule 279 (Random -> RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA .)
    NUMERO          reduce using rule 279 (Random -> RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA .)
    RESTA           reduce using rule 279 (Random -> RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA .)
    ABRE_P          reduce using rule 279 (Random -> RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA .)
    SUM             reduce using rule 279 (Random -> RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA .)
    SUBSTR          reduce using rule 279 (Random -> RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA .)
    MULT            reduce using rule 279 (Random -> RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA .)
    DIV             reduce using rule 279 (Random -> RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA .)
    RANDOM          reduce using rule 279 (Random -> RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA .)
    IF              reduce using rule 279 (Random -> RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA .)
    IFELSE          reduce using rule 279 (Random -> RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA .)
    UNTIL           reduce using rule 279 (Random -> RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA .)
    WHILE           reduce using rule 279 (Random -> RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA .)
    PRINTLINE       reduce using rule 279 (Random -> RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA .)
    AND             reduce using rule 279 (Random -> RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA .)
    OR              reduce using rule 279 (Random -> RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA .)
    ADD             reduce using rule 279 (Random -> RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA .)
    PUT             reduce using rule 279 (Random -> RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA .)
    FIN             reduce using rule 279 (Random -> RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA .)
    CIERRA_P        reduce using rule 279 (Random -> RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 279 (Random -> RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA .)


state 472

    (264) If -> IF ABRE_P condicion CIERRA_P BRACKET1 . funcion BRACKET2
    (82) funcion -> . Random empty
    (83) funcion -> . If empty
    (84) funcion -> . IfElse empty
    (85) funcion -> . Until empty
    (86) funcion -> . While empty
    (87) funcion -> . PrintLine empty
    (88) funcion -> . And empty
    (89) funcion -> . Or empty
    (90) funcion -> . Add empty
    (91) funcion -> . Put2 empty
    (92) funcion -> . Put empty
    (93) funcion -> . PUNTOCOMA funcion
    (94) funcion -> . empty empty
    (279) Random -> . RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA
    (264) If -> . IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2
    (265) IfElse -> . IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2
    (268) Until -> . UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2
    (266) While -> . WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2
    (337) PrintLine -> . PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA
    (256) And -> . AND ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (257) And -> . AND ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P
    (258) And -> . AND ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P
    (259) And -> . AND ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P
    (260) Or -> . OR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (261) Or -> . OR ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P
    (262) Or -> . OR ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P
    (263) Or -> . OR ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P
    (269) Add -> . ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA
    (270) Add -> . ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (271) Add -> . ADD ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (272) Add -> . ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (273) Add -> . ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (274) Add -> . ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (96) Put2 -> . PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (97) Put2 -> . PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (98) Put2 -> . PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (99) Put2 -> . PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (100) Put2 -> . PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA
    (95) Put -> . PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA
    (338) empty -> .

    PUNTOCOMA       shift and go to state 62
    RANDOM          shift and go to state 72
    IF              shift and go to state 73
    IFELSE          shift and go to state 74
    UNTIL           shift and go to state 75
    WHILE           shift and go to state 76
    PRINTLINE       shift and go to state 77
    AND             shift and go to state 78
    OR              shift and go to state 79
    ADD             shift and go to state 80
    PUT             shift and go to state 96
    BRACKET2        reduce using rule 338 (empty -> .)

    funcion                        shift and go to state 593
    Random                         shift and go to state 53
    empty                          shift and go to state 124
    If                             shift and go to state 54
    IfElse                         shift and go to state 55
    Until                          shift and go to state 56
    While                          shift and go to state 57
    PrintLine                      shift and go to state 58
    And                            shift and go to state 59
    Or                             shift and go to state 60
    Add                            shift and go to state 61
    Put2                           shift and go to state 94
    Put                            shift and go to state 95

state 473

    (181) Equal -> EQUAL ABRE_P NUMERO . COMA NUMERO CIERRA_P
    (183) Equal -> EQUAL ABRE_P NUMERO . COMA RESTA NUMERO CIERRA_P
    (187) Equal -> EQUAL ABRE_P NUMERO . COMA Var CIERRA_P
    (201) Equal -> EQUAL ABRE_P NUMERO . COMA expresion_alge1 CIERRA_P
    (203) Equal -> EQUAL ABRE_P NUMERO . COMA expresion_alge2 CIERRA_P
    (104) expresion_alge1 -> NUMERO . SUMA NUMERO
    (105) expresion_alge1 -> NUMERO . RESTA NUMERO
    (106) expresion_alge1 -> NUMERO . MULTI NUMERO
    (107) expresion_alge1 -> NUMERO . DIVISION NUMERO

    COMA            shift and go to state 594
    SUMA            shift and go to state 126
    RESTA           shift and go to state 127
    MULTI           shift and go to state 128
    DIVISION        shift and go to state 129


state 474

    (182) Equal -> EQUAL ABRE_P RESTA . NUMERO COMA NUMERO CIERRA_P
    (188) Equal -> EQUAL ABRE_P RESTA . NUMERO COMA Var CIERRA_P
    (202) Equal -> EQUAL ABRE_P RESTA . NUMERO COMA expresion_alge1 CIERRA_P
    (204) Equal -> EQUAL ABRE_P RESTA . NUMERO COMA expresion_alge2 CIERRA_P
    (205) Equal -> EQUAL ABRE_P RESTA . NUMERO COMA RESTA NUMERO CIERRA_P
    (108) expresion_alge1 -> RESTA . NUMERO SUMA NUMERO
    (109) expresion_alge1 -> RESTA . NUMERO RESTA NUMERO
    (110) expresion_alge1 -> RESTA . NUMERO MULTI NUMERO
    (111) expresion_alge1 -> RESTA . NUMERO DIVISION NUMERO

    NUMERO          shift and go to state 595


state 475

    (184) Equal -> EQUAL ABRE_P expresion_alge1 . COMA expresion_alge1 CIERRA_P
    (190) Equal -> EQUAL ABRE_P expresion_alge1 . COMA Var CIERRA_P
    (195) Equal -> EQUAL ABRE_P expresion_alge1 . COMA expresion_alge2 CIERRA_P
    (197) Equal -> EQUAL ABRE_P expresion_alge1 . COMA NUMERO CIERRA_P
    (198) Equal -> EQUAL ABRE_P expresion_alge1 . COMA RESTA NUMERO CIERRA_P

    COMA            shift and go to state 596


state 476

    (185) Equal -> EQUAL ABRE_P expresion_alge2 . COMA expresion_alge2 CIERRA_P
    (189) Equal -> EQUAL ABRE_P expresion_alge2 . COMA Var CIERRA_P
    (196) Equal -> EQUAL ABRE_P expresion_alge2 . COMA expresion_alge1 CIERRA_P
    (199) Equal -> EQUAL ABRE_P expresion_alge2 . COMA NUMERO CIERRA_P
    (200) Equal -> EQUAL ABRE_P expresion_alge2 . COMA RESTA NUMERO CIERRA_P

    COMA            shift and go to state 597


state 477

    (186) Equal -> EQUAL ABRE_P Var . COMA Var CIERRA_P
    (191) Equal -> EQUAL ABRE_P Var . COMA NUMERO CIERRA_P
    (192) Equal -> EQUAL ABRE_P Var . COMA RESTA NUMERO CIERRA_P
    (193) Equal -> EQUAL ABRE_P Var . COMA expresion_alge1 CIERRA_P
    (194) Equal -> EQUAL ABRE_P Var . COMA expresion_alge2 CIERRA_P

    COMA            shift and go to state 598


state 478

    (206) Greater -> GREATER ABRE_P NUMERO . COMA NUMERO CIERRA_P
    (208) Greater -> GREATER ABRE_P NUMERO . COMA RESTA NUMERO CIERRA_P
    (212) Greater -> GREATER ABRE_P NUMERO . COMA Var CIERRA_P
    (226) Greater -> GREATER ABRE_P NUMERO . COMA expresion_alge1 CIERRA_P
    (228) Greater -> GREATER ABRE_P NUMERO . COMA expresion_alge2 CIERRA_P
    (104) expresion_alge1 -> NUMERO . SUMA NUMERO
    (105) expresion_alge1 -> NUMERO . RESTA NUMERO
    (106) expresion_alge1 -> NUMERO . MULTI NUMERO
    (107) expresion_alge1 -> NUMERO . DIVISION NUMERO

    COMA            shift and go to state 599
    SUMA            shift and go to state 126
    RESTA           shift and go to state 127
    MULTI           shift and go to state 128
    DIVISION        shift and go to state 129


state 479

    (207) Greater -> GREATER ABRE_P RESTA . NUMERO COMA NUMERO CIERRA_P
    (213) Greater -> GREATER ABRE_P RESTA . NUMERO COMA Var CIERRA_P
    (227) Greater -> GREATER ABRE_P RESTA . NUMERO COMA expresion_alge1 CIERRA_P
    (229) Greater -> GREATER ABRE_P RESTA . NUMERO COMA expresion_alge2 CIERRA_P
    (230) Greater -> GREATER ABRE_P RESTA . NUMERO COMA RESTA NUMERO CIERRA_P
    (108) expresion_alge1 -> RESTA . NUMERO SUMA NUMERO
    (109) expresion_alge1 -> RESTA . NUMERO RESTA NUMERO
    (110) expresion_alge1 -> RESTA . NUMERO MULTI NUMERO
    (111) expresion_alge1 -> RESTA . NUMERO DIVISION NUMERO

    NUMERO          shift and go to state 600


state 480

    (209) Greater -> GREATER ABRE_P expresion_alge1 . COMA expresion_alge1 CIERRA_P
    (215) Greater -> GREATER ABRE_P expresion_alge1 . COMA Var CIERRA_P
    (220) Greater -> GREATER ABRE_P expresion_alge1 . COMA expresion_alge2 CIERRA_P
    (222) Greater -> GREATER ABRE_P expresion_alge1 . COMA NUMERO CIERRA_P
    (223) Greater -> GREATER ABRE_P expresion_alge1 . COMA RESTA NUMERO CIERRA_P

    COMA            shift and go to state 601


state 481

    (210) Greater -> GREATER ABRE_P expresion_alge2 . COMA expresion_alge2 CIERRA_P
    (214) Greater -> GREATER ABRE_P expresion_alge2 . COMA Var CIERRA_P
    (221) Greater -> GREATER ABRE_P expresion_alge2 . COMA expresion_alge1 CIERRA_P
    (224) Greater -> GREATER ABRE_P expresion_alge2 . COMA NUMERO CIERRA_P
    (225) Greater -> GREATER ABRE_P expresion_alge2 . COMA RESTA NUMERO CIERRA_P

    COMA            shift and go to state 602


state 482

    (211) Greater -> GREATER ABRE_P Var . COMA Var CIERRA_P
    (216) Greater -> GREATER ABRE_P Var . COMA NUMERO CIERRA_P
    (217) Greater -> GREATER ABRE_P Var . COMA RESTA NUMERO CIERRA_P
    (218) Greater -> GREATER ABRE_P Var . COMA expresion_alge1 CIERRA_P
    (219) Greater -> GREATER ABRE_P Var . COMA expresion_alge2 CIERRA_P

    COMA            shift and go to state 603


state 483

    (231) Smaller -> SMALLER ABRE_P NUMERO . COMA NUMERO CIERRA_P
    (233) Smaller -> SMALLER ABRE_P NUMERO . COMA RESTA NUMERO CIERRA_P
    (237) Smaller -> SMALLER ABRE_P NUMERO . COMA Var CIERRA_P
    (251) Smaller -> SMALLER ABRE_P NUMERO . COMA expresion_alge1 CIERRA_P
    (253) Smaller -> SMALLER ABRE_P NUMERO . COMA expresion_alge2 CIERRA_P
    (104) expresion_alge1 -> NUMERO . SUMA NUMERO
    (105) expresion_alge1 -> NUMERO . RESTA NUMERO
    (106) expresion_alge1 -> NUMERO . MULTI NUMERO
    (107) expresion_alge1 -> NUMERO . DIVISION NUMERO

    COMA            shift and go to state 604
    SUMA            shift and go to state 126
    RESTA           shift and go to state 127
    MULTI           shift and go to state 128
    DIVISION        shift and go to state 129


state 484

    (232) Smaller -> SMALLER ABRE_P RESTA . NUMERO COMA NUMERO CIERRA_P
    (238) Smaller -> SMALLER ABRE_P RESTA . NUMERO COMA Var CIERRA_P
    (252) Smaller -> SMALLER ABRE_P RESTA . NUMERO COMA expresion_alge1 CIERRA_P
    (254) Smaller -> SMALLER ABRE_P RESTA . NUMERO COMA expresion_alge2 CIERRA_P
    (255) Smaller -> SMALLER ABRE_P RESTA . NUMERO COMA RESTA NUMERO CIERRA_P
    (108) expresion_alge1 -> RESTA . NUMERO SUMA NUMERO
    (109) expresion_alge1 -> RESTA . NUMERO RESTA NUMERO
    (110) expresion_alge1 -> RESTA . NUMERO MULTI NUMERO
    (111) expresion_alge1 -> RESTA . NUMERO DIVISION NUMERO

    NUMERO          shift and go to state 605


state 485

    (234) Smaller -> SMALLER ABRE_P expresion_alge1 . COMA expresion_alge1 CIERRA_P
    (240) Smaller -> SMALLER ABRE_P expresion_alge1 . COMA Var CIERRA_P
    (245) Smaller -> SMALLER ABRE_P expresion_alge1 . COMA expresion_alge2 CIERRA_P
    (247) Smaller -> SMALLER ABRE_P expresion_alge1 . COMA NUMERO CIERRA_P
    (248) Smaller -> SMALLER ABRE_P expresion_alge1 . COMA RESTA NUMERO CIERRA_P

    COMA            shift and go to state 606


state 486

    (235) Smaller -> SMALLER ABRE_P expresion_alge2 . COMA expresion_alge2 CIERRA_P
    (239) Smaller -> SMALLER ABRE_P expresion_alge2 . COMA Var CIERRA_P
    (246) Smaller -> SMALLER ABRE_P expresion_alge2 . COMA expresion_alge1 CIERRA_P
    (249) Smaller -> SMALLER ABRE_P expresion_alge2 . COMA NUMERO CIERRA_P
    (250) Smaller -> SMALLER ABRE_P expresion_alge2 . COMA RESTA NUMERO CIERRA_P

    COMA            shift and go to state 607


state 487

    (236) Smaller -> SMALLER ABRE_P Var . COMA Var CIERRA_P
    (241) Smaller -> SMALLER ABRE_P Var . COMA NUMERO CIERRA_P
    (242) Smaller -> SMALLER ABRE_P Var . COMA RESTA NUMERO CIERRA_P
    (243) Smaller -> SMALLER ABRE_P Var . COMA expresion_alge1 CIERRA_P
    (244) Smaller -> SMALLER ABRE_P Var . COMA expresion_alge2 CIERRA_P

    COMA            shift and go to state 608


state 488

    (265) IfElse -> IFELSE ABRE_P condicion CIERRA_P BRACKET1 . funcion BRACKET2 BRACKET1 funcion BRACKET2
    (82) funcion -> . Random empty
    (83) funcion -> . If empty
    (84) funcion -> . IfElse empty
    (85) funcion -> . Until empty
    (86) funcion -> . While empty
    (87) funcion -> . PrintLine empty
    (88) funcion -> . And empty
    (89) funcion -> . Or empty
    (90) funcion -> . Add empty
    (91) funcion -> . Put2 empty
    (92) funcion -> . Put empty
    (93) funcion -> . PUNTOCOMA funcion
    (94) funcion -> . empty empty
    (279) Random -> . RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA
    (264) If -> . IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2
    (265) IfElse -> . IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2
    (268) Until -> . UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2
    (266) While -> . WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2
    (337) PrintLine -> . PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA
    (256) And -> . AND ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (257) And -> . AND ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P
    (258) And -> . AND ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P
    (259) And -> . AND ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P
    (260) Or -> . OR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (261) Or -> . OR ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P
    (262) Or -> . OR ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P
    (263) Or -> . OR ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P
    (269) Add -> . ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA
    (270) Add -> . ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (271) Add -> . ADD ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (272) Add -> . ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (273) Add -> . ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (274) Add -> . ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (96) Put2 -> . PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (97) Put2 -> . PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (98) Put2 -> . PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (99) Put2 -> . PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (100) Put2 -> . PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA
    (95) Put -> . PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA
    (338) empty -> .

    PUNTOCOMA       shift and go to state 62
    RANDOM          shift and go to state 72
    IF              shift and go to state 73
    IFELSE          shift and go to state 74
    UNTIL           shift and go to state 75
    WHILE           shift and go to state 76
    PRINTLINE       shift and go to state 77
    AND             shift and go to state 78
    OR              shift and go to state 79
    ADD             shift and go to state 80
    PUT             shift and go to state 96
    BRACKET2        reduce using rule 338 (empty -> .)

    funcion                        shift and go to state 609
    Random                         shift and go to state 53
    empty                          shift and go to state 124
    If                             shift and go to state 54
    IfElse                         shift and go to state 55
    Until                          shift and go to state 56
    While                          shift and go to state 57
    PrintLine                      shift and go to state 58
    And                            shift and go to state 59
    Or                             shift and go to state 60
    Add                            shift and go to state 61
    Put2                           shift and go to state 94
    Put                            shift and go to state 95

state 489

    (268) Until -> UNTIL BRACKET1 funcion BRACKET2 BRACKET1 . condicion BRACKET2
    (101) condicion -> . Equal
    (102) condicion -> . Greater
    (103) condicion -> . Smaller
    (181) Equal -> . EQUAL ABRE_P NUMERO COMA NUMERO CIERRA_P
    (182) Equal -> . EQUAL ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (183) Equal -> . EQUAL ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (184) Equal -> . EQUAL ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (185) Equal -> . EQUAL ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P
    (186) Equal -> . EQUAL ABRE_P Var COMA Var CIERRA_P
    (187) Equal -> . EQUAL ABRE_P NUMERO COMA Var CIERRA_P
    (188) Equal -> . EQUAL ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (189) Equal -> . EQUAL ABRE_P expresion_alge2 COMA Var CIERRA_P
    (190) Equal -> . EQUAL ABRE_P expresion_alge1 COMA Var CIERRA_P
    (191) Equal -> . EQUAL ABRE_P Var COMA NUMERO CIERRA_P
    (192) Equal -> . EQUAL ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (193) Equal -> . EQUAL ABRE_P Var COMA expresion_alge1 CIERRA_P
    (194) Equal -> . EQUAL ABRE_P Var COMA expresion_alge2 CIERRA_P
    (195) Equal -> . EQUAL ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P
    (196) Equal -> . EQUAL ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P
    (197) Equal -> . EQUAL ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (198) Equal -> . EQUAL ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (199) Equal -> . EQUAL ABRE_P expresion_alge2 COMA NUMERO CIERRA_P
    (200) Equal -> . EQUAL ABRE_P expresion_alge2 COMA RESTA NUMERO CIERRA_P
    (201) Equal -> . EQUAL ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (202) Equal -> . EQUAL ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (203) Equal -> . EQUAL ABRE_P NUMERO COMA expresion_alge2 CIERRA_P
    (204) Equal -> . EQUAL ABRE_P RESTA NUMERO COMA expresion_alge2 CIERRA_P
    (205) Equal -> . EQUAL ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P
    (206) Greater -> . GREATER ABRE_P NUMERO COMA NUMERO CIERRA_P
    (207) Greater -> . GREATER ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (208) Greater -> . GREATER ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (209) Greater -> . GREATER ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (210) Greater -> . GREATER ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P
    (211) Greater -> . GREATER ABRE_P Var COMA Var CIERRA_P
    (212) Greater -> . GREATER ABRE_P NUMERO COMA Var CIERRA_P
    (213) Greater -> . GREATER ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (214) Greater -> . GREATER ABRE_P expresion_alge2 COMA Var CIERRA_P
    (215) Greater -> . GREATER ABRE_P expresion_alge1 COMA Var CIERRA_P
    (216) Greater -> . GREATER ABRE_P Var COMA NUMERO CIERRA_P
    (217) Greater -> . GREATER ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (218) Greater -> . GREATER ABRE_P Var COMA expresion_alge1 CIERRA_P
    (219) Greater -> . GREATER ABRE_P Var COMA expresion_alge2 CIERRA_P
    (220) Greater -> . GREATER ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P
    (221) Greater -> . GREATER ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P
    (222) Greater -> . GREATER ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (223) Greater -> . GREATER ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (224) Greater -> . GREATER ABRE_P expresion_alge2 COMA NUMERO CIERRA_P
    (225) Greater -> . GREATER ABRE_P expresion_alge2 COMA RESTA NUMERO CIERRA_P
    (226) Greater -> . GREATER ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (227) Greater -> . GREATER ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (228) Greater -> . GREATER ABRE_P NUMERO COMA expresion_alge2 CIERRA_P
    (229) Greater -> . GREATER ABRE_P RESTA NUMERO COMA expresion_alge2 CIERRA_P
    (230) Greater -> . GREATER ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P
    (231) Smaller -> . SMALLER ABRE_P NUMERO COMA NUMERO CIERRA_P
    (232) Smaller -> . SMALLER ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P
    (233) Smaller -> . SMALLER ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P
    (234) Smaller -> . SMALLER ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (235) Smaller -> . SMALLER ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P
    (236) Smaller -> . SMALLER ABRE_P Var COMA Var CIERRA_P
    (237) Smaller -> . SMALLER ABRE_P NUMERO COMA Var CIERRA_P
    (238) Smaller -> . SMALLER ABRE_P RESTA NUMERO COMA Var CIERRA_P
    (239) Smaller -> . SMALLER ABRE_P expresion_alge2 COMA Var CIERRA_P
    (240) Smaller -> . SMALLER ABRE_P expresion_alge1 COMA Var CIERRA_P
    (241) Smaller -> . SMALLER ABRE_P Var COMA NUMERO CIERRA_P
    (242) Smaller -> . SMALLER ABRE_P Var COMA RESTA NUMERO CIERRA_P
    (243) Smaller -> . SMALLER ABRE_P Var COMA expresion_alge1 CIERRA_P
    (244) Smaller -> . SMALLER ABRE_P Var COMA expresion_alge2 CIERRA_P
    (245) Smaller -> . SMALLER ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P
    (246) Smaller -> . SMALLER ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P
    (247) Smaller -> . SMALLER ABRE_P expresion_alge1 COMA NUMERO CIERRA_P
    (248) Smaller -> . SMALLER ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P
    (249) Smaller -> . SMALLER ABRE_P expresion_alge2 COMA NUMERO CIERRA_P
    (250) Smaller -> . SMALLER ABRE_P expresion_alge2 COMA RESTA NUMERO CIERRA_P
    (251) Smaller -> . SMALLER ABRE_P NUMERO COMA expresion_alge1 CIERRA_P
    (252) Smaller -> . SMALLER ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P
    (253) Smaller -> . SMALLER ABRE_P NUMERO COMA expresion_alge2 CIERRA_P
    (254) Smaller -> . SMALLER ABRE_P RESTA NUMERO COMA expresion_alge2 CIERRA_P
    (255) Smaller -> . SMALLER ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P

    EQUAL           shift and go to state 231
    GREATER         shift and go to state 232
    SMALLER         shift and go to state 233

    condicion                      shift and go to state 610
    Equal                          shift and go to state 228
    Greater                        shift and go to state 229
    Smaller                        shift and go to state 230

state 490

    (266) While -> WHILE BRACKET1 condicion BRACKET2 BRACKET1 . funcion BRACKET2
    (82) funcion -> . Random empty
    (83) funcion -> . If empty
    (84) funcion -> . IfElse empty
    (85) funcion -> . Until empty
    (86) funcion -> . While empty
    (87) funcion -> . PrintLine empty
    (88) funcion -> . And empty
    (89) funcion -> . Or empty
    (90) funcion -> . Add empty
    (91) funcion -> . Put2 empty
    (92) funcion -> . Put empty
    (93) funcion -> . PUNTOCOMA funcion
    (94) funcion -> . empty empty
    (279) Random -> . RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA
    (264) If -> . IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2
    (265) IfElse -> . IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2
    (268) Until -> . UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2
    (266) While -> . WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2
    (337) PrintLine -> . PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA
    (256) And -> . AND ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (257) And -> . AND ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P
    (258) And -> . AND ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P
    (259) And -> . AND ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P
    (260) Or -> . OR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (261) Or -> . OR ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P
    (262) Or -> . OR ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P
    (263) Or -> . OR ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P
    (269) Add -> . ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA
    (270) Add -> . ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (271) Add -> . ADD ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (272) Add -> . ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (273) Add -> . ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (274) Add -> . ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (96) Put2 -> . PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (97) Put2 -> . PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (98) Put2 -> . PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (99) Put2 -> . PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (100) Put2 -> . PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA
    (95) Put -> . PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA
    (338) empty -> .

    PUNTOCOMA       shift and go to state 62
    RANDOM          shift and go to state 72
    IF              shift and go to state 73
    IFELSE          shift and go to state 74
    UNTIL           shift and go to state 75
    WHILE           shift and go to state 76
    PRINTLINE       shift and go to state 77
    AND             shift and go to state 78
    OR              shift and go to state 79
    ADD             shift and go to state 80
    PUT             shift and go to state 96
    BRACKET2        reduce using rule 338 (empty -> .)

    funcion                        shift and go to state 611
    Random                         shift and go to state 53
    empty                          shift and go to state 124
    If                             shift and go to state 54
    IfElse                         shift and go to state 55
    Until                          shift and go to state 56
    While                          shift and go to state 57
    PrintLine                      shift and go to state 58
    And                            shift and go to state 59
    Or                             shift and go to state 60
    Add                            shift and go to state 61
    Put2                           shift and go to state 94
    Put                            shift and go to state 95

state 491

    (337) PrintLine -> PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA .

    PUNTOCOMA       reduce using rule 337 (PrintLine -> PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA .)
    NUMERO          reduce using rule 337 (PrintLine -> PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA .)
    RESTA           reduce using rule 337 (PrintLine -> PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA .)
    ABRE_P          reduce using rule 337 (PrintLine -> PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA .)
    SUM             reduce using rule 337 (PrintLine -> PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA .)
    SUBSTR          reduce using rule 337 (PrintLine -> PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA .)
    MULT            reduce using rule 337 (PrintLine -> PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA .)
    DIV             reduce using rule 337 (PrintLine -> PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA .)
    RANDOM          reduce using rule 337 (PrintLine -> PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA .)
    IF              reduce using rule 337 (PrintLine -> PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA .)
    IFELSE          reduce using rule 337 (PrintLine -> PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA .)
    UNTIL           reduce using rule 337 (PrintLine -> PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA .)
    WHILE           reduce using rule 337 (PrintLine -> PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA .)
    PRINTLINE       reduce using rule 337 (PrintLine -> PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA .)
    AND             reduce using rule 337 (PrintLine -> PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA .)
    OR              reduce using rule 337 (PrintLine -> PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA .)
    ADD             reduce using rule 337 (PrintLine -> PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA .)
    PUT             reduce using rule 337 (PrintLine -> PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA .)
    FIN             reduce using rule 337 (PrintLine -> PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA .)
    CIERRA_P        reduce using rule 337 (PrintLine -> PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 337 (PrintLine -> PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA .)


state 492

    (329) exp -> NUMERO COMA exp .

    CIERRA_P        reduce using rule 329 (exp -> NUMERO COMA exp .)


state 493

    (332) exp -> NUMERO empty empty .

    CIERRA_P        reduce using rule 332 (exp -> NUMERO empty empty .)


state 494

    (330) exp -> STRING COMA exp .

    CIERRA_P        reduce using rule 330 (exp -> STRING COMA exp .)


state 495

    (335) exp -> STRING empty empty .

    CIERRA_P        reduce using rule 335 (exp -> STRING empty empty .)


state 496

    (331) exp -> Var COMA exp .

    CIERRA_P        reduce using rule 331 (exp -> Var COMA exp .)


state 497

    (336) exp -> Var empty empty .

    CIERRA_P        reduce using rule 336 (exp -> Var empty empty .)


state 498

    (333) exp -> RESTA NUMERO empty . empty
    (338) empty -> .

    CIERRA_P        reduce using rule 338 (empty -> .)

    empty                          shift and go to state 612

state 499

    (334) exp -> RESTA NUMERO COMA . empty
    (338) empty -> .

    CIERRA_P        reduce using rule 338 (empty -> .)

    empty                          shift and go to state 613

state 500

    (256) And -> AND ABRE_P expresion_alge1 COMA expresion_alge1 . CIERRA_P

    CIERRA_P        shift and go to state 614


state 501

    (257) And -> AND ABRE_P expresion_alge1 COMA expresion_alge2 . CIERRA_P

    CIERRA_P        shift and go to state 615


state 502

    (259) And -> AND ABRE_P expresion_alge2 COMA expresion_alge2 . CIERRA_P

    CIERRA_P        shift and go to state 616


state 503

    (258) And -> AND ABRE_P expresion_alge2 COMA expresion_alge1 . CIERRA_P

    CIERRA_P        shift and go to state 617


state 504

    (260) Or -> OR ABRE_P expresion_alge1 COMA expresion_alge1 . CIERRA_P

    CIERRA_P        shift and go to state 618


state 505

    (261) Or -> OR ABRE_P expresion_alge1 COMA expresion_alge2 . CIERRA_P

    CIERRA_P        shift and go to state 619


state 506

    (263) Or -> OR ABRE_P expresion_alge2 COMA expresion_alge2 . CIERRA_P

    CIERRA_P        shift and go to state 620


state 507

    (262) Or -> OR ABRE_P expresion_alge2 COMA expresion_alge1 . CIERRA_P

    CIERRA_P        shift and go to state 621


state 508

    (269) Add -> ADD ABRE_P Var empty empty . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 622


state 509

    (273) Add -> ADD ABRE_P Var COMA Var . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 623


state 510

    (270) Add -> ADD ABRE_P Var COMA NUMERO . CIERRA_P PUNTOCOMA
    (104) expresion_alge1 -> NUMERO . SUMA NUMERO
    (105) expresion_alge1 -> NUMERO . RESTA NUMERO
    (106) expresion_alge1 -> NUMERO . MULTI NUMERO
    (107) expresion_alge1 -> NUMERO . DIVISION NUMERO

    CIERRA_P        shift and go to state 624
    SUMA            shift and go to state 126
    RESTA           shift and go to state 127
    MULTI           shift and go to state 128
    DIVISION        shift and go to state 129


state 511

    (271) Add -> ADD ABRE_P Var COMA RESTA . NUMERO CIERRA_P PUNTOCOMA
    (108) expresion_alge1 -> RESTA . NUMERO SUMA NUMERO
    (109) expresion_alge1 -> RESTA . NUMERO RESTA NUMERO
    (110) expresion_alge1 -> RESTA . NUMERO MULTI NUMERO
    (111) expresion_alge1 -> RESTA . NUMERO DIVISION NUMERO

    NUMERO          shift and go to state 625


state 512

    (272) Add -> ADD ABRE_P Var COMA expresion_alge1 . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 626


state 513

    (274) Add -> ADD ABRE_P Var COMA expresion_alge2 . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 627


state 514

    (97) Put2 -> PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA .

    $end            reduce using rule 97 (Put2 -> PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)
    FIN             reduce using rule 97 (Put2 -> PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)
    PUNTOCOMA       reduce using rule 97 (Put2 -> PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)
    NUMERO          reduce using rule 97 (Put2 -> PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)
    RESTA           reduce using rule 97 (Put2 -> PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)
    ABRE_P          reduce using rule 97 (Put2 -> PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)
    SUM             reduce using rule 97 (Put2 -> PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)
    SUBSTR          reduce using rule 97 (Put2 -> PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)
    MULT            reduce using rule 97 (Put2 -> PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)
    DIV             reduce using rule 97 (Put2 -> PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)
    RANDOM          reduce using rule 97 (Put2 -> PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)
    IF              reduce using rule 97 (Put2 -> PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)
    IFELSE          reduce using rule 97 (Put2 -> PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)
    UNTIL           reduce using rule 97 (Put2 -> PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)
    WHILE           reduce using rule 97 (Put2 -> PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)
    PRINTLINE       reduce using rule 97 (Put2 -> PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)
    AND             reduce using rule 97 (Put2 -> PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)
    OR              reduce using rule 97 (Put2 -> PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)
    ADD             reduce using rule 97 (Put2 -> PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)
    PUT             reduce using rule 97 (Put2 -> PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)
    CIERRA_P        reduce using rule 97 (Put2 -> PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 97 (Put2 -> PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)


state 515

    (27) llamadoproc -> PARA id BRACKET1 parametro . BRACKET2 PUNTOCOMA

    BRACKET2        shift and go to state 628


state 516

    (112) expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 . CIERRA_P

    CIERRA_P        shift and go to state 629


state 517

    (113) expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 . CIERRA_P

    CIERRA_P        shift and go to state 630


state 518

    (114) expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 . CIERRA_P

    CIERRA_P        shift and go to state 631


state 519

    (115) expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 . CIERRA_P

    CIERRA_P        shift and go to state 632


state 520

    (328) Run -> RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA cuerpo3 .

    FIN             reduce using rule 328 (Run -> RUN BRACKET1 ordenes BRACKET2 PUNTOCOMA cuerpo3 .)


state 521

    (299) Diag -> POS ABRE_P STRING COMA . NUMERO CIERRA_P PUNTOCOMA

    NUMERO          shift and go to state 633


state 522

    (300) Pos -> POS ABRE_P NUMERO COMA . NUMERO CIERRA_P
    (302) Pos -> POS ABRE_P NUMERO COMA . expresion_alge1 CIERRA_P
    (305) Pos -> POS ABRE_P NUMERO COMA . Var CIERRA_P
    (311) Pos -> POS ABRE_P NUMERO COMA . RESTA NUMERO CIERRA_P
    (104) expresion_alge1 -> . NUMERO SUMA NUMERO
    (105) expresion_alge1 -> . NUMERO RESTA NUMERO
    (106) expresion_alge1 -> . NUMERO MULTI NUMERO
    (107) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (108) expresion_alge1 -> . RESTA NUMERO SUMA NUMERO
    (109) expresion_alge1 -> . RESTA NUMERO RESTA NUMERO
    (110) expresion_alge1 -> . RESTA NUMERO MULTI NUMERO
    (111) expresion_alge1 -> . RESTA NUMERO DIVISION NUMERO
    (180) Var -> . VAR

    NUMERO          shift and go to state 634
    RESTA           shift and go to state 637
    VAR             shift and go to state 34

    expresion_alge1                shift and go to state 635
    Var                            shift and go to state 636

state 523

    (301) Pos -> POS ABRE_P expresion_alge1 COMA . NUMERO CIERRA_P
    (303) Pos -> POS ABRE_P expresion_alge1 COMA . expresion_alge1 CIERRA_P
    (307) Pos -> POS ABRE_P expresion_alge1 COMA . Var CIERRA_P
    (313) Pos -> POS ABRE_P expresion_alge1 COMA . RESTA NUMERO CIERRA_P
    (104) expresion_alge1 -> . NUMERO SUMA NUMERO
    (105) expresion_alge1 -> . NUMERO RESTA NUMERO
    (106) expresion_alge1 -> . NUMERO MULTI NUMERO
    (107) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (108) expresion_alge1 -> . RESTA NUMERO SUMA NUMERO
    (109) expresion_alge1 -> . RESTA NUMERO RESTA NUMERO
    (110) expresion_alge1 -> . RESTA NUMERO MULTI NUMERO
    (111) expresion_alge1 -> . RESTA NUMERO DIVISION NUMERO
    (180) Var -> . VAR

    NUMERO          shift and go to state 639
    RESTA           shift and go to state 641
    VAR             shift and go to state 34

    expresion_alge1                shift and go to state 638
    Var                            shift and go to state 640

state 524

    (304) Pos -> POS ABRE_P Var COMA . NUMERO CIERRA_P
    (306) Pos -> POS ABRE_P Var COMA . Var CIERRA_P
    (308) Pos -> POS ABRE_P Var COMA . expresion_alge1 CIERRA_P
    (314) Pos -> POS ABRE_P Var COMA . RESTA NUMERO CIERRA_P
    (180) Var -> . VAR
    (104) expresion_alge1 -> . NUMERO SUMA NUMERO
    (105) expresion_alge1 -> . NUMERO RESTA NUMERO
    (106) expresion_alge1 -> . NUMERO MULTI NUMERO
    (107) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (108) expresion_alge1 -> . RESTA NUMERO SUMA NUMERO
    (109) expresion_alge1 -> . RESTA NUMERO RESTA NUMERO
    (110) expresion_alge1 -> . RESTA NUMERO MULTI NUMERO
    (111) expresion_alge1 -> . RESTA NUMERO DIVISION NUMERO

    NUMERO          shift and go to state 643
    RESTA           shift and go to state 645
    VAR             shift and go to state 34

    Var                            shift and go to state 642
    expresion_alge1                shift and go to state 644

state 525

    (309) Pos -> POS ABRE_P RESTA NUMERO . COMA RESTA NUMERO CIERRA_P
    (310) Pos -> POS ABRE_P RESTA NUMERO . COMA NUMERO CIERRA_P
    (312) Pos -> POS ABRE_P RESTA NUMERO . COMA expresion_alge1 CIERRA_P
    (315) Pos -> POS ABRE_P RESTA NUMERO . COMA Var CIERRA_P
    (108) expresion_alge1 -> RESTA NUMERO . SUMA NUMERO
    (109) expresion_alge1 -> RESTA NUMERO . RESTA NUMERO
    (110) expresion_alge1 -> RESTA NUMERO . MULTI NUMERO
    (111) expresion_alge1 -> RESTA NUMERO . DIVISION NUMERO

    COMA            shift and go to state 646
    SUMA            shift and go to state 180
    RESTA           shift and go to state 179
    MULTI           shift and go to state 181
    DIVISION        shift and go to state 182


state 526

    (317) PosX -> POSX RESTA NUMERO PUNTOCOMA .

    BEGINNING       reduce using rule 317 (PosX -> POSX RESTA NUMERO PUNTOCOMA .)
    CONTINUEUP      reduce using rule 317 (PosX -> POSX RESTA NUMERO PUNTOCOMA .)
    CONTINUEDOWN    reduce using rule 317 (PosX -> POSX RESTA NUMERO PUNTOCOMA .)
    CONTINUERIGHT   reduce using rule 317 (PosX -> POSX RESTA NUMERO PUNTOCOMA .)
    CONTINUELEFT    reduce using rule 317 (PosX -> POSX RESTA NUMERO PUNTOCOMA .)
    UP              reduce using rule 317 (PosX -> POSX RESTA NUMERO PUNTOCOMA .)
    DOWN            reduce using rule 317 (PosX -> POSX RESTA NUMERO PUNTOCOMA .)
    SPEED           reduce using rule 317 (PosX -> POSX RESTA NUMERO PUNTOCOMA .)
    POS             reduce using rule 317 (PosX -> POSX RESTA NUMERO PUNTOCOMA .)
    POSX            reduce using rule 317 (PosX -> POSX RESTA NUMERO PUNTOCOMA .)
    POSY            reduce using rule 317 (PosX -> POSX RESTA NUMERO PUNTOCOMA .)
    USECOLOR        reduce using rule 317 (PosX -> POSX RESTA NUMERO PUNTOCOMA .)
    BRACKET2        reduce using rule 317 (PosX -> POSX RESTA NUMERO PUNTOCOMA .)


state 527

    (322) PosY -> POSY RESTA NUMERO PUNTOCOMA .

    BEGINNING       reduce using rule 322 (PosY -> POSY RESTA NUMERO PUNTOCOMA .)
    CONTINUEUP      reduce using rule 322 (PosY -> POSY RESTA NUMERO PUNTOCOMA .)
    CONTINUEDOWN    reduce using rule 322 (PosY -> POSY RESTA NUMERO PUNTOCOMA .)
    CONTINUERIGHT   reduce using rule 322 (PosY -> POSY RESTA NUMERO PUNTOCOMA .)
    CONTINUELEFT    reduce using rule 322 (PosY -> POSY RESTA NUMERO PUNTOCOMA .)
    UP              reduce using rule 322 (PosY -> POSY RESTA NUMERO PUNTOCOMA .)
    DOWN            reduce using rule 322 (PosY -> POSY RESTA NUMERO PUNTOCOMA .)
    SPEED           reduce using rule 322 (PosY -> POSY RESTA NUMERO PUNTOCOMA .)
    POS             reduce using rule 322 (PosY -> POSY RESTA NUMERO PUNTOCOMA .)
    POSX            reduce using rule 322 (PosY -> POSY RESTA NUMERO PUNTOCOMA .)
    POSY            reduce using rule 322 (PosY -> POSY RESTA NUMERO PUNTOCOMA .)
    USECOLOR        reduce using rule 322 (PosY -> POSY RESTA NUMERO PUNTOCOMA .)
    BRACKET2        reduce using rule 322 (PosY -> POSY RESTA NUMERO PUNTOCOMA .)


state 528

    (267) Repeat -> REPEAT NUMERO BRACKET1 ordenes BRACKET2 cuerpo3 .

    FIN             reduce using rule 267 (Repeat -> REPEAT NUMERO BRACKET1 ordenes BRACKET2 cuerpo3 .)


state 529

    (148) Mult -> MULT ABRE_P NUMERO COMA NUMERO CIERRA_P .

    PUNTOCOMA       reduce using rule 148 (Mult -> MULT ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    NUMERO          reduce using rule 148 (Mult -> MULT ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    RESTA           reduce using rule 148 (Mult -> MULT ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    ABRE_P          reduce using rule 148 (Mult -> MULT ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    SUM             reduce using rule 148 (Mult -> MULT ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    SUBSTR          reduce using rule 148 (Mult -> MULT ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    MULT            reduce using rule 148 (Mult -> MULT ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    DIV             reduce using rule 148 (Mult -> MULT ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    RANDOM          reduce using rule 148 (Mult -> MULT ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    IF              reduce using rule 148 (Mult -> MULT ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    IFELSE          reduce using rule 148 (Mult -> MULT ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    UNTIL           reduce using rule 148 (Mult -> MULT ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    WHILE           reduce using rule 148 (Mult -> MULT ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    PRINTLINE       reduce using rule 148 (Mult -> MULT ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    AND             reduce using rule 148 (Mult -> MULT ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    OR              reduce using rule 148 (Mult -> MULT ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    ADD             reduce using rule 148 (Mult -> MULT ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    PUT             reduce using rule 148 (Mult -> MULT ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    FIN             reduce using rule 148 (Mult -> MULT ABRE_P NUMERO COMA NUMERO CIERRA_P .)


state 530

    (150) Mult -> MULT ABRE_P NUMERO COMA RESTA NUMERO . CIERRA_P
    (108) expresion_alge1 -> RESTA NUMERO . SUMA NUMERO
    (109) expresion_alge1 -> RESTA NUMERO . RESTA NUMERO
    (110) expresion_alge1 -> RESTA NUMERO . MULTI NUMERO
    (111) expresion_alge1 -> RESTA NUMERO . DIVISION NUMERO

    CIERRA_P        shift and go to state 647
    SUMA            shift and go to state 180
    RESTA           shift and go to state 179
    MULTI           shift and go to state 181
    DIVISION        shift and go to state 182


state 531

    (151) Mult -> MULT ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .

    PUNTOCOMA       reduce using rule 151 (Mult -> MULT ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    NUMERO          reduce using rule 151 (Mult -> MULT ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    RESTA           reduce using rule 151 (Mult -> MULT ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    ABRE_P          reduce using rule 151 (Mult -> MULT ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    SUM             reduce using rule 151 (Mult -> MULT ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    SUBSTR          reduce using rule 151 (Mult -> MULT ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    MULT            reduce using rule 151 (Mult -> MULT ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    DIV             reduce using rule 151 (Mult -> MULT ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    RANDOM          reduce using rule 151 (Mult -> MULT ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    IF              reduce using rule 151 (Mult -> MULT ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    IFELSE          reduce using rule 151 (Mult -> MULT ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    UNTIL           reduce using rule 151 (Mult -> MULT ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    WHILE           reduce using rule 151 (Mult -> MULT ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    PRINTLINE       reduce using rule 151 (Mult -> MULT ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    AND             reduce using rule 151 (Mult -> MULT ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    OR              reduce using rule 151 (Mult -> MULT ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    ADD             reduce using rule 151 (Mult -> MULT ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    PUT             reduce using rule 151 (Mult -> MULT ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    FIN             reduce using rule 151 (Mult -> MULT ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)


state 532

    (154) Mult -> MULT ABRE_P NUMERO COMA Var CIERRA_P .

    PUNTOCOMA       reduce using rule 154 (Mult -> MULT ABRE_P NUMERO COMA Var CIERRA_P .)
    NUMERO          reduce using rule 154 (Mult -> MULT ABRE_P NUMERO COMA Var CIERRA_P .)
    RESTA           reduce using rule 154 (Mult -> MULT ABRE_P NUMERO COMA Var CIERRA_P .)
    ABRE_P          reduce using rule 154 (Mult -> MULT ABRE_P NUMERO COMA Var CIERRA_P .)
    SUM             reduce using rule 154 (Mult -> MULT ABRE_P NUMERO COMA Var CIERRA_P .)
    SUBSTR          reduce using rule 154 (Mult -> MULT ABRE_P NUMERO COMA Var CIERRA_P .)
    MULT            reduce using rule 154 (Mult -> MULT ABRE_P NUMERO COMA Var CIERRA_P .)
    DIV             reduce using rule 154 (Mult -> MULT ABRE_P NUMERO COMA Var CIERRA_P .)
    RANDOM          reduce using rule 154 (Mult -> MULT ABRE_P NUMERO COMA Var CIERRA_P .)
    IF              reduce using rule 154 (Mult -> MULT ABRE_P NUMERO COMA Var CIERRA_P .)
    IFELSE          reduce using rule 154 (Mult -> MULT ABRE_P NUMERO COMA Var CIERRA_P .)
    UNTIL           reduce using rule 154 (Mult -> MULT ABRE_P NUMERO COMA Var CIERRA_P .)
    WHILE           reduce using rule 154 (Mult -> MULT ABRE_P NUMERO COMA Var CIERRA_P .)
    PRINTLINE       reduce using rule 154 (Mult -> MULT ABRE_P NUMERO COMA Var CIERRA_P .)
    AND             reduce using rule 154 (Mult -> MULT ABRE_P NUMERO COMA Var CIERRA_P .)
    OR              reduce using rule 154 (Mult -> MULT ABRE_P NUMERO COMA Var CIERRA_P .)
    ADD             reduce using rule 154 (Mult -> MULT ABRE_P NUMERO COMA Var CIERRA_P .)
    PUT             reduce using rule 154 (Mult -> MULT ABRE_P NUMERO COMA Var CIERRA_P .)
    FIN             reduce using rule 154 (Mult -> MULT ABRE_P NUMERO COMA Var CIERRA_P .)


state 533

    (163) Mult -> MULT ABRE_P RESTA NUMERO COMA RESTA . NUMERO CIERRA_P
    (108) expresion_alge1 -> RESTA . NUMERO SUMA NUMERO
    (109) expresion_alge1 -> RESTA . NUMERO RESTA NUMERO
    (110) expresion_alge1 -> RESTA . NUMERO MULTI NUMERO
    (111) expresion_alge1 -> RESTA . NUMERO DIVISION NUMERO

    NUMERO          shift and go to state 648


state 534

    (149) Mult -> MULT ABRE_P RESTA NUMERO COMA NUMERO . CIERRA_P
    (104) expresion_alge1 -> NUMERO . SUMA NUMERO
    (105) expresion_alge1 -> NUMERO . RESTA NUMERO
    (106) expresion_alge1 -> NUMERO . MULTI NUMERO
    (107) expresion_alge1 -> NUMERO . DIVISION NUMERO

    CIERRA_P        shift and go to state 649
    SUMA            shift and go to state 126
    RESTA           shift and go to state 127
    MULTI           shift and go to state 128
    DIVISION        shift and go to state 129


state 535

    (152) Mult -> MULT ABRE_P RESTA NUMERO COMA expresion_alge1 . CIERRA_P

    CIERRA_P        shift and go to state 650


state 536

    (155) Mult -> MULT ABRE_P RESTA NUMERO COMA Var . CIERRA_P

    CIERRA_P        shift and go to state 651


state 537

    (153) Mult -> MULT ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .

    PUNTOCOMA       reduce using rule 153 (Mult -> MULT ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    NUMERO          reduce using rule 153 (Mult -> MULT ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    RESTA           reduce using rule 153 (Mult -> MULT ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    ABRE_P          reduce using rule 153 (Mult -> MULT ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    SUM             reduce using rule 153 (Mult -> MULT ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    SUBSTR          reduce using rule 153 (Mult -> MULT ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    MULT            reduce using rule 153 (Mult -> MULT ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    DIV             reduce using rule 153 (Mult -> MULT ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    RANDOM          reduce using rule 153 (Mult -> MULT ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    IF              reduce using rule 153 (Mult -> MULT ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    IFELSE          reduce using rule 153 (Mult -> MULT ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    UNTIL           reduce using rule 153 (Mult -> MULT ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    WHILE           reduce using rule 153 (Mult -> MULT ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    PRINTLINE       reduce using rule 153 (Mult -> MULT ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    AND             reduce using rule 153 (Mult -> MULT ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    OR              reduce using rule 153 (Mult -> MULT ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    ADD             reduce using rule 153 (Mult -> MULT ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    PUT             reduce using rule 153 (Mult -> MULT ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    FIN             reduce using rule 153 (Mult -> MULT ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)


state 538

    (159) Mult -> MULT ABRE_P expresion_alge1 COMA Var CIERRA_P .

    PUNTOCOMA       reduce using rule 159 (Mult -> MULT ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    NUMERO          reduce using rule 159 (Mult -> MULT ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    RESTA           reduce using rule 159 (Mult -> MULT ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    ABRE_P          reduce using rule 159 (Mult -> MULT ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    SUM             reduce using rule 159 (Mult -> MULT ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    SUBSTR          reduce using rule 159 (Mult -> MULT ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    MULT            reduce using rule 159 (Mult -> MULT ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    DIV             reduce using rule 159 (Mult -> MULT ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    RANDOM          reduce using rule 159 (Mult -> MULT ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    IF              reduce using rule 159 (Mult -> MULT ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    IFELSE          reduce using rule 159 (Mult -> MULT ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    UNTIL           reduce using rule 159 (Mult -> MULT ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    WHILE           reduce using rule 159 (Mult -> MULT ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    PRINTLINE       reduce using rule 159 (Mult -> MULT ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    AND             reduce using rule 159 (Mult -> MULT ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    OR              reduce using rule 159 (Mult -> MULT ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    ADD             reduce using rule 159 (Mult -> MULT ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    PUT             reduce using rule 159 (Mult -> MULT ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    FIN             reduce using rule 159 (Mult -> MULT ABRE_P expresion_alge1 COMA Var CIERRA_P .)


state 539

    (160) Mult -> MULT ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .

    PUNTOCOMA       reduce using rule 160 (Mult -> MULT ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    NUMERO          reduce using rule 160 (Mult -> MULT ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    RESTA           reduce using rule 160 (Mult -> MULT ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    ABRE_P          reduce using rule 160 (Mult -> MULT ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    SUM             reduce using rule 160 (Mult -> MULT ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    SUBSTR          reduce using rule 160 (Mult -> MULT ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    MULT            reduce using rule 160 (Mult -> MULT ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    DIV             reduce using rule 160 (Mult -> MULT ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    RANDOM          reduce using rule 160 (Mult -> MULT ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    IF              reduce using rule 160 (Mult -> MULT ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    IFELSE          reduce using rule 160 (Mult -> MULT ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    UNTIL           reduce using rule 160 (Mult -> MULT ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    WHILE           reduce using rule 160 (Mult -> MULT ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    PRINTLINE       reduce using rule 160 (Mult -> MULT ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    AND             reduce using rule 160 (Mult -> MULT ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    OR              reduce using rule 160 (Mult -> MULT ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    ADD             reduce using rule 160 (Mult -> MULT ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    PUT             reduce using rule 160 (Mult -> MULT ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    FIN             reduce using rule 160 (Mult -> MULT ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)


state 540

    (161) Mult -> MULT ABRE_P expresion_alge1 COMA RESTA NUMERO . CIERRA_P
    (108) expresion_alge1 -> RESTA NUMERO . SUMA NUMERO
    (109) expresion_alge1 -> RESTA NUMERO . RESTA NUMERO
    (110) expresion_alge1 -> RESTA NUMERO . MULTI NUMERO
    (111) expresion_alge1 -> RESTA NUMERO . DIVISION NUMERO

    CIERRA_P        shift and go to state 652
    SUMA            shift and go to state 180
    RESTA           shift and go to state 179
    MULTI           shift and go to state 181
    DIVISION        shift and go to state 182


state 541

    (158) Mult -> MULT ABRE_P Var COMA Var CIERRA_P .

    PUNTOCOMA       reduce using rule 158 (Mult -> MULT ABRE_P Var COMA Var CIERRA_P .)
    NUMERO          reduce using rule 158 (Mult -> MULT ABRE_P Var COMA Var CIERRA_P .)
    RESTA           reduce using rule 158 (Mult -> MULT ABRE_P Var COMA Var CIERRA_P .)
    ABRE_P          reduce using rule 158 (Mult -> MULT ABRE_P Var COMA Var CIERRA_P .)
    SUM             reduce using rule 158 (Mult -> MULT ABRE_P Var COMA Var CIERRA_P .)
    SUBSTR          reduce using rule 158 (Mult -> MULT ABRE_P Var COMA Var CIERRA_P .)
    MULT            reduce using rule 158 (Mult -> MULT ABRE_P Var COMA Var CIERRA_P .)
    DIV             reduce using rule 158 (Mult -> MULT ABRE_P Var COMA Var CIERRA_P .)
    RANDOM          reduce using rule 158 (Mult -> MULT ABRE_P Var COMA Var CIERRA_P .)
    IF              reduce using rule 158 (Mult -> MULT ABRE_P Var COMA Var CIERRA_P .)
    IFELSE          reduce using rule 158 (Mult -> MULT ABRE_P Var COMA Var CIERRA_P .)
    UNTIL           reduce using rule 158 (Mult -> MULT ABRE_P Var COMA Var CIERRA_P .)
    WHILE           reduce using rule 158 (Mult -> MULT ABRE_P Var COMA Var CIERRA_P .)
    PRINTLINE       reduce using rule 158 (Mult -> MULT ABRE_P Var COMA Var CIERRA_P .)
    AND             reduce using rule 158 (Mult -> MULT ABRE_P Var COMA Var CIERRA_P .)
    OR              reduce using rule 158 (Mult -> MULT ABRE_P Var COMA Var CIERRA_P .)
    ADD             reduce using rule 158 (Mult -> MULT ABRE_P Var COMA Var CIERRA_P .)
    PUT             reduce using rule 158 (Mult -> MULT ABRE_P Var COMA Var CIERRA_P .)
    FIN             reduce using rule 158 (Mult -> MULT ABRE_P Var COMA Var CIERRA_P .)


state 542

    (156) Mult -> MULT ABRE_P Var COMA NUMERO CIERRA_P .

    PUNTOCOMA       reduce using rule 156 (Mult -> MULT ABRE_P Var COMA NUMERO CIERRA_P .)
    NUMERO          reduce using rule 156 (Mult -> MULT ABRE_P Var COMA NUMERO CIERRA_P .)
    RESTA           reduce using rule 156 (Mult -> MULT ABRE_P Var COMA NUMERO CIERRA_P .)
    ABRE_P          reduce using rule 156 (Mult -> MULT ABRE_P Var COMA NUMERO CIERRA_P .)
    SUM             reduce using rule 156 (Mult -> MULT ABRE_P Var COMA NUMERO CIERRA_P .)
    SUBSTR          reduce using rule 156 (Mult -> MULT ABRE_P Var COMA NUMERO CIERRA_P .)
    MULT            reduce using rule 156 (Mult -> MULT ABRE_P Var COMA NUMERO CIERRA_P .)
    DIV             reduce using rule 156 (Mult -> MULT ABRE_P Var COMA NUMERO CIERRA_P .)
    RANDOM          reduce using rule 156 (Mult -> MULT ABRE_P Var COMA NUMERO CIERRA_P .)
    IF              reduce using rule 156 (Mult -> MULT ABRE_P Var COMA NUMERO CIERRA_P .)
    IFELSE          reduce using rule 156 (Mult -> MULT ABRE_P Var COMA NUMERO CIERRA_P .)
    UNTIL           reduce using rule 156 (Mult -> MULT ABRE_P Var COMA NUMERO CIERRA_P .)
    WHILE           reduce using rule 156 (Mult -> MULT ABRE_P Var COMA NUMERO CIERRA_P .)
    PRINTLINE       reduce using rule 156 (Mult -> MULT ABRE_P Var COMA NUMERO CIERRA_P .)
    AND             reduce using rule 156 (Mult -> MULT ABRE_P Var COMA NUMERO CIERRA_P .)
    OR              reduce using rule 156 (Mult -> MULT ABRE_P Var COMA NUMERO CIERRA_P .)
    ADD             reduce using rule 156 (Mult -> MULT ABRE_P Var COMA NUMERO CIERRA_P .)
    PUT             reduce using rule 156 (Mult -> MULT ABRE_P Var COMA NUMERO CIERRA_P .)
    FIN             reduce using rule 156 (Mult -> MULT ABRE_P Var COMA NUMERO CIERRA_P .)


state 543

    (157) Mult -> MULT ABRE_P Var COMA RESTA NUMERO . CIERRA_P
    (108) expresion_alge1 -> RESTA NUMERO . SUMA NUMERO
    (109) expresion_alge1 -> RESTA NUMERO . RESTA NUMERO
    (110) expresion_alge1 -> RESTA NUMERO . MULTI NUMERO
    (111) expresion_alge1 -> RESTA NUMERO . DIVISION NUMERO

    CIERRA_P        shift and go to state 653
    SUMA            shift and go to state 180
    RESTA           shift and go to state 179
    MULTI           shift and go to state 181
    DIVISION        shift and go to state 182


state 544

    (162) Mult -> MULT ABRE_P Var COMA expresion_alge1 CIERRA_P .

    PUNTOCOMA       reduce using rule 162 (Mult -> MULT ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    NUMERO          reduce using rule 162 (Mult -> MULT ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    RESTA           reduce using rule 162 (Mult -> MULT ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    ABRE_P          reduce using rule 162 (Mult -> MULT ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    SUM             reduce using rule 162 (Mult -> MULT ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    SUBSTR          reduce using rule 162 (Mult -> MULT ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    MULT            reduce using rule 162 (Mult -> MULT ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    DIV             reduce using rule 162 (Mult -> MULT ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    RANDOM          reduce using rule 162 (Mult -> MULT ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    IF              reduce using rule 162 (Mult -> MULT ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    IFELSE          reduce using rule 162 (Mult -> MULT ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    UNTIL           reduce using rule 162 (Mult -> MULT ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    WHILE           reduce using rule 162 (Mult -> MULT ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    PRINTLINE       reduce using rule 162 (Mult -> MULT ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    AND             reduce using rule 162 (Mult -> MULT ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    OR              reduce using rule 162 (Mult -> MULT ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    ADD             reduce using rule 162 (Mult -> MULT ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    PUT             reduce using rule 162 (Mult -> MULT ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    FIN             reduce using rule 162 (Mult -> MULT ABRE_P Var COMA expresion_alge1 CIERRA_P .)


state 545

    (164) Div -> DIV ABRE_P NUMERO COMA NUMERO CIERRA_P .

    PUNTOCOMA       reduce using rule 164 (Div -> DIV ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    NUMERO          reduce using rule 164 (Div -> DIV ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    RESTA           reduce using rule 164 (Div -> DIV ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    ABRE_P          reduce using rule 164 (Div -> DIV ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    SUM             reduce using rule 164 (Div -> DIV ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    SUBSTR          reduce using rule 164 (Div -> DIV ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    MULT            reduce using rule 164 (Div -> DIV ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    DIV             reduce using rule 164 (Div -> DIV ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    RANDOM          reduce using rule 164 (Div -> DIV ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    IF              reduce using rule 164 (Div -> DIV ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    IFELSE          reduce using rule 164 (Div -> DIV ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    UNTIL           reduce using rule 164 (Div -> DIV ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    WHILE           reduce using rule 164 (Div -> DIV ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    PRINTLINE       reduce using rule 164 (Div -> DIV ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    AND             reduce using rule 164 (Div -> DIV ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    OR              reduce using rule 164 (Div -> DIV ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    ADD             reduce using rule 164 (Div -> DIV ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    PUT             reduce using rule 164 (Div -> DIV ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    FIN             reduce using rule 164 (Div -> DIV ABRE_P NUMERO COMA NUMERO CIERRA_P .)


state 546

    (166) Div -> DIV ABRE_P NUMERO COMA RESTA NUMERO . CIERRA_P
    (108) expresion_alge1 -> RESTA NUMERO . SUMA NUMERO
    (109) expresion_alge1 -> RESTA NUMERO . RESTA NUMERO
    (110) expresion_alge1 -> RESTA NUMERO . MULTI NUMERO
    (111) expresion_alge1 -> RESTA NUMERO . DIVISION NUMERO

    CIERRA_P        shift and go to state 654
    SUMA            shift and go to state 180
    RESTA           shift and go to state 179
    MULTI           shift and go to state 181
    DIVISION        shift and go to state 182


state 547

    (167) Div -> DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .

    PUNTOCOMA       reduce using rule 167 (Div -> DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    NUMERO          reduce using rule 167 (Div -> DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    RESTA           reduce using rule 167 (Div -> DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    ABRE_P          reduce using rule 167 (Div -> DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    SUM             reduce using rule 167 (Div -> DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    SUBSTR          reduce using rule 167 (Div -> DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    MULT            reduce using rule 167 (Div -> DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    DIV             reduce using rule 167 (Div -> DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    RANDOM          reduce using rule 167 (Div -> DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    IF              reduce using rule 167 (Div -> DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    IFELSE          reduce using rule 167 (Div -> DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    UNTIL           reduce using rule 167 (Div -> DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    WHILE           reduce using rule 167 (Div -> DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    PRINTLINE       reduce using rule 167 (Div -> DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    AND             reduce using rule 167 (Div -> DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    OR              reduce using rule 167 (Div -> DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    ADD             reduce using rule 167 (Div -> DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    PUT             reduce using rule 167 (Div -> DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    FIN             reduce using rule 167 (Div -> DIV ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)


state 548

    (170) Div -> DIV ABRE_P NUMERO COMA Var CIERRA_P .

    PUNTOCOMA       reduce using rule 170 (Div -> DIV ABRE_P NUMERO COMA Var CIERRA_P .)
    NUMERO          reduce using rule 170 (Div -> DIV ABRE_P NUMERO COMA Var CIERRA_P .)
    RESTA           reduce using rule 170 (Div -> DIV ABRE_P NUMERO COMA Var CIERRA_P .)
    ABRE_P          reduce using rule 170 (Div -> DIV ABRE_P NUMERO COMA Var CIERRA_P .)
    SUM             reduce using rule 170 (Div -> DIV ABRE_P NUMERO COMA Var CIERRA_P .)
    SUBSTR          reduce using rule 170 (Div -> DIV ABRE_P NUMERO COMA Var CIERRA_P .)
    MULT            reduce using rule 170 (Div -> DIV ABRE_P NUMERO COMA Var CIERRA_P .)
    DIV             reduce using rule 170 (Div -> DIV ABRE_P NUMERO COMA Var CIERRA_P .)
    RANDOM          reduce using rule 170 (Div -> DIV ABRE_P NUMERO COMA Var CIERRA_P .)
    IF              reduce using rule 170 (Div -> DIV ABRE_P NUMERO COMA Var CIERRA_P .)
    IFELSE          reduce using rule 170 (Div -> DIV ABRE_P NUMERO COMA Var CIERRA_P .)
    UNTIL           reduce using rule 170 (Div -> DIV ABRE_P NUMERO COMA Var CIERRA_P .)
    WHILE           reduce using rule 170 (Div -> DIV ABRE_P NUMERO COMA Var CIERRA_P .)
    PRINTLINE       reduce using rule 170 (Div -> DIV ABRE_P NUMERO COMA Var CIERRA_P .)
    AND             reduce using rule 170 (Div -> DIV ABRE_P NUMERO COMA Var CIERRA_P .)
    OR              reduce using rule 170 (Div -> DIV ABRE_P NUMERO COMA Var CIERRA_P .)
    ADD             reduce using rule 170 (Div -> DIV ABRE_P NUMERO COMA Var CIERRA_P .)
    PUT             reduce using rule 170 (Div -> DIV ABRE_P NUMERO COMA Var CIERRA_P .)
    FIN             reduce using rule 170 (Div -> DIV ABRE_P NUMERO COMA Var CIERRA_P .)


state 549

    (179) Div -> DIV ABRE_P RESTA NUMERO COMA RESTA . NUMERO CIERRA_P
    (108) expresion_alge1 -> RESTA . NUMERO SUMA NUMERO
    (109) expresion_alge1 -> RESTA . NUMERO RESTA NUMERO
    (110) expresion_alge1 -> RESTA . NUMERO MULTI NUMERO
    (111) expresion_alge1 -> RESTA . NUMERO DIVISION NUMERO

    NUMERO          shift and go to state 655


state 550

    (165) Div -> DIV ABRE_P RESTA NUMERO COMA NUMERO . CIERRA_P
    (104) expresion_alge1 -> NUMERO . SUMA NUMERO
    (105) expresion_alge1 -> NUMERO . RESTA NUMERO
    (106) expresion_alge1 -> NUMERO . MULTI NUMERO
    (107) expresion_alge1 -> NUMERO . DIVISION NUMERO

    CIERRA_P        shift and go to state 656
    SUMA            shift and go to state 126
    RESTA           shift and go to state 127
    MULTI           shift and go to state 128
    DIVISION        shift and go to state 129


state 551

    (168) Div -> DIV ABRE_P RESTA NUMERO COMA expresion_alge1 . CIERRA_P

    CIERRA_P        shift and go to state 657


state 552

    (171) Div -> DIV ABRE_P RESTA NUMERO COMA Var . CIERRA_P

    CIERRA_P        shift and go to state 658


state 553

    (169) Div -> DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .

    PUNTOCOMA       reduce using rule 169 (Div -> DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    NUMERO          reduce using rule 169 (Div -> DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    RESTA           reduce using rule 169 (Div -> DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    ABRE_P          reduce using rule 169 (Div -> DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    SUM             reduce using rule 169 (Div -> DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    SUBSTR          reduce using rule 169 (Div -> DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    MULT            reduce using rule 169 (Div -> DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    DIV             reduce using rule 169 (Div -> DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    RANDOM          reduce using rule 169 (Div -> DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    IF              reduce using rule 169 (Div -> DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    IFELSE          reduce using rule 169 (Div -> DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    UNTIL           reduce using rule 169 (Div -> DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    WHILE           reduce using rule 169 (Div -> DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    PRINTLINE       reduce using rule 169 (Div -> DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    AND             reduce using rule 169 (Div -> DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    OR              reduce using rule 169 (Div -> DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    ADD             reduce using rule 169 (Div -> DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    PUT             reduce using rule 169 (Div -> DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    FIN             reduce using rule 169 (Div -> DIV ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)


state 554

    (175) Div -> DIV ABRE_P expresion_alge1 COMA Var CIERRA_P .

    PUNTOCOMA       reduce using rule 175 (Div -> DIV ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    NUMERO          reduce using rule 175 (Div -> DIV ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    RESTA           reduce using rule 175 (Div -> DIV ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    ABRE_P          reduce using rule 175 (Div -> DIV ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    SUM             reduce using rule 175 (Div -> DIV ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    SUBSTR          reduce using rule 175 (Div -> DIV ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    MULT            reduce using rule 175 (Div -> DIV ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    DIV             reduce using rule 175 (Div -> DIV ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    RANDOM          reduce using rule 175 (Div -> DIV ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    IF              reduce using rule 175 (Div -> DIV ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    IFELSE          reduce using rule 175 (Div -> DIV ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    UNTIL           reduce using rule 175 (Div -> DIV ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    WHILE           reduce using rule 175 (Div -> DIV ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    PRINTLINE       reduce using rule 175 (Div -> DIV ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    AND             reduce using rule 175 (Div -> DIV ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    OR              reduce using rule 175 (Div -> DIV ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    ADD             reduce using rule 175 (Div -> DIV ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    PUT             reduce using rule 175 (Div -> DIV ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    FIN             reduce using rule 175 (Div -> DIV ABRE_P expresion_alge1 COMA Var CIERRA_P .)


state 555

    (176) Div -> DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .

    PUNTOCOMA       reduce using rule 176 (Div -> DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    NUMERO          reduce using rule 176 (Div -> DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    RESTA           reduce using rule 176 (Div -> DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    ABRE_P          reduce using rule 176 (Div -> DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    SUM             reduce using rule 176 (Div -> DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    SUBSTR          reduce using rule 176 (Div -> DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    MULT            reduce using rule 176 (Div -> DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    DIV             reduce using rule 176 (Div -> DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    RANDOM          reduce using rule 176 (Div -> DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    IF              reduce using rule 176 (Div -> DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    IFELSE          reduce using rule 176 (Div -> DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    UNTIL           reduce using rule 176 (Div -> DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    WHILE           reduce using rule 176 (Div -> DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    PRINTLINE       reduce using rule 176 (Div -> DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    AND             reduce using rule 176 (Div -> DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    OR              reduce using rule 176 (Div -> DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    ADD             reduce using rule 176 (Div -> DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    PUT             reduce using rule 176 (Div -> DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    FIN             reduce using rule 176 (Div -> DIV ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)


state 556

    (177) Div -> DIV ABRE_P expresion_alge1 COMA RESTA NUMERO . CIERRA_P
    (108) expresion_alge1 -> RESTA NUMERO . SUMA NUMERO
    (109) expresion_alge1 -> RESTA NUMERO . RESTA NUMERO
    (110) expresion_alge1 -> RESTA NUMERO . MULTI NUMERO
    (111) expresion_alge1 -> RESTA NUMERO . DIVISION NUMERO

    CIERRA_P        shift and go to state 659
    SUMA            shift and go to state 180
    RESTA           shift and go to state 179
    MULTI           shift and go to state 181
    DIVISION        shift and go to state 182


state 557

    (174) Div -> DIV ABRE_P Var COMA Var CIERRA_P .

    PUNTOCOMA       reduce using rule 174 (Div -> DIV ABRE_P Var COMA Var CIERRA_P .)
    NUMERO          reduce using rule 174 (Div -> DIV ABRE_P Var COMA Var CIERRA_P .)
    RESTA           reduce using rule 174 (Div -> DIV ABRE_P Var COMA Var CIERRA_P .)
    ABRE_P          reduce using rule 174 (Div -> DIV ABRE_P Var COMA Var CIERRA_P .)
    SUM             reduce using rule 174 (Div -> DIV ABRE_P Var COMA Var CIERRA_P .)
    SUBSTR          reduce using rule 174 (Div -> DIV ABRE_P Var COMA Var CIERRA_P .)
    MULT            reduce using rule 174 (Div -> DIV ABRE_P Var COMA Var CIERRA_P .)
    DIV             reduce using rule 174 (Div -> DIV ABRE_P Var COMA Var CIERRA_P .)
    RANDOM          reduce using rule 174 (Div -> DIV ABRE_P Var COMA Var CIERRA_P .)
    IF              reduce using rule 174 (Div -> DIV ABRE_P Var COMA Var CIERRA_P .)
    IFELSE          reduce using rule 174 (Div -> DIV ABRE_P Var COMA Var CIERRA_P .)
    UNTIL           reduce using rule 174 (Div -> DIV ABRE_P Var COMA Var CIERRA_P .)
    WHILE           reduce using rule 174 (Div -> DIV ABRE_P Var COMA Var CIERRA_P .)
    PRINTLINE       reduce using rule 174 (Div -> DIV ABRE_P Var COMA Var CIERRA_P .)
    AND             reduce using rule 174 (Div -> DIV ABRE_P Var COMA Var CIERRA_P .)
    OR              reduce using rule 174 (Div -> DIV ABRE_P Var COMA Var CIERRA_P .)
    ADD             reduce using rule 174 (Div -> DIV ABRE_P Var COMA Var CIERRA_P .)
    PUT             reduce using rule 174 (Div -> DIV ABRE_P Var COMA Var CIERRA_P .)
    FIN             reduce using rule 174 (Div -> DIV ABRE_P Var COMA Var CIERRA_P .)


state 558

    (172) Div -> DIV ABRE_P Var COMA NUMERO CIERRA_P .

    PUNTOCOMA       reduce using rule 172 (Div -> DIV ABRE_P Var COMA NUMERO CIERRA_P .)
    NUMERO          reduce using rule 172 (Div -> DIV ABRE_P Var COMA NUMERO CIERRA_P .)
    RESTA           reduce using rule 172 (Div -> DIV ABRE_P Var COMA NUMERO CIERRA_P .)
    ABRE_P          reduce using rule 172 (Div -> DIV ABRE_P Var COMA NUMERO CIERRA_P .)
    SUM             reduce using rule 172 (Div -> DIV ABRE_P Var COMA NUMERO CIERRA_P .)
    SUBSTR          reduce using rule 172 (Div -> DIV ABRE_P Var COMA NUMERO CIERRA_P .)
    MULT            reduce using rule 172 (Div -> DIV ABRE_P Var COMA NUMERO CIERRA_P .)
    DIV             reduce using rule 172 (Div -> DIV ABRE_P Var COMA NUMERO CIERRA_P .)
    RANDOM          reduce using rule 172 (Div -> DIV ABRE_P Var COMA NUMERO CIERRA_P .)
    IF              reduce using rule 172 (Div -> DIV ABRE_P Var COMA NUMERO CIERRA_P .)
    IFELSE          reduce using rule 172 (Div -> DIV ABRE_P Var COMA NUMERO CIERRA_P .)
    UNTIL           reduce using rule 172 (Div -> DIV ABRE_P Var COMA NUMERO CIERRA_P .)
    WHILE           reduce using rule 172 (Div -> DIV ABRE_P Var COMA NUMERO CIERRA_P .)
    PRINTLINE       reduce using rule 172 (Div -> DIV ABRE_P Var COMA NUMERO CIERRA_P .)
    AND             reduce using rule 172 (Div -> DIV ABRE_P Var COMA NUMERO CIERRA_P .)
    OR              reduce using rule 172 (Div -> DIV ABRE_P Var COMA NUMERO CIERRA_P .)
    ADD             reduce using rule 172 (Div -> DIV ABRE_P Var COMA NUMERO CIERRA_P .)
    PUT             reduce using rule 172 (Div -> DIV ABRE_P Var COMA NUMERO CIERRA_P .)
    FIN             reduce using rule 172 (Div -> DIV ABRE_P Var COMA NUMERO CIERRA_P .)


state 559

    (173) Div -> DIV ABRE_P Var COMA RESTA NUMERO . CIERRA_P
    (108) expresion_alge1 -> RESTA NUMERO . SUMA NUMERO
    (109) expresion_alge1 -> RESTA NUMERO . RESTA NUMERO
    (110) expresion_alge1 -> RESTA NUMERO . MULTI NUMERO
    (111) expresion_alge1 -> RESTA NUMERO . DIVISION NUMERO

    CIERRA_P        shift and go to state 660
    SUMA            shift and go to state 180
    RESTA           shift and go to state 179
    MULTI           shift and go to state 181
    DIVISION        shift and go to state 182


state 560

    (178) Div -> DIV ABRE_P Var COMA expresion_alge1 CIERRA_P .

    PUNTOCOMA       reduce using rule 178 (Div -> DIV ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    NUMERO          reduce using rule 178 (Div -> DIV ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    RESTA           reduce using rule 178 (Div -> DIV ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    ABRE_P          reduce using rule 178 (Div -> DIV ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    SUM             reduce using rule 178 (Div -> DIV ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    SUBSTR          reduce using rule 178 (Div -> DIV ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    MULT            reduce using rule 178 (Div -> DIV ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    DIV             reduce using rule 178 (Div -> DIV ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    RANDOM          reduce using rule 178 (Div -> DIV ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    IF              reduce using rule 178 (Div -> DIV ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    IFELSE          reduce using rule 178 (Div -> DIV ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    UNTIL           reduce using rule 178 (Div -> DIV ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    WHILE           reduce using rule 178 (Div -> DIV ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    PRINTLINE       reduce using rule 178 (Div -> DIV ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    AND             reduce using rule 178 (Div -> DIV ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    OR              reduce using rule 178 (Div -> DIV ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    ADD             reduce using rule 178 (Div -> DIV ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    PUT             reduce using rule 178 (Div -> DIV ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    FIN             reduce using rule 178 (Div -> DIV ABRE_P Var COMA expresion_alge1 CIERRA_P .)


state 561

    (116) Sum -> SUM ABRE_P NUMERO COMA NUMERO CIERRA_P .

    PUNTOCOMA       reduce using rule 116 (Sum -> SUM ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    NUMERO          reduce using rule 116 (Sum -> SUM ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    RESTA           reduce using rule 116 (Sum -> SUM ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    ABRE_P          reduce using rule 116 (Sum -> SUM ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    SUM             reduce using rule 116 (Sum -> SUM ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    SUBSTR          reduce using rule 116 (Sum -> SUM ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    MULT            reduce using rule 116 (Sum -> SUM ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    DIV             reduce using rule 116 (Sum -> SUM ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    RANDOM          reduce using rule 116 (Sum -> SUM ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    IF              reduce using rule 116 (Sum -> SUM ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    IFELSE          reduce using rule 116 (Sum -> SUM ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    UNTIL           reduce using rule 116 (Sum -> SUM ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    WHILE           reduce using rule 116 (Sum -> SUM ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    PRINTLINE       reduce using rule 116 (Sum -> SUM ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    AND             reduce using rule 116 (Sum -> SUM ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    OR              reduce using rule 116 (Sum -> SUM ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    ADD             reduce using rule 116 (Sum -> SUM ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    PUT             reduce using rule 116 (Sum -> SUM ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    FIN             reduce using rule 116 (Sum -> SUM ABRE_P NUMERO COMA NUMERO CIERRA_P .)


state 562

    (118) Sum -> SUM ABRE_P NUMERO COMA RESTA NUMERO . CIERRA_P
    (108) expresion_alge1 -> RESTA NUMERO . SUMA NUMERO
    (109) expresion_alge1 -> RESTA NUMERO . RESTA NUMERO
    (110) expresion_alge1 -> RESTA NUMERO . MULTI NUMERO
    (111) expresion_alge1 -> RESTA NUMERO . DIVISION NUMERO

    CIERRA_P        shift and go to state 661
    SUMA            shift and go to state 180
    RESTA           shift and go to state 179
    MULTI           shift and go to state 181
    DIVISION        shift and go to state 182


state 563

    (119) Sum -> SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .

    PUNTOCOMA       reduce using rule 119 (Sum -> SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    NUMERO          reduce using rule 119 (Sum -> SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    RESTA           reduce using rule 119 (Sum -> SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    ABRE_P          reduce using rule 119 (Sum -> SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    SUM             reduce using rule 119 (Sum -> SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    SUBSTR          reduce using rule 119 (Sum -> SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    MULT            reduce using rule 119 (Sum -> SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    DIV             reduce using rule 119 (Sum -> SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    RANDOM          reduce using rule 119 (Sum -> SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    IF              reduce using rule 119 (Sum -> SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    IFELSE          reduce using rule 119 (Sum -> SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    UNTIL           reduce using rule 119 (Sum -> SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    WHILE           reduce using rule 119 (Sum -> SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    PRINTLINE       reduce using rule 119 (Sum -> SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    AND             reduce using rule 119 (Sum -> SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    OR              reduce using rule 119 (Sum -> SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    ADD             reduce using rule 119 (Sum -> SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    PUT             reduce using rule 119 (Sum -> SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    FIN             reduce using rule 119 (Sum -> SUM ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)


state 564

    (122) Sum -> SUM ABRE_P NUMERO COMA Var CIERRA_P .

    PUNTOCOMA       reduce using rule 122 (Sum -> SUM ABRE_P NUMERO COMA Var CIERRA_P .)
    NUMERO          reduce using rule 122 (Sum -> SUM ABRE_P NUMERO COMA Var CIERRA_P .)
    RESTA           reduce using rule 122 (Sum -> SUM ABRE_P NUMERO COMA Var CIERRA_P .)
    ABRE_P          reduce using rule 122 (Sum -> SUM ABRE_P NUMERO COMA Var CIERRA_P .)
    SUM             reduce using rule 122 (Sum -> SUM ABRE_P NUMERO COMA Var CIERRA_P .)
    SUBSTR          reduce using rule 122 (Sum -> SUM ABRE_P NUMERO COMA Var CIERRA_P .)
    MULT            reduce using rule 122 (Sum -> SUM ABRE_P NUMERO COMA Var CIERRA_P .)
    DIV             reduce using rule 122 (Sum -> SUM ABRE_P NUMERO COMA Var CIERRA_P .)
    RANDOM          reduce using rule 122 (Sum -> SUM ABRE_P NUMERO COMA Var CIERRA_P .)
    IF              reduce using rule 122 (Sum -> SUM ABRE_P NUMERO COMA Var CIERRA_P .)
    IFELSE          reduce using rule 122 (Sum -> SUM ABRE_P NUMERO COMA Var CIERRA_P .)
    UNTIL           reduce using rule 122 (Sum -> SUM ABRE_P NUMERO COMA Var CIERRA_P .)
    WHILE           reduce using rule 122 (Sum -> SUM ABRE_P NUMERO COMA Var CIERRA_P .)
    PRINTLINE       reduce using rule 122 (Sum -> SUM ABRE_P NUMERO COMA Var CIERRA_P .)
    AND             reduce using rule 122 (Sum -> SUM ABRE_P NUMERO COMA Var CIERRA_P .)
    OR              reduce using rule 122 (Sum -> SUM ABRE_P NUMERO COMA Var CIERRA_P .)
    ADD             reduce using rule 122 (Sum -> SUM ABRE_P NUMERO COMA Var CIERRA_P .)
    PUT             reduce using rule 122 (Sum -> SUM ABRE_P NUMERO COMA Var CIERRA_P .)
    FIN             reduce using rule 122 (Sum -> SUM ABRE_P NUMERO COMA Var CIERRA_P .)


state 565

    (131) Sum -> SUM ABRE_P RESTA NUMERO COMA RESTA . NUMERO CIERRA_P
    (108) expresion_alge1 -> RESTA . NUMERO SUMA NUMERO
    (109) expresion_alge1 -> RESTA . NUMERO RESTA NUMERO
    (110) expresion_alge1 -> RESTA . NUMERO MULTI NUMERO
    (111) expresion_alge1 -> RESTA . NUMERO DIVISION NUMERO

    NUMERO          shift and go to state 662


state 566

    (117) Sum -> SUM ABRE_P RESTA NUMERO COMA NUMERO . CIERRA_P
    (104) expresion_alge1 -> NUMERO . SUMA NUMERO
    (105) expresion_alge1 -> NUMERO . RESTA NUMERO
    (106) expresion_alge1 -> NUMERO . MULTI NUMERO
    (107) expresion_alge1 -> NUMERO . DIVISION NUMERO

    CIERRA_P        shift and go to state 663
    SUMA            shift and go to state 126
    RESTA           shift and go to state 127
    MULTI           shift and go to state 128
    DIVISION        shift and go to state 129


state 567

    (120) Sum -> SUM ABRE_P RESTA NUMERO COMA expresion_alge1 . CIERRA_P

    CIERRA_P        shift and go to state 664


state 568

    (123) Sum -> SUM ABRE_P RESTA NUMERO COMA Var . CIERRA_P

    CIERRA_P        shift and go to state 665


state 569

    (121) Sum -> SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .

    PUNTOCOMA       reduce using rule 121 (Sum -> SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    NUMERO          reduce using rule 121 (Sum -> SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    RESTA           reduce using rule 121 (Sum -> SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    ABRE_P          reduce using rule 121 (Sum -> SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    SUM             reduce using rule 121 (Sum -> SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    SUBSTR          reduce using rule 121 (Sum -> SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    MULT            reduce using rule 121 (Sum -> SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    DIV             reduce using rule 121 (Sum -> SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    RANDOM          reduce using rule 121 (Sum -> SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    IF              reduce using rule 121 (Sum -> SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    IFELSE          reduce using rule 121 (Sum -> SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    UNTIL           reduce using rule 121 (Sum -> SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    WHILE           reduce using rule 121 (Sum -> SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    PRINTLINE       reduce using rule 121 (Sum -> SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    AND             reduce using rule 121 (Sum -> SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    OR              reduce using rule 121 (Sum -> SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    ADD             reduce using rule 121 (Sum -> SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    PUT             reduce using rule 121 (Sum -> SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    FIN             reduce using rule 121 (Sum -> SUM ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)


state 570

    (127) Sum -> SUM ABRE_P expresion_alge1 COMA Var CIERRA_P .

    PUNTOCOMA       reduce using rule 127 (Sum -> SUM ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    NUMERO          reduce using rule 127 (Sum -> SUM ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    RESTA           reduce using rule 127 (Sum -> SUM ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    ABRE_P          reduce using rule 127 (Sum -> SUM ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    SUM             reduce using rule 127 (Sum -> SUM ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    SUBSTR          reduce using rule 127 (Sum -> SUM ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    MULT            reduce using rule 127 (Sum -> SUM ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    DIV             reduce using rule 127 (Sum -> SUM ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    RANDOM          reduce using rule 127 (Sum -> SUM ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    IF              reduce using rule 127 (Sum -> SUM ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    IFELSE          reduce using rule 127 (Sum -> SUM ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    UNTIL           reduce using rule 127 (Sum -> SUM ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    WHILE           reduce using rule 127 (Sum -> SUM ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    PRINTLINE       reduce using rule 127 (Sum -> SUM ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    AND             reduce using rule 127 (Sum -> SUM ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    OR              reduce using rule 127 (Sum -> SUM ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    ADD             reduce using rule 127 (Sum -> SUM ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    PUT             reduce using rule 127 (Sum -> SUM ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    FIN             reduce using rule 127 (Sum -> SUM ABRE_P expresion_alge1 COMA Var CIERRA_P .)


state 571

    (128) Sum -> SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .

    PUNTOCOMA       reduce using rule 128 (Sum -> SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    NUMERO          reduce using rule 128 (Sum -> SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    RESTA           reduce using rule 128 (Sum -> SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    ABRE_P          reduce using rule 128 (Sum -> SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    SUM             reduce using rule 128 (Sum -> SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    SUBSTR          reduce using rule 128 (Sum -> SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    MULT            reduce using rule 128 (Sum -> SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    DIV             reduce using rule 128 (Sum -> SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    RANDOM          reduce using rule 128 (Sum -> SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    IF              reduce using rule 128 (Sum -> SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    IFELSE          reduce using rule 128 (Sum -> SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    UNTIL           reduce using rule 128 (Sum -> SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    WHILE           reduce using rule 128 (Sum -> SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    PRINTLINE       reduce using rule 128 (Sum -> SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    AND             reduce using rule 128 (Sum -> SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    OR              reduce using rule 128 (Sum -> SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    ADD             reduce using rule 128 (Sum -> SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    PUT             reduce using rule 128 (Sum -> SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    FIN             reduce using rule 128 (Sum -> SUM ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)


state 572

    (129) Sum -> SUM ABRE_P expresion_alge1 COMA RESTA NUMERO . CIERRA_P
    (108) expresion_alge1 -> RESTA NUMERO . SUMA NUMERO
    (109) expresion_alge1 -> RESTA NUMERO . RESTA NUMERO
    (110) expresion_alge1 -> RESTA NUMERO . MULTI NUMERO
    (111) expresion_alge1 -> RESTA NUMERO . DIVISION NUMERO

    CIERRA_P        shift and go to state 666
    SUMA            shift and go to state 180
    RESTA           shift and go to state 179
    MULTI           shift and go to state 181
    DIVISION        shift and go to state 182


state 573

    (126) Sum -> SUM ABRE_P Var COMA Var CIERRA_P .

    PUNTOCOMA       reduce using rule 126 (Sum -> SUM ABRE_P Var COMA Var CIERRA_P .)
    NUMERO          reduce using rule 126 (Sum -> SUM ABRE_P Var COMA Var CIERRA_P .)
    RESTA           reduce using rule 126 (Sum -> SUM ABRE_P Var COMA Var CIERRA_P .)
    ABRE_P          reduce using rule 126 (Sum -> SUM ABRE_P Var COMA Var CIERRA_P .)
    SUM             reduce using rule 126 (Sum -> SUM ABRE_P Var COMA Var CIERRA_P .)
    SUBSTR          reduce using rule 126 (Sum -> SUM ABRE_P Var COMA Var CIERRA_P .)
    MULT            reduce using rule 126 (Sum -> SUM ABRE_P Var COMA Var CIERRA_P .)
    DIV             reduce using rule 126 (Sum -> SUM ABRE_P Var COMA Var CIERRA_P .)
    RANDOM          reduce using rule 126 (Sum -> SUM ABRE_P Var COMA Var CIERRA_P .)
    IF              reduce using rule 126 (Sum -> SUM ABRE_P Var COMA Var CIERRA_P .)
    IFELSE          reduce using rule 126 (Sum -> SUM ABRE_P Var COMA Var CIERRA_P .)
    UNTIL           reduce using rule 126 (Sum -> SUM ABRE_P Var COMA Var CIERRA_P .)
    WHILE           reduce using rule 126 (Sum -> SUM ABRE_P Var COMA Var CIERRA_P .)
    PRINTLINE       reduce using rule 126 (Sum -> SUM ABRE_P Var COMA Var CIERRA_P .)
    AND             reduce using rule 126 (Sum -> SUM ABRE_P Var COMA Var CIERRA_P .)
    OR              reduce using rule 126 (Sum -> SUM ABRE_P Var COMA Var CIERRA_P .)
    ADD             reduce using rule 126 (Sum -> SUM ABRE_P Var COMA Var CIERRA_P .)
    PUT             reduce using rule 126 (Sum -> SUM ABRE_P Var COMA Var CIERRA_P .)
    FIN             reduce using rule 126 (Sum -> SUM ABRE_P Var COMA Var CIERRA_P .)


state 574

    (124) Sum -> SUM ABRE_P Var COMA NUMERO CIERRA_P .

    PUNTOCOMA       reduce using rule 124 (Sum -> SUM ABRE_P Var COMA NUMERO CIERRA_P .)
    NUMERO          reduce using rule 124 (Sum -> SUM ABRE_P Var COMA NUMERO CIERRA_P .)
    RESTA           reduce using rule 124 (Sum -> SUM ABRE_P Var COMA NUMERO CIERRA_P .)
    ABRE_P          reduce using rule 124 (Sum -> SUM ABRE_P Var COMA NUMERO CIERRA_P .)
    SUM             reduce using rule 124 (Sum -> SUM ABRE_P Var COMA NUMERO CIERRA_P .)
    SUBSTR          reduce using rule 124 (Sum -> SUM ABRE_P Var COMA NUMERO CIERRA_P .)
    MULT            reduce using rule 124 (Sum -> SUM ABRE_P Var COMA NUMERO CIERRA_P .)
    DIV             reduce using rule 124 (Sum -> SUM ABRE_P Var COMA NUMERO CIERRA_P .)
    RANDOM          reduce using rule 124 (Sum -> SUM ABRE_P Var COMA NUMERO CIERRA_P .)
    IF              reduce using rule 124 (Sum -> SUM ABRE_P Var COMA NUMERO CIERRA_P .)
    IFELSE          reduce using rule 124 (Sum -> SUM ABRE_P Var COMA NUMERO CIERRA_P .)
    UNTIL           reduce using rule 124 (Sum -> SUM ABRE_P Var COMA NUMERO CIERRA_P .)
    WHILE           reduce using rule 124 (Sum -> SUM ABRE_P Var COMA NUMERO CIERRA_P .)
    PRINTLINE       reduce using rule 124 (Sum -> SUM ABRE_P Var COMA NUMERO CIERRA_P .)
    AND             reduce using rule 124 (Sum -> SUM ABRE_P Var COMA NUMERO CIERRA_P .)
    OR              reduce using rule 124 (Sum -> SUM ABRE_P Var COMA NUMERO CIERRA_P .)
    ADD             reduce using rule 124 (Sum -> SUM ABRE_P Var COMA NUMERO CIERRA_P .)
    PUT             reduce using rule 124 (Sum -> SUM ABRE_P Var COMA NUMERO CIERRA_P .)
    FIN             reduce using rule 124 (Sum -> SUM ABRE_P Var COMA NUMERO CIERRA_P .)


state 575

    (125) Sum -> SUM ABRE_P Var COMA RESTA NUMERO . CIERRA_P
    (108) expresion_alge1 -> RESTA NUMERO . SUMA NUMERO
    (109) expresion_alge1 -> RESTA NUMERO . RESTA NUMERO
    (110) expresion_alge1 -> RESTA NUMERO . MULTI NUMERO
    (111) expresion_alge1 -> RESTA NUMERO . DIVISION NUMERO

    CIERRA_P        shift and go to state 667
    SUMA            shift and go to state 180
    RESTA           shift and go to state 179
    MULTI           shift and go to state 181
    DIVISION        shift and go to state 182


state 576

    (130) Sum -> SUM ABRE_P Var COMA expresion_alge1 CIERRA_P .

    PUNTOCOMA       reduce using rule 130 (Sum -> SUM ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    NUMERO          reduce using rule 130 (Sum -> SUM ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    RESTA           reduce using rule 130 (Sum -> SUM ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    ABRE_P          reduce using rule 130 (Sum -> SUM ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    SUM             reduce using rule 130 (Sum -> SUM ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    SUBSTR          reduce using rule 130 (Sum -> SUM ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    MULT            reduce using rule 130 (Sum -> SUM ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    DIV             reduce using rule 130 (Sum -> SUM ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    RANDOM          reduce using rule 130 (Sum -> SUM ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    IF              reduce using rule 130 (Sum -> SUM ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    IFELSE          reduce using rule 130 (Sum -> SUM ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    UNTIL           reduce using rule 130 (Sum -> SUM ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    WHILE           reduce using rule 130 (Sum -> SUM ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    PRINTLINE       reduce using rule 130 (Sum -> SUM ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    AND             reduce using rule 130 (Sum -> SUM ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    OR              reduce using rule 130 (Sum -> SUM ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    ADD             reduce using rule 130 (Sum -> SUM ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    PUT             reduce using rule 130 (Sum -> SUM ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    FIN             reduce using rule 130 (Sum -> SUM ABRE_P Var COMA expresion_alge1 CIERRA_P .)


state 577

    (132) Substr -> SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P .

    PUNTOCOMA       reduce using rule 132 (Substr -> SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    NUMERO          reduce using rule 132 (Substr -> SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    RESTA           reduce using rule 132 (Substr -> SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    ABRE_P          reduce using rule 132 (Substr -> SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    SUM             reduce using rule 132 (Substr -> SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    SUBSTR          reduce using rule 132 (Substr -> SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    MULT            reduce using rule 132 (Substr -> SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    DIV             reduce using rule 132 (Substr -> SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    RANDOM          reduce using rule 132 (Substr -> SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    IF              reduce using rule 132 (Substr -> SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    IFELSE          reduce using rule 132 (Substr -> SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    UNTIL           reduce using rule 132 (Substr -> SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    WHILE           reduce using rule 132 (Substr -> SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    PRINTLINE       reduce using rule 132 (Substr -> SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    AND             reduce using rule 132 (Substr -> SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    OR              reduce using rule 132 (Substr -> SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    ADD             reduce using rule 132 (Substr -> SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    PUT             reduce using rule 132 (Substr -> SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    FIN             reduce using rule 132 (Substr -> SUBSTR ABRE_P NUMERO COMA NUMERO CIERRA_P .)


state 578

    (134) Substr -> SUBSTR ABRE_P NUMERO COMA RESTA NUMERO . CIERRA_P
    (108) expresion_alge1 -> RESTA NUMERO . SUMA NUMERO
    (109) expresion_alge1 -> RESTA NUMERO . RESTA NUMERO
    (110) expresion_alge1 -> RESTA NUMERO . MULTI NUMERO
    (111) expresion_alge1 -> RESTA NUMERO . DIVISION NUMERO

    CIERRA_P        shift and go to state 668
    SUMA            shift and go to state 180
    RESTA           shift and go to state 179
    MULTI           shift and go to state 181
    DIVISION        shift and go to state 182


state 579

    (135) Substr -> SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .

    PUNTOCOMA       reduce using rule 135 (Substr -> SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    NUMERO          reduce using rule 135 (Substr -> SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    RESTA           reduce using rule 135 (Substr -> SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    ABRE_P          reduce using rule 135 (Substr -> SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    SUM             reduce using rule 135 (Substr -> SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    SUBSTR          reduce using rule 135 (Substr -> SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    MULT            reduce using rule 135 (Substr -> SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    DIV             reduce using rule 135 (Substr -> SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    RANDOM          reduce using rule 135 (Substr -> SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    IF              reduce using rule 135 (Substr -> SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    IFELSE          reduce using rule 135 (Substr -> SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    UNTIL           reduce using rule 135 (Substr -> SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    WHILE           reduce using rule 135 (Substr -> SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    PRINTLINE       reduce using rule 135 (Substr -> SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    AND             reduce using rule 135 (Substr -> SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    OR              reduce using rule 135 (Substr -> SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    ADD             reduce using rule 135 (Substr -> SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    PUT             reduce using rule 135 (Substr -> SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    FIN             reduce using rule 135 (Substr -> SUBSTR ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)


state 580

    (138) Substr -> SUBSTR ABRE_P NUMERO COMA Var CIERRA_P .

    PUNTOCOMA       reduce using rule 138 (Substr -> SUBSTR ABRE_P NUMERO COMA Var CIERRA_P .)
    NUMERO          reduce using rule 138 (Substr -> SUBSTR ABRE_P NUMERO COMA Var CIERRA_P .)
    RESTA           reduce using rule 138 (Substr -> SUBSTR ABRE_P NUMERO COMA Var CIERRA_P .)
    ABRE_P          reduce using rule 138 (Substr -> SUBSTR ABRE_P NUMERO COMA Var CIERRA_P .)
    SUM             reduce using rule 138 (Substr -> SUBSTR ABRE_P NUMERO COMA Var CIERRA_P .)
    SUBSTR          reduce using rule 138 (Substr -> SUBSTR ABRE_P NUMERO COMA Var CIERRA_P .)
    MULT            reduce using rule 138 (Substr -> SUBSTR ABRE_P NUMERO COMA Var CIERRA_P .)
    DIV             reduce using rule 138 (Substr -> SUBSTR ABRE_P NUMERO COMA Var CIERRA_P .)
    RANDOM          reduce using rule 138 (Substr -> SUBSTR ABRE_P NUMERO COMA Var CIERRA_P .)
    IF              reduce using rule 138 (Substr -> SUBSTR ABRE_P NUMERO COMA Var CIERRA_P .)
    IFELSE          reduce using rule 138 (Substr -> SUBSTR ABRE_P NUMERO COMA Var CIERRA_P .)
    UNTIL           reduce using rule 138 (Substr -> SUBSTR ABRE_P NUMERO COMA Var CIERRA_P .)
    WHILE           reduce using rule 138 (Substr -> SUBSTR ABRE_P NUMERO COMA Var CIERRA_P .)
    PRINTLINE       reduce using rule 138 (Substr -> SUBSTR ABRE_P NUMERO COMA Var CIERRA_P .)
    AND             reduce using rule 138 (Substr -> SUBSTR ABRE_P NUMERO COMA Var CIERRA_P .)
    OR              reduce using rule 138 (Substr -> SUBSTR ABRE_P NUMERO COMA Var CIERRA_P .)
    ADD             reduce using rule 138 (Substr -> SUBSTR ABRE_P NUMERO COMA Var CIERRA_P .)
    PUT             reduce using rule 138 (Substr -> SUBSTR ABRE_P NUMERO COMA Var CIERRA_P .)
    FIN             reduce using rule 138 (Substr -> SUBSTR ABRE_P NUMERO COMA Var CIERRA_P .)


state 581

    (147) Substr -> SUBSTR ABRE_P RESTA NUMERO COMA RESTA . NUMERO CIERRA_P
    (108) expresion_alge1 -> RESTA . NUMERO SUMA NUMERO
    (109) expresion_alge1 -> RESTA . NUMERO RESTA NUMERO
    (110) expresion_alge1 -> RESTA . NUMERO MULTI NUMERO
    (111) expresion_alge1 -> RESTA . NUMERO DIVISION NUMERO

    NUMERO          shift and go to state 669


state 582

    (133) Substr -> SUBSTR ABRE_P RESTA NUMERO COMA NUMERO . CIERRA_P
    (104) expresion_alge1 -> NUMERO . SUMA NUMERO
    (105) expresion_alge1 -> NUMERO . RESTA NUMERO
    (106) expresion_alge1 -> NUMERO . MULTI NUMERO
    (107) expresion_alge1 -> NUMERO . DIVISION NUMERO

    CIERRA_P        shift and go to state 670
    SUMA            shift and go to state 126
    RESTA           shift and go to state 127
    MULTI           shift and go to state 128
    DIVISION        shift and go to state 129


state 583

    (136) Substr -> SUBSTR ABRE_P RESTA NUMERO COMA expresion_alge1 . CIERRA_P

    CIERRA_P        shift and go to state 671


state 584

    (139) Substr -> SUBSTR ABRE_P RESTA NUMERO COMA Var . CIERRA_P

    CIERRA_P        shift and go to state 672


state 585

    (137) Substr -> SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .

    PUNTOCOMA       reduce using rule 137 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    NUMERO          reduce using rule 137 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    RESTA           reduce using rule 137 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    ABRE_P          reduce using rule 137 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    SUM             reduce using rule 137 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    SUBSTR          reduce using rule 137 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    MULT            reduce using rule 137 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    DIV             reduce using rule 137 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    RANDOM          reduce using rule 137 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    IF              reduce using rule 137 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    IFELSE          reduce using rule 137 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    UNTIL           reduce using rule 137 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    WHILE           reduce using rule 137 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    PRINTLINE       reduce using rule 137 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    AND             reduce using rule 137 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    OR              reduce using rule 137 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    ADD             reduce using rule 137 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    PUT             reduce using rule 137 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    FIN             reduce using rule 137 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)


state 586

    (143) Substr -> SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P .

    PUNTOCOMA       reduce using rule 143 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    NUMERO          reduce using rule 143 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    RESTA           reduce using rule 143 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    ABRE_P          reduce using rule 143 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    SUM             reduce using rule 143 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    SUBSTR          reduce using rule 143 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    MULT            reduce using rule 143 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    DIV             reduce using rule 143 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    RANDOM          reduce using rule 143 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    IF              reduce using rule 143 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    IFELSE          reduce using rule 143 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    UNTIL           reduce using rule 143 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    WHILE           reduce using rule 143 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    PRINTLINE       reduce using rule 143 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    AND             reduce using rule 143 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    OR              reduce using rule 143 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    ADD             reduce using rule 143 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    PUT             reduce using rule 143 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    FIN             reduce using rule 143 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA Var CIERRA_P .)


state 587

    (144) Substr -> SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .

    PUNTOCOMA       reduce using rule 144 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    NUMERO          reduce using rule 144 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    RESTA           reduce using rule 144 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    ABRE_P          reduce using rule 144 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    SUM             reduce using rule 144 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    SUBSTR          reduce using rule 144 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    MULT            reduce using rule 144 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    DIV             reduce using rule 144 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    RANDOM          reduce using rule 144 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    IF              reduce using rule 144 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    IFELSE          reduce using rule 144 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    UNTIL           reduce using rule 144 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    WHILE           reduce using rule 144 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    PRINTLINE       reduce using rule 144 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    AND             reduce using rule 144 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    OR              reduce using rule 144 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    ADD             reduce using rule 144 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    PUT             reduce using rule 144 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    FIN             reduce using rule 144 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)


state 588

    (145) Substr -> SUBSTR ABRE_P expresion_alge1 COMA RESTA NUMERO . CIERRA_P
    (108) expresion_alge1 -> RESTA NUMERO . SUMA NUMERO
    (109) expresion_alge1 -> RESTA NUMERO . RESTA NUMERO
    (110) expresion_alge1 -> RESTA NUMERO . MULTI NUMERO
    (111) expresion_alge1 -> RESTA NUMERO . DIVISION NUMERO

    CIERRA_P        shift and go to state 673
    SUMA            shift and go to state 180
    RESTA           shift and go to state 179
    MULTI           shift and go to state 181
    DIVISION        shift and go to state 182


state 589

    (142) Substr -> SUBSTR ABRE_P Var COMA Var CIERRA_P .

    PUNTOCOMA       reduce using rule 142 (Substr -> SUBSTR ABRE_P Var COMA Var CIERRA_P .)
    NUMERO          reduce using rule 142 (Substr -> SUBSTR ABRE_P Var COMA Var CIERRA_P .)
    RESTA           reduce using rule 142 (Substr -> SUBSTR ABRE_P Var COMA Var CIERRA_P .)
    ABRE_P          reduce using rule 142 (Substr -> SUBSTR ABRE_P Var COMA Var CIERRA_P .)
    SUM             reduce using rule 142 (Substr -> SUBSTR ABRE_P Var COMA Var CIERRA_P .)
    SUBSTR          reduce using rule 142 (Substr -> SUBSTR ABRE_P Var COMA Var CIERRA_P .)
    MULT            reduce using rule 142 (Substr -> SUBSTR ABRE_P Var COMA Var CIERRA_P .)
    DIV             reduce using rule 142 (Substr -> SUBSTR ABRE_P Var COMA Var CIERRA_P .)
    RANDOM          reduce using rule 142 (Substr -> SUBSTR ABRE_P Var COMA Var CIERRA_P .)
    IF              reduce using rule 142 (Substr -> SUBSTR ABRE_P Var COMA Var CIERRA_P .)
    IFELSE          reduce using rule 142 (Substr -> SUBSTR ABRE_P Var COMA Var CIERRA_P .)
    UNTIL           reduce using rule 142 (Substr -> SUBSTR ABRE_P Var COMA Var CIERRA_P .)
    WHILE           reduce using rule 142 (Substr -> SUBSTR ABRE_P Var COMA Var CIERRA_P .)
    PRINTLINE       reduce using rule 142 (Substr -> SUBSTR ABRE_P Var COMA Var CIERRA_P .)
    AND             reduce using rule 142 (Substr -> SUBSTR ABRE_P Var COMA Var CIERRA_P .)
    OR              reduce using rule 142 (Substr -> SUBSTR ABRE_P Var COMA Var CIERRA_P .)
    ADD             reduce using rule 142 (Substr -> SUBSTR ABRE_P Var COMA Var CIERRA_P .)
    PUT             reduce using rule 142 (Substr -> SUBSTR ABRE_P Var COMA Var CIERRA_P .)
    FIN             reduce using rule 142 (Substr -> SUBSTR ABRE_P Var COMA Var CIERRA_P .)


state 590

    (140) Substr -> SUBSTR ABRE_P Var COMA NUMERO CIERRA_P .

    PUNTOCOMA       reduce using rule 140 (Substr -> SUBSTR ABRE_P Var COMA NUMERO CIERRA_P .)
    NUMERO          reduce using rule 140 (Substr -> SUBSTR ABRE_P Var COMA NUMERO CIERRA_P .)
    RESTA           reduce using rule 140 (Substr -> SUBSTR ABRE_P Var COMA NUMERO CIERRA_P .)
    ABRE_P          reduce using rule 140 (Substr -> SUBSTR ABRE_P Var COMA NUMERO CIERRA_P .)
    SUM             reduce using rule 140 (Substr -> SUBSTR ABRE_P Var COMA NUMERO CIERRA_P .)
    SUBSTR          reduce using rule 140 (Substr -> SUBSTR ABRE_P Var COMA NUMERO CIERRA_P .)
    MULT            reduce using rule 140 (Substr -> SUBSTR ABRE_P Var COMA NUMERO CIERRA_P .)
    DIV             reduce using rule 140 (Substr -> SUBSTR ABRE_P Var COMA NUMERO CIERRA_P .)
    RANDOM          reduce using rule 140 (Substr -> SUBSTR ABRE_P Var COMA NUMERO CIERRA_P .)
    IF              reduce using rule 140 (Substr -> SUBSTR ABRE_P Var COMA NUMERO CIERRA_P .)
    IFELSE          reduce using rule 140 (Substr -> SUBSTR ABRE_P Var COMA NUMERO CIERRA_P .)
    UNTIL           reduce using rule 140 (Substr -> SUBSTR ABRE_P Var COMA NUMERO CIERRA_P .)
    WHILE           reduce using rule 140 (Substr -> SUBSTR ABRE_P Var COMA NUMERO CIERRA_P .)
    PRINTLINE       reduce using rule 140 (Substr -> SUBSTR ABRE_P Var COMA NUMERO CIERRA_P .)
    AND             reduce using rule 140 (Substr -> SUBSTR ABRE_P Var COMA NUMERO CIERRA_P .)
    OR              reduce using rule 140 (Substr -> SUBSTR ABRE_P Var COMA NUMERO CIERRA_P .)
    ADD             reduce using rule 140 (Substr -> SUBSTR ABRE_P Var COMA NUMERO CIERRA_P .)
    PUT             reduce using rule 140 (Substr -> SUBSTR ABRE_P Var COMA NUMERO CIERRA_P .)
    FIN             reduce using rule 140 (Substr -> SUBSTR ABRE_P Var COMA NUMERO CIERRA_P .)


state 591

    (141) Substr -> SUBSTR ABRE_P Var COMA RESTA NUMERO . CIERRA_P
    (108) expresion_alge1 -> RESTA NUMERO . SUMA NUMERO
    (109) expresion_alge1 -> RESTA NUMERO . RESTA NUMERO
    (110) expresion_alge1 -> RESTA NUMERO . MULTI NUMERO
    (111) expresion_alge1 -> RESTA NUMERO . DIVISION NUMERO

    CIERRA_P        shift and go to state 674
    SUMA            shift and go to state 180
    RESTA           shift and go to state 179
    MULTI           shift and go to state 181
    DIVISION        shift and go to state 182


state 592

    (146) Substr -> SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P .

    PUNTOCOMA       reduce using rule 146 (Substr -> SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    NUMERO          reduce using rule 146 (Substr -> SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    RESTA           reduce using rule 146 (Substr -> SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    ABRE_P          reduce using rule 146 (Substr -> SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    SUM             reduce using rule 146 (Substr -> SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    SUBSTR          reduce using rule 146 (Substr -> SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    MULT            reduce using rule 146 (Substr -> SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    DIV             reduce using rule 146 (Substr -> SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    RANDOM          reduce using rule 146 (Substr -> SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    IF              reduce using rule 146 (Substr -> SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    IFELSE          reduce using rule 146 (Substr -> SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    UNTIL           reduce using rule 146 (Substr -> SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    WHILE           reduce using rule 146 (Substr -> SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    PRINTLINE       reduce using rule 146 (Substr -> SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    AND             reduce using rule 146 (Substr -> SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    OR              reduce using rule 146 (Substr -> SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    ADD             reduce using rule 146 (Substr -> SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    PUT             reduce using rule 146 (Substr -> SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    FIN             reduce using rule 146 (Substr -> SUBSTR ABRE_P Var COMA expresion_alge1 CIERRA_P .)


state 593

    (264) If -> IF ABRE_P condicion CIERRA_P BRACKET1 funcion . BRACKET2

    BRACKET2        shift and go to state 675


state 594

    (181) Equal -> EQUAL ABRE_P NUMERO COMA . NUMERO CIERRA_P
    (183) Equal -> EQUAL ABRE_P NUMERO COMA . RESTA NUMERO CIERRA_P
    (187) Equal -> EQUAL ABRE_P NUMERO COMA . Var CIERRA_P
    (201) Equal -> EQUAL ABRE_P NUMERO COMA . expresion_alge1 CIERRA_P
    (203) Equal -> EQUAL ABRE_P NUMERO COMA . expresion_alge2 CIERRA_P
    (180) Var -> . VAR
    (104) expresion_alge1 -> . NUMERO SUMA NUMERO
    (105) expresion_alge1 -> . NUMERO RESTA NUMERO
    (106) expresion_alge1 -> . NUMERO MULTI NUMERO
    (107) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (108) expresion_alge1 -> . RESTA NUMERO SUMA NUMERO
    (109) expresion_alge1 -> . RESTA NUMERO RESTA NUMERO
    (110) expresion_alge1 -> . RESTA NUMERO MULTI NUMERO
    (111) expresion_alge1 -> . RESTA NUMERO DIVISION NUMERO
    (112) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (113) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (114) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (115) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P

    NUMERO          shift and go to state 676
    RESTA           shift and go to state 677
    VAR             shift and go to state 34
    ABRE_P          shift and go to state 63

    Var                            shift and go to state 678
    expresion_alge1                shift and go to state 679
    expresion_alge2                shift and go to state 680

state 595

    (182) Equal -> EQUAL ABRE_P RESTA NUMERO . COMA NUMERO CIERRA_P
    (188) Equal -> EQUAL ABRE_P RESTA NUMERO . COMA Var CIERRA_P
    (202) Equal -> EQUAL ABRE_P RESTA NUMERO . COMA expresion_alge1 CIERRA_P
    (204) Equal -> EQUAL ABRE_P RESTA NUMERO . COMA expresion_alge2 CIERRA_P
    (205) Equal -> EQUAL ABRE_P RESTA NUMERO . COMA RESTA NUMERO CIERRA_P
    (108) expresion_alge1 -> RESTA NUMERO . SUMA NUMERO
    (109) expresion_alge1 -> RESTA NUMERO . RESTA NUMERO
    (110) expresion_alge1 -> RESTA NUMERO . MULTI NUMERO
    (111) expresion_alge1 -> RESTA NUMERO . DIVISION NUMERO

    COMA            shift and go to state 681
    SUMA            shift and go to state 180
    RESTA           shift and go to state 179
    MULTI           shift and go to state 181
    DIVISION        shift and go to state 182


state 596

    (184) Equal -> EQUAL ABRE_P expresion_alge1 COMA . expresion_alge1 CIERRA_P
    (190) Equal -> EQUAL ABRE_P expresion_alge1 COMA . Var CIERRA_P
    (195) Equal -> EQUAL ABRE_P expresion_alge1 COMA . expresion_alge2 CIERRA_P
    (197) Equal -> EQUAL ABRE_P expresion_alge1 COMA . NUMERO CIERRA_P
    (198) Equal -> EQUAL ABRE_P expresion_alge1 COMA . RESTA NUMERO CIERRA_P
    (104) expresion_alge1 -> . NUMERO SUMA NUMERO
    (105) expresion_alge1 -> . NUMERO RESTA NUMERO
    (106) expresion_alge1 -> . NUMERO MULTI NUMERO
    (107) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (108) expresion_alge1 -> . RESTA NUMERO SUMA NUMERO
    (109) expresion_alge1 -> . RESTA NUMERO RESTA NUMERO
    (110) expresion_alge1 -> . RESTA NUMERO MULTI NUMERO
    (111) expresion_alge1 -> . RESTA NUMERO DIVISION NUMERO
    (180) Var -> . VAR
    (112) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (113) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (114) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (115) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P

    NUMERO          shift and go to state 685
    RESTA           shift and go to state 686
    VAR             shift and go to state 34
    ABRE_P          shift and go to state 63

    expresion_alge1                shift and go to state 682
    Var                            shift and go to state 683
    expresion_alge2                shift and go to state 684

state 597

    (185) Equal -> EQUAL ABRE_P expresion_alge2 COMA . expresion_alge2 CIERRA_P
    (189) Equal -> EQUAL ABRE_P expresion_alge2 COMA . Var CIERRA_P
    (196) Equal -> EQUAL ABRE_P expresion_alge2 COMA . expresion_alge1 CIERRA_P
    (199) Equal -> EQUAL ABRE_P expresion_alge2 COMA . NUMERO CIERRA_P
    (200) Equal -> EQUAL ABRE_P expresion_alge2 COMA . RESTA NUMERO CIERRA_P
    (112) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (113) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (114) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (115) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (180) Var -> . VAR
    (104) expresion_alge1 -> . NUMERO SUMA NUMERO
    (105) expresion_alge1 -> . NUMERO RESTA NUMERO
    (106) expresion_alge1 -> . NUMERO MULTI NUMERO
    (107) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (108) expresion_alge1 -> . RESTA NUMERO SUMA NUMERO
    (109) expresion_alge1 -> . RESTA NUMERO RESTA NUMERO
    (110) expresion_alge1 -> . RESTA NUMERO MULTI NUMERO
    (111) expresion_alge1 -> . RESTA NUMERO DIVISION NUMERO

    NUMERO          shift and go to state 690
    RESTA           shift and go to state 691
    ABRE_P          shift and go to state 63
    VAR             shift and go to state 34

    expresion_alge2                shift and go to state 687
    Var                            shift and go to state 688
    expresion_alge1                shift and go to state 689

state 598

    (186) Equal -> EQUAL ABRE_P Var COMA . Var CIERRA_P
    (191) Equal -> EQUAL ABRE_P Var COMA . NUMERO CIERRA_P
    (192) Equal -> EQUAL ABRE_P Var COMA . RESTA NUMERO CIERRA_P
    (193) Equal -> EQUAL ABRE_P Var COMA . expresion_alge1 CIERRA_P
    (194) Equal -> EQUAL ABRE_P Var COMA . expresion_alge2 CIERRA_P
    (180) Var -> . VAR
    (104) expresion_alge1 -> . NUMERO SUMA NUMERO
    (105) expresion_alge1 -> . NUMERO RESTA NUMERO
    (106) expresion_alge1 -> . NUMERO MULTI NUMERO
    (107) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (108) expresion_alge1 -> . RESTA NUMERO SUMA NUMERO
    (109) expresion_alge1 -> . RESTA NUMERO RESTA NUMERO
    (110) expresion_alge1 -> . RESTA NUMERO MULTI NUMERO
    (111) expresion_alge1 -> . RESTA NUMERO DIVISION NUMERO
    (112) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (113) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (114) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (115) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P

    NUMERO          shift and go to state 693
    RESTA           shift and go to state 694
    VAR             shift and go to state 34
    ABRE_P          shift and go to state 63

    Var                            shift and go to state 692
    expresion_alge1                shift and go to state 695
    expresion_alge2                shift and go to state 696

state 599

    (206) Greater -> GREATER ABRE_P NUMERO COMA . NUMERO CIERRA_P
    (208) Greater -> GREATER ABRE_P NUMERO COMA . RESTA NUMERO CIERRA_P
    (212) Greater -> GREATER ABRE_P NUMERO COMA . Var CIERRA_P
    (226) Greater -> GREATER ABRE_P NUMERO COMA . expresion_alge1 CIERRA_P
    (228) Greater -> GREATER ABRE_P NUMERO COMA . expresion_alge2 CIERRA_P
    (180) Var -> . VAR
    (104) expresion_alge1 -> . NUMERO SUMA NUMERO
    (105) expresion_alge1 -> . NUMERO RESTA NUMERO
    (106) expresion_alge1 -> . NUMERO MULTI NUMERO
    (107) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (108) expresion_alge1 -> . RESTA NUMERO SUMA NUMERO
    (109) expresion_alge1 -> . RESTA NUMERO RESTA NUMERO
    (110) expresion_alge1 -> . RESTA NUMERO MULTI NUMERO
    (111) expresion_alge1 -> . RESTA NUMERO DIVISION NUMERO
    (112) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (113) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (114) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (115) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P

    NUMERO          shift and go to state 697
    RESTA           shift and go to state 698
    VAR             shift and go to state 34
    ABRE_P          shift and go to state 63

    Var                            shift and go to state 699
    expresion_alge1                shift and go to state 700
    expresion_alge2                shift and go to state 701

state 600

    (207) Greater -> GREATER ABRE_P RESTA NUMERO . COMA NUMERO CIERRA_P
    (213) Greater -> GREATER ABRE_P RESTA NUMERO . COMA Var CIERRA_P
    (227) Greater -> GREATER ABRE_P RESTA NUMERO . COMA expresion_alge1 CIERRA_P
    (229) Greater -> GREATER ABRE_P RESTA NUMERO . COMA expresion_alge2 CIERRA_P
    (230) Greater -> GREATER ABRE_P RESTA NUMERO . COMA RESTA NUMERO CIERRA_P
    (108) expresion_alge1 -> RESTA NUMERO . SUMA NUMERO
    (109) expresion_alge1 -> RESTA NUMERO . RESTA NUMERO
    (110) expresion_alge1 -> RESTA NUMERO . MULTI NUMERO
    (111) expresion_alge1 -> RESTA NUMERO . DIVISION NUMERO

    COMA            shift and go to state 702
    SUMA            shift and go to state 180
    RESTA           shift and go to state 179
    MULTI           shift and go to state 181
    DIVISION        shift and go to state 182


state 601

    (209) Greater -> GREATER ABRE_P expresion_alge1 COMA . expresion_alge1 CIERRA_P
    (215) Greater -> GREATER ABRE_P expresion_alge1 COMA . Var CIERRA_P
    (220) Greater -> GREATER ABRE_P expresion_alge1 COMA . expresion_alge2 CIERRA_P
    (222) Greater -> GREATER ABRE_P expresion_alge1 COMA . NUMERO CIERRA_P
    (223) Greater -> GREATER ABRE_P expresion_alge1 COMA . RESTA NUMERO CIERRA_P
    (104) expresion_alge1 -> . NUMERO SUMA NUMERO
    (105) expresion_alge1 -> . NUMERO RESTA NUMERO
    (106) expresion_alge1 -> . NUMERO MULTI NUMERO
    (107) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (108) expresion_alge1 -> . RESTA NUMERO SUMA NUMERO
    (109) expresion_alge1 -> . RESTA NUMERO RESTA NUMERO
    (110) expresion_alge1 -> . RESTA NUMERO MULTI NUMERO
    (111) expresion_alge1 -> . RESTA NUMERO DIVISION NUMERO
    (180) Var -> . VAR
    (112) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (113) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (114) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (115) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P

    NUMERO          shift and go to state 706
    RESTA           shift and go to state 707
    VAR             shift and go to state 34
    ABRE_P          shift and go to state 63

    expresion_alge1                shift and go to state 703
    Var                            shift and go to state 704
    expresion_alge2                shift and go to state 705

state 602

    (210) Greater -> GREATER ABRE_P expresion_alge2 COMA . expresion_alge2 CIERRA_P
    (214) Greater -> GREATER ABRE_P expresion_alge2 COMA . Var CIERRA_P
    (221) Greater -> GREATER ABRE_P expresion_alge2 COMA . expresion_alge1 CIERRA_P
    (224) Greater -> GREATER ABRE_P expresion_alge2 COMA . NUMERO CIERRA_P
    (225) Greater -> GREATER ABRE_P expresion_alge2 COMA . RESTA NUMERO CIERRA_P
    (112) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (113) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (114) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (115) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (180) Var -> . VAR
    (104) expresion_alge1 -> . NUMERO SUMA NUMERO
    (105) expresion_alge1 -> . NUMERO RESTA NUMERO
    (106) expresion_alge1 -> . NUMERO MULTI NUMERO
    (107) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (108) expresion_alge1 -> . RESTA NUMERO SUMA NUMERO
    (109) expresion_alge1 -> . RESTA NUMERO RESTA NUMERO
    (110) expresion_alge1 -> . RESTA NUMERO MULTI NUMERO
    (111) expresion_alge1 -> . RESTA NUMERO DIVISION NUMERO

    NUMERO          shift and go to state 711
    RESTA           shift and go to state 712
    ABRE_P          shift and go to state 63
    VAR             shift and go to state 34

    expresion_alge2                shift and go to state 708
    Var                            shift and go to state 709
    expresion_alge1                shift and go to state 710

state 603

    (211) Greater -> GREATER ABRE_P Var COMA . Var CIERRA_P
    (216) Greater -> GREATER ABRE_P Var COMA . NUMERO CIERRA_P
    (217) Greater -> GREATER ABRE_P Var COMA . RESTA NUMERO CIERRA_P
    (218) Greater -> GREATER ABRE_P Var COMA . expresion_alge1 CIERRA_P
    (219) Greater -> GREATER ABRE_P Var COMA . expresion_alge2 CIERRA_P
    (180) Var -> . VAR
    (104) expresion_alge1 -> . NUMERO SUMA NUMERO
    (105) expresion_alge1 -> . NUMERO RESTA NUMERO
    (106) expresion_alge1 -> . NUMERO MULTI NUMERO
    (107) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (108) expresion_alge1 -> . RESTA NUMERO SUMA NUMERO
    (109) expresion_alge1 -> . RESTA NUMERO RESTA NUMERO
    (110) expresion_alge1 -> . RESTA NUMERO MULTI NUMERO
    (111) expresion_alge1 -> . RESTA NUMERO DIVISION NUMERO
    (112) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (113) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (114) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (115) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P

    NUMERO          shift and go to state 714
    RESTA           shift and go to state 715
    VAR             shift and go to state 34
    ABRE_P          shift and go to state 63

    Var                            shift and go to state 713
    expresion_alge1                shift and go to state 716
    expresion_alge2                shift and go to state 717

state 604

    (231) Smaller -> SMALLER ABRE_P NUMERO COMA . NUMERO CIERRA_P
    (233) Smaller -> SMALLER ABRE_P NUMERO COMA . RESTA NUMERO CIERRA_P
    (237) Smaller -> SMALLER ABRE_P NUMERO COMA . Var CIERRA_P
    (251) Smaller -> SMALLER ABRE_P NUMERO COMA . expresion_alge1 CIERRA_P
    (253) Smaller -> SMALLER ABRE_P NUMERO COMA . expresion_alge2 CIERRA_P
    (180) Var -> . VAR
    (104) expresion_alge1 -> . NUMERO SUMA NUMERO
    (105) expresion_alge1 -> . NUMERO RESTA NUMERO
    (106) expresion_alge1 -> . NUMERO MULTI NUMERO
    (107) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (108) expresion_alge1 -> . RESTA NUMERO SUMA NUMERO
    (109) expresion_alge1 -> . RESTA NUMERO RESTA NUMERO
    (110) expresion_alge1 -> . RESTA NUMERO MULTI NUMERO
    (111) expresion_alge1 -> . RESTA NUMERO DIVISION NUMERO
    (112) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (113) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (114) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (115) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P

    NUMERO          shift and go to state 718
    RESTA           shift and go to state 719
    VAR             shift and go to state 34
    ABRE_P          shift and go to state 63

    Var                            shift and go to state 720
    expresion_alge1                shift and go to state 721
    expresion_alge2                shift and go to state 722

state 605

    (232) Smaller -> SMALLER ABRE_P RESTA NUMERO . COMA NUMERO CIERRA_P
    (238) Smaller -> SMALLER ABRE_P RESTA NUMERO . COMA Var CIERRA_P
    (252) Smaller -> SMALLER ABRE_P RESTA NUMERO . COMA expresion_alge1 CIERRA_P
    (254) Smaller -> SMALLER ABRE_P RESTA NUMERO . COMA expresion_alge2 CIERRA_P
    (255) Smaller -> SMALLER ABRE_P RESTA NUMERO . COMA RESTA NUMERO CIERRA_P
    (108) expresion_alge1 -> RESTA NUMERO . SUMA NUMERO
    (109) expresion_alge1 -> RESTA NUMERO . RESTA NUMERO
    (110) expresion_alge1 -> RESTA NUMERO . MULTI NUMERO
    (111) expresion_alge1 -> RESTA NUMERO . DIVISION NUMERO

    COMA            shift and go to state 723
    SUMA            shift and go to state 180
    RESTA           shift and go to state 179
    MULTI           shift and go to state 181
    DIVISION        shift and go to state 182


state 606

    (234) Smaller -> SMALLER ABRE_P expresion_alge1 COMA . expresion_alge1 CIERRA_P
    (240) Smaller -> SMALLER ABRE_P expresion_alge1 COMA . Var CIERRA_P
    (245) Smaller -> SMALLER ABRE_P expresion_alge1 COMA . expresion_alge2 CIERRA_P
    (247) Smaller -> SMALLER ABRE_P expresion_alge1 COMA . NUMERO CIERRA_P
    (248) Smaller -> SMALLER ABRE_P expresion_alge1 COMA . RESTA NUMERO CIERRA_P
    (104) expresion_alge1 -> . NUMERO SUMA NUMERO
    (105) expresion_alge1 -> . NUMERO RESTA NUMERO
    (106) expresion_alge1 -> . NUMERO MULTI NUMERO
    (107) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (108) expresion_alge1 -> . RESTA NUMERO SUMA NUMERO
    (109) expresion_alge1 -> . RESTA NUMERO RESTA NUMERO
    (110) expresion_alge1 -> . RESTA NUMERO MULTI NUMERO
    (111) expresion_alge1 -> . RESTA NUMERO DIVISION NUMERO
    (180) Var -> . VAR
    (112) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (113) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (114) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (115) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P

    NUMERO          shift and go to state 727
    RESTA           shift and go to state 728
    VAR             shift and go to state 34
    ABRE_P          shift and go to state 63

    expresion_alge1                shift and go to state 724
    Var                            shift and go to state 725
    expresion_alge2                shift and go to state 726

state 607

    (235) Smaller -> SMALLER ABRE_P expresion_alge2 COMA . expresion_alge2 CIERRA_P
    (239) Smaller -> SMALLER ABRE_P expresion_alge2 COMA . Var CIERRA_P
    (246) Smaller -> SMALLER ABRE_P expresion_alge2 COMA . expresion_alge1 CIERRA_P
    (249) Smaller -> SMALLER ABRE_P expresion_alge2 COMA . NUMERO CIERRA_P
    (250) Smaller -> SMALLER ABRE_P expresion_alge2 COMA . RESTA NUMERO CIERRA_P
    (112) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (113) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (114) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (115) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P
    (180) Var -> . VAR
    (104) expresion_alge1 -> . NUMERO SUMA NUMERO
    (105) expresion_alge1 -> . NUMERO RESTA NUMERO
    (106) expresion_alge1 -> . NUMERO MULTI NUMERO
    (107) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (108) expresion_alge1 -> . RESTA NUMERO SUMA NUMERO
    (109) expresion_alge1 -> . RESTA NUMERO RESTA NUMERO
    (110) expresion_alge1 -> . RESTA NUMERO MULTI NUMERO
    (111) expresion_alge1 -> . RESTA NUMERO DIVISION NUMERO

    NUMERO          shift and go to state 732
    RESTA           shift and go to state 733
    ABRE_P          shift and go to state 63
    VAR             shift and go to state 34

    expresion_alge2                shift and go to state 729
    Var                            shift and go to state 730
    expresion_alge1                shift and go to state 731

state 608

    (236) Smaller -> SMALLER ABRE_P Var COMA . Var CIERRA_P
    (241) Smaller -> SMALLER ABRE_P Var COMA . NUMERO CIERRA_P
    (242) Smaller -> SMALLER ABRE_P Var COMA . RESTA NUMERO CIERRA_P
    (243) Smaller -> SMALLER ABRE_P Var COMA . expresion_alge1 CIERRA_P
    (244) Smaller -> SMALLER ABRE_P Var COMA . expresion_alge2 CIERRA_P
    (180) Var -> . VAR
    (104) expresion_alge1 -> . NUMERO SUMA NUMERO
    (105) expresion_alge1 -> . NUMERO RESTA NUMERO
    (106) expresion_alge1 -> . NUMERO MULTI NUMERO
    (107) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (108) expresion_alge1 -> . RESTA NUMERO SUMA NUMERO
    (109) expresion_alge1 -> . RESTA NUMERO RESTA NUMERO
    (110) expresion_alge1 -> . RESTA NUMERO MULTI NUMERO
    (111) expresion_alge1 -> . RESTA NUMERO DIVISION NUMERO
    (112) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (113) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (114) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (115) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P

    NUMERO          shift and go to state 735
    RESTA           shift and go to state 736
    VAR             shift and go to state 34
    ABRE_P          shift and go to state 63

    Var                            shift and go to state 734
    expresion_alge1                shift and go to state 737
    expresion_alge2                shift and go to state 738

state 609

    (265) IfElse -> IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion . BRACKET2 BRACKET1 funcion BRACKET2

    BRACKET2        shift and go to state 739


state 610

    (268) Until -> UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion . BRACKET2

    BRACKET2        shift and go to state 740


state 611

    (266) While -> WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion . BRACKET2

    BRACKET2        shift and go to state 741


state 612

    (333) exp -> RESTA NUMERO empty empty .

    CIERRA_P        reduce using rule 333 (exp -> RESTA NUMERO empty empty .)


state 613

    (334) exp -> RESTA NUMERO COMA empty .

    CIERRA_P        reduce using rule 334 (exp -> RESTA NUMERO COMA empty .)


state 614

    (256) And -> AND ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .

    PUNTOCOMA       reduce using rule 256 (And -> AND ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    NUMERO          reduce using rule 256 (And -> AND ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    RESTA           reduce using rule 256 (And -> AND ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    ABRE_P          reduce using rule 256 (And -> AND ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    SUM             reduce using rule 256 (And -> AND ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    SUBSTR          reduce using rule 256 (And -> AND ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    MULT            reduce using rule 256 (And -> AND ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    DIV             reduce using rule 256 (And -> AND ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    RANDOM          reduce using rule 256 (And -> AND ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    IF              reduce using rule 256 (And -> AND ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    IFELSE          reduce using rule 256 (And -> AND ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    UNTIL           reduce using rule 256 (And -> AND ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    WHILE           reduce using rule 256 (And -> AND ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    PRINTLINE       reduce using rule 256 (And -> AND ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    AND             reduce using rule 256 (And -> AND ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    OR              reduce using rule 256 (And -> AND ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    ADD             reduce using rule 256 (And -> AND ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    PUT             reduce using rule 256 (And -> AND ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    FIN             reduce using rule 256 (And -> AND ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    CIERRA_P        reduce using rule 256 (And -> AND ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    BRACKET2        reduce using rule 256 (And -> AND ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)


state 615

    (257) And -> AND ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P .

    PUNTOCOMA       reduce using rule 257 (And -> AND ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P .)
    NUMERO          reduce using rule 257 (And -> AND ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P .)
    RESTA           reduce using rule 257 (And -> AND ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P .)
    ABRE_P          reduce using rule 257 (And -> AND ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P .)
    SUM             reduce using rule 257 (And -> AND ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P .)
    SUBSTR          reduce using rule 257 (And -> AND ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P .)
    MULT            reduce using rule 257 (And -> AND ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P .)
    DIV             reduce using rule 257 (And -> AND ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P .)
    RANDOM          reduce using rule 257 (And -> AND ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P .)
    IF              reduce using rule 257 (And -> AND ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P .)
    IFELSE          reduce using rule 257 (And -> AND ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P .)
    UNTIL           reduce using rule 257 (And -> AND ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P .)
    WHILE           reduce using rule 257 (And -> AND ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P .)
    PRINTLINE       reduce using rule 257 (And -> AND ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P .)
    AND             reduce using rule 257 (And -> AND ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P .)
    OR              reduce using rule 257 (And -> AND ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P .)
    ADD             reduce using rule 257 (And -> AND ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P .)
    PUT             reduce using rule 257 (And -> AND ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P .)
    FIN             reduce using rule 257 (And -> AND ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P .)
    CIERRA_P        reduce using rule 257 (And -> AND ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P .)
    BRACKET2        reduce using rule 257 (And -> AND ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P .)


state 616

    (259) And -> AND ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P .

    PUNTOCOMA       reduce using rule 259 (And -> AND ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P .)
    NUMERO          reduce using rule 259 (And -> AND ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P .)
    RESTA           reduce using rule 259 (And -> AND ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P .)
    ABRE_P          reduce using rule 259 (And -> AND ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P .)
    SUM             reduce using rule 259 (And -> AND ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P .)
    SUBSTR          reduce using rule 259 (And -> AND ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P .)
    MULT            reduce using rule 259 (And -> AND ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P .)
    DIV             reduce using rule 259 (And -> AND ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P .)
    RANDOM          reduce using rule 259 (And -> AND ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P .)
    IF              reduce using rule 259 (And -> AND ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P .)
    IFELSE          reduce using rule 259 (And -> AND ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P .)
    UNTIL           reduce using rule 259 (And -> AND ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P .)
    WHILE           reduce using rule 259 (And -> AND ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P .)
    PRINTLINE       reduce using rule 259 (And -> AND ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P .)
    AND             reduce using rule 259 (And -> AND ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P .)
    OR              reduce using rule 259 (And -> AND ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P .)
    ADD             reduce using rule 259 (And -> AND ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P .)
    PUT             reduce using rule 259 (And -> AND ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P .)
    FIN             reduce using rule 259 (And -> AND ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P .)
    CIERRA_P        reduce using rule 259 (And -> AND ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P .)
    BRACKET2        reduce using rule 259 (And -> AND ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P .)


state 617

    (258) And -> AND ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P .

    PUNTOCOMA       reduce using rule 258 (And -> AND ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P .)
    NUMERO          reduce using rule 258 (And -> AND ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P .)
    RESTA           reduce using rule 258 (And -> AND ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P .)
    ABRE_P          reduce using rule 258 (And -> AND ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P .)
    SUM             reduce using rule 258 (And -> AND ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P .)
    SUBSTR          reduce using rule 258 (And -> AND ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P .)
    MULT            reduce using rule 258 (And -> AND ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P .)
    DIV             reduce using rule 258 (And -> AND ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P .)
    RANDOM          reduce using rule 258 (And -> AND ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P .)
    IF              reduce using rule 258 (And -> AND ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P .)
    IFELSE          reduce using rule 258 (And -> AND ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P .)
    UNTIL           reduce using rule 258 (And -> AND ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P .)
    WHILE           reduce using rule 258 (And -> AND ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P .)
    PRINTLINE       reduce using rule 258 (And -> AND ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P .)
    AND             reduce using rule 258 (And -> AND ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P .)
    OR              reduce using rule 258 (And -> AND ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P .)
    ADD             reduce using rule 258 (And -> AND ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P .)
    PUT             reduce using rule 258 (And -> AND ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P .)
    FIN             reduce using rule 258 (And -> AND ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P .)
    CIERRA_P        reduce using rule 258 (And -> AND ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P .)
    BRACKET2        reduce using rule 258 (And -> AND ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P .)


state 618

    (260) Or -> OR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .

    PUNTOCOMA       reduce using rule 260 (Or -> OR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    NUMERO          reduce using rule 260 (Or -> OR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    RESTA           reduce using rule 260 (Or -> OR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    ABRE_P          reduce using rule 260 (Or -> OR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    SUM             reduce using rule 260 (Or -> OR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    SUBSTR          reduce using rule 260 (Or -> OR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    MULT            reduce using rule 260 (Or -> OR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    DIV             reduce using rule 260 (Or -> OR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    RANDOM          reduce using rule 260 (Or -> OR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    IF              reduce using rule 260 (Or -> OR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    IFELSE          reduce using rule 260 (Or -> OR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    UNTIL           reduce using rule 260 (Or -> OR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    WHILE           reduce using rule 260 (Or -> OR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    PRINTLINE       reduce using rule 260 (Or -> OR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    AND             reduce using rule 260 (Or -> OR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    OR              reduce using rule 260 (Or -> OR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    ADD             reduce using rule 260 (Or -> OR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    PUT             reduce using rule 260 (Or -> OR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    FIN             reduce using rule 260 (Or -> OR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    CIERRA_P        reduce using rule 260 (Or -> OR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    BRACKET2        reduce using rule 260 (Or -> OR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)


state 619

    (261) Or -> OR ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P .

    PUNTOCOMA       reduce using rule 261 (Or -> OR ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P .)
    NUMERO          reduce using rule 261 (Or -> OR ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P .)
    RESTA           reduce using rule 261 (Or -> OR ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P .)
    ABRE_P          reduce using rule 261 (Or -> OR ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P .)
    SUM             reduce using rule 261 (Or -> OR ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P .)
    SUBSTR          reduce using rule 261 (Or -> OR ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P .)
    MULT            reduce using rule 261 (Or -> OR ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P .)
    DIV             reduce using rule 261 (Or -> OR ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P .)
    RANDOM          reduce using rule 261 (Or -> OR ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P .)
    IF              reduce using rule 261 (Or -> OR ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P .)
    IFELSE          reduce using rule 261 (Or -> OR ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P .)
    UNTIL           reduce using rule 261 (Or -> OR ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P .)
    WHILE           reduce using rule 261 (Or -> OR ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P .)
    PRINTLINE       reduce using rule 261 (Or -> OR ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P .)
    AND             reduce using rule 261 (Or -> OR ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P .)
    OR              reduce using rule 261 (Or -> OR ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P .)
    ADD             reduce using rule 261 (Or -> OR ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P .)
    PUT             reduce using rule 261 (Or -> OR ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P .)
    FIN             reduce using rule 261 (Or -> OR ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P .)
    CIERRA_P        reduce using rule 261 (Or -> OR ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P .)
    BRACKET2        reduce using rule 261 (Or -> OR ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P .)


state 620

    (263) Or -> OR ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P .

    PUNTOCOMA       reduce using rule 263 (Or -> OR ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P .)
    NUMERO          reduce using rule 263 (Or -> OR ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P .)
    RESTA           reduce using rule 263 (Or -> OR ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P .)
    ABRE_P          reduce using rule 263 (Or -> OR ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P .)
    SUM             reduce using rule 263 (Or -> OR ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P .)
    SUBSTR          reduce using rule 263 (Or -> OR ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P .)
    MULT            reduce using rule 263 (Or -> OR ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P .)
    DIV             reduce using rule 263 (Or -> OR ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P .)
    RANDOM          reduce using rule 263 (Or -> OR ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P .)
    IF              reduce using rule 263 (Or -> OR ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P .)
    IFELSE          reduce using rule 263 (Or -> OR ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P .)
    UNTIL           reduce using rule 263 (Or -> OR ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P .)
    WHILE           reduce using rule 263 (Or -> OR ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P .)
    PRINTLINE       reduce using rule 263 (Or -> OR ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P .)
    AND             reduce using rule 263 (Or -> OR ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P .)
    OR              reduce using rule 263 (Or -> OR ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P .)
    ADD             reduce using rule 263 (Or -> OR ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P .)
    PUT             reduce using rule 263 (Or -> OR ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P .)
    FIN             reduce using rule 263 (Or -> OR ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P .)
    CIERRA_P        reduce using rule 263 (Or -> OR ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P .)
    BRACKET2        reduce using rule 263 (Or -> OR ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P .)


state 621

    (262) Or -> OR ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P .

    PUNTOCOMA       reduce using rule 262 (Or -> OR ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P .)
    NUMERO          reduce using rule 262 (Or -> OR ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P .)
    RESTA           reduce using rule 262 (Or -> OR ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P .)
    ABRE_P          reduce using rule 262 (Or -> OR ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P .)
    SUM             reduce using rule 262 (Or -> OR ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P .)
    SUBSTR          reduce using rule 262 (Or -> OR ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P .)
    MULT            reduce using rule 262 (Or -> OR ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P .)
    DIV             reduce using rule 262 (Or -> OR ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P .)
    RANDOM          reduce using rule 262 (Or -> OR ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P .)
    IF              reduce using rule 262 (Or -> OR ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P .)
    IFELSE          reduce using rule 262 (Or -> OR ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P .)
    UNTIL           reduce using rule 262 (Or -> OR ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P .)
    WHILE           reduce using rule 262 (Or -> OR ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P .)
    PRINTLINE       reduce using rule 262 (Or -> OR ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P .)
    AND             reduce using rule 262 (Or -> OR ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P .)
    OR              reduce using rule 262 (Or -> OR ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P .)
    ADD             reduce using rule 262 (Or -> OR ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P .)
    PUT             reduce using rule 262 (Or -> OR ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P .)
    FIN             reduce using rule 262 (Or -> OR ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P .)
    CIERRA_P        reduce using rule 262 (Or -> OR ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P .)
    BRACKET2        reduce using rule 262 (Or -> OR ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P .)


state 622

    (269) Add -> ADD ABRE_P Var empty empty CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 742


state 623

    (273) Add -> ADD ABRE_P Var COMA Var CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 743


state 624

    (270) Add -> ADD ABRE_P Var COMA NUMERO CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 744


state 625

    (271) Add -> ADD ABRE_P Var COMA RESTA NUMERO . CIERRA_P PUNTOCOMA
    (108) expresion_alge1 -> RESTA NUMERO . SUMA NUMERO
    (109) expresion_alge1 -> RESTA NUMERO . RESTA NUMERO
    (110) expresion_alge1 -> RESTA NUMERO . MULTI NUMERO
    (111) expresion_alge1 -> RESTA NUMERO . DIVISION NUMERO

    CIERRA_P        shift and go to state 745
    SUMA            shift and go to state 180
    RESTA           shift and go to state 179
    MULTI           shift and go to state 181
    DIVISION        shift and go to state 182


state 626

    (272) Add -> ADD ABRE_P Var COMA expresion_alge1 CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 746


state 627

    (274) Add -> ADD ABRE_P Var COMA expresion_alge2 CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 747


state 628

    (27) llamadoproc -> PARA id BRACKET1 parametro BRACKET2 . PUNTOCOMA

    PUNTOCOMA       shift and go to state 748


state 629

    (112) expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P .

    PUNTOCOMA       reduce using rule 112 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P .)
    NUMERO          reduce using rule 112 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P .)
    RESTA           reduce using rule 112 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P .)
    ABRE_P          reduce using rule 112 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P .)
    SUM             reduce using rule 112 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P .)
    SUBSTR          reduce using rule 112 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P .)
    MULT            reduce using rule 112 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P .)
    DIV             reduce using rule 112 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P .)
    RANDOM          reduce using rule 112 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P .)
    IF              reduce using rule 112 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P .)
    IFELSE          reduce using rule 112 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P .)
    UNTIL           reduce using rule 112 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P .)
    WHILE           reduce using rule 112 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P .)
    PRINTLINE       reduce using rule 112 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P .)
    AND             reduce using rule 112 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P .)
    OR              reduce using rule 112 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P .)
    ADD             reduce using rule 112 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P .)
    PUT             reduce using rule 112 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P .)
    FIN             reduce using rule 112 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P .)
    CIERRA_P        reduce using rule 112 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P .)
    COMA            reduce using rule 112 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P .)


state 630

    (113) expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P .

    PUNTOCOMA       reduce using rule 113 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P .)
    NUMERO          reduce using rule 113 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P .)
    RESTA           reduce using rule 113 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P .)
    ABRE_P          reduce using rule 113 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P .)
    SUM             reduce using rule 113 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P .)
    SUBSTR          reduce using rule 113 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P .)
    MULT            reduce using rule 113 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P .)
    DIV             reduce using rule 113 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P .)
    RANDOM          reduce using rule 113 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P .)
    IF              reduce using rule 113 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P .)
    IFELSE          reduce using rule 113 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P .)
    UNTIL           reduce using rule 113 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P .)
    WHILE           reduce using rule 113 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P .)
    PRINTLINE       reduce using rule 113 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P .)
    AND             reduce using rule 113 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P .)
    OR              reduce using rule 113 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P .)
    ADD             reduce using rule 113 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P .)
    PUT             reduce using rule 113 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P .)
    FIN             reduce using rule 113 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P .)
    CIERRA_P        reduce using rule 113 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P .)
    COMA            reduce using rule 113 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P .)


state 631

    (114) expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P .

    PUNTOCOMA       reduce using rule 114 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P .)
    NUMERO          reduce using rule 114 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P .)
    RESTA           reduce using rule 114 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P .)
    ABRE_P          reduce using rule 114 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P .)
    SUM             reduce using rule 114 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P .)
    SUBSTR          reduce using rule 114 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P .)
    MULT            reduce using rule 114 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P .)
    DIV             reduce using rule 114 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P .)
    RANDOM          reduce using rule 114 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P .)
    IF              reduce using rule 114 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P .)
    IFELSE          reduce using rule 114 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P .)
    UNTIL           reduce using rule 114 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P .)
    WHILE           reduce using rule 114 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P .)
    PRINTLINE       reduce using rule 114 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P .)
    AND             reduce using rule 114 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P .)
    OR              reduce using rule 114 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P .)
    ADD             reduce using rule 114 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P .)
    PUT             reduce using rule 114 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P .)
    FIN             reduce using rule 114 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P .)
    CIERRA_P        reduce using rule 114 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P .)
    COMA            reduce using rule 114 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P .)


state 632

    (115) expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P .

    PUNTOCOMA       reduce using rule 115 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P .)
    NUMERO          reduce using rule 115 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P .)
    RESTA           reduce using rule 115 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P .)
    ABRE_P          reduce using rule 115 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P .)
    SUM             reduce using rule 115 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P .)
    SUBSTR          reduce using rule 115 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P .)
    MULT            reduce using rule 115 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P .)
    DIV             reduce using rule 115 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P .)
    RANDOM          reduce using rule 115 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P .)
    IF              reduce using rule 115 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P .)
    IFELSE          reduce using rule 115 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P .)
    UNTIL           reduce using rule 115 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P .)
    WHILE           reduce using rule 115 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P .)
    PRINTLINE       reduce using rule 115 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P .)
    AND             reduce using rule 115 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P .)
    OR              reduce using rule 115 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P .)
    ADD             reduce using rule 115 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P .)
    PUT             reduce using rule 115 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P .)
    FIN             reduce using rule 115 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P .)
    CIERRA_P        reduce using rule 115 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P .)
    COMA            reduce using rule 115 (expresion_alge2 -> ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P .)


state 633

    (299) Diag -> POS ABRE_P STRING COMA NUMERO . CIERRA_P PUNTOCOMA

    CIERRA_P        shift and go to state 749


state 634

    (300) Pos -> POS ABRE_P NUMERO COMA NUMERO . CIERRA_P
    (104) expresion_alge1 -> NUMERO . SUMA NUMERO
    (105) expresion_alge1 -> NUMERO . RESTA NUMERO
    (106) expresion_alge1 -> NUMERO . MULTI NUMERO
    (107) expresion_alge1 -> NUMERO . DIVISION NUMERO

    CIERRA_P        shift and go to state 750
    SUMA            shift and go to state 126
    RESTA           shift and go to state 127
    MULTI           shift and go to state 128
    DIVISION        shift and go to state 129


state 635

    (302) Pos -> POS ABRE_P NUMERO COMA expresion_alge1 . CIERRA_P

    CIERRA_P        shift and go to state 751


state 636

    (305) Pos -> POS ABRE_P NUMERO COMA Var . CIERRA_P

    CIERRA_P        shift and go to state 752


state 637

    (311) Pos -> POS ABRE_P NUMERO COMA RESTA . NUMERO CIERRA_P
    (108) expresion_alge1 -> RESTA . NUMERO SUMA NUMERO
    (109) expresion_alge1 -> RESTA . NUMERO RESTA NUMERO
    (110) expresion_alge1 -> RESTA . NUMERO MULTI NUMERO
    (111) expresion_alge1 -> RESTA . NUMERO DIVISION NUMERO

    NUMERO          shift and go to state 753


state 638

    (303) Pos -> POS ABRE_P expresion_alge1 COMA expresion_alge1 . CIERRA_P

    CIERRA_P        shift and go to state 754


state 639

    (301) Pos -> POS ABRE_P expresion_alge1 COMA NUMERO . CIERRA_P
    (104) expresion_alge1 -> NUMERO . SUMA NUMERO
    (105) expresion_alge1 -> NUMERO . RESTA NUMERO
    (106) expresion_alge1 -> NUMERO . MULTI NUMERO
    (107) expresion_alge1 -> NUMERO . DIVISION NUMERO

    CIERRA_P        shift and go to state 755
    SUMA            shift and go to state 126
    RESTA           shift and go to state 127
    MULTI           shift and go to state 128
    DIVISION        shift and go to state 129


state 640

    (307) Pos -> POS ABRE_P expresion_alge1 COMA Var . CIERRA_P

    CIERRA_P        shift and go to state 756


state 641

    (313) Pos -> POS ABRE_P expresion_alge1 COMA RESTA . NUMERO CIERRA_P
    (108) expresion_alge1 -> RESTA . NUMERO SUMA NUMERO
    (109) expresion_alge1 -> RESTA . NUMERO RESTA NUMERO
    (110) expresion_alge1 -> RESTA . NUMERO MULTI NUMERO
    (111) expresion_alge1 -> RESTA . NUMERO DIVISION NUMERO

    NUMERO          shift and go to state 757


state 642

    (306) Pos -> POS ABRE_P Var COMA Var . CIERRA_P

    CIERRA_P        shift and go to state 758


state 643

    (304) Pos -> POS ABRE_P Var COMA NUMERO . CIERRA_P
    (104) expresion_alge1 -> NUMERO . SUMA NUMERO
    (105) expresion_alge1 -> NUMERO . RESTA NUMERO
    (106) expresion_alge1 -> NUMERO . MULTI NUMERO
    (107) expresion_alge1 -> NUMERO . DIVISION NUMERO

    CIERRA_P        shift and go to state 759
    SUMA            shift and go to state 126
    RESTA           shift and go to state 127
    MULTI           shift and go to state 128
    DIVISION        shift and go to state 129


state 644

    (308) Pos -> POS ABRE_P Var COMA expresion_alge1 . CIERRA_P

    CIERRA_P        shift and go to state 760


state 645

    (314) Pos -> POS ABRE_P Var COMA RESTA . NUMERO CIERRA_P
    (108) expresion_alge1 -> RESTA . NUMERO SUMA NUMERO
    (109) expresion_alge1 -> RESTA . NUMERO RESTA NUMERO
    (110) expresion_alge1 -> RESTA . NUMERO MULTI NUMERO
    (111) expresion_alge1 -> RESTA . NUMERO DIVISION NUMERO

    NUMERO          shift and go to state 761


state 646

    (309) Pos -> POS ABRE_P RESTA NUMERO COMA . RESTA NUMERO CIERRA_P
    (310) Pos -> POS ABRE_P RESTA NUMERO COMA . NUMERO CIERRA_P
    (312) Pos -> POS ABRE_P RESTA NUMERO COMA . expresion_alge1 CIERRA_P
    (315) Pos -> POS ABRE_P RESTA NUMERO COMA . Var CIERRA_P
    (104) expresion_alge1 -> . NUMERO SUMA NUMERO
    (105) expresion_alge1 -> . NUMERO RESTA NUMERO
    (106) expresion_alge1 -> . NUMERO MULTI NUMERO
    (107) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (108) expresion_alge1 -> . RESTA NUMERO SUMA NUMERO
    (109) expresion_alge1 -> . RESTA NUMERO RESTA NUMERO
    (110) expresion_alge1 -> . RESTA NUMERO MULTI NUMERO
    (111) expresion_alge1 -> . RESTA NUMERO DIVISION NUMERO
    (180) Var -> . VAR

    RESTA           shift and go to state 762
    NUMERO          shift and go to state 763
    VAR             shift and go to state 34

    expresion_alge1                shift and go to state 764
    Var                            shift and go to state 765

state 647

    (150) Mult -> MULT ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .

    PUNTOCOMA       reduce using rule 150 (Mult -> MULT ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    NUMERO          reduce using rule 150 (Mult -> MULT ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    RESTA           reduce using rule 150 (Mult -> MULT ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    ABRE_P          reduce using rule 150 (Mult -> MULT ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    SUM             reduce using rule 150 (Mult -> MULT ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    SUBSTR          reduce using rule 150 (Mult -> MULT ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    MULT            reduce using rule 150 (Mult -> MULT ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    DIV             reduce using rule 150 (Mult -> MULT ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    RANDOM          reduce using rule 150 (Mult -> MULT ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    IF              reduce using rule 150 (Mult -> MULT ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    IFELSE          reduce using rule 150 (Mult -> MULT ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    UNTIL           reduce using rule 150 (Mult -> MULT ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    WHILE           reduce using rule 150 (Mult -> MULT ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    PRINTLINE       reduce using rule 150 (Mult -> MULT ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    AND             reduce using rule 150 (Mult -> MULT ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    OR              reduce using rule 150 (Mult -> MULT ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    ADD             reduce using rule 150 (Mult -> MULT ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    PUT             reduce using rule 150 (Mult -> MULT ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    FIN             reduce using rule 150 (Mult -> MULT ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)


state 648

    (163) Mult -> MULT ABRE_P RESTA NUMERO COMA RESTA NUMERO . CIERRA_P
    (108) expresion_alge1 -> RESTA NUMERO . SUMA NUMERO
    (109) expresion_alge1 -> RESTA NUMERO . RESTA NUMERO
    (110) expresion_alge1 -> RESTA NUMERO . MULTI NUMERO
    (111) expresion_alge1 -> RESTA NUMERO . DIVISION NUMERO

    CIERRA_P        shift and go to state 766
    SUMA            shift and go to state 180
    RESTA           shift and go to state 179
    MULTI           shift and go to state 181
    DIVISION        shift and go to state 182


state 649

    (149) Mult -> MULT ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .

    PUNTOCOMA       reduce using rule 149 (Mult -> MULT ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    NUMERO          reduce using rule 149 (Mult -> MULT ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    RESTA           reduce using rule 149 (Mult -> MULT ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    ABRE_P          reduce using rule 149 (Mult -> MULT ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    SUM             reduce using rule 149 (Mult -> MULT ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    SUBSTR          reduce using rule 149 (Mult -> MULT ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    MULT            reduce using rule 149 (Mult -> MULT ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    DIV             reduce using rule 149 (Mult -> MULT ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    RANDOM          reduce using rule 149 (Mult -> MULT ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    IF              reduce using rule 149 (Mult -> MULT ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    IFELSE          reduce using rule 149 (Mult -> MULT ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    UNTIL           reduce using rule 149 (Mult -> MULT ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    WHILE           reduce using rule 149 (Mult -> MULT ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    PRINTLINE       reduce using rule 149 (Mult -> MULT ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    AND             reduce using rule 149 (Mult -> MULT ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    OR              reduce using rule 149 (Mult -> MULT ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    ADD             reduce using rule 149 (Mult -> MULT ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    PUT             reduce using rule 149 (Mult -> MULT ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    FIN             reduce using rule 149 (Mult -> MULT ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)


state 650

    (152) Mult -> MULT ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .

    PUNTOCOMA       reduce using rule 152 (Mult -> MULT ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    NUMERO          reduce using rule 152 (Mult -> MULT ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    RESTA           reduce using rule 152 (Mult -> MULT ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    ABRE_P          reduce using rule 152 (Mult -> MULT ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    SUM             reduce using rule 152 (Mult -> MULT ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    SUBSTR          reduce using rule 152 (Mult -> MULT ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    MULT            reduce using rule 152 (Mult -> MULT ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    DIV             reduce using rule 152 (Mult -> MULT ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    RANDOM          reduce using rule 152 (Mult -> MULT ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    IF              reduce using rule 152 (Mult -> MULT ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    IFELSE          reduce using rule 152 (Mult -> MULT ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    UNTIL           reduce using rule 152 (Mult -> MULT ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    WHILE           reduce using rule 152 (Mult -> MULT ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    PRINTLINE       reduce using rule 152 (Mult -> MULT ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    AND             reduce using rule 152 (Mult -> MULT ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    OR              reduce using rule 152 (Mult -> MULT ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    ADD             reduce using rule 152 (Mult -> MULT ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    PUT             reduce using rule 152 (Mult -> MULT ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    FIN             reduce using rule 152 (Mult -> MULT ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)


state 651

    (155) Mult -> MULT ABRE_P RESTA NUMERO COMA Var CIERRA_P .

    PUNTOCOMA       reduce using rule 155 (Mult -> MULT ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    NUMERO          reduce using rule 155 (Mult -> MULT ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    RESTA           reduce using rule 155 (Mult -> MULT ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    ABRE_P          reduce using rule 155 (Mult -> MULT ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    SUM             reduce using rule 155 (Mult -> MULT ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    SUBSTR          reduce using rule 155 (Mult -> MULT ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    MULT            reduce using rule 155 (Mult -> MULT ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    DIV             reduce using rule 155 (Mult -> MULT ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    RANDOM          reduce using rule 155 (Mult -> MULT ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    IF              reduce using rule 155 (Mult -> MULT ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    IFELSE          reduce using rule 155 (Mult -> MULT ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    UNTIL           reduce using rule 155 (Mult -> MULT ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    WHILE           reduce using rule 155 (Mult -> MULT ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    PRINTLINE       reduce using rule 155 (Mult -> MULT ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    AND             reduce using rule 155 (Mult -> MULT ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    OR              reduce using rule 155 (Mult -> MULT ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    ADD             reduce using rule 155 (Mult -> MULT ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    PUT             reduce using rule 155 (Mult -> MULT ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    FIN             reduce using rule 155 (Mult -> MULT ABRE_P RESTA NUMERO COMA Var CIERRA_P .)


state 652

    (161) Mult -> MULT ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .

    PUNTOCOMA       reduce using rule 161 (Mult -> MULT ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    NUMERO          reduce using rule 161 (Mult -> MULT ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    RESTA           reduce using rule 161 (Mult -> MULT ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    ABRE_P          reduce using rule 161 (Mult -> MULT ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    SUM             reduce using rule 161 (Mult -> MULT ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    SUBSTR          reduce using rule 161 (Mult -> MULT ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    MULT            reduce using rule 161 (Mult -> MULT ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    DIV             reduce using rule 161 (Mult -> MULT ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    RANDOM          reduce using rule 161 (Mult -> MULT ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    IF              reduce using rule 161 (Mult -> MULT ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    IFELSE          reduce using rule 161 (Mult -> MULT ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    UNTIL           reduce using rule 161 (Mult -> MULT ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    WHILE           reduce using rule 161 (Mult -> MULT ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    PRINTLINE       reduce using rule 161 (Mult -> MULT ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    AND             reduce using rule 161 (Mult -> MULT ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    OR              reduce using rule 161 (Mult -> MULT ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    ADD             reduce using rule 161 (Mult -> MULT ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    PUT             reduce using rule 161 (Mult -> MULT ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    FIN             reduce using rule 161 (Mult -> MULT ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)


state 653

    (157) Mult -> MULT ABRE_P Var COMA RESTA NUMERO CIERRA_P .

    PUNTOCOMA       reduce using rule 157 (Mult -> MULT ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    NUMERO          reduce using rule 157 (Mult -> MULT ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    RESTA           reduce using rule 157 (Mult -> MULT ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    ABRE_P          reduce using rule 157 (Mult -> MULT ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    SUM             reduce using rule 157 (Mult -> MULT ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    SUBSTR          reduce using rule 157 (Mult -> MULT ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    MULT            reduce using rule 157 (Mult -> MULT ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    DIV             reduce using rule 157 (Mult -> MULT ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    RANDOM          reduce using rule 157 (Mult -> MULT ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    IF              reduce using rule 157 (Mult -> MULT ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    IFELSE          reduce using rule 157 (Mult -> MULT ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    UNTIL           reduce using rule 157 (Mult -> MULT ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    WHILE           reduce using rule 157 (Mult -> MULT ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    PRINTLINE       reduce using rule 157 (Mult -> MULT ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    AND             reduce using rule 157 (Mult -> MULT ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    OR              reduce using rule 157 (Mult -> MULT ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    ADD             reduce using rule 157 (Mult -> MULT ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    PUT             reduce using rule 157 (Mult -> MULT ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    FIN             reduce using rule 157 (Mult -> MULT ABRE_P Var COMA RESTA NUMERO CIERRA_P .)


state 654

    (166) Div -> DIV ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .

    PUNTOCOMA       reduce using rule 166 (Div -> DIV ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    NUMERO          reduce using rule 166 (Div -> DIV ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    RESTA           reduce using rule 166 (Div -> DIV ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    ABRE_P          reduce using rule 166 (Div -> DIV ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    SUM             reduce using rule 166 (Div -> DIV ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    SUBSTR          reduce using rule 166 (Div -> DIV ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    MULT            reduce using rule 166 (Div -> DIV ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    DIV             reduce using rule 166 (Div -> DIV ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    RANDOM          reduce using rule 166 (Div -> DIV ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    IF              reduce using rule 166 (Div -> DIV ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    IFELSE          reduce using rule 166 (Div -> DIV ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    UNTIL           reduce using rule 166 (Div -> DIV ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    WHILE           reduce using rule 166 (Div -> DIV ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    PRINTLINE       reduce using rule 166 (Div -> DIV ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    AND             reduce using rule 166 (Div -> DIV ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    OR              reduce using rule 166 (Div -> DIV ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    ADD             reduce using rule 166 (Div -> DIV ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    PUT             reduce using rule 166 (Div -> DIV ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    FIN             reduce using rule 166 (Div -> DIV ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)


state 655

    (179) Div -> DIV ABRE_P RESTA NUMERO COMA RESTA NUMERO . CIERRA_P
    (108) expresion_alge1 -> RESTA NUMERO . SUMA NUMERO
    (109) expresion_alge1 -> RESTA NUMERO . RESTA NUMERO
    (110) expresion_alge1 -> RESTA NUMERO . MULTI NUMERO
    (111) expresion_alge1 -> RESTA NUMERO . DIVISION NUMERO

    CIERRA_P        shift and go to state 767
    SUMA            shift and go to state 180
    RESTA           shift and go to state 179
    MULTI           shift and go to state 181
    DIVISION        shift and go to state 182


state 656

    (165) Div -> DIV ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .

    PUNTOCOMA       reduce using rule 165 (Div -> DIV ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    NUMERO          reduce using rule 165 (Div -> DIV ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    RESTA           reduce using rule 165 (Div -> DIV ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    ABRE_P          reduce using rule 165 (Div -> DIV ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    SUM             reduce using rule 165 (Div -> DIV ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    SUBSTR          reduce using rule 165 (Div -> DIV ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    MULT            reduce using rule 165 (Div -> DIV ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    DIV             reduce using rule 165 (Div -> DIV ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    RANDOM          reduce using rule 165 (Div -> DIV ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    IF              reduce using rule 165 (Div -> DIV ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    IFELSE          reduce using rule 165 (Div -> DIV ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    UNTIL           reduce using rule 165 (Div -> DIV ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    WHILE           reduce using rule 165 (Div -> DIV ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    PRINTLINE       reduce using rule 165 (Div -> DIV ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    AND             reduce using rule 165 (Div -> DIV ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    OR              reduce using rule 165 (Div -> DIV ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    ADD             reduce using rule 165 (Div -> DIV ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    PUT             reduce using rule 165 (Div -> DIV ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    FIN             reduce using rule 165 (Div -> DIV ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)


state 657

    (168) Div -> DIV ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .

    PUNTOCOMA       reduce using rule 168 (Div -> DIV ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    NUMERO          reduce using rule 168 (Div -> DIV ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    RESTA           reduce using rule 168 (Div -> DIV ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    ABRE_P          reduce using rule 168 (Div -> DIV ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    SUM             reduce using rule 168 (Div -> DIV ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    SUBSTR          reduce using rule 168 (Div -> DIV ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    MULT            reduce using rule 168 (Div -> DIV ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    DIV             reduce using rule 168 (Div -> DIV ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    RANDOM          reduce using rule 168 (Div -> DIV ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    IF              reduce using rule 168 (Div -> DIV ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    IFELSE          reduce using rule 168 (Div -> DIV ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    UNTIL           reduce using rule 168 (Div -> DIV ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    WHILE           reduce using rule 168 (Div -> DIV ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    PRINTLINE       reduce using rule 168 (Div -> DIV ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    AND             reduce using rule 168 (Div -> DIV ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    OR              reduce using rule 168 (Div -> DIV ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    ADD             reduce using rule 168 (Div -> DIV ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    PUT             reduce using rule 168 (Div -> DIV ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    FIN             reduce using rule 168 (Div -> DIV ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)


state 658

    (171) Div -> DIV ABRE_P RESTA NUMERO COMA Var CIERRA_P .

    PUNTOCOMA       reduce using rule 171 (Div -> DIV ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    NUMERO          reduce using rule 171 (Div -> DIV ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    RESTA           reduce using rule 171 (Div -> DIV ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    ABRE_P          reduce using rule 171 (Div -> DIV ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    SUM             reduce using rule 171 (Div -> DIV ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    SUBSTR          reduce using rule 171 (Div -> DIV ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    MULT            reduce using rule 171 (Div -> DIV ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    DIV             reduce using rule 171 (Div -> DIV ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    RANDOM          reduce using rule 171 (Div -> DIV ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    IF              reduce using rule 171 (Div -> DIV ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    IFELSE          reduce using rule 171 (Div -> DIV ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    UNTIL           reduce using rule 171 (Div -> DIV ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    WHILE           reduce using rule 171 (Div -> DIV ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    PRINTLINE       reduce using rule 171 (Div -> DIV ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    AND             reduce using rule 171 (Div -> DIV ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    OR              reduce using rule 171 (Div -> DIV ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    ADD             reduce using rule 171 (Div -> DIV ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    PUT             reduce using rule 171 (Div -> DIV ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    FIN             reduce using rule 171 (Div -> DIV ABRE_P RESTA NUMERO COMA Var CIERRA_P .)


state 659

    (177) Div -> DIV ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .

    PUNTOCOMA       reduce using rule 177 (Div -> DIV ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    NUMERO          reduce using rule 177 (Div -> DIV ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    RESTA           reduce using rule 177 (Div -> DIV ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    ABRE_P          reduce using rule 177 (Div -> DIV ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    SUM             reduce using rule 177 (Div -> DIV ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    SUBSTR          reduce using rule 177 (Div -> DIV ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    MULT            reduce using rule 177 (Div -> DIV ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    DIV             reduce using rule 177 (Div -> DIV ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    RANDOM          reduce using rule 177 (Div -> DIV ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    IF              reduce using rule 177 (Div -> DIV ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    IFELSE          reduce using rule 177 (Div -> DIV ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    UNTIL           reduce using rule 177 (Div -> DIV ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    WHILE           reduce using rule 177 (Div -> DIV ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    PRINTLINE       reduce using rule 177 (Div -> DIV ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    AND             reduce using rule 177 (Div -> DIV ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    OR              reduce using rule 177 (Div -> DIV ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    ADD             reduce using rule 177 (Div -> DIV ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    PUT             reduce using rule 177 (Div -> DIV ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    FIN             reduce using rule 177 (Div -> DIV ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)


state 660

    (173) Div -> DIV ABRE_P Var COMA RESTA NUMERO CIERRA_P .

    PUNTOCOMA       reduce using rule 173 (Div -> DIV ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    NUMERO          reduce using rule 173 (Div -> DIV ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    RESTA           reduce using rule 173 (Div -> DIV ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    ABRE_P          reduce using rule 173 (Div -> DIV ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    SUM             reduce using rule 173 (Div -> DIV ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    SUBSTR          reduce using rule 173 (Div -> DIV ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    MULT            reduce using rule 173 (Div -> DIV ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    DIV             reduce using rule 173 (Div -> DIV ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    RANDOM          reduce using rule 173 (Div -> DIV ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    IF              reduce using rule 173 (Div -> DIV ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    IFELSE          reduce using rule 173 (Div -> DIV ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    UNTIL           reduce using rule 173 (Div -> DIV ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    WHILE           reduce using rule 173 (Div -> DIV ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    PRINTLINE       reduce using rule 173 (Div -> DIV ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    AND             reduce using rule 173 (Div -> DIV ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    OR              reduce using rule 173 (Div -> DIV ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    ADD             reduce using rule 173 (Div -> DIV ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    PUT             reduce using rule 173 (Div -> DIV ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    FIN             reduce using rule 173 (Div -> DIV ABRE_P Var COMA RESTA NUMERO CIERRA_P .)


state 661

    (118) Sum -> SUM ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .

    PUNTOCOMA       reduce using rule 118 (Sum -> SUM ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    NUMERO          reduce using rule 118 (Sum -> SUM ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    RESTA           reduce using rule 118 (Sum -> SUM ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    ABRE_P          reduce using rule 118 (Sum -> SUM ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    SUM             reduce using rule 118 (Sum -> SUM ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    SUBSTR          reduce using rule 118 (Sum -> SUM ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    MULT            reduce using rule 118 (Sum -> SUM ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    DIV             reduce using rule 118 (Sum -> SUM ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    RANDOM          reduce using rule 118 (Sum -> SUM ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    IF              reduce using rule 118 (Sum -> SUM ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    IFELSE          reduce using rule 118 (Sum -> SUM ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    UNTIL           reduce using rule 118 (Sum -> SUM ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    WHILE           reduce using rule 118 (Sum -> SUM ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    PRINTLINE       reduce using rule 118 (Sum -> SUM ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    AND             reduce using rule 118 (Sum -> SUM ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    OR              reduce using rule 118 (Sum -> SUM ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    ADD             reduce using rule 118 (Sum -> SUM ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    PUT             reduce using rule 118 (Sum -> SUM ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    FIN             reduce using rule 118 (Sum -> SUM ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)


state 662

    (131) Sum -> SUM ABRE_P RESTA NUMERO COMA RESTA NUMERO . CIERRA_P
    (108) expresion_alge1 -> RESTA NUMERO . SUMA NUMERO
    (109) expresion_alge1 -> RESTA NUMERO . RESTA NUMERO
    (110) expresion_alge1 -> RESTA NUMERO . MULTI NUMERO
    (111) expresion_alge1 -> RESTA NUMERO . DIVISION NUMERO

    CIERRA_P        shift and go to state 768
    SUMA            shift and go to state 180
    RESTA           shift and go to state 179
    MULTI           shift and go to state 181
    DIVISION        shift and go to state 182


state 663

    (117) Sum -> SUM ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .

    PUNTOCOMA       reduce using rule 117 (Sum -> SUM ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    NUMERO          reduce using rule 117 (Sum -> SUM ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    RESTA           reduce using rule 117 (Sum -> SUM ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    ABRE_P          reduce using rule 117 (Sum -> SUM ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    SUM             reduce using rule 117 (Sum -> SUM ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    SUBSTR          reduce using rule 117 (Sum -> SUM ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    MULT            reduce using rule 117 (Sum -> SUM ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    DIV             reduce using rule 117 (Sum -> SUM ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    RANDOM          reduce using rule 117 (Sum -> SUM ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    IF              reduce using rule 117 (Sum -> SUM ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    IFELSE          reduce using rule 117 (Sum -> SUM ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    UNTIL           reduce using rule 117 (Sum -> SUM ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    WHILE           reduce using rule 117 (Sum -> SUM ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    PRINTLINE       reduce using rule 117 (Sum -> SUM ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    AND             reduce using rule 117 (Sum -> SUM ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    OR              reduce using rule 117 (Sum -> SUM ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    ADD             reduce using rule 117 (Sum -> SUM ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    PUT             reduce using rule 117 (Sum -> SUM ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    FIN             reduce using rule 117 (Sum -> SUM ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)


state 664

    (120) Sum -> SUM ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .

    PUNTOCOMA       reduce using rule 120 (Sum -> SUM ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    NUMERO          reduce using rule 120 (Sum -> SUM ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    RESTA           reduce using rule 120 (Sum -> SUM ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    ABRE_P          reduce using rule 120 (Sum -> SUM ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    SUM             reduce using rule 120 (Sum -> SUM ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    SUBSTR          reduce using rule 120 (Sum -> SUM ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    MULT            reduce using rule 120 (Sum -> SUM ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    DIV             reduce using rule 120 (Sum -> SUM ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    RANDOM          reduce using rule 120 (Sum -> SUM ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    IF              reduce using rule 120 (Sum -> SUM ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    IFELSE          reduce using rule 120 (Sum -> SUM ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    UNTIL           reduce using rule 120 (Sum -> SUM ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    WHILE           reduce using rule 120 (Sum -> SUM ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    PRINTLINE       reduce using rule 120 (Sum -> SUM ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    AND             reduce using rule 120 (Sum -> SUM ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    OR              reduce using rule 120 (Sum -> SUM ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    ADD             reduce using rule 120 (Sum -> SUM ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    PUT             reduce using rule 120 (Sum -> SUM ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    FIN             reduce using rule 120 (Sum -> SUM ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)


state 665

    (123) Sum -> SUM ABRE_P RESTA NUMERO COMA Var CIERRA_P .

    PUNTOCOMA       reduce using rule 123 (Sum -> SUM ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    NUMERO          reduce using rule 123 (Sum -> SUM ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    RESTA           reduce using rule 123 (Sum -> SUM ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    ABRE_P          reduce using rule 123 (Sum -> SUM ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    SUM             reduce using rule 123 (Sum -> SUM ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    SUBSTR          reduce using rule 123 (Sum -> SUM ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    MULT            reduce using rule 123 (Sum -> SUM ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    DIV             reduce using rule 123 (Sum -> SUM ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    RANDOM          reduce using rule 123 (Sum -> SUM ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    IF              reduce using rule 123 (Sum -> SUM ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    IFELSE          reduce using rule 123 (Sum -> SUM ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    UNTIL           reduce using rule 123 (Sum -> SUM ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    WHILE           reduce using rule 123 (Sum -> SUM ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    PRINTLINE       reduce using rule 123 (Sum -> SUM ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    AND             reduce using rule 123 (Sum -> SUM ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    OR              reduce using rule 123 (Sum -> SUM ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    ADD             reduce using rule 123 (Sum -> SUM ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    PUT             reduce using rule 123 (Sum -> SUM ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    FIN             reduce using rule 123 (Sum -> SUM ABRE_P RESTA NUMERO COMA Var CIERRA_P .)


state 666

    (129) Sum -> SUM ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .

    PUNTOCOMA       reduce using rule 129 (Sum -> SUM ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    NUMERO          reduce using rule 129 (Sum -> SUM ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    RESTA           reduce using rule 129 (Sum -> SUM ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    ABRE_P          reduce using rule 129 (Sum -> SUM ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    SUM             reduce using rule 129 (Sum -> SUM ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    SUBSTR          reduce using rule 129 (Sum -> SUM ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    MULT            reduce using rule 129 (Sum -> SUM ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    DIV             reduce using rule 129 (Sum -> SUM ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    RANDOM          reduce using rule 129 (Sum -> SUM ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    IF              reduce using rule 129 (Sum -> SUM ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    IFELSE          reduce using rule 129 (Sum -> SUM ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    UNTIL           reduce using rule 129 (Sum -> SUM ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    WHILE           reduce using rule 129 (Sum -> SUM ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    PRINTLINE       reduce using rule 129 (Sum -> SUM ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    AND             reduce using rule 129 (Sum -> SUM ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    OR              reduce using rule 129 (Sum -> SUM ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    ADD             reduce using rule 129 (Sum -> SUM ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    PUT             reduce using rule 129 (Sum -> SUM ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    FIN             reduce using rule 129 (Sum -> SUM ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)


state 667

    (125) Sum -> SUM ABRE_P Var COMA RESTA NUMERO CIERRA_P .

    PUNTOCOMA       reduce using rule 125 (Sum -> SUM ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    NUMERO          reduce using rule 125 (Sum -> SUM ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    RESTA           reduce using rule 125 (Sum -> SUM ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    ABRE_P          reduce using rule 125 (Sum -> SUM ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    SUM             reduce using rule 125 (Sum -> SUM ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    SUBSTR          reduce using rule 125 (Sum -> SUM ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    MULT            reduce using rule 125 (Sum -> SUM ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    DIV             reduce using rule 125 (Sum -> SUM ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    RANDOM          reduce using rule 125 (Sum -> SUM ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    IF              reduce using rule 125 (Sum -> SUM ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    IFELSE          reduce using rule 125 (Sum -> SUM ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    UNTIL           reduce using rule 125 (Sum -> SUM ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    WHILE           reduce using rule 125 (Sum -> SUM ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    PRINTLINE       reduce using rule 125 (Sum -> SUM ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    AND             reduce using rule 125 (Sum -> SUM ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    OR              reduce using rule 125 (Sum -> SUM ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    ADD             reduce using rule 125 (Sum -> SUM ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    PUT             reduce using rule 125 (Sum -> SUM ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    FIN             reduce using rule 125 (Sum -> SUM ABRE_P Var COMA RESTA NUMERO CIERRA_P .)


state 668

    (134) Substr -> SUBSTR ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .

    PUNTOCOMA       reduce using rule 134 (Substr -> SUBSTR ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    NUMERO          reduce using rule 134 (Substr -> SUBSTR ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    RESTA           reduce using rule 134 (Substr -> SUBSTR ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    ABRE_P          reduce using rule 134 (Substr -> SUBSTR ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    SUM             reduce using rule 134 (Substr -> SUBSTR ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    SUBSTR          reduce using rule 134 (Substr -> SUBSTR ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    MULT            reduce using rule 134 (Substr -> SUBSTR ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    DIV             reduce using rule 134 (Substr -> SUBSTR ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    RANDOM          reduce using rule 134 (Substr -> SUBSTR ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    IF              reduce using rule 134 (Substr -> SUBSTR ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    IFELSE          reduce using rule 134 (Substr -> SUBSTR ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    UNTIL           reduce using rule 134 (Substr -> SUBSTR ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    WHILE           reduce using rule 134 (Substr -> SUBSTR ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    PRINTLINE       reduce using rule 134 (Substr -> SUBSTR ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    AND             reduce using rule 134 (Substr -> SUBSTR ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    OR              reduce using rule 134 (Substr -> SUBSTR ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    ADD             reduce using rule 134 (Substr -> SUBSTR ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    PUT             reduce using rule 134 (Substr -> SUBSTR ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    FIN             reduce using rule 134 (Substr -> SUBSTR ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)


state 669

    (147) Substr -> SUBSTR ABRE_P RESTA NUMERO COMA RESTA NUMERO . CIERRA_P
    (108) expresion_alge1 -> RESTA NUMERO . SUMA NUMERO
    (109) expresion_alge1 -> RESTA NUMERO . RESTA NUMERO
    (110) expresion_alge1 -> RESTA NUMERO . MULTI NUMERO
    (111) expresion_alge1 -> RESTA NUMERO . DIVISION NUMERO

    CIERRA_P        shift and go to state 769
    SUMA            shift and go to state 180
    RESTA           shift and go to state 179
    MULTI           shift and go to state 181
    DIVISION        shift and go to state 182


state 670

    (133) Substr -> SUBSTR ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .

    PUNTOCOMA       reduce using rule 133 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    NUMERO          reduce using rule 133 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    RESTA           reduce using rule 133 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    ABRE_P          reduce using rule 133 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    SUM             reduce using rule 133 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    SUBSTR          reduce using rule 133 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    MULT            reduce using rule 133 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    DIV             reduce using rule 133 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    RANDOM          reduce using rule 133 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    IF              reduce using rule 133 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    IFELSE          reduce using rule 133 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    UNTIL           reduce using rule 133 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    WHILE           reduce using rule 133 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    PRINTLINE       reduce using rule 133 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    AND             reduce using rule 133 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    OR              reduce using rule 133 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    ADD             reduce using rule 133 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    PUT             reduce using rule 133 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    FIN             reduce using rule 133 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)


state 671

    (136) Substr -> SUBSTR ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .

    PUNTOCOMA       reduce using rule 136 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    NUMERO          reduce using rule 136 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    RESTA           reduce using rule 136 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    ABRE_P          reduce using rule 136 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    SUM             reduce using rule 136 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    SUBSTR          reduce using rule 136 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    MULT            reduce using rule 136 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    DIV             reduce using rule 136 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    RANDOM          reduce using rule 136 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    IF              reduce using rule 136 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    IFELSE          reduce using rule 136 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    UNTIL           reduce using rule 136 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    WHILE           reduce using rule 136 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    PRINTLINE       reduce using rule 136 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    AND             reduce using rule 136 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    OR              reduce using rule 136 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    ADD             reduce using rule 136 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    PUT             reduce using rule 136 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    FIN             reduce using rule 136 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)


state 672

    (139) Substr -> SUBSTR ABRE_P RESTA NUMERO COMA Var CIERRA_P .

    PUNTOCOMA       reduce using rule 139 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    NUMERO          reduce using rule 139 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    RESTA           reduce using rule 139 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    ABRE_P          reduce using rule 139 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    SUM             reduce using rule 139 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    SUBSTR          reduce using rule 139 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    MULT            reduce using rule 139 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    DIV             reduce using rule 139 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    RANDOM          reduce using rule 139 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    IF              reduce using rule 139 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    IFELSE          reduce using rule 139 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    UNTIL           reduce using rule 139 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    WHILE           reduce using rule 139 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    PRINTLINE       reduce using rule 139 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    AND             reduce using rule 139 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    OR              reduce using rule 139 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    ADD             reduce using rule 139 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    PUT             reduce using rule 139 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    FIN             reduce using rule 139 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA Var CIERRA_P .)


state 673

    (145) Substr -> SUBSTR ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .

    PUNTOCOMA       reduce using rule 145 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    NUMERO          reduce using rule 145 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    RESTA           reduce using rule 145 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    ABRE_P          reduce using rule 145 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    SUM             reduce using rule 145 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    SUBSTR          reduce using rule 145 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    MULT            reduce using rule 145 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    DIV             reduce using rule 145 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    RANDOM          reduce using rule 145 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    IF              reduce using rule 145 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    IFELSE          reduce using rule 145 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    UNTIL           reduce using rule 145 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    WHILE           reduce using rule 145 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    PRINTLINE       reduce using rule 145 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    AND             reduce using rule 145 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    OR              reduce using rule 145 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    ADD             reduce using rule 145 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    PUT             reduce using rule 145 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    FIN             reduce using rule 145 (Substr -> SUBSTR ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)


state 674

    (141) Substr -> SUBSTR ABRE_P Var COMA RESTA NUMERO CIERRA_P .

    PUNTOCOMA       reduce using rule 141 (Substr -> SUBSTR ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    NUMERO          reduce using rule 141 (Substr -> SUBSTR ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    RESTA           reduce using rule 141 (Substr -> SUBSTR ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    ABRE_P          reduce using rule 141 (Substr -> SUBSTR ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    SUM             reduce using rule 141 (Substr -> SUBSTR ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    SUBSTR          reduce using rule 141 (Substr -> SUBSTR ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    MULT            reduce using rule 141 (Substr -> SUBSTR ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    DIV             reduce using rule 141 (Substr -> SUBSTR ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    RANDOM          reduce using rule 141 (Substr -> SUBSTR ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    IF              reduce using rule 141 (Substr -> SUBSTR ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    IFELSE          reduce using rule 141 (Substr -> SUBSTR ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    UNTIL           reduce using rule 141 (Substr -> SUBSTR ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    WHILE           reduce using rule 141 (Substr -> SUBSTR ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    PRINTLINE       reduce using rule 141 (Substr -> SUBSTR ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    AND             reduce using rule 141 (Substr -> SUBSTR ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    OR              reduce using rule 141 (Substr -> SUBSTR ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    ADD             reduce using rule 141 (Substr -> SUBSTR ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    PUT             reduce using rule 141 (Substr -> SUBSTR ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    FIN             reduce using rule 141 (Substr -> SUBSTR ABRE_P Var COMA RESTA NUMERO CIERRA_P .)


state 675

    (264) If -> IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 .

    PUNTOCOMA       reduce using rule 264 (If -> IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 .)
    NUMERO          reduce using rule 264 (If -> IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 .)
    RESTA           reduce using rule 264 (If -> IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 .)
    ABRE_P          reduce using rule 264 (If -> IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 .)
    SUM             reduce using rule 264 (If -> IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 .)
    SUBSTR          reduce using rule 264 (If -> IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 .)
    MULT            reduce using rule 264 (If -> IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 .)
    DIV             reduce using rule 264 (If -> IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 .)
    RANDOM          reduce using rule 264 (If -> IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 .)
    IF              reduce using rule 264 (If -> IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 .)
    IFELSE          reduce using rule 264 (If -> IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 .)
    UNTIL           reduce using rule 264 (If -> IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 .)
    WHILE           reduce using rule 264 (If -> IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 .)
    PRINTLINE       reduce using rule 264 (If -> IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 .)
    AND             reduce using rule 264 (If -> IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 .)
    OR              reduce using rule 264 (If -> IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 .)
    ADD             reduce using rule 264 (If -> IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 .)
    PUT             reduce using rule 264 (If -> IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 .)
    FIN             reduce using rule 264 (If -> IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 .)
    CIERRA_P        reduce using rule 264 (If -> IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 .)
    BRACKET2        reduce using rule 264 (If -> IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 .)


state 676

    (181) Equal -> EQUAL ABRE_P NUMERO COMA NUMERO . CIERRA_P
    (104) expresion_alge1 -> NUMERO . SUMA NUMERO
    (105) expresion_alge1 -> NUMERO . RESTA NUMERO
    (106) expresion_alge1 -> NUMERO . MULTI NUMERO
    (107) expresion_alge1 -> NUMERO . DIVISION NUMERO

    CIERRA_P        shift and go to state 770
    SUMA            shift and go to state 126
    RESTA           shift and go to state 127
    MULTI           shift and go to state 128
    DIVISION        shift and go to state 129


state 677

    (183) Equal -> EQUAL ABRE_P NUMERO COMA RESTA . NUMERO CIERRA_P
    (108) expresion_alge1 -> RESTA . NUMERO SUMA NUMERO
    (109) expresion_alge1 -> RESTA . NUMERO RESTA NUMERO
    (110) expresion_alge1 -> RESTA . NUMERO MULTI NUMERO
    (111) expresion_alge1 -> RESTA . NUMERO DIVISION NUMERO

    NUMERO          shift and go to state 771


state 678

    (187) Equal -> EQUAL ABRE_P NUMERO COMA Var . CIERRA_P

    CIERRA_P        shift and go to state 772


state 679

    (201) Equal -> EQUAL ABRE_P NUMERO COMA expresion_alge1 . CIERRA_P

    CIERRA_P        shift and go to state 773


state 680

    (203) Equal -> EQUAL ABRE_P NUMERO COMA expresion_alge2 . CIERRA_P

    CIERRA_P        shift and go to state 774


state 681

    (182) Equal -> EQUAL ABRE_P RESTA NUMERO COMA . NUMERO CIERRA_P
    (188) Equal -> EQUAL ABRE_P RESTA NUMERO COMA . Var CIERRA_P
    (202) Equal -> EQUAL ABRE_P RESTA NUMERO COMA . expresion_alge1 CIERRA_P
    (204) Equal -> EQUAL ABRE_P RESTA NUMERO COMA . expresion_alge2 CIERRA_P
    (205) Equal -> EQUAL ABRE_P RESTA NUMERO COMA . RESTA NUMERO CIERRA_P
    (180) Var -> . VAR
    (104) expresion_alge1 -> . NUMERO SUMA NUMERO
    (105) expresion_alge1 -> . NUMERO RESTA NUMERO
    (106) expresion_alge1 -> . NUMERO MULTI NUMERO
    (107) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (108) expresion_alge1 -> . RESTA NUMERO SUMA NUMERO
    (109) expresion_alge1 -> . RESTA NUMERO RESTA NUMERO
    (110) expresion_alge1 -> . RESTA NUMERO MULTI NUMERO
    (111) expresion_alge1 -> . RESTA NUMERO DIVISION NUMERO
    (112) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (113) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (114) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (115) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P

    NUMERO          shift and go to state 776
    RESTA           shift and go to state 775
    VAR             shift and go to state 34
    ABRE_P          shift and go to state 63

    Var                            shift and go to state 777
    expresion_alge1                shift and go to state 778
    expresion_alge2                shift and go to state 779

state 682

    (184) Equal -> EQUAL ABRE_P expresion_alge1 COMA expresion_alge1 . CIERRA_P

    CIERRA_P        shift and go to state 780


state 683

    (190) Equal -> EQUAL ABRE_P expresion_alge1 COMA Var . CIERRA_P

    CIERRA_P        shift and go to state 781


state 684

    (195) Equal -> EQUAL ABRE_P expresion_alge1 COMA expresion_alge2 . CIERRA_P

    CIERRA_P        shift and go to state 782


state 685

    (197) Equal -> EQUAL ABRE_P expresion_alge1 COMA NUMERO . CIERRA_P
    (104) expresion_alge1 -> NUMERO . SUMA NUMERO
    (105) expresion_alge1 -> NUMERO . RESTA NUMERO
    (106) expresion_alge1 -> NUMERO . MULTI NUMERO
    (107) expresion_alge1 -> NUMERO . DIVISION NUMERO

    CIERRA_P        shift and go to state 783
    SUMA            shift and go to state 126
    RESTA           shift and go to state 127
    MULTI           shift and go to state 128
    DIVISION        shift and go to state 129


state 686

    (198) Equal -> EQUAL ABRE_P expresion_alge1 COMA RESTA . NUMERO CIERRA_P
    (108) expresion_alge1 -> RESTA . NUMERO SUMA NUMERO
    (109) expresion_alge1 -> RESTA . NUMERO RESTA NUMERO
    (110) expresion_alge1 -> RESTA . NUMERO MULTI NUMERO
    (111) expresion_alge1 -> RESTA . NUMERO DIVISION NUMERO

    NUMERO          shift and go to state 784


state 687

    (185) Equal -> EQUAL ABRE_P expresion_alge2 COMA expresion_alge2 . CIERRA_P

    CIERRA_P        shift and go to state 785


state 688

    (189) Equal -> EQUAL ABRE_P expresion_alge2 COMA Var . CIERRA_P

    CIERRA_P        shift and go to state 786


state 689

    (196) Equal -> EQUAL ABRE_P expresion_alge2 COMA expresion_alge1 . CIERRA_P

    CIERRA_P        shift and go to state 787


state 690

    (199) Equal -> EQUAL ABRE_P expresion_alge2 COMA NUMERO . CIERRA_P
    (104) expresion_alge1 -> NUMERO . SUMA NUMERO
    (105) expresion_alge1 -> NUMERO . RESTA NUMERO
    (106) expresion_alge1 -> NUMERO . MULTI NUMERO
    (107) expresion_alge1 -> NUMERO . DIVISION NUMERO

    CIERRA_P        shift and go to state 788
    SUMA            shift and go to state 126
    RESTA           shift and go to state 127
    MULTI           shift and go to state 128
    DIVISION        shift and go to state 129


state 691

    (200) Equal -> EQUAL ABRE_P expresion_alge2 COMA RESTA . NUMERO CIERRA_P
    (108) expresion_alge1 -> RESTA . NUMERO SUMA NUMERO
    (109) expresion_alge1 -> RESTA . NUMERO RESTA NUMERO
    (110) expresion_alge1 -> RESTA . NUMERO MULTI NUMERO
    (111) expresion_alge1 -> RESTA . NUMERO DIVISION NUMERO

    NUMERO          shift and go to state 789


state 692

    (186) Equal -> EQUAL ABRE_P Var COMA Var . CIERRA_P

    CIERRA_P        shift and go to state 790


state 693

    (191) Equal -> EQUAL ABRE_P Var COMA NUMERO . CIERRA_P
    (104) expresion_alge1 -> NUMERO . SUMA NUMERO
    (105) expresion_alge1 -> NUMERO . RESTA NUMERO
    (106) expresion_alge1 -> NUMERO . MULTI NUMERO
    (107) expresion_alge1 -> NUMERO . DIVISION NUMERO

    CIERRA_P        shift and go to state 791
    SUMA            shift and go to state 126
    RESTA           shift and go to state 127
    MULTI           shift and go to state 128
    DIVISION        shift and go to state 129


state 694

    (192) Equal -> EQUAL ABRE_P Var COMA RESTA . NUMERO CIERRA_P
    (108) expresion_alge1 -> RESTA . NUMERO SUMA NUMERO
    (109) expresion_alge1 -> RESTA . NUMERO RESTA NUMERO
    (110) expresion_alge1 -> RESTA . NUMERO MULTI NUMERO
    (111) expresion_alge1 -> RESTA . NUMERO DIVISION NUMERO

    NUMERO          shift and go to state 792


state 695

    (193) Equal -> EQUAL ABRE_P Var COMA expresion_alge1 . CIERRA_P

    CIERRA_P        shift and go to state 793


state 696

    (194) Equal -> EQUAL ABRE_P Var COMA expresion_alge2 . CIERRA_P

    CIERRA_P        shift and go to state 794


state 697

    (206) Greater -> GREATER ABRE_P NUMERO COMA NUMERO . CIERRA_P
    (104) expresion_alge1 -> NUMERO . SUMA NUMERO
    (105) expresion_alge1 -> NUMERO . RESTA NUMERO
    (106) expresion_alge1 -> NUMERO . MULTI NUMERO
    (107) expresion_alge1 -> NUMERO . DIVISION NUMERO

    CIERRA_P        shift and go to state 795
    SUMA            shift and go to state 126
    RESTA           shift and go to state 127
    MULTI           shift and go to state 128
    DIVISION        shift and go to state 129


state 698

    (208) Greater -> GREATER ABRE_P NUMERO COMA RESTA . NUMERO CIERRA_P
    (108) expresion_alge1 -> RESTA . NUMERO SUMA NUMERO
    (109) expresion_alge1 -> RESTA . NUMERO RESTA NUMERO
    (110) expresion_alge1 -> RESTA . NUMERO MULTI NUMERO
    (111) expresion_alge1 -> RESTA . NUMERO DIVISION NUMERO

    NUMERO          shift and go to state 796


state 699

    (212) Greater -> GREATER ABRE_P NUMERO COMA Var . CIERRA_P

    CIERRA_P        shift and go to state 797


state 700

    (226) Greater -> GREATER ABRE_P NUMERO COMA expresion_alge1 . CIERRA_P

    CIERRA_P        shift and go to state 798


state 701

    (228) Greater -> GREATER ABRE_P NUMERO COMA expresion_alge2 . CIERRA_P

    CIERRA_P        shift and go to state 799


state 702

    (207) Greater -> GREATER ABRE_P RESTA NUMERO COMA . NUMERO CIERRA_P
    (213) Greater -> GREATER ABRE_P RESTA NUMERO COMA . Var CIERRA_P
    (227) Greater -> GREATER ABRE_P RESTA NUMERO COMA . expresion_alge1 CIERRA_P
    (229) Greater -> GREATER ABRE_P RESTA NUMERO COMA . expresion_alge2 CIERRA_P
    (230) Greater -> GREATER ABRE_P RESTA NUMERO COMA . RESTA NUMERO CIERRA_P
    (180) Var -> . VAR
    (104) expresion_alge1 -> . NUMERO SUMA NUMERO
    (105) expresion_alge1 -> . NUMERO RESTA NUMERO
    (106) expresion_alge1 -> . NUMERO MULTI NUMERO
    (107) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (108) expresion_alge1 -> . RESTA NUMERO SUMA NUMERO
    (109) expresion_alge1 -> . RESTA NUMERO RESTA NUMERO
    (110) expresion_alge1 -> . RESTA NUMERO MULTI NUMERO
    (111) expresion_alge1 -> . RESTA NUMERO DIVISION NUMERO
    (112) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (113) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (114) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (115) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P

    NUMERO          shift and go to state 801
    RESTA           shift and go to state 800
    VAR             shift and go to state 34
    ABRE_P          shift and go to state 63

    Var                            shift and go to state 802
    expresion_alge1                shift and go to state 803
    expresion_alge2                shift and go to state 804

state 703

    (209) Greater -> GREATER ABRE_P expresion_alge1 COMA expresion_alge1 . CIERRA_P

    CIERRA_P        shift and go to state 805


state 704

    (215) Greater -> GREATER ABRE_P expresion_alge1 COMA Var . CIERRA_P

    CIERRA_P        shift and go to state 806


state 705

    (220) Greater -> GREATER ABRE_P expresion_alge1 COMA expresion_alge2 . CIERRA_P

    CIERRA_P        shift and go to state 807


state 706

    (222) Greater -> GREATER ABRE_P expresion_alge1 COMA NUMERO . CIERRA_P
    (104) expresion_alge1 -> NUMERO . SUMA NUMERO
    (105) expresion_alge1 -> NUMERO . RESTA NUMERO
    (106) expresion_alge1 -> NUMERO . MULTI NUMERO
    (107) expresion_alge1 -> NUMERO . DIVISION NUMERO

    CIERRA_P        shift and go to state 808
    SUMA            shift and go to state 126
    RESTA           shift and go to state 127
    MULTI           shift and go to state 128
    DIVISION        shift and go to state 129


state 707

    (223) Greater -> GREATER ABRE_P expresion_alge1 COMA RESTA . NUMERO CIERRA_P
    (108) expresion_alge1 -> RESTA . NUMERO SUMA NUMERO
    (109) expresion_alge1 -> RESTA . NUMERO RESTA NUMERO
    (110) expresion_alge1 -> RESTA . NUMERO MULTI NUMERO
    (111) expresion_alge1 -> RESTA . NUMERO DIVISION NUMERO

    NUMERO          shift and go to state 809


state 708

    (210) Greater -> GREATER ABRE_P expresion_alge2 COMA expresion_alge2 . CIERRA_P

    CIERRA_P        shift and go to state 810


state 709

    (214) Greater -> GREATER ABRE_P expresion_alge2 COMA Var . CIERRA_P

    CIERRA_P        shift and go to state 811


state 710

    (221) Greater -> GREATER ABRE_P expresion_alge2 COMA expresion_alge1 . CIERRA_P

    CIERRA_P        shift and go to state 812


state 711

    (224) Greater -> GREATER ABRE_P expresion_alge2 COMA NUMERO . CIERRA_P
    (104) expresion_alge1 -> NUMERO . SUMA NUMERO
    (105) expresion_alge1 -> NUMERO . RESTA NUMERO
    (106) expresion_alge1 -> NUMERO . MULTI NUMERO
    (107) expresion_alge1 -> NUMERO . DIVISION NUMERO

    CIERRA_P        shift and go to state 813
    SUMA            shift and go to state 126
    RESTA           shift and go to state 127
    MULTI           shift and go to state 128
    DIVISION        shift and go to state 129


state 712

    (225) Greater -> GREATER ABRE_P expresion_alge2 COMA RESTA . NUMERO CIERRA_P
    (108) expresion_alge1 -> RESTA . NUMERO SUMA NUMERO
    (109) expresion_alge1 -> RESTA . NUMERO RESTA NUMERO
    (110) expresion_alge1 -> RESTA . NUMERO MULTI NUMERO
    (111) expresion_alge1 -> RESTA . NUMERO DIVISION NUMERO

    NUMERO          shift and go to state 814


state 713

    (211) Greater -> GREATER ABRE_P Var COMA Var . CIERRA_P

    CIERRA_P        shift and go to state 815


state 714

    (216) Greater -> GREATER ABRE_P Var COMA NUMERO . CIERRA_P
    (104) expresion_alge1 -> NUMERO . SUMA NUMERO
    (105) expresion_alge1 -> NUMERO . RESTA NUMERO
    (106) expresion_alge1 -> NUMERO . MULTI NUMERO
    (107) expresion_alge1 -> NUMERO . DIVISION NUMERO

    CIERRA_P        shift and go to state 816
    SUMA            shift and go to state 126
    RESTA           shift and go to state 127
    MULTI           shift and go to state 128
    DIVISION        shift and go to state 129


state 715

    (217) Greater -> GREATER ABRE_P Var COMA RESTA . NUMERO CIERRA_P
    (108) expresion_alge1 -> RESTA . NUMERO SUMA NUMERO
    (109) expresion_alge1 -> RESTA . NUMERO RESTA NUMERO
    (110) expresion_alge1 -> RESTA . NUMERO MULTI NUMERO
    (111) expresion_alge1 -> RESTA . NUMERO DIVISION NUMERO

    NUMERO          shift and go to state 817


state 716

    (218) Greater -> GREATER ABRE_P Var COMA expresion_alge1 . CIERRA_P

    CIERRA_P        shift and go to state 818


state 717

    (219) Greater -> GREATER ABRE_P Var COMA expresion_alge2 . CIERRA_P

    CIERRA_P        shift and go to state 819


state 718

    (231) Smaller -> SMALLER ABRE_P NUMERO COMA NUMERO . CIERRA_P
    (104) expresion_alge1 -> NUMERO . SUMA NUMERO
    (105) expresion_alge1 -> NUMERO . RESTA NUMERO
    (106) expresion_alge1 -> NUMERO . MULTI NUMERO
    (107) expresion_alge1 -> NUMERO . DIVISION NUMERO

    CIERRA_P        shift and go to state 820
    SUMA            shift and go to state 126
    RESTA           shift and go to state 127
    MULTI           shift and go to state 128
    DIVISION        shift and go to state 129


state 719

    (233) Smaller -> SMALLER ABRE_P NUMERO COMA RESTA . NUMERO CIERRA_P
    (108) expresion_alge1 -> RESTA . NUMERO SUMA NUMERO
    (109) expresion_alge1 -> RESTA . NUMERO RESTA NUMERO
    (110) expresion_alge1 -> RESTA . NUMERO MULTI NUMERO
    (111) expresion_alge1 -> RESTA . NUMERO DIVISION NUMERO

    NUMERO          shift and go to state 821


state 720

    (237) Smaller -> SMALLER ABRE_P NUMERO COMA Var . CIERRA_P

    CIERRA_P        shift and go to state 822


state 721

    (251) Smaller -> SMALLER ABRE_P NUMERO COMA expresion_alge1 . CIERRA_P

    CIERRA_P        shift and go to state 823


state 722

    (253) Smaller -> SMALLER ABRE_P NUMERO COMA expresion_alge2 . CIERRA_P

    CIERRA_P        shift and go to state 824


state 723

    (232) Smaller -> SMALLER ABRE_P RESTA NUMERO COMA . NUMERO CIERRA_P
    (238) Smaller -> SMALLER ABRE_P RESTA NUMERO COMA . Var CIERRA_P
    (252) Smaller -> SMALLER ABRE_P RESTA NUMERO COMA . expresion_alge1 CIERRA_P
    (254) Smaller -> SMALLER ABRE_P RESTA NUMERO COMA . expresion_alge2 CIERRA_P
    (255) Smaller -> SMALLER ABRE_P RESTA NUMERO COMA . RESTA NUMERO CIERRA_P
    (180) Var -> . VAR
    (104) expresion_alge1 -> . NUMERO SUMA NUMERO
    (105) expresion_alge1 -> . NUMERO RESTA NUMERO
    (106) expresion_alge1 -> . NUMERO MULTI NUMERO
    (107) expresion_alge1 -> . NUMERO DIVISION NUMERO
    (108) expresion_alge1 -> . RESTA NUMERO SUMA NUMERO
    (109) expresion_alge1 -> . RESTA NUMERO RESTA NUMERO
    (110) expresion_alge1 -> . RESTA NUMERO MULTI NUMERO
    (111) expresion_alge1 -> . RESTA NUMERO DIVISION NUMERO
    (112) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P SUMA ABRE_P expresion_alge1 CIERRA_P
    (113) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P RESTA ABRE_P expresion_alge1 CIERRA_P
    (114) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P MULT ABRE_P expresion_alge1 CIERRA_P
    (115) expresion_alge2 -> . ABRE_P expresion_alge1 CIERRA_P DIV ABRE_P expresion_alge1 CIERRA_P

    NUMERO          shift and go to state 826
    RESTA           shift and go to state 825
    VAR             shift and go to state 34
    ABRE_P          shift and go to state 63

    Var                            shift and go to state 827
    expresion_alge1                shift and go to state 828
    expresion_alge2                shift and go to state 829

state 724

    (234) Smaller -> SMALLER ABRE_P expresion_alge1 COMA expresion_alge1 . CIERRA_P

    CIERRA_P        shift and go to state 830


state 725

    (240) Smaller -> SMALLER ABRE_P expresion_alge1 COMA Var . CIERRA_P

    CIERRA_P        shift and go to state 831


state 726

    (245) Smaller -> SMALLER ABRE_P expresion_alge1 COMA expresion_alge2 . CIERRA_P

    CIERRA_P        shift and go to state 832


state 727

    (247) Smaller -> SMALLER ABRE_P expresion_alge1 COMA NUMERO . CIERRA_P
    (104) expresion_alge1 -> NUMERO . SUMA NUMERO
    (105) expresion_alge1 -> NUMERO . RESTA NUMERO
    (106) expresion_alge1 -> NUMERO . MULTI NUMERO
    (107) expresion_alge1 -> NUMERO . DIVISION NUMERO

    CIERRA_P        shift and go to state 833
    SUMA            shift and go to state 126
    RESTA           shift and go to state 127
    MULTI           shift and go to state 128
    DIVISION        shift and go to state 129


state 728

    (248) Smaller -> SMALLER ABRE_P expresion_alge1 COMA RESTA . NUMERO CIERRA_P
    (108) expresion_alge1 -> RESTA . NUMERO SUMA NUMERO
    (109) expresion_alge1 -> RESTA . NUMERO RESTA NUMERO
    (110) expresion_alge1 -> RESTA . NUMERO MULTI NUMERO
    (111) expresion_alge1 -> RESTA . NUMERO DIVISION NUMERO

    NUMERO          shift and go to state 834


state 729

    (235) Smaller -> SMALLER ABRE_P expresion_alge2 COMA expresion_alge2 . CIERRA_P

    CIERRA_P        shift and go to state 835


state 730

    (239) Smaller -> SMALLER ABRE_P expresion_alge2 COMA Var . CIERRA_P

    CIERRA_P        shift and go to state 836


state 731

    (246) Smaller -> SMALLER ABRE_P expresion_alge2 COMA expresion_alge1 . CIERRA_P

    CIERRA_P        shift and go to state 837


state 732

    (249) Smaller -> SMALLER ABRE_P expresion_alge2 COMA NUMERO . CIERRA_P
    (104) expresion_alge1 -> NUMERO . SUMA NUMERO
    (105) expresion_alge1 -> NUMERO . RESTA NUMERO
    (106) expresion_alge1 -> NUMERO . MULTI NUMERO
    (107) expresion_alge1 -> NUMERO . DIVISION NUMERO

    CIERRA_P        shift and go to state 838
    SUMA            shift and go to state 126
    RESTA           shift and go to state 127
    MULTI           shift and go to state 128
    DIVISION        shift and go to state 129


state 733

    (250) Smaller -> SMALLER ABRE_P expresion_alge2 COMA RESTA . NUMERO CIERRA_P
    (108) expresion_alge1 -> RESTA . NUMERO SUMA NUMERO
    (109) expresion_alge1 -> RESTA . NUMERO RESTA NUMERO
    (110) expresion_alge1 -> RESTA . NUMERO MULTI NUMERO
    (111) expresion_alge1 -> RESTA . NUMERO DIVISION NUMERO

    NUMERO          shift and go to state 839


state 734

    (236) Smaller -> SMALLER ABRE_P Var COMA Var . CIERRA_P

    CIERRA_P        shift and go to state 840


state 735

    (241) Smaller -> SMALLER ABRE_P Var COMA NUMERO . CIERRA_P
    (104) expresion_alge1 -> NUMERO . SUMA NUMERO
    (105) expresion_alge1 -> NUMERO . RESTA NUMERO
    (106) expresion_alge1 -> NUMERO . MULTI NUMERO
    (107) expresion_alge1 -> NUMERO . DIVISION NUMERO

    CIERRA_P        shift and go to state 841
    SUMA            shift and go to state 126
    RESTA           shift and go to state 127
    MULTI           shift and go to state 128
    DIVISION        shift and go to state 129


state 736

    (242) Smaller -> SMALLER ABRE_P Var COMA RESTA . NUMERO CIERRA_P
    (108) expresion_alge1 -> RESTA . NUMERO SUMA NUMERO
    (109) expresion_alge1 -> RESTA . NUMERO RESTA NUMERO
    (110) expresion_alge1 -> RESTA . NUMERO MULTI NUMERO
    (111) expresion_alge1 -> RESTA . NUMERO DIVISION NUMERO

    NUMERO          shift and go to state 842


state 737

    (243) Smaller -> SMALLER ABRE_P Var COMA expresion_alge1 . CIERRA_P

    CIERRA_P        shift and go to state 843


state 738

    (244) Smaller -> SMALLER ABRE_P Var COMA expresion_alge2 . CIERRA_P

    CIERRA_P        shift and go to state 844


state 739

    (265) IfElse -> IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 . BRACKET1 funcion BRACKET2

    BRACKET1        shift and go to state 845


state 740

    (268) Until -> UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2 .

    PUNTOCOMA       reduce using rule 268 (Until -> UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2 .)
    NUMERO          reduce using rule 268 (Until -> UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2 .)
    RESTA           reduce using rule 268 (Until -> UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2 .)
    ABRE_P          reduce using rule 268 (Until -> UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2 .)
    SUM             reduce using rule 268 (Until -> UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2 .)
    SUBSTR          reduce using rule 268 (Until -> UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2 .)
    MULT            reduce using rule 268 (Until -> UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2 .)
    DIV             reduce using rule 268 (Until -> UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2 .)
    RANDOM          reduce using rule 268 (Until -> UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2 .)
    IF              reduce using rule 268 (Until -> UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2 .)
    IFELSE          reduce using rule 268 (Until -> UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2 .)
    UNTIL           reduce using rule 268 (Until -> UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2 .)
    WHILE           reduce using rule 268 (Until -> UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2 .)
    PRINTLINE       reduce using rule 268 (Until -> UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2 .)
    AND             reduce using rule 268 (Until -> UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2 .)
    OR              reduce using rule 268 (Until -> UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2 .)
    ADD             reduce using rule 268 (Until -> UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2 .)
    PUT             reduce using rule 268 (Until -> UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2 .)
    FIN             reduce using rule 268 (Until -> UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2 .)
    CIERRA_P        reduce using rule 268 (Until -> UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2 .)
    BRACKET2        reduce using rule 268 (Until -> UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2 .)


state 741

    (266) While -> WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2 .

    PUNTOCOMA       reduce using rule 266 (While -> WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2 .)
    NUMERO          reduce using rule 266 (While -> WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2 .)
    RESTA           reduce using rule 266 (While -> WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2 .)
    ABRE_P          reduce using rule 266 (While -> WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2 .)
    SUM             reduce using rule 266 (While -> WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2 .)
    SUBSTR          reduce using rule 266 (While -> WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2 .)
    MULT            reduce using rule 266 (While -> WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2 .)
    DIV             reduce using rule 266 (While -> WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2 .)
    RANDOM          reduce using rule 266 (While -> WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2 .)
    IF              reduce using rule 266 (While -> WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2 .)
    IFELSE          reduce using rule 266 (While -> WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2 .)
    UNTIL           reduce using rule 266 (While -> WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2 .)
    WHILE           reduce using rule 266 (While -> WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2 .)
    PRINTLINE       reduce using rule 266 (While -> WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2 .)
    AND             reduce using rule 266 (While -> WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2 .)
    OR              reduce using rule 266 (While -> WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2 .)
    ADD             reduce using rule 266 (While -> WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2 .)
    PUT             reduce using rule 266 (While -> WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2 .)
    FIN             reduce using rule 266 (While -> WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2 .)
    CIERRA_P        reduce using rule 266 (While -> WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2 .)
    BRACKET2        reduce using rule 266 (While -> WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2 .)


state 742

    (269) Add -> ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA .

    PUNTOCOMA       reduce using rule 269 (Add -> ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA .)
    NUMERO          reduce using rule 269 (Add -> ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA .)
    RESTA           reduce using rule 269 (Add -> ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA .)
    ABRE_P          reduce using rule 269 (Add -> ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA .)
    SUM             reduce using rule 269 (Add -> ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA .)
    SUBSTR          reduce using rule 269 (Add -> ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA .)
    MULT            reduce using rule 269 (Add -> ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA .)
    DIV             reduce using rule 269 (Add -> ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA .)
    RANDOM          reduce using rule 269 (Add -> ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA .)
    IF              reduce using rule 269 (Add -> ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA .)
    IFELSE          reduce using rule 269 (Add -> ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA .)
    UNTIL           reduce using rule 269 (Add -> ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA .)
    WHILE           reduce using rule 269 (Add -> ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA .)
    PRINTLINE       reduce using rule 269 (Add -> ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA .)
    AND             reduce using rule 269 (Add -> ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA .)
    OR              reduce using rule 269 (Add -> ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA .)
    ADD             reduce using rule 269 (Add -> ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA .)
    PUT             reduce using rule 269 (Add -> ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA .)
    FIN             reduce using rule 269 (Add -> ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA .)
    CIERRA_P        reduce using rule 269 (Add -> ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 269 (Add -> ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA .)


state 743

    (273) Add -> ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA .

    PUNTOCOMA       reduce using rule 273 (Add -> ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA .)
    NUMERO          reduce using rule 273 (Add -> ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA .)
    RESTA           reduce using rule 273 (Add -> ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA .)
    ABRE_P          reduce using rule 273 (Add -> ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA .)
    SUM             reduce using rule 273 (Add -> ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA .)
    SUBSTR          reduce using rule 273 (Add -> ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA .)
    MULT            reduce using rule 273 (Add -> ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA .)
    DIV             reduce using rule 273 (Add -> ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA .)
    RANDOM          reduce using rule 273 (Add -> ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA .)
    IF              reduce using rule 273 (Add -> ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA .)
    IFELSE          reduce using rule 273 (Add -> ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA .)
    UNTIL           reduce using rule 273 (Add -> ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA .)
    WHILE           reduce using rule 273 (Add -> ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA .)
    PRINTLINE       reduce using rule 273 (Add -> ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA .)
    AND             reduce using rule 273 (Add -> ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA .)
    OR              reduce using rule 273 (Add -> ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA .)
    ADD             reduce using rule 273 (Add -> ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA .)
    PUT             reduce using rule 273 (Add -> ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA .)
    FIN             reduce using rule 273 (Add -> ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA .)
    CIERRA_P        reduce using rule 273 (Add -> ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 273 (Add -> ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA .)


state 744

    (270) Add -> ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA .

    PUNTOCOMA       reduce using rule 270 (Add -> ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA .)
    NUMERO          reduce using rule 270 (Add -> ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA .)
    RESTA           reduce using rule 270 (Add -> ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA .)
    ABRE_P          reduce using rule 270 (Add -> ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA .)
    SUM             reduce using rule 270 (Add -> ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA .)
    SUBSTR          reduce using rule 270 (Add -> ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA .)
    MULT            reduce using rule 270 (Add -> ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA .)
    DIV             reduce using rule 270 (Add -> ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA .)
    RANDOM          reduce using rule 270 (Add -> ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA .)
    IF              reduce using rule 270 (Add -> ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA .)
    IFELSE          reduce using rule 270 (Add -> ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA .)
    UNTIL           reduce using rule 270 (Add -> ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA .)
    WHILE           reduce using rule 270 (Add -> ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA .)
    PRINTLINE       reduce using rule 270 (Add -> ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA .)
    AND             reduce using rule 270 (Add -> ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA .)
    OR              reduce using rule 270 (Add -> ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA .)
    ADD             reduce using rule 270 (Add -> ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA .)
    PUT             reduce using rule 270 (Add -> ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA .)
    FIN             reduce using rule 270 (Add -> ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA .)
    CIERRA_P        reduce using rule 270 (Add -> ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 270 (Add -> ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA .)


state 745

    (271) Add -> ADD ABRE_P Var COMA RESTA NUMERO CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 846


state 746

    (272) Add -> ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA .

    PUNTOCOMA       reduce using rule 272 (Add -> ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    NUMERO          reduce using rule 272 (Add -> ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    RESTA           reduce using rule 272 (Add -> ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    ABRE_P          reduce using rule 272 (Add -> ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    SUM             reduce using rule 272 (Add -> ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    SUBSTR          reduce using rule 272 (Add -> ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    MULT            reduce using rule 272 (Add -> ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    DIV             reduce using rule 272 (Add -> ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    RANDOM          reduce using rule 272 (Add -> ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    IF              reduce using rule 272 (Add -> ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    IFELSE          reduce using rule 272 (Add -> ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    UNTIL           reduce using rule 272 (Add -> ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    WHILE           reduce using rule 272 (Add -> ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    PRINTLINE       reduce using rule 272 (Add -> ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    AND             reduce using rule 272 (Add -> ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    OR              reduce using rule 272 (Add -> ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    ADD             reduce using rule 272 (Add -> ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    PUT             reduce using rule 272 (Add -> ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    FIN             reduce using rule 272 (Add -> ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    CIERRA_P        reduce using rule 272 (Add -> ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 272 (Add -> ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA .)


state 747

    (274) Add -> ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA .

    PUNTOCOMA       reduce using rule 274 (Add -> ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    NUMERO          reduce using rule 274 (Add -> ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    RESTA           reduce using rule 274 (Add -> ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    ABRE_P          reduce using rule 274 (Add -> ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    SUM             reduce using rule 274 (Add -> ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    SUBSTR          reduce using rule 274 (Add -> ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    MULT            reduce using rule 274 (Add -> ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    DIV             reduce using rule 274 (Add -> ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    RANDOM          reduce using rule 274 (Add -> ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    IF              reduce using rule 274 (Add -> ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    IFELSE          reduce using rule 274 (Add -> ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    UNTIL           reduce using rule 274 (Add -> ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    WHILE           reduce using rule 274 (Add -> ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    PRINTLINE       reduce using rule 274 (Add -> ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    AND             reduce using rule 274 (Add -> ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    OR              reduce using rule 274 (Add -> ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    ADD             reduce using rule 274 (Add -> ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    PUT             reduce using rule 274 (Add -> ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    FIN             reduce using rule 274 (Add -> ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    CIERRA_P        reduce using rule 274 (Add -> ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 274 (Add -> ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA .)


state 748

    (27) llamadoproc -> PARA id BRACKET1 parametro BRACKET2 PUNTOCOMA .

    FIN             reduce using rule 27 (llamadoproc -> PARA id BRACKET1 parametro BRACKET2 PUNTOCOMA .)


state 749

    (299) Diag -> POS ABRE_P STRING COMA NUMERO CIERRA_P . PUNTOCOMA

    PUNTOCOMA       shift and go to state 847


state 750

    (300) Pos -> POS ABRE_P NUMERO COMA NUMERO CIERRA_P .

    BEGINNING       reduce using rule 300 (Pos -> POS ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    CONTINUEUP      reduce using rule 300 (Pos -> POS ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    CONTINUEDOWN    reduce using rule 300 (Pos -> POS ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    CONTINUERIGHT   reduce using rule 300 (Pos -> POS ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    CONTINUELEFT    reduce using rule 300 (Pos -> POS ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    UP              reduce using rule 300 (Pos -> POS ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    DOWN            reduce using rule 300 (Pos -> POS ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    SPEED           reduce using rule 300 (Pos -> POS ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    POS             reduce using rule 300 (Pos -> POS ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    POSX            reduce using rule 300 (Pos -> POS ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    POSY            reduce using rule 300 (Pos -> POS ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    USECOLOR        reduce using rule 300 (Pos -> POS ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    BRACKET2        reduce using rule 300 (Pos -> POS ABRE_P NUMERO COMA NUMERO CIERRA_P .)


state 751

    (302) Pos -> POS ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .

    BEGINNING       reduce using rule 302 (Pos -> POS ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    CONTINUEUP      reduce using rule 302 (Pos -> POS ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    CONTINUEDOWN    reduce using rule 302 (Pos -> POS ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    CONTINUERIGHT   reduce using rule 302 (Pos -> POS ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    CONTINUELEFT    reduce using rule 302 (Pos -> POS ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    UP              reduce using rule 302 (Pos -> POS ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    DOWN            reduce using rule 302 (Pos -> POS ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    SPEED           reduce using rule 302 (Pos -> POS ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    POS             reduce using rule 302 (Pos -> POS ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    POSX            reduce using rule 302 (Pos -> POS ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    POSY            reduce using rule 302 (Pos -> POS ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    USECOLOR        reduce using rule 302 (Pos -> POS ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    BRACKET2        reduce using rule 302 (Pos -> POS ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)


state 752

    (305) Pos -> POS ABRE_P NUMERO COMA Var CIERRA_P .

    BEGINNING       reduce using rule 305 (Pos -> POS ABRE_P NUMERO COMA Var CIERRA_P .)
    CONTINUEUP      reduce using rule 305 (Pos -> POS ABRE_P NUMERO COMA Var CIERRA_P .)
    CONTINUEDOWN    reduce using rule 305 (Pos -> POS ABRE_P NUMERO COMA Var CIERRA_P .)
    CONTINUERIGHT   reduce using rule 305 (Pos -> POS ABRE_P NUMERO COMA Var CIERRA_P .)
    CONTINUELEFT    reduce using rule 305 (Pos -> POS ABRE_P NUMERO COMA Var CIERRA_P .)
    UP              reduce using rule 305 (Pos -> POS ABRE_P NUMERO COMA Var CIERRA_P .)
    DOWN            reduce using rule 305 (Pos -> POS ABRE_P NUMERO COMA Var CIERRA_P .)
    SPEED           reduce using rule 305 (Pos -> POS ABRE_P NUMERO COMA Var CIERRA_P .)
    POS             reduce using rule 305 (Pos -> POS ABRE_P NUMERO COMA Var CIERRA_P .)
    POSX            reduce using rule 305 (Pos -> POS ABRE_P NUMERO COMA Var CIERRA_P .)
    POSY            reduce using rule 305 (Pos -> POS ABRE_P NUMERO COMA Var CIERRA_P .)
    USECOLOR        reduce using rule 305 (Pos -> POS ABRE_P NUMERO COMA Var CIERRA_P .)
    BRACKET2        reduce using rule 305 (Pos -> POS ABRE_P NUMERO COMA Var CIERRA_P .)


state 753

    (311) Pos -> POS ABRE_P NUMERO COMA RESTA NUMERO . CIERRA_P
    (108) expresion_alge1 -> RESTA NUMERO . SUMA NUMERO
    (109) expresion_alge1 -> RESTA NUMERO . RESTA NUMERO
    (110) expresion_alge1 -> RESTA NUMERO . MULTI NUMERO
    (111) expresion_alge1 -> RESTA NUMERO . DIVISION NUMERO

    CIERRA_P        shift and go to state 848
    SUMA            shift and go to state 180
    RESTA           shift and go to state 179
    MULTI           shift and go to state 181
    DIVISION        shift and go to state 182


state 754

    (303) Pos -> POS ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .

    BEGINNING       reduce using rule 303 (Pos -> POS ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    CONTINUEUP      reduce using rule 303 (Pos -> POS ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    CONTINUEDOWN    reduce using rule 303 (Pos -> POS ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    CONTINUERIGHT   reduce using rule 303 (Pos -> POS ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    CONTINUELEFT    reduce using rule 303 (Pos -> POS ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    UP              reduce using rule 303 (Pos -> POS ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    DOWN            reduce using rule 303 (Pos -> POS ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    SPEED           reduce using rule 303 (Pos -> POS ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    POS             reduce using rule 303 (Pos -> POS ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    POSX            reduce using rule 303 (Pos -> POS ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    POSY            reduce using rule 303 (Pos -> POS ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    USECOLOR        reduce using rule 303 (Pos -> POS ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    BRACKET2        reduce using rule 303 (Pos -> POS ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)


state 755

    (301) Pos -> POS ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .

    BEGINNING       reduce using rule 301 (Pos -> POS ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    CONTINUEUP      reduce using rule 301 (Pos -> POS ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    CONTINUEDOWN    reduce using rule 301 (Pos -> POS ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    CONTINUERIGHT   reduce using rule 301 (Pos -> POS ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    CONTINUELEFT    reduce using rule 301 (Pos -> POS ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    UP              reduce using rule 301 (Pos -> POS ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    DOWN            reduce using rule 301 (Pos -> POS ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    SPEED           reduce using rule 301 (Pos -> POS ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    POS             reduce using rule 301 (Pos -> POS ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    POSX            reduce using rule 301 (Pos -> POS ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    POSY            reduce using rule 301 (Pos -> POS ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    USECOLOR        reduce using rule 301 (Pos -> POS ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    BRACKET2        reduce using rule 301 (Pos -> POS ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)


state 756

    (307) Pos -> POS ABRE_P expresion_alge1 COMA Var CIERRA_P .

    BEGINNING       reduce using rule 307 (Pos -> POS ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    CONTINUEUP      reduce using rule 307 (Pos -> POS ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    CONTINUEDOWN    reduce using rule 307 (Pos -> POS ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    CONTINUERIGHT   reduce using rule 307 (Pos -> POS ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    CONTINUELEFT    reduce using rule 307 (Pos -> POS ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    UP              reduce using rule 307 (Pos -> POS ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    DOWN            reduce using rule 307 (Pos -> POS ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    SPEED           reduce using rule 307 (Pos -> POS ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    POS             reduce using rule 307 (Pos -> POS ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    POSX            reduce using rule 307 (Pos -> POS ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    POSY            reduce using rule 307 (Pos -> POS ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    USECOLOR        reduce using rule 307 (Pos -> POS ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    BRACKET2        reduce using rule 307 (Pos -> POS ABRE_P expresion_alge1 COMA Var CIERRA_P .)


state 757

    (313) Pos -> POS ABRE_P expresion_alge1 COMA RESTA NUMERO . CIERRA_P
    (108) expresion_alge1 -> RESTA NUMERO . SUMA NUMERO
    (109) expresion_alge1 -> RESTA NUMERO . RESTA NUMERO
    (110) expresion_alge1 -> RESTA NUMERO . MULTI NUMERO
    (111) expresion_alge1 -> RESTA NUMERO . DIVISION NUMERO

    CIERRA_P        shift and go to state 849
    SUMA            shift and go to state 180
    RESTA           shift and go to state 179
    MULTI           shift and go to state 181
    DIVISION        shift and go to state 182


state 758

    (306) Pos -> POS ABRE_P Var COMA Var CIERRA_P .

    BEGINNING       reduce using rule 306 (Pos -> POS ABRE_P Var COMA Var CIERRA_P .)
    CONTINUEUP      reduce using rule 306 (Pos -> POS ABRE_P Var COMA Var CIERRA_P .)
    CONTINUEDOWN    reduce using rule 306 (Pos -> POS ABRE_P Var COMA Var CIERRA_P .)
    CONTINUERIGHT   reduce using rule 306 (Pos -> POS ABRE_P Var COMA Var CIERRA_P .)
    CONTINUELEFT    reduce using rule 306 (Pos -> POS ABRE_P Var COMA Var CIERRA_P .)
    UP              reduce using rule 306 (Pos -> POS ABRE_P Var COMA Var CIERRA_P .)
    DOWN            reduce using rule 306 (Pos -> POS ABRE_P Var COMA Var CIERRA_P .)
    SPEED           reduce using rule 306 (Pos -> POS ABRE_P Var COMA Var CIERRA_P .)
    POS             reduce using rule 306 (Pos -> POS ABRE_P Var COMA Var CIERRA_P .)
    POSX            reduce using rule 306 (Pos -> POS ABRE_P Var COMA Var CIERRA_P .)
    POSY            reduce using rule 306 (Pos -> POS ABRE_P Var COMA Var CIERRA_P .)
    USECOLOR        reduce using rule 306 (Pos -> POS ABRE_P Var COMA Var CIERRA_P .)
    BRACKET2        reduce using rule 306 (Pos -> POS ABRE_P Var COMA Var CIERRA_P .)


state 759

    (304) Pos -> POS ABRE_P Var COMA NUMERO CIERRA_P .

    BEGINNING       reduce using rule 304 (Pos -> POS ABRE_P Var COMA NUMERO CIERRA_P .)
    CONTINUEUP      reduce using rule 304 (Pos -> POS ABRE_P Var COMA NUMERO CIERRA_P .)
    CONTINUEDOWN    reduce using rule 304 (Pos -> POS ABRE_P Var COMA NUMERO CIERRA_P .)
    CONTINUERIGHT   reduce using rule 304 (Pos -> POS ABRE_P Var COMA NUMERO CIERRA_P .)
    CONTINUELEFT    reduce using rule 304 (Pos -> POS ABRE_P Var COMA NUMERO CIERRA_P .)
    UP              reduce using rule 304 (Pos -> POS ABRE_P Var COMA NUMERO CIERRA_P .)
    DOWN            reduce using rule 304 (Pos -> POS ABRE_P Var COMA NUMERO CIERRA_P .)
    SPEED           reduce using rule 304 (Pos -> POS ABRE_P Var COMA NUMERO CIERRA_P .)
    POS             reduce using rule 304 (Pos -> POS ABRE_P Var COMA NUMERO CIERRA_P .)
    POSX            reduce using rule 304 (Pos -> POS ABRE_P Var COMA NUMERO CIERRA_P .)
    POSY            reduce using rule 304 (Pos -> POS ABRE_P Var COMA NUMERO CIERRA_P .)
    USECOLOR        reduce using rule 304 (Pos -> POS ABRE_P Var COMA NUMERO CIERRA_P .)
    BRACKET2        reduce using rule 304 (Pos -> POS ABRE_P Var COMA NUMERO CIERRA_P .)


state 760

    (308) Pos -> POS ABRE_P Var COMA expresion_alge1 CIERRA_P .

    BEGINNING       reduce using rule 308 (Pos -> POS ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    CONTINUEUP      reduce using rule 308 (Pos -> POS ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    CONTINUEDOWN    reduce using rule 308 (Pos -> POS ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    CONTINUERIGHT   reduce using rule 308 (Pos -> POS ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    CONTINUELEFT    reduce using rule 308 (Pos -> POS ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    UP              reduce using rule 308 (Pos -> POS ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    DOWN            reduce using rule 308 (Pos -> POS ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    SPEED           reduce using rule 308 (Pos -> POS ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    POS             reduce using rule 308 (Pos -> POS ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    POSX            reduce using rule 308 (Pos -> POS ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    POSY            reduce using rule 308 (Pos -> POS ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    USECOLOR        reduce using rule 308 (Pos -> POS ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    BRACKET2        reduce using rule 308 (Pos -> POS ABRE_P Var COMA expresion_alge1 CIERRA_P .)


state 761

    (314) Pos -> POS ABRE_P Var COMA RESTA NUMERO . CIERRA_P
    (108) expresion_alge1 -> RESTA NUMERO . SUMA NUMERO
    (109) expresion_alge1 -> RESTA NUMERO . RESTA NUMERO
    (110) expresion_alge1 -> RESTA NUMERO . MULTI NUMERO
    (111) expresion_alge1 -> RESTA NUMERO . DIVISION NUMERO

    CIERRA_P        shift and go to state 850
    SUMA            shift and go to state 180
    RESTA           shift and go to state 179
    MULTI           shift and go to state 181
    DIVISION        shift and go to state 182


state 762

    (309) Pos -> POS ABRE_P RESTA NUMERO COMA RESTA . NUMERO CIERRA_P
    (108) expresion_alge1 -> RESTA . NUMERO SUMA NUMERO
    (109) expresion_alge1 -> RESTA . NUMERO RESTA NUMERO
    (110) expresion_alge1 -> RESTA . NUMERO MULTI NUMERO
    (111) expresion_alge1 -> RESTA . NUMERO DIVISION NUMERO

    NUMERO          shift and go to state 851


state 763

    (310) Pos -> POS ABRE_P RESTA NUMERO COMA NUMERO . CIERRA_P
    (104) expresion_alge1 -> NUMERO . SUMA NUMERO
    (105) expresion_alge1 -> NUMERO . RESTA NUMERO
    (106) expresion_alge1 -> NUMERO . MULTI NUMERO
    (107) expresion_alge1 -> NUMERO . DIVISION NUMERO

    CIERRA_P        shift and go to state 852
    SUMA            shift and go to state 126
    RESTA           shift and go to state 127
    MULTI           shift and go to state 128
    DIVISION        shift and go to state 129


state 764

    (312) Pos -> POS ABRE_P RESTA NUMERO COMA expresion_alge1 . CIERRA_P

    CIERRA_P        shift and go to state 853


state 765

    (315) Pos -> POS ABRE_P RESTA NUMERO COMA Var . CIERRA_P

    CIERRA_P        shift and go to state 854


state 766

    (163) Mult -> MULT ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P .

    PUNTOCOMA       reduce using rule 163 (Mult -> MULT ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P .)
    NUMERO          reduce using rule 163 (Mult -> MULT ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P .)
    RESTA           reduce using rule 163 (Mult -> MULT ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P .)
    ABRE_P          reduce using rule 163 (Mult -> MULT ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P .)
    SUM             reduce using rule 163 (Mult -> MULT ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P .)
    SUBSTR          reduce using rule 163 (Mult -> MULT ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P .)
    MULT            reduce using rule 163 (Mult -> MULT ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P .)
    DIV             reduce using rule 163 (Mult -> MULT ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P .)
    RANDOM          reduce using rule 163 (Mult -> MULT ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P .)
    IF              reduce using rule 163 (Mult -> MULT ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P .)
    IFELSE          reduce using rule 163 (Mult -> MULT ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P .)
    UNTIL           reduce using rule 163 (Mult -> MULT ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P .)
    WHILE           reduce using rule 163 (Mult -> MULT ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P .)
    PRINTLINE       reduce using rule 163 (Mult -> MULT ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P .)
    AND             reduce using rule 163 (Mult -> MULT ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P .)
    OR              reduce using rule 163 (Mult -> MULT ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P .)
    ADD             reduce using rule 163 (Mult -> MULT ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P .)
    PUT             reduce using rule 163 (Mult -> MULT ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P .)
    FIN             reduce using rule 163 (Mult -> MULT ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P .)


state 767

    (179) Div -> DIV ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P .

    PUNTOCOMA       reduce using rule 179 (Div -> DIV ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P .)
    NUMERO          reduce using rule 179 (Div -> DIV ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P .)
    RESTA           reduce using rule 179 (Div -> DIV ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P .)
    ABRE_P          reduce using rule 179 (Div -> DIV ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P .)
    SUM             reduce using rule 179 (Div -> DIV ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P .)
    SUBSTR          reduce using rule 179 (Div -> DIV ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P .)
    MULT            reduce using rule 179 (Div -> DIV ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P .)
    DIV             reduce using rule 179 (Div -> DIV ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P .)
    RANDOM          reduce using rule 179 (Div -> DIV ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P .)
    IF              reduce using rule 179 (Div -> DIV ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P .)
    IFELSE          reduce using rule 179 (Div -> DIV ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P .)
    UNTIL           reduce using rule 179 (Div -> DIV ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P .)
    WHILE           reduce using rule 179 (Div -> DIV ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P .)
    PRINTLINE       reduce using rule 179 (Div -> DIV ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P .)
    AND             reduce using rule 179 (Div -> DIV ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P .)
    OR              reduce using rule 179 (Div -> DIV ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P .)
    ADD             reduce using rule 179 (Div -> DIV ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P .)
    PUT             reduce using rule 179 (Div -> DIV ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P .)
    FIN             reduce using rule 179 (Div -> DIV ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P .)


state 768

    (131) Sum -> SUM ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P .

    PUNTOCOMA       reduce using rule 131 (Sum -> SUM ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P .)
    NUMERO          reduce using rule 131 (Sum -> SUM ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P .)
    RESTA           reduce using rule 131 (Sum -> SUM ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P .)
    ABRE_P          reduce using rule 131 (Sum -> SUM ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P .)
    SUM             reduce using rule 131 (Sum -> SUM ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P .)
    SUBSTR          reduce using rule 131 (Sum -> SUM ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P .)
    MULT            reduce using rule 131 (Sum -> SUM ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P .)
    DIV             reduce using rule 131 (Sum -> SUM ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P .)
    RANDOM          reduce using rule 131 (Sum -> SUM ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P .)
    IF              reduce using rule 131 (Sum -> SUM ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P .)
    IFELSE          reduce using rule 131 (Sum -> SUM ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P .)
    UNTIL           reduce using rule 131 (Sum -> SUM ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P .)
    WHILE           reduce using rule 131 (Sum -> SUM ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P .)
    PRINTLINE       reduce using rule 131 (Sum -> SUM ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P .)
    AND             reduce using rule 131 (Sum -> SUM ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P .)
    OR              reduce using rule 131 (Sum -> SUM ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P .)
    ADD             reduce using rule 131 (Sum -> SUM ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P .)
    PUT             reduce using rule 131 (Sum -> SUM ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P .)
    FIN             reduce using rule 131 (Sum -> SUM ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P .)


state 769

    (147) Substr -> SUBSTR ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P .

    PUNTOCOMA       reduce using rule 147 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P .)
    NUMERO          reduce using rule 147 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P .)
    RESTA           reduce using rule 147 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P .)
    ABRE_P          reduce using rule 147 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P .)
    SUM             reduce using rule 147 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P .)
    SUBSTR          reduce using rule 147 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P .)
    MULT            reduce using rule 147 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P .)
    DIV             reduce using rule 147 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P .)
    RANDOM          reduce using rule 147 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P .)
    IF              reduce using rule 147 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P .)
    IFELSE          reduce using rule 147 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P .)
    UNTIL           reduce using rule 147 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P .)
    WHILE           reduce using rule 147 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P .)
    PRINTLINE       reduce using rule 147 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P .)
    AND             reduce using rule 147 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P .)
    OR              reduce using rule 147 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P .)
    ADD             reduce using rule 147 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P .)
    PUT             reduce using rule 147 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P .)
    FIN             reduce using rule 147 (Substr -> SUBSTR ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P .)


state 770

    (181) Equal -> EQUAL ABRE_P NUMERO COMA NUMERO CIERRA_P .

    CIERRA_P        reduce using rule 181 (Equal -> EQUAL ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    BRACKET2        reduce using rule 181 (Equal -> EQUAL ABRE_P NUMERO COMA NUMERO CIERRA_P .)


state 771

    (183) Equal -> EQUAL ABRE_P NUMERO COMA RESTA NUMERO . CIERRA_P
    (108) expresion_alge1 -> RESTA NUMERO . SUMA NUMERO
    (109) expresion_alge1 -> RESTA NUMERO . RESTA NUMERO
    (110) expresion_alge1 -> RESTA NUMERO . MULTI NUMERO
    (111) expresion_alge1 -> RESTA NUMERO . DIVISION NUMERO

    CIERRA_P        shift and go to state 855
    SUMA            shift and go to state 180
    RESTA           shift and go to state 179
    MULTI           shift and go to state 181
    DIVISION        shift and go to state 182


state 772

    (187) Equal -> EQUAL ABRE_P NUMERO COMA Var CIERRA_P .

    CIERRA_P        reduce using rule 187 (Equal -> EQUAL ABRE_P NUMERO COMA Var CIERRA_P .)
    BRACKET2        reduce using rule 187 (Equal -> EQUAL ABRE_P NUMERO COMA Var CIERRA_P .)


state 773

    (201) Equal -> EQUAL ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .

    CIERRA_P        reduce using rule 201 (Equal -> EQUAL ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    BRACKET2        reduce using rule 201 (Equal -> EQUAL ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)


state 774

    (203) Equal -> EQUAL ABRE_P NUMERO COMA expresion_alge2 CIERRA_P .

    CIERRA_P        reduce using rule 203 (Equal -> EQUAL ABRE_P NUMERO COMA expresion_alge2 CIERRA_P .)
    BRACKET2        reduce using rule 203 (Equal -> EQUAL ABRE_P NUMERO COMA expresion_alge2 CIERRA_P .)


state 775

    (205) Equal -> EQUAL ABRE_P RESTA NUMERO COMA RESTA . NUMERO CIERRA_P
    (108) expresion_alge1 -> RESTA . NUMERO SUMA NUMERO
    (109) expresion_alge1 -> RESTA . NUMERO RESTA NUMERO
    (110) expresion_alge1 -> RESTA . NUMERO MULTI NUMERO
    (111) expresion_alge1 -> RESTA . NUMERO DIVISION NUMERO

    NUMERO          shift and go to state 856


state 776

    (182) Equal -> EQUAL ABRE_P RESTA NUMERO COMA NUMERO . CIERRA_P
    (104) expresion_alge1 -> NUMERO . SUMA NUMERO
    (105) expresion_alge1 -> NUMERO . RESTA NUMERO
    (106) expresion_alge1 -> NUMERO . MULTI NUMERO
    (107) expresion_alge1 -> NUMERO . DIVISION NUMERO

    CIERRA_P        shift and go to state 857
    SUMA            shift and go to state 126
    RESTA           shift and go to state 127
    MULTI           shift and go to state 128
    DIVISION        shift and go to state 129


state 777

    (188) Equal -> EQUAL ABRE_P RESTA NUMERO COMA Var . CIERRA_P

    CIERRA_P        shift and go to state 858


state 778

    (202) Equal -> EQUAL ABRE_P RESTA NUMERO COMA expresion_alge1 . CIERRA_P

    CIERRA_P        shift and go to state 859


state 779

    (204) Equal -> EQUAL ABRE_P RESTA NUMERO COMA expresion_alge2 . CIERRA_P

    CIERRA_P        shift and go to state 860


state 780

    (184) Equal -> EQUAL ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .

    CIERRA_P        reduce using rule 184 (Equal -> EQUAL ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    BRACKET2        reduce using rule 184 (Equal -> EQUAL ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)


state 781

    (190) Equal -> EQUAL ABRE_P expresion_alge1 COMA Var CIERRA_P .

    CIERRA_P        reduce using rule 190 (Equal -> EQUAL ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    BRACKET2        reduce using rule 190 (Equal -> EQUAL ABRE_P expresion_alge1 COMA Var CIERRA_P .)


state 782

    (195) Equal -> EQUAL ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P .

    CIERRA_P        reduce using rule 195 (Equal -> EQUAL ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P .)
    BRACKET2        reduce using rule 195 (Equal -> EQUAL ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P .)


state 783

    (197) Equal -> EQUAL ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .

    CIERRA_P        reduce using rule 197 (Equal -> EQUAL ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    BRACKET2        reduce using rule 197 (Equal -> EQUAL ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)


state 784

    (198) Equal -> EQUAL ABRE_P expresion_alge1 COMA RESTA NUMERO . CIERRA_P
    (108) expresion_alge1 -> RESTA NUMERO . SUMA NUMERO
    (109) expresion_alge1 -> RESTA NUMERO . RESTA NUMERO
    (110) expresion_alge1 -> RESTA NUMERO . MULTI NUMERO
    (111) expresion_alge1 -> RESTA NUMERO . DIVISION NUMERO

    CIERRA_P        shift and go to state 861
    SUMA            shift and go to state 180
    RESTA           shift and go to state 179
    MULTI           shift and go to state 181
    DIVISION        shift and go to state 182


state 785

    (185) Equal -> EQUAL ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P .

    CIERRA_P        reduce using rule 185 (Equal -> EQUAL ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P .)
    BRACKET2        reduce using rule 185 (Equal -> EQUAL ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P .)


state 786

    (189) Equal -> EQUAL ABRE_P expresion_alge2 COMA Var CIERRA_P .

    CIERRA_P        reduce using rule 189 (Equal -> EQUAL ABRE_P expresion_alge2 COMA Var CIERRA_P .)
    BRACKET2        reduce using rule 189 (Equal -> EQUAL ABRE_P expresion_alge2 COMA Var CIERRA_P .)


state 787

    (196) Equal -> EQUAL ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P .

    CIERRA_P        reduce using rule 196 (Equal -> EQUAL ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P .)
    BRACKET2        reduce using rule 196 (Equal -> EQUAL ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P .)


state 788

    (199) Equal -> EQUAL ABRE_P expresion_alge2 COMA NUMERO CIERRA_P .

    CIERRA_P        reduce using rule 199 (Equal -> EQUAL ABRE_P expresion_alge2 COMA NUMERO CIERRA_P .)
    BRACKET2        reduce using rule 199 (Equal -> EQUAL ABRE_P expresion_alge2 COMA NUMERO CIERRA_P .)


state 789

    (200) Equal -> EQUAL ABRE_P expresion_alge2 COMA RESTA NUMERO . CIERRA_P
    (108) expresion_alge1 -> RESTA NUMERO . SUMA NUMERO
    (109) expresion_alge1 -> RESTA NUMERO . RESTA NUMERO
    (110) expresion_alge1 -> RESTA NUMERO . MULTI NUMERO
    (111) expresion_alge1 -> RESTA NUMERO . DIVISION NUMERO

    CIERRA_P        shift and go to state 862
    SUMA            shift and go to state 180
    RESTA           shift and go to state 179
    MULTI           shift and go to state 181
    DIVISION        shift and go to state 182


state 790

    (186) Equal -> EQUAL ABRE_P Var COMA Var CIERRA_P .

    CIERRA_P        reduce using rule 186 (Equal -> EQUAL ABRE_P Var COMA Var CIERRA_P .)
    BRACKET2        reduce using rule 186 (Equal -> EQUAL ABRE_P Var COMA Var CIERRA_P .)


state 791

    (191) Equal -> EQUAL ABRE_P Var COMA NUMERO CIERRA_P .

    CIERRA_P        reduce using rule 191 (Equal -> EQUAL ABRE_P Var COMA NUMERO CIERRA_P .)
    BRACKET2        reduce using rule 191 (Equal -> EQUAL ABRE_P Var COMA NUMERO CIERRA_P .)


state 792

    (192) Equal -> EQUAL ABRE_P Var COMA RESTA NUMERO . CIERRA_P
    (108) expresion_alge1 -> RESTA NUMERO . SUMA NUMERO
    (109) expresion_alge1 -> RESTA NUMERO . RESTA NUMERO
    (110) expresion_alge1 -> RESTA NUMERO . MULTI NUMERO
    (111) expresion_alge1 -> RESTA NUMERO . DIVISION NUMERO

    CIERRA_P        shift and go to state 863
    SUMA            shift and go to state 180
    RESTA           shift and go to state 179
    MULTI           shift and go to state 181
    DIVISION        shift and go to state 182


state 793

    (193) Equal -> EQUAL ABRE_P Var COMA expresion_alge1 CIERRA_P .

    CIERRA_P        reduce using rule 193 (Equal -> EQUAL ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    BRACKET2        reduce using rule 193 (Equal -> EQUAL ABRE_P Var COMA expresion_alge1 CIERRA_P .)


state 794

    (194) Equal -> EQUAL ABRE_P Var COMA expresion_alge2 CIERRA_P .

    CIERRA_P        reduce using rule 194 (Equal -> EQUAL ABRE_P Var COMA expresion_alge2 CIERRA_P .)
    BRACKET2        reduce using rule 194 (Equal -> EQUAL ABRE_P Var COMA expresion_alge2 CIERRA_P .)


state 795

    (206) Greater -> GREATER ABRE_P NUMERO COMA NUMERO CIERRA_P .

    CIERRA_P        reduce using rule 206 (Greater -> GREATER ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    BRACKET2        reduce using rule 206 (Greater -> GREATER ABRE_P NUMERO COMA NUMERO CIERRA_P .)


state 796

    (208) Greater -> GREATER ABRE_P NUMERO COMA RESTA NUMERO . CIERRA_P
    (108) expresion_alge1 -> RESTA NUMERO . SUMA NUMERO
    (109) expresion_alge1 -> RESTA NUMERO . RESTA NUMERO
    (110) expresion_alge1 -> RESTA NUMERO . MULTI NUMERO
    (111) expresion_alge1 -> RESTA NUMERO . DIVISION NUMERO

    CIERRA_P        shift and go to state 864
    SUMA            shift and go to state 180
    RESTA           shift and go to state 179
    MULTI           shift and go to state 181
    DIVISION        shift and go to state 182


state 797

    (212) Greater -> GREATER ABRE_P NUMERO COMA Var CIERRA_P .

    CIERRA_P        reduce using rule 212 (Greater -> GREATER ABRE_P NUMERO COMA Var CIERRA_P .)
    BRACKET2        reduce using rule 212 (Greater -> GREATER ABRE_P NUMERO COMA Var CIERRA_P .)


state 798

    (226) Greater -> GREATER ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .

    CIERRA_P        reduce using rule 226 (Greater -> GREATER ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    BRACKET2        reduce using rule 226 (Greater -> GREATER ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)


state 799

    (228) Greater -> GREATER ABRE_P NUMERO COMA expresion_alge2 CIERRA_P .

    CIERRA_P        reduce using rule 228 (Greater -> GREATER ABRE_P NUMERO COMA expresion_alge2 CIERRA_P .)
    BRACKET2        reduce using rule 228 (Greater -> GREATER ABRE_P NUMERO COMA expresion_alge2 CIERRA_P .)


state 800

    (230) Greater -> GREATER ABRE_P RESTA NUMERO COMA RESTA . NUMERO CIERRA_P
    (108) expresion_alge1 -> RESTA . NUMERO SUMA NUMERO
    (109) expresion_alge1 -> RESTA . NUMERO RESTA NUMERO
    (110) expresion_alge1 -> RESTA . NUMERO MULTI NUMERO
    (111) expresion_alge1 -> RESTA . NUMERO DIVISION NUMERO

    NUMERO          shift and go to state 865


state 801

    (207) Greater -> GREATER ABRE_P RESTA NUMERO COMA NUMERO . CIERRA_P
    (104) expresion_alge1 -> NUMERO . SUMA NUMERO
    (105) expresion_alge1 -> NUMERO . RESTA NUMERO
    (106) expresion_alge1 -> NUMERO . MULTI NUMERO
    (107) expresion_alge1 -> NUMERO . DIVISION NUMERO

    CIERRA_P        shift and go to state 866
    SUMA            shift and go to state 126
    RESTA           shift and go to state 127
    MULTI           shift and go to state 128
    DIVISION        shift and go to state 129


state 802

    (213) Greater -> GREATER ABRE_P RESTA NUMERO COMA Var . CIERRA_P

    CIERRA_P        shift and go to state 867


state 803

    (227) Greater -> GREATER ABRE_P RESTA NUMERO COMA expresion_alge1 . CIERRA_P

    CIERRA_P        shift and go to state 868


state 804

    (229) Greater -> GREATER ABRE_P RESTA NUMERO COMA expresion_alge2 . CIERRA_P

    CIERRA_P        shift and go to state 869


state 805

    (209) Greater -> GREATER ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .

    CIERRA_P        reduce using rule 209 (Greater -> GREATER ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    BRACKET2        reduce using rule 209 (Greater -> GREATER ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)


state 806

    (215) Greater -> GREATER ABRE_P expresion_alge1 COMA Var CIERRA_P .

    CIERRA_P        reduce using rule 215 (Greater -> GREATER ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    BRACKET2        reduce using rule 215 (Greater -> GREATER ABRE_P expresion_alge1 COMA Var CIERRA_P .)


state 807

    (220) Greater -> GREATER ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P .

    CIERRA_P        reduce using rule 220 (Greater -> GREATER ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P .)
    BRACKET2        reduce using rule 220 (Greater -> GREATER ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P .)


state 808

    (222) Greater -> GREATER ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .

    CIERRA_P        reduce using rule 222 (Greater -> GREATER ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    BRACKET2        reduce using rule 222 (Greater -> GREATER ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)


state 809

    (223) Greater -> GREATER ABRE_P expresion_alge1 COMA RESTA NUMERO . CIERRA_P
    (108) expresion_alge1 -> RESTA NUMERO . SUMA NUMERO
    (109) expresion_alge1 -> RESTA NUMERO . RESTA NUMERO
    (110) expresion_alge1 -> RESTA NUMERO . MULTI NUMERO
    (111) expresion_alge1 -> RESTA NUMERO . DIVISION NUMERO

    CIERRA_P        shift and go to state 870
    SUMA            shift and go to state 180
    RESTA           shift and go to state 179
    MULTI           shift and go to state 181
    DIVISION        shift and go to state 182


state 810

    (210) Greater -> GREATER ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P .

    CIERRA_P        reduce using rule 210 (Greater -> GREATER ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P .)
    BRACKET2        reduce using rule 210 (Greater -> GREATER ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P .)


state 811

    (214) Greater -> GREATER ABRE_P expresion_alge2 COMA Var CIERRA_P .

    CIERRA_P        reduce using rule 214 (Greater -> GREATER ABRE_P expresion_alge2 COMA Var CIERRA_P .)
    BRACKET2        reduce using rule 214 (Greater -> GREATER ABRE_P expresion_alge2 COMA Var CIERRA_P .)


state 812

    (221) Greater -> GREATER ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P .

    CIERRA_P        reduce using rule 221 (Greater -> GREATER ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P .)
    BRACKET2        reduce using rule 221 (Greater -> GREATER ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P .)


state 813

    (224) Greater -> GREATER ABRE_P expresion_alge2 COMA NUMERO CIERRA_P .

    CIERRA_P        reduce using rule 224 (Greater -> GREATER ABRE_P expresion_alge2 COMA NUMERO CIERRA_P .)
    BRACKET2        reduce using rule 224 (Greater -> GREATER ABRE_P expresion_alge2 COMA NUMERO CIERRA_P .)


state 814

    (225) Greater -> GREATER ABRE_P expresion_alge2 COMA RESTA NUMERO . CIERRA_P
    (108) expresion_alge1 -> RESTA NUMERO . SUMA NUMERO
    (109) expresion_alge1 -> RESTA NUMERO . RESTA NUMERO
    (110) expresion_alge1 -> RESTA NUMERO . MULTI NUMERO
    (111) expresion_alge1 -> RESTA NUMERO . DIVISION NUMERO

    CIERRA_P        shift and go to state 871
    SUMA            shift and go to state 180
    RESTA           shift and go to state 179
    MULTI           shift and go to state 181
    DIVISION        shift and go to state 182


state 815

    (211) Greater -> GREATER ABRE_P Var COMA Var CIERRA_P .

    CIERRA_P        reduce using rule 211 (Greater -> GREATER ABRE_P Var COMA Var CIERRA_P .)
    BRACKET2        reduce using rule 211 (Greater -> GREATER ABRE_P Var COMA Var CIERRA_P .)


state 816

    (216) Greater -> GREATER ABRE_P Var COMA NUMERO CIERRA_P .

    CIERRA_P        reduce using rule 216 (Greater -> GREATER ABRE_P Var COMA NUMERO CIERRA_P .)
    BRACKET2        reduce using rule 216 (Greater -> GREATER ABRE_P Var COMA NUMERO CIERRA_P .)


state 817

    (217) Greater -> GREATER ABRE_P Var COMA RESTA NUMERO . CIERRA_P
    (108) expresion_alge1 -> RESTA NUMERO . SUMA NUMERO
    (109) expresion_alge1 -> RESTA NUMERO . RESTA NUMERO
    (110) expresion_alge1 -> RESTA NUMERO . MULTI NUMERO
    (111) expresion_alge1 -> RESTA NUMERO . DIVISION NUMERO

    CIERRA_P        shift and go to state 872
    SUMA            shift and go to state 180
    RESTA           shift and go to state 179
    MULTI           shift and go to state 181
    DIVISION        shift and go to state 182


state 818

    (218) Greater -> GREATER ABRE_P Var COMA expresion_alge1 CIERRA_P .

    CIERRA_P        reduce using rule 218 (Greater -> GREATER ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    BRACKET2        reduce using rule 218 (Greater -> GREATER ABRE_P Var COMA expresion_alge1 CIERRA_P .)


state 819

    (219) Greater -> GREATER ABRE_P Var COMA expresion_alge2 CIERRA_P .

    CIERRA_P        reduce using rule 219 (Greater -> GREATER ABRE_P Var COMA expresion_alge2 CIERRA_P .)
    BRACKET2        reduce using rule 219 (Greater -> GREATER ABRE_P Var COMA expresion_alge2 CIERRA_P .)


state 820

    (231) Smaller -> SMALLER ABRE_P NUMERO COMA NUMERO CIERRA_P .

    CIERRA_P        reduce using rule 231 (Smaller -> SMALLER ABRE_P NUMERO COMA NUMERO CIERRA_P .)
    BRACKET2        reduce using rule 231 (Smaller -> SMALLER ABRE_P NUMERO COMA NUMERO CIERRA_P .)


state 821

    (233) Smaller -> SMALLER ABRE_P NUMERO COMA RESTA NUMERO . CIERRA_P
    (108) expresion_alge1 -> RESTA NUMERO . SUMA NUMERO
    (109) expresion_alge1 -> RESTA NUMERO . RESTA NUMERO
    (110) expresion_alge1 -> RESTA NUMERO . MULTI NUMERO
    (111) expresion_alge1 -> RESTA NUMERO . DIVISION NUMERO

    CIERRA_P        shift and go to state 873
    SUMA            shift and go to state 180
    RESTA           shift and go to state 179
    MULTI           shift and go to state 181
    DIVISION        shift and go to state 182


state 822

    (237) Smaller -> SMALLER ABRE_P NUMERO COMA Var CIERRA_P .

    CIERRA_P        reduce using rule 237 (Smaller -> SMALLER ABRE_P NUMERO COMA Var CIERRA_P .)
    BRACKET2        reduce using rule 237 (Smaller -> SMALLER ABRE_P NUMERO COMA Var CIERRA_P .)


state 823

    (251) Smaller -> SMALLER ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .

    CIERRA_P        reduce using rule 251 (Smaller -> SMALLER ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)
    BRACKET2        reduce using rule 251 (Smaller -> SMALLER ABRE_P NUMERO COMA expresion_alge1 CIERRA_P .)


state 824

    (253) Smaller -> SMALLER ABRE_P NUMERO COMA expresion_alge2 CIERRA_P .

    CIERRA_P        reduce using rule 253 (Smaller -> SMALLER ABRE_P NUMERO COMA expresion_alge2 CIERRA_P .)
    BRACKET2        reduce using rule 253 (Smaller -> SMALLER ABRE_P NUMERO COMA expresion_alge2 CIERRA_P .)


state 825

    (255) Smaller -> SMALLER ABRE_P RESTA NUMERO COMA RESTA . NUMERO CIERRA_P
    (108) expresion_alge1 -> RESTA . NUMERO SUMA NUMERO
    (109) expresion_alge1 -> RESTA . NUMERO RESTA NUMERO
    (110) expresion_alge1 -> RESTA . NUMERO MULTI NUMERO
    (111) expresion_alge1 -> RESTA . NUMERO DIVISION NUMERO

    NUMERO          shift and go to state 874


state 826

    (232) Smaller -> SMALLER ABRE_P RESTA NUMERO COMA NUMERO . CIERRA_P
    (104) expresion_alge1 -> NUMERO . SUMA NUMERO
    (105) expresion_alge1 -> NUMERO . RESTA NUMERO
    (106) expresion_alge1 -> NUMERO . MULTI NUMERO
    (107) expresion_alge1 -> NUMERO . DIVISION NUMERO

    CIERRA_P        shift and go to state 875
    SUMA            shift and go to state 126
    RESTA           shift and go to state 127
    MULTI           shift and go to state 128
    DIVISION        shift and go to state 129


state 827

    (238) Smaller -> SMALLER ABRE_P RESTA NUMERO COMA Var . CIERRA_P

    CIERRA_P        shift and go to state 876


state 828

    (252) Smaller -> SMALLER ABRE_P RESTA NUMERO COMA expresion_alge1 . CIERRA_P

    CIERRA_P        shift and go to state 877


state 829

    (254) Smaller -> SMALLER ABRE_P RESTA NUMERO COMA expresion_alge2 . CIERRA_P

    CIERRA_P        shift and go to state 878


state 830

    (234) Smaller -> SMALLER ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .

    CIERRA_P        reduce using rule 234 (Smaller -> SMALLER ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)
    BRACKET2        reduce using rule 234 (Smaller -> SMALLER ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P .)


state 831

    (240) Smaller -> SMALLER ABRE_P expresion_alge1 COMA Var CIERRA_P .

    CIERRA_P        reduce using rule 240 (Smaller -> SMALLER ABRE_P expresion_alge1 COMA Var CIERRA_P .)
    BRACKET2        reduce using rule 240 (Smaller -> SMALLER ABRE_P expresion_alge1 COMA Var CIERRA_P .)


state 832

    (245) Smaller -> SMALLER ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P .

    CIERRA_P        reduce using rule 245 (Smaller -> SMALLER ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P .)
    BRACKET2        reduce using rule 245 (Smaller -> SMALLER ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P .)


state 833

    (247) Smaller -> SMALLER ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .

    CIERRA_P        reduce using rule 247 (Smaller -> SMALLER ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)
    BRACKET2        reduce using rule 247 (Smaller -> SMALLER ABRE_P expresion_alge1 COMA NUMERO CIERRA_P .)


state 834

    (248) Smaller -> SMALLER ABRE_P expresion_alge1 COMA RESTA NUMERO . CIERRA_P
    (108) expresion_alge1 -> RESTA NUMERO . SUMA NUMERO
    (109) expresion_alge1 -> RESTA NUMERO . RESTA NUMERO
    (110) expresion_alge1 -> RESTA NUMERO . MULTI NUMERO
    (111) expresion_alge1 -> RESTA NUMERO . DIVISION NUMERO

    CIERRA_P        shift and go to state 879
    SUMA            shift and go to state 180
    RESTA           shift and go to state 179
    MULTI           shift and go to state 181
    DIVISION        shift and go to state 182


state 835

    (235) Smaller -> SMALLER ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P .

    CIERRA_P        reduce using rule 235 (Smaller -> SMALLER ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P .)
    BRACKET2        reduce using rule 235 (Smaller -> SMALLER ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P .)


state 836

    (239) Smaller -> SMALLER ABRE_P expresion_alge2 COMA Var CIERRA_P .

    CIERRA_P        reduce using rule 239 (Smaller -> SMALLER ABRE_P expresion_alge2 COMA Var CIERRA_P .)
    BRACKET2        reduce using rule 239 (Smaller -> SMALLER ABRE_P expresion_alge2 COMA Var CIERRA_P .)


state 837

    (246) Smaller -> SMALLER ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P .

    CIERRA_P        reduce using rule 246 (Smaller -> SMALLER ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P .)
    BRACKET2        reduce using rule 246 (Smaller -> SMALLER ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P .)


state 838

    (249) Smaller -> SMALLER ABRE_P expresion_alge2 COMA NUMERO CIERRA_P .

    CIERRA_P        reduce using rule 249 (Smaller -> SMALLER ABRE_P expresion_alge2 COMA NUMERO CIERRA_P .)
    BRACKET2        reduce using rule 249 (Smaller -> SMALLER ABRE_P expresion_alge2 COMA NUMERO CIERRA_P .)


state 839

    (250) Smaller -> SMALLER ABRE_P expresion_alge2 COMA RESTA NUMERO . CIERRA_P
    (108) expresion_alge1 -> RESTA NUMERO . SUMA NUMERO
    (109) expresion_alge1 -> RESTA NUMERO . RESTA NUMERO
    (110) expresion_alge1 -> RESTA NUMERO . MULTI NUMERO
    (111) expresion_alge1 -> RESTA NUMERO . DIVISION NUMERO

    CIERRA_P        shift and go to state 880
    SUMA            shift and go to state 180
    RESTA           shift and go to state 179
    MULTI           shift and go to state 181
    DIVISION        shift and go to state 182


state 840

    (236) Smaller -> SMALLER ABRE_P Var COMA Var CIERRA_P .

    CIERRA_P        reduce using rule 236 (Smaller -> SMALLER ABRE_P Var COMA Var CIERRA_P .)
    BRACKET2        reduce using rule 236 (Smaller -> SMALLER ABRE_P Var COMA Var CIERRA_P .)


state 841

    (241) Smaller -> SMALLER ABRE_P Var COMA NUMERO CIERRA_P .

    CIERRA_P        reduce using rule 241 (Smaller -> SMALLER ABRE_P Var COMA NUMERO CIERRA_P .)
    BRACKET2        reduce using rule 241 (Smaller -> SMALLER ABRE_P Var COMA NUMERO CIERRA_P .)


state 842

    (242) Smaller -> SMALLER ABRE_P Var COMA RESTA NUMERO . CIERRA_P
    (108) expresion_alge1 -> RESTA NUMERO . SUMA NUMERO
    (109) expresion_alge1 -> RESTA NUMERO . RESTA NUMERO
    (110) expresion_alge1 -> RESTA NUMERO . MULTI NUMERO
    (111) expresion_alge1 -> RESTA NUMERO . DIVISION NUMERO

    CIERRA_P        shift and go to state 881
    SUMA            shift and go to state 180
    RESTA           shift and go to state 179
    MULTI           shift and go to state 181
    DIVISION        shift and go to state 182


state 843

    (243) Smaller -> SMALLER ABRE_P Var COMA expresion_alge1 CIERRA_P .

    CIERRA_P        reduce using rule 243 (Smaller -> SMALLER ABRE_P Var COMA expresion_alge1 CIERRA_P .)
    BRACKET2        reduce using rule 243 (Smaller -> SMALLER ABRE_P Var COMA expresion_alge1 CIERRA_P .)


state 844

    (244) Smaller -> SMALLER ABRE_P Var COMA expresion_alge2 CIERRA_P .

    CIERRA_P        reduce using rule 244 (Smaller -> SMALLER ABRE_P Var COMA expresion_alge2 CIERRA_P .)
    BRACKET2        reduce using rule 244 (Smaller -> SMALLER ABRE_P Var COMA expresion_alge2 CIERRA_P .)


state 845

    (265) IfElse -> IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 . funcion BRACKET2
    (82) funcion -> . Random empty
    (83) funcion -> . If empty
    (84) funcion -> . IfElse empty
    (85) funcion -> . Until empty
    (86) funcion -> . While empty
    (87) funcion -> . PrintLine empty
    (88) funcion -> . And empty
    (89) funcion -> . Or empty
    (90) funcion -> . Add empty
    (91) funcion -> . Put2 empty
    (92) funcion -> . Put empty
    (93) funcion -> . PUNTOCOMA funcion
    (94) funcion -> . empty empty
    (279) Random -> . RANDOM ABRE_P NUMERO CIERRA_P PUNTOCOMA
    (264) If -> . IF ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2
    (265) IfElse -> . IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2
    (268) Until -> . UNTIL BRACKET1 funcion BRACKET2 BRACKET1 condicion BRACKET2
    (266) While -> . WHILE BRACKET1 condicion BRACKET2 BRACKET1 funcion BRACKET2
    (337) PrintLine -> . PRINTLINE ABRE_P exp CIERRA_P PUNTOCOMA
    (256) And -> . AND ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (257) And -> . AND ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P
    (258) And -> . AND ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P
    (259) And -> . AND ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P
    (260) Or -> . OR ABRE_P expresion_alge1 COMA expresion_alge1 CIERRA_P
    (261) Or -> . OR ABRE_P expresion_alge1 COMA expresion_alge2 CIERRA_P
    (262) Or -> . OR ABRE_P expresion_alge2 COMA expresion_alge1 CIERRA_P
    (263) Or -> . OR ABRE_P expresion_alge2 COMA expresion_alge2 CIERRA_P
    (269) Add -> . ADD ABRE_P Var empty empty CIERRA_P PUNTOCOMA
    (270) Add -> . ADD ABRE_P Var COMA NUMERO CIERRA_P PUNTOCOMA
    (271) Add -> . ADD ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (272) Add -> . ADD ABRE_P Var COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (273) Add -> . ADD ABRE_P Var COMA Var CIERRA_P PUNTOCOMA
    (274) Add -> . ADD ABRE_P Var COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (96) Put2 -> . PUT ABRE_P VAR COMA NUMERO CIERRA_P PUNTOCOMA
    (97) Put2 -> . PUT ABRE_P VAR COMA RESTA NUMERO CIERRA_P PUNTOCOMA
    (98) Put2 -> . PUT ABRE_P VAR COMA expresion_alge1 CIERRA_P PUNTOCOMA
    (99) Put2 -> . PUT ABRE_P VAR COMA expresion_alge2 CIERRA_P PUNTOCOMA
    (100) Put2 -> . PUT ABRE_P VAR COMA funcion CIERRA_P PUNTOCOMA
    (95) Put -> . PUT ABRE_P VAR COMA VAR CIERRA_P PUNTOCOMA
    (338) empty -> .

    PUNTOCOMA       shift and go to state 62
    RANDOM          shift and go to state 72
    IF              shift and go to state 73
    IFELSE          shift and go to state 74
    UNTIL           shift and go to state 75
    WHILE           shift and go to state 76
    PRINTLINE       shift and go to state 77
    AND             shift and go to state 78
    OR              shift and go to state 79
    ADD             shift and go to state 80
    PUT             shift and go to state 96
    BRACKET2        reduce using rule 338 (empty -> .)

    funcion                        shift and go to state 882
    Random                         shift and go to state 53
    empty                          shift and go to state 124
    If                             shift and go to state 54
    IfElse                         shift and go to state 55
    Until                          shift and go to state 56
    While                          shift and go to state 57
    PrintLine                      shift and go to state 58
    And                            shift and go to state 59
    Or                             shift and go to state 60
    Add                            shift and go to state 61
    Put2                           shift and go to state 94
    Put                            shift and go to state 95

state 846

    (271) Add -> ADD ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA .

    PUNTOCOMA       reduce using rule 271 (Add -> ADD ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)
    NUMERO          reduce using rule 271 (Add -> ADD ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)
    RESTA           reduce using rule 271 (Add -> ADD ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)
    ABRE_P          reduce using rule 271 (Add -> ADD ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)
    SUM             reduce using rule 271 (Add -> ADD ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)
    SUBSTR          reduce using rule 271 (Add -> ADD ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)
    MULT            reduce using rule 271 (Add -> ADD ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)
    DIV             reduce using rule 271 (Add -> ADD ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)
    RANDOM          reduce using rule 271 (Add -> ADD ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)
    IF              reduce using rule 271 (Add -> ADD ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)
    IFELSE          reduce using rule 271 (Add -> ADD ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)
    UNTIL           reduce using rule 271 (Add -> ADD ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)
    WHILE           reduce using rule 271 (Add -> ADD ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)
    PRINTLINE       reduce using rule 271 (Add -> ADD ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)
    AND             reduce using rule 271 (Add -> ADD ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)
    OR              reduce using rule 271 (Add -> ADD ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)
    ADD             reduce using rule 271 (Add -> ADD ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)
    PUT             reduce using rule 271 (Add -> ADD ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)
    FIN             reduce using rule 271 (Add -> ADD ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)
    CIERRA_P        reduce using rule 271 (Add -> ADD ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 271 (Add -> ADD ABRE_P Var COMA RESTA NUMERO CIERRA_P PUNTOCOMA .)


state 847

    (299) Diag -> POS ABRE_P STRING COMA NUMERO CIERRA_P PUNTOCOMA .

    BEGINNING       reduce using rule 299 (Diag -> POS ABRE_P STRING COMA NUMERO CIERRA_P PUNTOCOMA .)
    CONTINUEUP      reduce using rule 299 (Diag -> POS ABRE_P STRING COMA NUMERO CIERRA_P PUNTOCOMA .)
    CONTINUEDOWN    reduce using rule 299 (Diag -> POS ABRE_P STRING COMA NUMERO CIERRA_P PUNTOCOMA .)
    CONTINUERIGHT   reduce using rule 299 (Diag -> POS ABRE_P STRING COMA NUMERO CIERRA_P PUNTOCOMA .)
    CONTINUELEFT    reduce using rule 299 (Diag -> POS ABRE_P STRING COMA NUMERO CIERRA_P PUNTOCOMA .)
    UP              reduce using rule 299 (Diag -> POS ABRE_P STRING COMA NUMERO CIERRA_P PUNTOCOMA .)
    DOWN            reduce using rule 299 (Diag -> POS ABRE_P STRING COMA NUMERO CIERRA_P PUNTOCOMA .)
    SPEED           reduce using rule 299 (Diag -> POS ABRE_P STRING COMA NUMERO CIERRA_P PUNTOCOMA .)
    POS             reduce using rule 299 (Diag -> POS ABRE_P STRING COMA NUMERO CIERRA_P PUNTOCOMA .)
    POSX            reduce using rule 299 (Diag -> POS ABRE_P STRING COMA NUMERO CIERRA_P PUNTOCOMA .)
    POSY            reduce using rule 299 (Diag -> POS ABRE_P STRING COMA NUMERO CIERRA_P PUNTOCOMA .)
    USECOLOR        reduce using rule 299 (Diag -> POS ABRE_P STRING COMA NUMERO CIERRA_P PUNTOCOMA .)
    BRACKET2        reduce using rule 299 (Diag -> POS ABRE_P STRING COMA NUMERO CIERRA_P PUNTOCOMA .)


state 848

    (311) Pos -> POS ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .

    BEGINNING       reduce using rule 311 (Pos -> POS ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    CONTINUEUP      reduce using rule 311 (Pos -> POS ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    CONTINUEDOWN    reduce using rule 311 (Pos -> POS ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    CONTINUERIGHT   reduce using rule 311 (Pos -> POS ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    CONTINUELEFT    reduce using rule 311 (Pos -> POS ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    UP              reduce using rule 311 (Pos -> POS ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    DOWN            reduce using rule 311 (Pos -> POS ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    SPEED           reduce using rule 311 (Pos -> POS ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    POS             reduce using rule 311 (Pos -> POS ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    POSX            reduce using rule 311 (Pos -> POS ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    POSY            reduce using rule 311 (Pos -> POS ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    USECOLOR        reduce using rule 311 (Pos -> POS ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    BRACKET2        reduce using rule 311 (Pos -> POS ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)


state 849

    (313) Pos -> POS ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .

    BEGINNING       reduce using rule 313 (Pos -> POS ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    CONTINUEUP      reduce using rule 313 (Pos -> POS ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    CONTINUEDOWN    reduce using rule 313 (Pos -> POS ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    CONTINUERIGHT   reduce using rule 313 (Pos -> POS ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    CONTINUELEFT    reduce using rule 313 (Pos -> POS ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    UP              reduce using rule 313 (Pos -> POS ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    DOWN            reduce using rule 313 (Pos -> POS ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    SPEED           reduce using rule 313 (Pos -> POS ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    POS             reduce using rule 313 (Pos -> POS ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    POSX            reduce using rule 313 (Pos -> POS ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    POSY            reduce using rule 313 (Pos -> POS ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    USECOLOR        reduce using rule 313 (Pos -> POS ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    BRACKET2        reduce using rule 313 (Pos -> POS ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)


state 850

    (314) Pos -> POS ABRE_P Var COMA RESTA NUMERO CIERRA_P .

    BEGINNING       reduce using rule 314 (Pos -> POS ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    CONTINUEUP      reduce using rule 314 (Pos -> POS ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    CONTINUEDOWN    reduce using rule 314 (Pos -> POS ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    CONTINUERIGHT   reduce using rule 314 (Pos -> POS ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    CONTINUELEFT    reduce using rule 314 (Pos -> POS ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    UP              reduce using rule 314 (Pos -> POS ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    DOWN            reduce using rule 314 (Pos -> POS ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    SPEED           reduce using rule 314 (Pos -> POS ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    POS             reduce using rule 314 (Pos -> POS ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    POSX            reduce using rule 314 (Pos -> POS ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    POSY            reduce using rule 314 (Pos -> POS ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    USECOLOR        reduce using rule 314 (Pos -> POS ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    BRACKET2        reduce using rule 314 (Pos -> POS ABRE_P Var COMA RESTA NUMERO CIERRA_P .)


state 851

    (309) Pos -> POS ABRE_P RESTA NUMERO COMA RESTA NUMERO . CIERRA_P
    (108) expresion_alge1 -> RESTA NUMERO . SUMA NUMERO
    (109) expresion_alge1 -> RESTA NUMERO . RESTA NUMERO
    (110) expresion_alge1 -> RESTA NUMERO . MULTI NUMERO
    (111) expresion_alge1 -> RESTA NUMERO . DIVISION NUMERO

    CIERRA_P        shift and go to state 883
    SUMA            shift and go to state 180
    RESTA           shift and go to state 179
    MULTI           shift and go to state 181
    DIVISION        shift and go to state 182


state 852

    (310) Pos -> POS ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .

    BEGINNING       reduce using rule 310 (Pos -> POS ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    CONTINUEUP      reduce using rule 310 (Pos -> POS ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    CONTINUEDOWN    reduce using rule 310 (Pos -> POS ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    CONTINUERIGHT   reduce using rule 310 (Pos -> POS ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    CONTINUELEFT    reduce using rule 310 (Pos -> POS ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    UP              reduce using rule 310 (Pos -> POS ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    DOWN            reduce using rule 310 (Pos -> POS ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    SPEED           reduce using rule 310 (Pos -> POS ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    POS             reduce using rule 310 (Pos -> POS ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    POSX            reduce using rule 310 (Pos -> POS ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    POSY            reduce using rule 310 (Pos -> POS ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    USECOLOR        reduce using rule 310 (Pos -> POS ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    BRACKET2        reduce using rule 310 (Pos -> POS ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)


state 853

    (312) Pos -> POS ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .

    BEGINNING       reduce using rule 312 (Pos -> POS ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    CONTINUEUP      reduce using rule 312 (Pos -> POS ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    CONTINUEDOWN    reduce using rule 312 (Pos -> POS ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    CONTINUERIGHT   reduce using rule 312 (Pos -> POS ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    CONTINUELEFT    reduce using rule 312 (Pos -> POS ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    UP              reduce using rule 312 (Pos -> POS ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    DOWN            reduce using rule 312 (Pos -> POS ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    SPEED           reduce using rule 312 (Pos -> POS ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    POS             reduce using rule 312 (Pos -> POS ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    POSX            reduce using rule 312 (Pos -> POS ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    POSY            reduce using rule 312 (Pos -> POS ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    USECOLOR        reduce using rule 312 (Pos -> POS ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    BRACKET2        reduce using rule 312 (Pos -> POS ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)


state 854

    (315) Pos -> POS ABRE_P RESTA NUMERO COMA Var CIERRA_P .

    BEGINNING       reduce using rule 315 (Pos -> POS ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    CONTINUEUP      reduce using rule 315 (Pos -> POS ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    CONTINUEDOWN    reduce using rule 315 (Pos -> POS ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    CONTINUERIGHT   reduce using rule 315 (Pos -> POS ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    CONTINUELEFT    reduce using rule 315 (Pos -> POS ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    UP              reduce using rule 315 (Pos -> POS ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    DOWN            reduce using rule 315 (Pos -> POS ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    SPEED           reduce using rule 315 (Pos -> POS ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    POS             reduce using rule 315 (Pos -> POS ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    POSX            reduce using rule 315 (Pos -> POS ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    POSY            reduce using rule 315 (Pos -> POS ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    USECOLOR        reduce using rule 315 (Pos -> POS ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    BRACKET2        reduce using rule 315 (Pos -> POS ABRE_P RESTA NUMERO COMA Var CIERRA_P .)


state 855

    (183) Equal -> EQUAL ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .

    CIERRA_P        reduce using rule 183 (Equal -> EQUAL ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    BRACKET2        reduce using rule 183 (Equal -> EQUAL ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)


state 856

    (205) Equal -> EQUAL ABRE_P RESTA NUMERO COMA RESTA NUMERO . CIERRA_P
    (108) expresion_alge1 -> RESTA NUMERO . SUMA NUMERO
    (109) expresion_alge1 -> RESTA NUMERO . RESTA NUMERO
    (110) expresion_alge1 -> RESTA NUMERO . MULTI NUMERO
    (111) expresion_alge1 -> RESTA NUMERO . DIVISION NUMERO

    CIERRA_P        shift and go to state 884
    SUMA            shift and go to state 180
    RESTA           shift and go to state 179
    MULTI           shift and go to state 181
    DIVISION        shift and go to state 182


state 857

    (182) Equal -> EQUAL ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .

    CIERRA_P        reduce using rule 182 (Equal -> EQUAL ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    BRACKET2        reduce using rule 182 (Equal -> EQUAL ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)


state 858

    (188) Equal -> EQUAL ABRE_P RESTA NUMERO COMA Var CIERRA_P .

    CIERRA_P        reduce using rule 188 (Equal -> EQUAL ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    BRACKET2        reduce using rule 188 (Equal -> EQUAL ABRE_P RESTA NUMERO COMA Var CIERRA_P .)


state 859

    (202) Equal -> EQUAL ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .

    CIERRA_P        reduce using rule 202 (Equal -> EQUAL ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    BRACKET2        reduce using rule 202 (Equal -> EQUAL ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)


state 860

    (204) Equal -> EQUAL ABRE_P RESTA NUMERO COMA expresion_alge2 CIERRA_P .

    CIERRA_P        reduce using rule 204 (Equal -> EQUAL ABRE_P RESTA NUMERO COMA expresion_alge2 CIERRA_P .)
    BRACKET2        reduce using rule 204 (Equal -> EQUAL ABRE_P RESTA NUMERO COMA expresion_alge2 CIERRA_P .)


state 861

    (198) Equal -> EQUAL ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .

    CIERRA_P        reduce using rule 198 (Equal -> EQUAL ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    BRACKET2        reduce using rule 198 (Equal -> EQUAL ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)


state 862

    (200) Equal -> EQUAL ABRE_P expresion_alge2 COMA RESTA NUMERO CIERRA_P .

    CIERRA_P        reduce using rule 200 (Equal -> EQUAL ABRE_P expresion_alge2 COMA RESTA NUMERO CIERRA_P .)
    BRACKET2        reduce using rule 200 (Equal -> EQUAL ABRE_P expresion_alge2 COMA RESTA NUMERO CIERRA_P .)


state 863

    (192) Equal -> EQUAL ABRE_P Var COMA RESTA NUMERO CIERRA_P .

    CIERRA_P        reduce using rule 192 (Equal -> EQUAL ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    BRACKET2        reduce using rule 192 (Equal -> EQUAL ABRE_P Var COMA RESTA NUMERO CIERRA_P .)


state 864

    (208) Greater -> GREATER ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .

    CIERRA_P        reduce using rule 208 (Greater -> GREATER ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    BRACKET2        reduce using rule 208 (Greater -> GREATER ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)


state 865

    (230) Greater -> GREATER ABRE_P RESTA NUMERO COMA RESTA NUMERO . CIERRA_P
    (108) expresion_alge1 -> RESTA NUMERO . SUMA NUMERO
    (109) expresion_alge1 -> RESTA NUMERO . RESTA NUMERO
    (110) expresion_alge1 -> RESTA NUMERO . MULTI NUMERO
    (111) expresion_alge1 -> RESTA NUMERO . DIVISION NUMERO

    CIERRA_P        shift and go to state 885
    SUMA            shift and go to state 180
    RESTA           shift and go to state 179
    MULTI           shift and go to state 181
    DIVISION        shift and go to state 182


state 866

    (207) Greater -> GREATER ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .

    CIERRA_P        reduce using rule 207 (Greater -> GREATER ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    BRACKET2        reduce using rule 207 (Greater -> GREATER ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)


state 867

    (213) Greater -> GREATER ABRE_P RESTA NUMERO COMA Var CIERRA_P .

    CIERRA_P        reduce using rule 213 (Greater -> GREATER ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    BRACKET2        reduce using rule 213 (Greater -> GREATER ABRE_P RESTA NUMERO COMA Var CIERRA_P .)


state 868

    (227) Greater -> GREATER ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .

    CIERRA_P        reduce using rule 227 (Greater -> GREATER ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    BRACKET2        reduce using rule 227 (Greater -> GREATER ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)


state 869

    (229) Greater -> GREATER ABRE_P RESTA NUMERO COMA expresion_alge2 CIERRA_P .

    CIERRA_P        reduce using rule 229 (Greater -> GREATER ABRE_P RESTA NUMERO COMA expresion_alge2 CIERRA_P .)
    BRACKET2        reduce using rule 229 (Greater -> GREATER ABRE_P RESTA NUMERO COMA expresion_alge2 CIERRA_P .)


state 870

    (223) Greater -> GREATER ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .

    CIERRA_P        reduce using rule 223 (Greater -> GREATER ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    BRACKET2        reduce using rule 223 (Greater -> GREATER ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)


state 871

    (225) Greater -> GREATER ABRE_P expresion_alge2 COMA RESTA NUMERO CIERRA_P .

    CIERRA_P        reduce using rule 225 (Greater -> GREATER ABRE_P expresion_alge2 COMA RESTA NUMERO CIERRA_P .)
    BRACKET2        reduce using rule 225 (Greater -> GREATER ABRE_P expresion_alge2 COMA RESTA NUMERO CIERRA_P .)


state 872

    (217) Greater -> GREATER ABRE_P Var COMA RESTA NUMERO CIERRA_P .

    CIERRA_P        reduce using rule 217 (Greater -> GREATER ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    BRACKET2        reduce using rule 217 (Greater -> GREATER ABRE_P Var COMA RESTA NUMERO CIERRA_P .)


state 873

    (233) Smaller -> SMALLER ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .

    CIERRA_P        reduce using rule 233 (Smaller -> SMALLER ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)
    BRACKET2        reduce using rule 233 (Smaller -> SMALLER ABRE_P NUMERO COMA RESTA NUMERO CIERRA_P .)


state 874

    (255) Smaller -> SMALLER ABRE_P RESTA NUMERO COMA RESTA NUMERO . CIERRA_P
    (108) expresion_alge1 -> RESTA NUMERO . SUMA NUMERO
    (109) expresion_alge1 -> RESTA NUMERO . RESTA NUMERO
    (110) expresion_alge1 -> RESTA NUMERO . MULTI NUMERO
    (111) expresion_alge1 -> RESTA NUMERO . DIVISION NUMERO

    CIERRA_P        shift and go to state 886
    SUMA            shift and go to state 180
    RESTA           shift and go to state 179
    MULTI           shift and go to state 181
    DIVISION        shift and go to state 182


state 875

    (232) Smaller -> SMALLER ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .

    CIERRA_P        reduce using rule 232 (Smaller -> SMALLER ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)
    BRACKET2        reduce using rule 232 (Smaller -> SMALLER ABRE_P RESTA NUMERO COMA NUMERO CIERRA_P .)


state 876

    (238) Smaller -> SMALLER ABRE_P RESTA NUMERO COMA Var CIERRA_P .

    CIERRA_P        reduce using rule 238 (Smaller -> SMALLER ABRE_P RESTA NUMERO COMA Var CIERRA_P .)
    BRACKET2        reduce using rule 238 (Smaller -> SMALLER ABRE_P RESTA NUMERO COMA Var CIERRA_P .)


state 877

    (252) Smaller -> SMALLER ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .

    CIERRA_P        reduce using rule 252 (Smaller -> SMALLER ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)
    BRACKET2        reduce using rule 252 (Smaller -> SMALLER ABRE_P RESTA NUMERO COMA expresion_alge1 CIERRA_P .)


state 878

    (254) Smaller -> SMALLER ABRE_P RESTA NUMERO COMA expresion_alge2 CIERRA_P .

    CIERRA_P        reduce using rule 254 (Smaller -> SMALLER ABRE_P RESTA NUMERO COMA expresion_alge2 CIERRA_P .)
    BRACKET2        reduce using rule 254 (Smaller -> SMALLER ABRE_P RESTA NUMERO COMA expresion_alge2 CIERRA_P .)


state 879

    (248) Smaller -> SMALLER ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .

    CIERRA_P        reduce using rule 248 (Smaller -> SMALLER ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)
    BRACKET2        reduce using rule 248 (Smaller -> SMALLER ABRE_P expresion_alge1 COMA RESTA NUMERO CIERRA_P .)


state 880

    (250) Smaller -> SMALLER ABRE_P expresion_alge2 COMA RESTA NUMERO CIERRA_P .

    CIERRA_P        reduce using rule 250 (Smaller -> SMALLER ABRE_P expresion_alge2 COMA RESTA NUMERO CIERRA_P .)
    BRACKET2        reduce using rule 250 (Smaller -> SMALLER ABRE_P expresion_alge2 COMA RESTA NUMERO CIERRA_P .)


state 881

    (242) Smaller -> SMALLER ABRE_P Var COMA RESTA NUMERO CIERRA_P .

    CIERRA_P        reduce using rule 242 (Smaller -> SMALLER ABRE_P Var COMA RESTA NUMERO CIERRA_P .)
    BRACKET2        reduce using rule 242 (Smaller -> SMALLER ABRE_P Var COMA RESTA NUMERO CIERRA_P .)


state 882

    (265) IfElse -> IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion . BRACKET2

    BRACKET2        shift and go to state 887


state 883

    (309) Pos -> POS ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P .

    BEGINNING       reduce using rule 309 (Pos -> POS ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P .)
    CONTINUEUP      reduce using rule 309 (Pos -> POS ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P .)
    CONTINUEDOWN    reduce using rule 309 (Pos -> POS ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P .)
    CONTINUERIGHT   reduce using rule 309 (Pos -> POS ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P .)
    CONTINUELEFT    reduce using rule 309 (Pos -> POS ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P .)
    UP              reduce using rule 309 (Pos -> POS ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P .)
    DOWN            reduce using rule 309 (Pos -> POS ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P .)
    SPEED           reduce using rule 309 (Pos -> POS ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P .)
    POS             reduce using rule 309 (Pos -> POS ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P .)
    POSX            reduce using rule 309 (Pos -> POS ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P .)
    POSY            reduce using rule 309 (Pos -> POS ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P .)
    USECOLOR        reduce using rule 309 (Pos -> POS ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P .)
    BRACKET2        reduce using rule 309 (Pos -> POS ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P .)


state 884

    (205) Equal -> EQUAL ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P .

    CIERRA_P        reduce using rule 205 (Equal -> EQUAL ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P .)
    BRACKET2        reduce using rule 205 (Equal -> EQUAL ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P .)


state 885

    (230) Greater -> GREATER ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P .

    CIERRA_P        reduce using rule 230 (Greater -> GREATER ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P .)
    BRACKET2        reduce using rule 230 (Greater -> GREATER ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P .)


state 886

    (255) Smaller -> SMALLER ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P .

    CIERRA_P        reduce using rule 255 (Smaller -> SMALLER ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P .)
    BRACKET2        reduce using rule 255 (Smaller -> SMALLER ABRE_P RESTA NUMERO COMA RESTA NUMERO CIERRA_P .)


state 887

    (265) IfElse -> IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2 .

    PUNTOCOMA       reduce using rule 265 (IfElse -> IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2 .)
    NUMERO          reduce using rule 265 (IfElse -> IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2 .)
    RESTA           reduce using rule 265 (IfElse -> IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2 .)
    ABRE_P          reduce using rule 265 (IfElse -> IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2 .)
    SUM             reduce using rule 265 (IfElse -> IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2 .)
    SUBSTR          reduce using rule 265 (IfElse -> IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2 .)
    MULT            reduce using rule 265 (IfElse -> IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2 .)
    DIV             reduce using rule 265 (IfElse -> IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2 .)
    RANDOM          reduce using rule 265 (IfElse -> IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2 .)
    IF              reduce using rule 265 (IfElse -> IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2 .)
    IFELSE          reduce using rule 265 (IfElse -> IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2 .)
    UNTIL           reduce using rule 265 (IfElse -> IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2 .)
    WHILE           reduce using rule 265 (IfElse -> IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2 .)
    PRINTLINE       reduce using rule 265 (IfElse -> IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2 .)
    AND             reduce using rule 265 (IfElse -> IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2 .)
    OR              reduce using rule 265 (IfElse -> IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2 .)
    ADD             reduce using rule 265 (IfElse -> IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2 .)
    PUT             reduce using rule 265 (IfElse -> IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2 .)
    FIN             reduce using rule 265 (IfElse -> IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2 .)
    CIERRA_P        reduce using rule 265 (IfElse -> IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2 .)
    BRACKET2        reduce using rule 265 (IfElse -> IFELSE ABRE_P condicion CIERRA_P BRACKET1 funcion BRACKET2 BRACKET1 funcion BRACKET2 .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PUNTOCOMA in state 27 resolved as shift
WARNING: shift/reduce conflict for PUT in state 27 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 27 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 27 resolved as shift
WARNING: shift/reduce conflict for ABRE_P in state 27 resolved as shift
WARNING: shift/reduce conflict for SUM in state 27 resolved as shift
WARNING: shift/reduce conflict for SUBSTR in state 27 resolved as shift
WARNING: shift/reduce conflict for MULT in state 27 resolved as shift
WARNING: shift/reduce conflict for DIV in state 27 resolved as shift
WARNING: shift/reduce conflict for RANDOM in state 27 resolved as shift
WARNING: shift/reduce conflict for IF in state 27 resolved as shift
WARNING: shift/reduce conflict for IFELSE in state 27 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 27 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 27 resolved as shift
WARNING: shift/reduce conflict for PRINTLINE in state 27 resolved as shift
WARNING: shift/reduce conflict for AND in state 27 resolved as shift
WARNING: shift/reduce conflict for OR in state 27 resolved as shift
WARNING: shift/reduce conflict for ADD in state 27 resolved as shift
WARNING: shift/reduce conflict for BRACKET2 in state 31 resolved as shift
WARNING: shift/reduce conflict for PUNTOCOMA in state 37 resolved as shift
WARNING: shift/reduce conflict for PUT in state 37 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 37 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 37 resolved as shift
WARNING: shift/reduce conflict for ABRE_P in state 37 resolved as shift
WARNING: shift/reduce conflict for SUM in state 37 resolved as shift
WARNING: shift/reduce conflict for SUBSTR in state 37 resolved as shift
WARNING: shift/reduce conflict for MULT in state 37 resolved as shift
WARNING: shift/reduce conflict for DIV in state 37 resolved as shift
WARNING: shift/reduce conflict for RANDOM in state 37 resolved as shift
WARNING: shift/reduce conflict for IF in state 37 resolved as shift
WARNING: shift/reduce conflict for IFELSE in state 37 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 37 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 37 resolved as shift
WARNING: shift/reduce conflict for PRINTLINE in state 37 resolved as shift
WARNING: shift/reduce conflict for AND in state 37 resolved as shift
WARNING: shift/reduce conflict for OR in state 37 resolved as shift
WARNING: shift/reduce conflict for ADD in state 37 resolved as shift
WARNING: shift/reduce conflict for PUNTOCOMA in state 39 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 39 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 39 resolved as shift
WARNING: shift/reduce conflict for ABRE_P in state 39 resolved as shift
WARNING: shift/reduce conflict for SUM in state 39 resolved as shift
WARNING: shift/reduce conflict for SUBSTR in state 39 resolved as shift
WARNING: shift/reduce conflict for MULT in state 39 resolved as shift
WARNING: shift/reduce conflict for DIV in state 39 resolved as shift
WARNING: shift/reduce conflict for RANDOM in state 39 resolved as shift
WARNING: shift/reduce conflict for IF in state 39 resolved as shift
WARNING: shift/reduce conflict for IFELSE in state 39 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 39 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 39 resolved as shift
WARNING: shift/reduce conflict for PRINTLINE in state 39 resolved as shift
WARNING: shift/reduce conflict for AND in state 39 resolved as shift
WARNING: shift/reduce conflict for OR in state 39 resolved as shift
WARNING: shift/reduce conflict for ADD in state 39 resolved as shift
WARNING: shift/reduce conflict for PUT in state 39 resolved as shift
WARNING: shift/reduce conflict for PUNTOCOMA in state 45 resolved as shift
WARNING: shift/reduce conflict for PUT in state 45 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 45 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 45 resolved as shift
WARNING: shift/reduce conflict for ABRE_P in state 45 resolved as shift
WARNING: shift/reduce conflict for SUM in state 45 resolved as shift
WARNING: shift/reduce conflict for SUBSTR in state 45 resolved as shift
WARNING: shift/reduce conflict for MULT in state 45 resolved as shift
WARNING: shift/reduce conflict for DIV in state 45 resolved as shift
WARNING: shift/reduce conflict for RANDOM in state 45 resolved as shift
WARNING: shift/reduce conflict for IF in state 45 resolved as shift
WARNING: shift/reduce conflict for IFELSE in state 45 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 45 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 45 resolved as shift
WARNING: shift/reduce conflict for PRINTLINE in state 45 resolved as shift
WARNING: shift/reduce conflict for AND in state 45 resolved as shift
WARNING: shift/reduce conflict for OR in state 45 resolved as shift
WARNING: shift/reduce conflict for ADD in state 45 resolved as shift
WARNING: shift/reduce conflict for PUNTOCOMA in state 46 resolved as shift
WARNING: shift/reduce conflict for PUT in state 46 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 46 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 46 resolved as shift
WARNING: shift/reduce conflict for ABRE_P in state 46 resolved as shift
WARNING: shift/reduce conflict for SUM in state 46 resolved as shift
WARNING: shift/reduce conflict for SUBSTR in state 46 resolved as shift
WARNING: shift/reduce conflict for MULT in state 46 resolved as shift
WARNING: shift/reduce conflict for DIV in state 46 resolved as shift
WARNING: shift/reduce conflict for RANDOM in state 46 resolved as shift
WARNING: shift/reduce conflict for IF in state 46 resolved as shift
WARNING: shift/reduce conflict for IFELSE in state 46 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 46 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 46 resolved as shift
WARNING: shift/reduce conflict for PRINTLINE in state 46 resolved as shift
WARNING: shift/reduce conflict for AND in state 46 resolved as shift
WARNING: shift/reduce conflict for OR in state 46 resolved as shift
WARNING: shift/reduce conflict for ADD in state 46 resolved as shift
WARNING: shift/reduce conflict for PUNTOCOMA in state 47 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 47 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 47 resolved as shift
WARNING: shift/reduce conflict for ABRE_P in state 47 resolved as shift
WARNING: shift/reduce conflict for SUM in state 47 resolved as shift
WARNING: shift/reduce conflict for SUBSTR in state 47 resolved as shift
WARNING: shift/reduce conflict for MULT in state 47 resolved as shift
WARNING: shift/reduce conflict for DIV in state 47 resolved as shift
WARNING: shift/reduce conflict for RANDOM in state 47 resolved as shift
WARNING: shift/reduce conflict for IF in state 47 resolved as shift
WARNING: shift/reduce conflict for IFELSE in state 47 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 47 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 47 resolved as shift
WARNING: shift/reduce conflict for PRINTLINE in state 47 resolved as shift
WARNING: shift/reduce conflict for AND in state 47 resolved as shift
WARNING: shift/reduce conflict for OR in state 47 resolved as shift
WARNING: shift/reduce conflict for ADD in state 47 resolved as shift
WARNING: shift/reduce conflict for PUT in state 47 resolved as shift
WARNING: shift/reduce conflict for PUNTOCOMA in state 48 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 48 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 48 resolved as shift
WARNING: shift/reduce conflict for ABRE_P in state 48 resolved as shift
WARNING: shift/reduce conflict for SUM in state 48 resolved as shift
WARNING: shift/reduce conflict for SUBSTR in state 48 resolved as shift
WARNING: shift/reduce conflict for MULT in state 48 resolved as shift
WARNING: shift/reduce conflict for DIV in state 48 resolved as shift
WARNING: shift/reduce conflict for RANDOM in state 48 resolved as shift
WARNING: shift/reduce conflict for IF in state 48 resolved as shift
WARNING: shift/reduce conflict for IFELSE in state 48 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 48 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 48 resolved as shift
WARNING: shift/reduce conflict for PRINTLINE in state 48 resolved as shift
WARNING: shift/reduce conflict for AND in state 48 resolved as shift
WARNING: shift/reduce conflict for OR in state 48 resolved as shift
WARNING: shift/reduce conflict for ADD in state 48 resolved as shift
WARNING: shift/reduce conflict for PUT in state 48 resolved as shift
WARNING: shift/reduce conflict for PUNTOCOMA in state 49 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 49 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 49 resolved as shift
WARNING: shift/reduce conflict for ABRE_P in state 49 resolved as shift
WARNING: shift/reduce conflict for SUM in state 49 resolved as shift
WARNING: shift/reduce conflict for SUBSTR in state 49 resolved as shift
WARNING: shift/reduce conflict for MULT in state 49 resolved as shift
WARNING: shift/reduce conflict for DIV in state 49 resolved as shift
WARNING: shift/reduce conflict for RANDOM in state 49 resolved as shift
WARNING: shift/reduce conflict for IF in state 49 resolved as shift
WARNING: shift/reduce conflict for IFELSE in state 49 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 49 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 49 resolved as shift
WARNING: shift/reduce conflict for PRINTLINE in state 49 resolved as shift
WARNING: shift/reduce conflict for AND in state 49 resolved as shift
WARNING: shift/reduce conflict for OR in state 49 resolved as shift
WARNING: shift/reduce conflict for ADD in state 49 resolved as shift
WARNING: shift/reduce conflict for PUT in state 49 resolved as shift
WARNING: shift/reduce conflict for PUNTOCOMA in state 50 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 50 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 50 resolved as shift
WARNING: shift/reduce conflict for ABRE_P in state 50 resolved as shift
WARNING: shift/reduce conflict for SUM in state 50 resolved as shift
WARNING: shift/reduce conflict for SUBSTR in state 50 resolved as shift
WARNING: shift/reduce conflict for MULT in state 50 resolved as shift
WARNING: shift/reduce conflict for DIV in state 50 resolved as shift
WARNING: shift/reduce conflict for RANDOM in state 50 resolved as shift
WARNING: shift/reduce conflict for IF in state 50 resolved as shift
WARNING: shift/reduce conflict for IFELSE in state 50 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 50 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 50 resolved as shift
WARNING: shift/reduce conflict for PRINTLINE in state 50 resolved as shift
WARNING: shift/reduce conflict for AND in state 50 resolved as shift
WARNING: shift/reduce conflict for OR in state 50 resolved as shift
WARNING: shift/reduce conflict for ADD in state 50 resolved as shift
WARNING: shift/reduce conflict for PUT in state 50 resolved as shift
WARNING: shift/reduce conflict for PUNTOCOMA in state 51 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 51 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 51 resolved as shift
WARNING: shift/reduce conflict for ABRE_P in state 51 resolved as shift
WARNING: shift/reduce conflict for SUM in state 51 resolved as shift
WARNING: shift/reduce conflict for SUBSTR in state 51 resolved as shift
WARNING: shift/reduce conflict for MULT in state 51 resolved as shift
WARNING: shift/reduce conflict for DIV in state 51 resolved as shift
WARNING: shift/reduce conflict for RANDOM in state 51 resolved as shift
WARNING: shift/reduce conflict for IF in state 51 resolved as shift
WARNING: shift/reduce conflict for IFELSE in state 51 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 51 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 51 resolved as shift
WARNING: shift/reduce conflict for PRINTLINE in state 51 resolved as shift
WARNING: shift/reduce conflict for AND in state 51 resolved as shift
WARNING: shift/reduce conflict for OR in state 51 resolved as shift
WARNING: shift/reduce conflict for ADD in state 51 resolved as shift
WARNING: shift/reduce conflict for PUT in state 51 resolved as shift
WARNING: shift/reduce conflict for PUNTOCOMA in state 52 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 52 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 52 resolved as shift
WARNING: shift/reduce conflict for ABRE_P in state 52 resolved as shift
WARNING: shift/reduce conflict for SUM in state 52 resolved as shift
WARNING: shift/reduce conflict for SUBSTR in state 52 resolved as shift
WARNING: shift/reduce conflict for MULT in state 52 resolved as shift
WARNING: shift/reduce conflict for DIV in state 52 resolved as shift
WARNING: shift/reduce conflict for RANDOM in state 52 resolved as shift
WARNING: shift/reduce conflict for IF in state 52 resolved as shift
WARNING: shift/reduce conflict for IFELSE in state 52 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 52 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 52 resolved as shift
WARNING: shift/reduce conflict for PRINTLINE in state 52 resolved as shift
WARNING: shift/reduce conflict for AND in state 52 resolved as shift
WARNING: shift/reduce conflict for OR in state 52 resolved as shift
WARNING: shift/reduce conflict for ADD in state 52 resolved as shift
WARNING: shift/reduce conflict for PUT in state 52 resolved as shift
WARNING: shift/reduce conflict for PUNTOCOMA in state 62 resolved as shift
WARNING: shift/reduce conflict for RANDOM in state 62 resolved as shift
WARNING: shift/reduce conflict for IF in state 62 resolved as shift
WARNING: shift/reduce conflict for IFELSE in state 62 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 62 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 62 resolved as shift
WARNING: shift/reduce conflict for PRINTLINE in state 62 resolved as shift
WARNING: shift/reduce conflict for AND in state 62 resolved as shift
WARNING: shift/reduce conflict for OR in state 62 resolved as shift
WARNING: shift/reduce conflict for ADD in state 62 resolved as shift
WARNING: shift/reduce conflict for PUT in state 62 resolved as shift
WARNING: shift/reduce conflict for PUT in state 85 resolved as shift
WARNING: shift/reduce conflict for PUNTOCOMA in state 85 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 85 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 85 resolved as shift
WARNING: shift/reduce conflict for ABRE_P in state 85 resolved as shift
WARNING: shift/reduce conflict for SUM in state 85 resolved as shift
WARNING: shift/reduce conflict for SUBSTR in state 85 resolved as shift
WARNING: shift/reduce conflict for MULT in state 85 resolved as shift
WARNING: shift/reduce conflict for DIV in state 85 resolved as shift
WARNING: shift/reduce conflict for RANDOM in state 85 resolved as shift
WARNING: shift/reduce conflict for IF in state 85 resolved as shift
WARNING: shift/reduce conflict for IFELSE in state 85 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 85 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 85 resolved as shift
WARNING: shift/reduce conflict for PRINTLINE in state 85 resolved as shift
WARNING: shift/reduce conflict for AND in state 85 resolved as shift
WARNING: shift/reduce conflict for OR in state 85 resolved as shift
WARNING: shift/reduce conflict for ADD in state 85 resolved as shift
WARNING: shift/reduce conflict for PUT in state 86 resolved as shift
WARNING: shift/reduce conflict for PUNTOCOMA in state 86 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 86 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 86 resolved as shift
WARNING: shift/reduce conflict for ABRE_P in state 86 resolved as shift
WARNING: shift/reduce conflict for SUM in state 86 resolved as shift
WARNING: shift/reduce conflict for SUBSTR in state 86 resolved as shift
WARNING: shift/reduce conflict for MULT in state 86 resolved as shift
WARNING: shift/reduce conflict for DIV in state 86 resolved as shift
WARNING: shift/reduce conflict for RANDOM in state 86 resolved as shift
WARNING: shift/reduce conflict for IF in state 86 resolved as shift
WARNING: shift/reduce conflict for IFELSE in state 86 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 86 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 86 resolved as shift
WARNING: shift/reduce conflict for PRINTLINE in state 86 resolved as shift
WARNING: shift/reduce conflict for AND in state 86 resolved as shift
WARNING: shift/reduce conflict for OR in state 86 resolved as shift
WARNING: shift/reduce conflict for ADD in state 86 resolved as shift
WARNING: shift/reduce conflict for PUNTOCOMA in state 91 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 91 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 91 resolved as shift
WARNING: shift/reduce conflict for ABRE_P in state 91 resolved as shift
WARNING: shift/reduce conflict for SUM in state 91 resolved as shift
WARNING: shift/reduce conflict for SUBSTR in state 91 resolved as shift
WARNING: shift/reduce conflict for MULT in state 91 resolved as shift
WARNING: shift/reduce conflict for DIV in state 91 resolved as shift
WARNING: shift/reduce conflict for RANDOM in state 91 resolved as shift
WARNING: shift/reduce conflict for IF in state 91 resolved as shift
WARNING: shift/reduce conflict for IFELSE in state 91 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 91 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 91 resolved as shift
WARNING: shift/reduce conflict for PRINTLINE in state 91 resolved as shift
WARNING: shift/reduce conflict for AND in state 91 resolved as shift
WARNING: shift/reduce conflict for OR in state 91 resolved as shift
WARNING: shift/reduce conflict for ADD in state 91 resolved as shift
WARNING: shift/reduce conflict for PUT in state 91 resolved as shift
WARNING: shift/reduce conflict for PUT in state 159 resolved as shift
WARNING: shift/reduce conflict for PUNTOCOMA in state 159 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 159 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 159 resolved as shift
WARNING: shift/reduce conflict for ABRE_P in state 159 resolved as shift
WARNING: shift/reduce conflict for SUM in state 159 resolved as shift
WARNING: shift/reduce conflict for SUBSTR in state 159 resolved as shift
WARNING: shift/reduce conflict for MULT in state 159 resolved as shift
WARNING: shift/reduce conflict for DIV in state 159 resolved as shift
WARNING: shift/reduce conflict for RANDOM in state 159 resolved as shift
WARNING: shift/reduce conflict for IF in state 159 resolved as shift
WARNING: shift/reduce conflict for IFELSE in state 159 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 159 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 159 resolved as shift
WARNING: shift/reduce conflict for PRINTLINE in state 159 resolved as shift
WARNING: shift/reduce conflict for AND in state 159 resolved as shift
WARNING: shift/reduce conflict for OR in state 159 resolved as shift
WARNING: shift/reduce conflict for ADD in state 159 resolved as shift
WARNING: shift/reduce conflict for PUT in state 164 resolved as shift
WARNING: shift/reduce conflict for PUNTOCOMA in state 164 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 164 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 164 resolved as shift
WARNING: shift/reduce conflict for ABRE_P in state 164 resolved as shift
WARNING: shift/reduce conflict for SUM in state 164 resolved as shift
WARNING: shift/reduce conflict for SUBSTR in state 164 resolved as shift
WARNING: shift/reduce conflict for MULT in state 164 resolved as shift
WARNING: shift/reduce conflict for DIV in state 164 resolved as shift
WARNING: shift/reduce conflict for RANDOM in state 164 resolved as shift
WARNING: shift/reduce conflict for IF in state 164 resolved as shift
WARNING: shift/reduce conflict for IFELSE in state 164 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 164 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 164 resolved as shift
WARNING: shift/reduce conflict for PRINTLINE in state 164 resolved as shift
WARNING: shift/reduce conflict for AND in state 164 resolved as shift
WARNING: shift/reduce conflict for OR in state 164 resolved as shift
WARNING: shift/reduce conflict for ADD in state 164 resolved as shift
WARNING: shift/reduce conflict for PUT in state 165 resolved as shift
WARNING: shift/reduce conflict for PUNTOCOMA in state 165 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 165 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 165 resolved as shift
WARNING: shift/reduce conflict for ABRE_P in state 165 resolved as shift
WARNING: shift/reduce conflict for SUM in state 165 resolved as shift
WARNING: shift/reduce conflict for SUBSTR in state 165 resolved as shift
WARNING: shift/reduce conflict for MULT in state 165 resolved as shift
WARNING: shift/reduce conflict for DIV in state 165 resolved as shift
WARNING: shift/reduce conflict for RANDOM in state 165 resolved as shift
WARNING: shift/reduce conflict for IF in state 165 resolved as shift
WARNING: shift/reduce conflict for IFELSE in state 165 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 165 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 165 resolved as shift
WARNING: shift/reduce conflict for PRINTLINE in state 165 resolved as shift
WARNING: shift/reduce conflict for AND in state 165 resolved as shift
WARNING: shift/reduce conflict for OR in state 165 resolved as shift
WARNING: shift/reduce conflict for ADD in state 165 resolved as shift
WARNING: shift/reduce conflict for PUNTOCOMA in state 383 resolved as shift
WARNING: shift/reduce conflict for PUT in state 383 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 383 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 383 resolved as shift
WARNING: shift/reduce conflict for ABRE_P in state 383 resolved as shift
WARNING: shift/reduce conflict for SUM in state 383 resolved as shift
WARNING: shift/reduce conflict for SUBSTR in state 383 resolved as shift
WARNING: shift/reduce conflict for MULT in state 383 resolved as shift
WARNING: shift/reduce conflict for DIV in state 383 resolved as shift
WARNING: shift/reduce conflict for RANDOM in state 383 resolved as shift
WARNING: shift/reduce conflict for IF in state 383 resolved as shift
WARNING: shift/reduce conflict for IFELSE in state 383 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 383 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 383 resolved as shift
WARNING: shift/reduce conflict for PRINTLINE in state 383 resolved as shift
WARNING: shift/reduce conflict for AND in state 383 resolved as shift
WARNING: shift/reduce conflict for OR in state 383 resolved as shift
WARNING: shift/reduce conflict for ADD in state 383 resolved as shift
WARNING: shift/reduce conflict for PUNTOCOMA in state 418 resolved as shift
WARNING: shift/reduce conflict for PUT in state 418 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 418 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 418 resolved as shift
WARNING: shift/reduce conflict for ABRE_P in state 418 resolved as shift
WARNING: shift/reduce conflict for SUM in state 418 resolved as shift
WARNING: shift/reduce conflict for SUBSTR in state 418 resolved as shift
WARNING: shift/reduce conflict for MULT in state 418 resolved as shift
WARNING: shift/reduce conflict for DIV in state 418 resolved as shift
WARNING: shift/reduce conflict for RANDOM in state 418 resolved as shift
WARNING: shift/reduce conflict for IF in state 418 resolved as shift
WARNING: shift/reduce conflict for IFELSE in state 418 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 418 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 418 resolved as shift
WARNING: shift/reduce conflict for PRINTLINE in state 418 resolved as shift
WARNING: shift/reduce conflict for AND in state 418 resolved as shift
WARNING: shift/reduce conflict for OR in state 418 resolved as shift
WARNING: shift/reduce conflict for ADD in state 418 resolved as shift
WARNING: reduce/reduce conflict in state 39 resolved using rule (cuerpo3 -> funcion)
WARNING: rejected rule (empty -> <empty>) in state 39
WARNING: reduce/reduce conflict in state 40 resolved using rule (cuerpo3 -> empty)
WARNING: rejected rule (empty -> <empty>) in state 40
WARNING: reduce/reduce conflict in state 41 resolved using rule (cuerpo3 -> Put)
WARNING: rejected rule (empty -> <empty>) in state 41
WARNING: reduce/reduce conflict in state 42 resolved using rule (cuerpo3 -> Put2)
WARNING: rejected rule (empty -> <empty>) in state 42
WARNING: reduce/reduce conflict in state 93 resolved using rule (expresion -> funcion empty)
WARNING: rejected rule (empty -> <empty>) in state 93
WARNING: reduce/reduce conflict in state 97 resolved using rule (variablexdd -> empty empty)
WARNING: rejected rule (expresion -> empty empty) in state 97
WARNING: reduce/reduce conflict in state 97 resolved using rule (variablexdd -> empty empty)
WARNING: rejected rule (funcion -> empty empty) in state 97
WARNING: reduce/reduce conflict in state 103 resolved using rule (expresion -> expresion_alge1 empty)
WARNING: rejected rule (empty -> <empty>) in state 103
WARNING: reduce/reduce conflict in state 105 resolved using rule (expresion -> expresion_alge2 empty)
WARNING: rejected rule (empty -> <empty>) in state 105
WARNING: reduce/reduce conflict in state 107 resolved using rule (expresion -> Sum empty)
WARNING: rejected rule (empty -> <empty>) in state 107
WARNING: reduce/reduce conflict in state 109 resolved using rule (expresion -> Substr empty)
WARNING: rejected rule (empty -> <empty>) in state 109
WARNING: reduce/reduce conflict in state 111 resolved using rule (expresion -> Mult empty)
WARNING: rejected rule (empty -> <empty>) in state 111
WARNING: reduce/reduce conflict in state 113 resolved using rule (expresion -> Div empty)
WARNING: rejected rule (empty -> <empty>) in state 113
WARNING: reduce/reduce conflict in state 156 resolved using rule (cuerpo2 -> empty)
WARNING: rejected rule (empty -> <empty>) in state 156
WARNING: reduce/reduce conflict in state 162 resolved using rule (cuerpo2 -> Put2)
WARNING: rejected rule (empty -> <empty>) in state 162
WARNING: reduce/reduce conflict in state 163 resolved using rule (cuerpo2 -> Put)
WARNING: rejected rule (empty -> <empty>) in state 163
WARNING: reduce/reduce conflict in state 171 resolved using rule (expresion -> empty empty)
WARNING: rejected rule (funcion -> empty empty) in state 171
WARNING: reduce/reduce conflict in state 255 resolved using rule (variablexd -> empty empty)
WARNING: rejected rule (expresion -> empty empty) in state 255
WARNING: reduce/reduce conflict in state 255 resolved using rule (variablexd -> empty empty)
WARNING: rejected rule (funcion -> empty empty) in state 255
